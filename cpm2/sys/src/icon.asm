;  June 8, 1982  09:10	drm  "INTCON.ASM"
********** CP/M 2.23 I/O MODULE    **********
********** INTERUPT-DRIVEN CONSOLE **********
	DW	MODLEN,BUFLEN
 MACLIB Z80
BASE	EQU	0000H	;ORG FOR RELOC

***** PHYSICAL DEVICES ARE ASSIGNED AS FOLLOWS*****
*****					      *****
*****  200 = CONSOLE			      *****
*****					      *****
***************************************************

***************************************************
**  PORTS AND CONSTANTS
***************************************************
CONSOLE EQU	0E8H

CTRLS	EQU	19
ESC	EQU	27

***************************************************

***************************************************
** LINKS TO REST OF SYSTEM
***************************************************
BIOS	EQU	BASE+1600H
USER	EQU	BIOS+300H
PATCHE	EQU	USER+1FEH
MBASE	EQU	BASE	;MODULE BASE
COMBUF	EQU	BASE+0C000H	;COMMON BUFFER
BUFFER	EQU	BASE+0F000H	;MODULE BUFFER
***************************************************

***************************************************
** PAGE ZERO ASSIGNMENTS
***************************************************
	ORG	0
CPM		DS	3
DEV$STAT	DS	1
LOGIN$DSK	DS	1
BDOS		DS	3
RST1		DS	3
CLOCK		DS	2
INT$BYTE	DS	1
CTL$BYTE	DS	1
		DS	1
RST2		DS	8
RST3		DS	8
RST4		DS	8
RST5		DS	8
RST6		DS	8
RST7		DS	8
		DS	28
FCB		DS	36
DMA		DS	128
TPA		DS	0
***************************************************

***************************************************
** OVERLAY MODULE INFORMATION ON BIOS
***************************************************
	ORG	BIOS
	DS	60
MIXER:	DB	255	;DUMMY VALUE
	DS	15
DRIVE$BASE:
	DB	200,201 ;DEVICE MODULE BASE TABLE
	DW	MBASE
***************************************************

***************************************************
** START OF RELOCATABLE DISK I/O MODULE
*************************************************** 
	ORG	MBASE	;START OF MODULE
	CALL	INIT
	CALL	INIT
	CALL	INIT

	DB	'Console ',0,'- with Type-Ahead ',0,'2.242$'

INIT:	PUSH	B
	LXI	H,INTVEC
	LXI	D,MBASE
	LXI	B,9
	LDIR
	POP	B
	MVI	A,(JMP)
	STA	RST3
	LXI	H,INTERUPT
	SHLD	RST3+1
	MVI	A,0101B ;DATA READY AND RCVR LINE STATUS INTERUPTS
	OUT	CONSOLE+1
	XRA	A
	STA	KEYPT0
	STA	KEYPT1
	POP	H
	DCX	H
	DCX	H
	DCX	H
	PCHL

INTVEC: JMP	STAT
	JMP	INPUT
	JMP	OUTPUT

STAT:	POP	H
	POP	D
	PUSH	D
	PUSH	H
	MVI	A,BIOS/256
	SUI	13	;EQUALS BDOS 2ND PAGE
	CMP	H
	JRNZ	NOTBDOS
	SUB	D
	RZ
NOTBDOS:
	LXI	H,KEYPT0
	LDA	KEYPT1
	SUB	M
	RZ
	MVI	A,255
	ORA	A
	RET

INPUT:	CALL	STAT
	JRZ	INPUT
	LXI	H,KEYPT1
	CALL	INDEX
	LDAX	D
	RET

OUTPUT: LXI	H,PAUSE
	XRA	A
WAIT:	CMP	M
	JRZ	WAIT
	IN	CONSOLE+6
	ANI	00110000B
	CPI	00110000B
	JRNZ	OUTPUT
	IN	CONSOLE+5
	ANI	00100000B
	JRZ	OUTPUT
	MOV	A,C
	OUT	CONSOLE
	RET

STOPINT:
	IN	CONSOLE+5
	XRA	A
	OUT	CONSOLE+1
	LXI	D,INIT
	LXI	H,MBASE
	MVI	A,3
SI0:	MVI	M,(CALL)
	INX	H
	MOV	M,E
	INX	H
	MOV	M,D
	INX	H
	DCR	A
	JRNZ	SI0
	JMP	XIT

INTERUPT:
	SSPD	USTK
	LXI	SP,ISTK
	PUSH	PSW
	PUSH	B
	PUSH	D
	PUSH	H
	LDA	DEV$STAT
	ANI	00000011B
	CPI	00000010B
	JRNZ	STOPINT
	IN	CONSOLE+5
	BIT	4,A	;BREAK INTERUPT
	JRNZ	BREAK
	RRC		;DATA READY
	JRNC	EXIT
	LXI	H,KEYPT0
	LDA	KEYPT1
	DCR	A
	CMP	M
	PUSH	PSW
	CALL	INDEX	;HL = KEYPT0
	LDA	PAUSE
	MOV	B,A	;(B)=0 IF OUTPUT DISABLED, ELSE "FF"
	IN	CONSOLE
	ani	01111111b	;clear parity
	ANA	B	;IF OUTPUT IS DISABLED, GOBBLE THIS CHARACTER
	JRZ	PAUS
	CPI	CTRLS	;IF ^S THEN SET PAUSE MODE
	JRZ	PAUS
	CALL	TESTESC
	STAX	D
	POP	PSW
	JRNZ	EXIT
GOBL:	DCR	M
EXIT:	MVI	A,0101B
	OUT	CONSOLE+1
XIT:	POP	H
	POP	D
	POP	B
	POP	PSW
	LSPD	USTK
	EI
	RET

BREAK:	IN	CONSOLE
	XRA	A
	STA	KEYBD
	STA	KEYPT1
	INR	A
	STA	KEYPT0
	JR	EXIT

PAUS:	MOV	A,B
	CMA
	STA	PAUSE
	POP	PSW
	JR	GOBL

TESTESC:
	LHLD	PATCHE
	PCHL

INDEX:	LXI	D,KEYBD
	MOV	A,M
	INR	M
	ADD	E
	MOV	E,A
	RNC
	INR	D
	RET

USTK:	DW	0
	DW	0,0,0,0,0,0,0,0 ;8 levels of stack
ISTK:	DS	0
PAUSE:	DB	255	;MUST BE EITHER 255 OR 0
KEYPT0: DB	0
KEYPT1: DB	0

	REPT	(($+0FFH) AND 0FF00H)-$
	DB	0
	ENDM

MODLEN	EQU	$-MBASE
 DB 00100100B,10000000B,00000000B,00000000B,00000000B,00000010B,01000000B,00000001B
 DB 00000000B,00100100B,00000100B,10010000B
 DB 01000000B,00010010B,00000001B,00001001B,00001000B,00000000B,00000000B,00000000B
 DB 00100100B,00000000B,00001000B,10010000B,00000000B,00000000B,00001001B,00000100B
 DB 10000000B,00000001B,00000000B,00000000B,10000000B,10010001B,00000010B,00001000B
 DB 10000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B
********************************************************
** COMMON BUFFERS
********************************************************
	ORG	COMBUF
	DS	20
	DS	64
	DS	2
DIRBUF	DS	128
********************************************************

********************************************************
** BUFFERS
********************************************************
	ORG	BUFFER
KEYBD:	DS	256
**********************************************************
BUFLEN	EQU	$-BUFFER
	END
