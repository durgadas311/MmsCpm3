********** CP/M LINKABLE BOOT ROUTINE **********
**********			      **********
VERS	EQU	'11'		; AUGUST 10, 1982 10:11 KLF "B320.ASM
************************************************
****  MACRO ASSEMBLER DIRECTIVES  **************
	MACLIB	Z80
	$-MACRO

	DW	MODLEN,(-1)

BASE	EQU	0000H	;ORG FOR RELOC

***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
*****					      *****
*****					      *****
***************************************************

***************************************************
**  PORTS AND CONSTANTS
***************************************************
?PORT	EQU	0F2H

** Serial I/O ports on 88-3 board
?AUX		EQU	0D0H	;DCE
?PRINTER	EQU	0E0H	;LP/DCE
?MODEM		EQU	0D8H	;DTE

?LINE$CTL	EQU	00000011B	;NO PARITY, 1 STOP BIT, 8 DATA BITS
?MOD$CTL	EQU	00001111B	;SET ALL CONTROL LINES TO 'READY'

BASE$PORT EQU	2150H		; PORT ADDRESS SAVE BY BOOT PROM

?S19200 EQU	6	; 19,200 BAUD
?S9600	EQU	12	;  9,600 BAUD
?S4800	EQU	24	;  4,800 BAUD
?S2400	EQU	48	;  2,400 BAUD
?S1200	EQU	96	;  1,200 BAUD
?S600	EQU	192	;    600 BAUD
?S300	EQU	384	;    300 BAUD
?S150	EQU	768	;    150 BAUD
?S110	EQU	1047	;    110 BAUD

DAT	EQU	78H
CONT	EQU	79H

REQ	EQU	10000000B
POUT	EQU	01000000B
MSG	EQU	00100000B
CMND	EQU	00010000B
BUSY	EQU	00001000B

RUN	EQU	00000000B
SWRS	EQU	00010000B
SEL	EQU	01000000B

BLCODE	EQU	2483H	; DEBLOCK CODE
LSP	EQU	2484H	; LOGICAL SECTORS PER PHYSICAL
			; (PASSED BY BOOT LOADER)
***************************************************

***************************************************
** LINKS TO REST OF SYSTEM
***************************************************
@BIOS	EQU	BASE+1600H
@BDOS	EQU	@BIOS-0E00H
***************************************************

***************************************************
** PAGE ZERO ASSIGNMENTS
***************************************************
	ORG	0
?CPM		DS	3
?DEV$STAT	DS	1
?LOGIN$DSK	DS	1
?BDOS		DS	3
?RST1		DS	3
?CLOCK		DS	2
?INT$BYTE	DS	1
?CTL$BYTE	DS	1
		DS	77
?FCB		DS	36
?DMA		DS	128
?TPA		DS	0
***************************************************

***************************************************
** START OF RELOCATABLE DISK BOOT MODULE
*************************************************** 
	ORG	2280H
BOOT:
	JMP	AROUND
SECTRS	DB	0	;NUMBER OF SECTORS TO BOOT, FROM MOVCPM.COM
				; PATCHED DURING EXECUTION OF MOVCPM
DRIVE	DB	0		; ALSO PATCHED BY ASSIGN PROGRAM
AROUND: LXI	H,SECTRS
	INR	M
	INR	M		; TWO MORE SECTORS (BOOT MODULE)
	LDA	BLCODE
	ORA	A
	MOV	D,M
	JRZ	NODIV		; NO MORE TO DO IF SECTOR SIZE = 128
	MOV	B,A
	LDA	LSP
	DCR	A		; ADD THIS QUANTITY FOR ROUNDING UP
	ADD	M
AGN1:	ORA	A		; TO CLEAR CARRY
	RAR
	DJNZ	AGN1
	MOV	D,A		; PHYSICAL SECTORS TO BE BOOTED
NODIV:	LXI	H,CMBFR+4
	MOV	M,D
LOAD:	LDA	BASE$PORT
	MOV	C,A
	INR	C		; CONTROL PORT TO REG. C

GETCON: MVI	B,0
GETCN1: INP	A
	ANI	BUSY
	JRZ	GETCN2
	DJNZ	GETCN1
	RET
GETCN2: MVI	A,SEL
	OUTP	A
	MVI	B,0
GETCN3: INP	A
	ANI	BUSY
	JRNZ	GETCN4
	DJNZ	GETCN3
	RET
GETCN4: MVI	A,RUN
	OUTP	A

	DCR	C		; DATA PORT BACK TO REG. C

OUTCOM: LXI	H,CMBFR 	; OUTPUT THE COMMAND
	MVI	B,6
OUTCM1: PUSH	B
OUTLOP: INR	C		; CONTROL PORT
	INP	A
	ANI	(REQ OR CMND OR POUT OR BUSY)
	CPI	(REQ OR CMND OR POUT OR BUSY)
	JRZ	OUTOK
	DJNZ	OUTLOP
	RET
OUTOK:	POP	B
	OUTI
	JNZ	OUTCM1

SASI$RW:LXI	H,@BDOS-100H	; READ IN SECTORS STARTING AT THIS ADDRESS
NXTSEC: INR	C		; CONTROL PORT
SASICK: INP	A
	ANI	(CMND OR BUSY OR REQ OR POUT)
	CPI	(CMND OR BUSY OR REQ)	; IF POUT DROPS,
	JRZ	CHK$STAT		; WE ARE INTO STATUS PHASE
	ANI	(CMND OR BUSY OR REQ)
	CPI	(BUSY OR REQ)	; WHEN CMND DROPS, SEEK IS COMPLETE, AND
	JRNZ	SASICK		;  WE ARE READY TO READ IN A SECTOR
	DCR	C		; DATA PORT
	LDA	LSP 
MORE:	MVI	B,128
	INIR
	DCR	A
	JRNZ	MORE
WAIT:	DCR	A
	JRNZ	WAIT
	JR	NXTSEC		; SEE IF THER'S ANOTHER SECTOR TO READ IN

CHK$STAT:			; CHECK STATUS OF READ
	LXI	H,STAT
	JR	CHK02
CHKNXT: INP	A
	MOV	M,A
CHK01:	INR	C		; CONTROL PORT
CHK02:	INP	A		; INPUT FROM CONTROL PORT
	DCR	C		; DATA PORT
	ANI	(MSG OR REQ OR CMND OR POUT)
	CPI	(REQ OR CMND)
	JRZ	CHKNXT
	CPI	(MSG OR REQ OR CMND)
	JRNZ	CHK01
	INP	A
	MOV	A,M
	ANI	3
	RNZ


***************************************************
** START OF SYSTEM INITIALIZATION
*************************************************** 
START:	DI
* INITIALIZE I/O, ETC
	XRA	A
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	MVI	A,?LINE$CTL
	ORI	10000000B	;ENABLE DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
* BAUD RATE SETUP:
	LXI	H,?S9600	;AUX SERIAL @ 9600 BAUD
	MOV	A,L
	OUT	?AUX
	MOV	A,H
	OUT	?AUX+1
	LXI	H,?S9600	; PRINTER @ 9600 BAUD
	MOV	A,L
	OUT	?PRINTER
	MOV	A,H
	OUT	?PRINTER+1
	LXI	H,?S300 	; MODEM (PAPER TAPE) @ 300 BAUD
	MOV	A,L
	OUT	?MODEM
	MOV	A,H
	OUT	?MODEM+1
* NOW GET PORTS READY FOR I/O
	MVI	A,?LINE$CTL	; NOW DE-SELECT DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
	MVI	A,?MOD$CTL	; SIGNAL 'READY'
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	IN	?AUX+5		; RESET ANY STRAY ACTIVITY
	IN	?PRINTER+5
	IN	?MODEM+5
	IN	?AUX
	IN	?PRINTER
	IN	?MODEM
* END OF I/O INITIALIZATION
	LXI	H,?CODE ;SEQUENCE TO MOVE MEMORY-MAP
	MVI	B,?CODE$LEN	;NUMBER OF BYTES IN SEQUENCE
	MVI	C,?PORT ;I/O PORT TO SEND SEQUENCE
	DW 0B3EDH ; OUTIR
	JMP	@BIOS
?CODE	DB	0000$01$00B
	DB	0000$11$00B
	DB	0000$01$00B
	DB	0000$10$00B
	DB	0000$11$00B
	DB	0000$10$00B
	DB	0010$00$10B	;changes memory if "-FA" also
?CODE$LEN	EQU	$-?CODE
CMBFR:	DB	8,0,0,0,0,1
STAT:	DB	0

	REPT	256-($-BOOT)-1
	DB	0
	ENDM

ID	DB	11	;BOOT ROUTINE IDENTIFICATION
MODLEN	EQU	$-BOOT	;MUST BE 256 BYTES

 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000010B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000010B,00000000B,00000000B

	END

