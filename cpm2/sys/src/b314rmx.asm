; 8/19/82  11:30  bjt
********** CP/M LINKABLE BOOT ROUTINE **********
********** 8" REMEX EXTENDED BOOT ON 77314 *****
	DW	MODLEN,(-1)

BASE	EQU	0000H	;ORG FOR RELOC
	MACLIB Z80

SPT	EQU	8	;8 (1024 BYTE) SECTORS ON 8"DD
***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
*****					      *****
*****  5 = FIRST 8" DRIVE                    *****
*****  6 = SECOND 8" DRIVE                   *****
*****  7 = THIRD 8" DRIVE                    *****
*****  8 = FOURTH 8" DRIVE                   *****
*****					      *****
***************************************************

***************************************************
**  PORTS AND CONSTANTS
***************************************************
?STAT	EQU	5BH
?DATA	EQU	5AH

?PORT	EQU	0F2H

?AUX	EQU	0D0H
?PRINTER	EQU	0E0H
?MODEM	EQU	0D8H

?LINE$CTL	EQU	00000011B	;NO PARITY, 1 STOP BIT, 8 DATA BITS
?MOD$CTL	EQU	00001111B	;SET ALL CONTROL LINES TO 'READY'

?S19200 EQU	6	; 19,200 BAUD
?S9600	EQU	12	;  9,600 BAUD
?S4800	EQU	24	;  4,800 BAUD
?S2400	EQU	48	;  2,400 BAUD
?S1200	EQU	96	;  1,200 BAUD
?S600	EQU	192	;    600 BAUD
?S300	EQU	384	;    300 BAUD
?S150	EQU	768	;    150 BAUD
?S110	EQU	1047	;    110 BAUD
***************************************************

***************************************************
** LINKS TO REST OF SYSTEM
***************************************************
@BIOS	EQU	BASE+1600H
@BDOS	EQU	@BIOS-0E00H
***************************************************

***************************************************
** PAGE ZERO ASSIGNMENTS
***************************************************
	ORG	0
?CPM		DS	3
?DEV$STAT	DS	1
?LOGIN$DSK	DS	1
?BDOS		DS	3
?RST1		DS	3
?CLOCK		DS	2
?INT$BYTE	DS	1
?CTL$BYTE	DS	1
		DS	77
?FCB		DS	36
?DMA		DS	128
?TPA		DS	0
***************************************************

***************************************************
** START OF RELOCATABLE DISK BOOT MODULE
***************************************************
	ORG	2280H
BOOT:
	JMP	AROUND
SECTRS	DB	0	;NUMBER OF SECTORS TO BOOT, FROM MOVCPM.COM
			;PATCHED DURING EXECUTION OF MOVCPM
DRIVE	DB	5	;ALSO PATCHED BY ASSIGN PROGRAM
AROUND:
	POP	H	;ADDRESS OF ERROR ROUTINE
	LXI	SP,?STACK
	PUSH	H

***************************************************
*** START OF UNIQUE ROUTINE FOR BOOTING
***************************************************
	LXI	H,@BDOS-256	;BIAS FOR BOOT SECTORS THAT
	LDA	SECTRS	;WILL BE RE-LOADED TO MAKE EFFICIENT BOOTING
	INR	A	;ADD IN BOOT-SECTORS
	INR	A	;BECAUSE THEY WILL ALSO BE LOADED
	STA	SECTRS
	ADI	00000111B	;ROUND UP
	ANI	11111000B	;INTEGER DIVISION
	RRC
	RRC
	RRC	;  BY 8
	MOV	E,A
	LDA	DRIVE
	SUI	5
	CPI	4	;ONLY 4 DRIVES IN THIS GROUPE
	RNC
	RRC
	RRC
	RRC
	ORI	1	;STARTING SECTOR
	STA	DRIVE
	MVI	A,3	;LOAD SECTOR COUNT
	CALL	COMMAND
	XRA	A	;MSB
	CALL	PUT
	MOV	A,E	;LSB
	CALL	PUT
WAITE	IN	?STAT
	RLC
	JRC	WAITE
	MVI	A,7	;READ THRU BUFFER
	CALL	COMMAND
	XRA	A
	CALL	PUT	;TRACK 0
	LDA	DRIVE
	CALL	PUT
WAITD	IN	?STAT
	ANI	00100000B	;DDIR
	JRZ	WAITD
	LDA	SECTRS
	MOV	B,A
SECL	MVI	C,128
BYTL	CALL	GET
	MOV	M,A
	INX	H
	DCR	C
	JNZ	BYTL
	DCR	B
	JNZ	SECL
DONE:
***************************************************
** START OF SYSTEM INITIALIZATION
***************************************************
	DI
* INITIALIZE I/O, ETC
	XRA	A
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	MVI	A,?LINE$CTL
	ORI	10000000B	;ENABLE DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
* BAUD RATE SETUP:
	LXI	H,?S9600	;AUX SERIAL @ 9600 BAUD
	MOV	A,L
	OUT	?AUX
	MOV	A,H
	OUT	?AUX+1
	LXI	H,?S9600	;PRINTER @ 9600 BAUD
	MOV	A,L
	OUT	?PRINTER
	MOV	A,H
	OUT	?PRINTER+1
	LXI	H,?S300 ;MODEM (PAPER TAPE) @ 300 BAUD
	MOV	A,L
	OUT	?MODEM
	MOV	A,H
	OUT	?MODEM+1
* NOW GET PORTS READY FOR I/O
	MVI	A,?LINE$CTL	;NOW DE-SELECT DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
	MVI	A,?MOD$CTL	;SIGNAL 'READY'
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	IN	?AUX+5	;RESET ANY STRAY ACTIVITY
	IN	?PRINTER+5
	IN	?MODEM+5
	IN	?AUX
	IN	?PRINTER
	IN	?MODEM
* END OF I/O INITIALIZATION
	LXI	H,?CODE ;SEQUENCE TO MOVE MEMORY-MAP
	MVI	B,?CODE$LEN	;NUMBER OF BYTES IN SEQUENCE
	MVI	C,?PORT ;I/O PORT TO SEND SEQUENCE
	OUTIR
	JMP	@BIOS
?CODE	DB	0000$01$00B
	DB	0000$11$00B
	DB	0000$01$00B
	DB	0000$10$00B
	DB	0000$11$00B
	DB	0000$10$00B
	DB	0010$00$10B	;FOR "-FA" MACHINES
?CODE$LEN	EQU	$-?CODE

RESET:	OUT	?STAT
RST8	IN	?STAT
	RAL
	JRC	RST8
	POP	PSW
COMMAND:
	PUSH	PSW
COM1	IN	?STAT
	ANI	11110000B
	JRNZ	RESET
	POP	PSW
	OUT	?DATA
COM2	IN	?STAT
	XRI	10000000B
	ANI	11000000B
	JRNZ	COM2
	RET

PUT	PUSH	PSW
PUT1	IN	?STAT
	ANI	01100000B
	JRNZ	PUT1
	POP	PSW
	OUT	?DATA
	RET

GET	IN	?STAT
	ANI	01000000B
	JRNZ	GET
	IN	?DATA
	RET

	REPT	256-($-BOOT)-1
	DB	0
	ENDM

ID	DB	3	;BOOT ROUTINE IDENTIFICATION
MODLEN	EQU	$-BOOT	;MUST BE 256 BYTES
?STACK: EQU	$+128

 DB 00000000B,00001000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00010000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
	END
