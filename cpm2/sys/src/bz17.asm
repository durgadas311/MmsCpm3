;  July 1, 1982  15:08	drm  "BZ17.ASM version 2.240"
********** CP/M LINKABLE BOOT ROUTINE **********
**********	   Z17 BOOT	      **********
	DW	MODLEN,(-1)

BASE	EQU	0000H	;ORG FOR RELOC

***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
*****					      *****
*****  0 = FIRST (BUILT-IN) MINI FLOPPY       *****
*****  1 = SECOND (ADD-ON) MINI FLOPPY	      *****
*****  2 = THIRD (LAST ADD-ON) MINI FLOPPY    *****
*****					      *****
***************************************************

	MACLIB	Z80
***************************************************
**  PORTS AND CONSTANTS
***************************************************
?PORT	EQU	0F2H

?AUX	EQU	0D0H
?PRINTER	EQU	0E0H
?MODEM	EQU	0D8H

?LINE$CTL	EQU	00000011B	;NO PARITY, 1 STOP BIT, 8 DATA BITS
?MOD$CTL	EQU	00001111B	;SET ALL CONTROL LINES TO 'READY'

?S19200 EQU	6	; 19,200 BAUD
?S9600	EQU	12	;  9,600 BAUD
?S4800	EQU	24	;  4,800 BAUD
?S2400	EQU	48	;  2,400 BAUD
?S1200	EQU	96	;  1,200 BAUD
?S600	EQU	192	;    600 BAUD
?S300	EQU	384	;    300 BAUD
?S150	EQU	768	;    150 BAUD
?S110	EQU	1047	;    110 BAUD

VRST0	EQU	0000H	;RESTART PROM MONITOR
R@XOK	EQU	205EH	;TURN OFF Z17
R@READ	EQU	2067H	;ENTRY TO 444-19 ROM FOR READ DISK
R@SDT	EQU	2076H	;SEEK DESIRED TRACK (IN "R@TT")
R@MAI	EQU	2079H	;MOVE ARM IN (STEP IN)
R@MAO	EQU	207CH	;MOVE ARM OUT (STEP OUT)
R@RDB	EQU	2082H	;READ NEXT BYTE FROM DISK
R@SDP	EQU	2085H	;SELECT Z17 DRIVE (DELAY IF NEEDED)
R@STS	EQU	2088H	;SKIP-THIS-SECTOR (WAIT FOR SECTOR HOLE)
R@STZ	EQU	208BH	;SEEK TRACK ZERO
R@WSC	EQU	2091H	;WAIT FOR SYNC CHARACTER

D@TT	EQU	20A0H	;LOCATION FOR DESTINATION TRACK (SEEK)
D@TRKPT EQU	20A5H	;ADDRESS TO ACTUAL CURRENT TRACK
***************************************************

***************************************************
** LINKS TO REST OF SYSTEM
***************************************************
@BIOS	EQU	BASE+1600H
@BDOS	EQU	@BIOS-0E00H
***************************************************

***************************************************
** PAGE ZERO ASSIGNMENTS
***************************************************
	ORG	0
?CPM		DS	3
?DEV$STAT	DS	1
?LOGIN$DSK	DS	1
?BDOS		DS	3
?RST1		DS	3
?CLOCK		DS	2
?INT$BYTE	DS	1
?CTL$BYTE	DS	1
		DS	77
?FCB		DS	36
?DMA		DS	128
?TPA		DS	0
***************************************************

***************************************************
** START OF RELOCATABLE DISK BOOT MODULE
*************************************************** 
	ORG	2280H
BOOT:
	JMP	AROUND
SECTRS	DB	0	;NUMBER OF SECTORS TO BOOT, FROM MOVCPM.COM
			;PATCHED DURING EXECUTION OF MOVCPM
DRIVE	DB	0	;DRIVE NUMBER PATCHED BY SETUP AND MOVCPM

AROUND	LXI	SP,?STACK
***************************************************
*** START OF UNIQUE ROUTINE FOR BOOTING
***************************************************
	LXI	D,@BDOS ;ADDRESS TO LOAD INTO
	LXI	H,U@SDT
	SHLD	R@SDT+1 ;CHANGE ROM'S SEEK ROUTINE TO OURS
	LXI	H,0001H ;DISK ADDRESS OF FIRST SECTOR (0-399)
	LDA	SECTRS	;NUMBER OF SECTORS TO READ
	ADI	1	;ROUND UP TO NEXT 256 BYTE SECTOR
	SRLR	A
	MOV	B,A
	MVI	C,9	;9 SECTORS LEFT IN THIS TRACK (TRACK 0)
DNTRK:	XRA	A
	STA	HT$FLAG
DOTRK:	PUSH	H
	PUSH	D
	PUSH	B
	LXI	B,0100H ;ONE SECTOR READ AT A TIME
	CALL	R@READ	;READ A SECTOR
	JC	ERR00
	POP	B
	POP	D
	POP	H
	INR	D	;STEP DMA ADDRESS 256 BYTES
	INX	H	;POINT TO NEXT SECTOR
	DCR	B	;NO MORE SECTORS TO READ??
	JZ	DONE
	DCR	C	;MORE SECTORS ON THIS TRACK??
	JNZ	DOTRK
	MVI	C,10
	LDA	TRK
	INR	A
	STA	TRK
	JMP	DNTRK

ERR00:	POP	B
	MOV	A,C
	CPI	10
	JNZ	VRST0	;THIS TEST ONLY VALID IF ERROR ON 1ST SECTOR OF TRACK
	LDA	HT$FLAG ;THIS CAN ANLY OCCURE ONCE PER REQUESTED TRACK
	ORA	A
	JNZ	VRST0
	CMA
	STA	HT$FLAG
	PUSH	B
	CALL	R@SDP	;SELECT DRIVE
	CALL	R@MAI	;STEP HEAD IN ONE TRACK
	LXI	H,TRK
	INR	M
	POP	B
	POP	D
	POP	H
	JMP	DOTRK

DONE:
***************************************************
** START OF SYSTEM INITIALIZATION
*************************************************** 
	DI
* INITIALIZE I/O, ETC
	XRA	A
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	MVI	A,?LINE$CTL
	ORI	10000000B	;ENABLE DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
* BAUD RATE SETUP:
	LXI	H,?S9600	;AUX SERIAL @ 9600 BAUD
	MOV	A,L
	OUT	?AUX
	MOV	A,H
	OUT	?AUX+1
	LXI	H,?S9600	;PRINTER @ 9600 BAUD
	MOV	A,L
	OUT	?PRINTER
	MOV	A,H
	OUT	?PRINTER+1
	LXI	H,?S300 ;MODEM (PAPER TAPE) @ 300 BAUD
	MOV	A,L
	OUT	?MODEM
	MOV	A,H
	OUT	?MODEM+1
* NOW GET PORTS READY FOR I/O
	MVI	A,?LINE$CTL	;NOW DE-SELECT DIVISOR LATCH
	OUT	?AUX+3
	OUT	?PRINTER+3
	OUT	?MODEM+3
	MVI	A,?MOD$CTL	;SIGNAL 'READY'
	OUT	?AUX+4
	OUT	?PRINTER+4
	OUT	?MODEM+4
	IN	?AUX+5	;RESET ANY STRAY ACTIVITY
	IN	?PRINTER+5
	IN	?MODEM+5
	IN	?AUX
	IN	?PRINTER
	IN	?MODEM
* END OF I/O INITIALIZATION
	LXI	H,?CODE ;SEQUENCE TO MOVE MEMORY-MAP
	MVI	B,?CODE$LEN	;NUMBER OF BYTES IN SEQUENCE
	MVI	C,?PORT ;I/O PORT TO SEND SEQUENCE
	OUTIR
	JMP	@BIOS
?CODE	DB	0000$01$00B
	DB	0000$11$00B
	DB	0000$01$00B
	DB	0000$10$00B
	DB	0000$11$00B
	DB	0000$10$00B
	DB	0010$00$10B	;ALSO WORKS IN Z89-FA
?CODE$LEN	EQU	$-?CODE

; OUR OWN SEEK ROUTINE THAT USES OUR TRACK NUMBER (ALLOWS HALF-TRACK)
SDT3:	INR	M
	CALL	R@MAI
U@SDT:	LHLD	D@TRKPT
	LDA	TRK
	CMP	M
	JZ	R@STS
	JP	SDT3
SDT1:	DCR	M
	CALL	R@MAO
	JMP	U@SDT

TRK:	DB	0	;OUR CURRENT PHYSICAL TRACK NUMBER
HT$FLAG DB	0	;USED TO KEEP TRACK OF HALF-TRACK DETECTION

 IF $ GT 2380H-1
 DS 'OVERFLOW - BOOT MODULE TOO LONG'
 ELSE
	REPT	2380H-$-1
	DB	0
	ENDM
 ENDIF

	DB	1	;BOOT IDENTIFICATION
MODLEN	EQU	$-BOOT	;MUST BE 256 BYTES
?STACK	EQU	$+128

 DB 00000000B,00100000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000010B
 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
	END

