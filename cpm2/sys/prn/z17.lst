		;  June 30, 1982  09:56  drm  "Z17.ASM"
		********** CP/M DISK I/O ROUTINES FOR Z17  **********
		********** MINI-FLOPPY - DOUBLE TRACK	  **********
0000  00077801		DW	MODLEN,BUFLEN
		
0000          	BASE	EQU	0000H	;ORG FOR RELOC
		
		***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
		*****					      *****
		*****  0 = FIRST (BUILT-IN) MINI FLOPPY       *****
		*****  1 = SECOND (ADD-ON) MINI FLOPPY	      *****
		*****  2 = THIRD (LAST ADD-ON) MINI FLOPPY    *****
		*****					      *****
		***************************************************
			MACLIB Z80
**** Z80.lib ****
**** z17.asm ****
		
		***************************************************
		**  MINI-FLOPPY PORTS AND CONSTANTS
		***************************************************
007F          	?DISK$CTL	EQU	7FH
007E          	?RCVR		EQU	7EH
007D          	?STAT		EQU	7DH
007C          	?DATA		EQU	7CH
00F2          	?PORT		EQU	0F2H
		
0090          	?MOTOR$ON	EQU	10010000B	;AND ENABLE FLOPY-RAM
000A          	?SETTLE EQU	10	;10*2 = 20mS  STEP-SETTLING TIME
0019          	?SEL		EQU	25	; WAIT 50mS AFTER SELECTING
0002          	?MTRDLY EQU	2	; 1.024 SECONDS
0004          	?SEL$TIME	EQU	4	; = 2.048 SECONDS
0028          	?MOTOR$TIME	EQU	40	; = 20.48 SECONDS
		
0000          	WRALL	EQU	0		; WRITE TO ALLOCATED
0001          	WRDIR	EQU	1		; WRITE TO DIRECTORY
0002          	WRUNA	EQU	2		; WRITE TO UNALLOCATED
0003          	READOP	EQU	3		; READ OPERATION
		***************************************************
		
		***************************************************
		** LINKS TO REST OF SYSTEM
		***************************************************
1600          	BIOS	EQU	BASE+1600H
0000          	MBASE	EQU	BASE	;MODULE BASE
C000          	COMBUF	EQU	BASE+0C000H	;COMMON BUFFER
F000          	BUFFER	EQU	BASE+0F000H	;MODULE BUFFER
		***************************************************
		
		***************************************************
		** PAGE ZERO ASSIGNMENTS
		***************************************************
0000          		ORG	0
0000          	?CPM		DS	3
0003          	?DEV$STAT	DS	1
0004          	?LOGIN$DSK	DS	1
0005          	?BDOS		DS	3
0008          	?RST1		DS	3	;08H
000B          	?CLOCK		DS	2
000D          	?INT$BYTE	DS	1
000E          	?CTL$BYTE	DS	1
000F          			DS	1
0010          			DS	8	;10H
0018          			DS	8	;18H
0020          			DS	8	;20H
0028          			DS	8	;28H
0030          			DS	8	;30H
0038          			DS	6	;38H
003E          	?PASS		DS	2	;3EH
0040          			DS	28	;40H
005C          	?FCB		DS	36	;5CH
0080          	?DMA		DS	128
		?TPA		DS	0
		***************************************************
		
		***************************************************
		** OVERLAY MODULE INFORMATION ON BIOS
		***************************************************
1600          		ORG	BIOS 
1600          		DS	51	;JUMP TABLE
1633          	DSK$STAT DS	5	;DISK$STAT AND OLD Z17 MODE INFO
1638          		DS	4	;OLD MODE FOR '47 (REMEX) DRIVES
163C  000102  	MIXER	DB	0,1,2
163F          		DS	13
164C  0003    		DB	0,3	;DRIVES 0,1,2
164E  0000    		DW	MBASE
1650          		DS	28
		
166C  C3D705  		JMP	TIME$OUT
		
166F          	NEWBAS	DS	2
1671          	NEWDSK	DS	1
1672          	NEWTRK	DS	1
1673          	NEWSEC	DS	1
1674          	HRDTRK	DS	2
1676          	DMAA	DS	2
		***************************************************
		
		***************************************************
		** START OF RELOCATABLE DISK I/O MODULE
		*************************************************** 
0000          		ORG	MBASE	;START OF MODULE
0000  C3D500  		JMP	SEL$Z17
0003  C3D101  		JMP	READ$Z17
0006  C3E401  		JMP	WRITE$Z17
		
0009  5A313720		DB	'Z17 ',0,'Hard Sector controller ',0,'2.240$'
      00486172
      64205365
      63746F72
      20636F6E
      74726F6C
      6C657220
      00322E32
      343024
		
002C          	SGL$BASE:
002C  00000000		DW	0,0,0,0,DIRBUF,DPB0,CSV0,ALV0
      00000000
      56C05C00
      00F130F1
003C  00000000		DW	0,0,0,0,DIRBUF,DPB1,CSV1,ALV1
      00000000
      56C07100
      10F148F1
004C  00000000		DW	0,0,0,0,DIRBUF,DPB2,CSV2,ALV2
      00000000
      56C08600
      20F160F1
		
005C          	DPB0:
005C  1400    		DW	20 ;SECTORS PER TRACK
005E  030700  		DB	3,7,0 ;SECTORS PER BLOCK
0061  5B00    		DW	92-1 ;LAST BLOCK ON DISK
0063  3F00    		DW	64-1 ; DIRECTORY ENTRIES
0065  C000    		DB 11000000B,0 ;DIRECTORY ALLOCATION MASK
0067  1000    		DW	16 ;CHECK SIZE
0069  0300    		DW	3  ;FIRST TRACK OF DIRECTORY
006B  010309  		DB	00000001B,00000011B,00001001B	;modes
006E  DFE4FF  		DB	11011111B,11100100B,11111111B	;masks
		
0071          	DPB1:
0071  1400    		DW	20 ;SECTORS PER TRACK
0073  030700  		DB	3,7,0 ;SECTORS PER BLOCK
0076  5B00    		DW	92-1 ;LAST BLOCK ON DISK
0078  3F00    		DW	64-1 ; DIRECTORY ENTRIES
007A  C000    		DB 11000000B,0 ;DIRECTORY ALLOCATION MASK
007C  1000    		DW	16 ;CHECK SIZE
007E  0300    		DW	3  ;FIRST TRACK OF DIRECTORY
0080  010309  		DB	00000001B,00000011B,00001001B	;modes
0083  DFE4FF  		DB	11011111B,11100100B,11111111B	;masks
		
0086          	DPB2:
0086  1400    		DW	20 ;SECTORS PER TRACK
0088  030700  		DB	3,7,0 ;SECTORS PER BLOCK
008B  5B00    		DW	92-1 ;LAST BLOCK ON DISK
008D  3F00    		DW	64-1 ; DIRECTORY ENTRIES
008F  C000    		DB 11000000B,0 ;DIRECTORY ALLOCATION MASK
0091  1000    		DW	16 ;CHECK SIZE
0093  0300    		DW	3  ;FIRST TRACK OF DIRECTORY
0095  010309  		DB	00000001B,00000011B,00001001B	;modes
0098  DFE4FF  		DB	11011111B,11100100B,11111111B	;masks
		
009B          	SEC$TBL:
009B  0102090A		DB	1,2,9,10,17,18,5,6,13,14   ;LOGICAL/PHYSICAL SECTOR TABLE
      11120506
      0D0E
00A5  03040B0C		DB	3,4,11,12,19,20,7,8,15,16
      13140708
      0F10
		
00AF  00000000	SKEW4:	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
      00000000
      00000000
      00000000
00BF  00000000		DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
      00000000
      00000000
      00000000
		
00CF  03      	STPTBL: DB	3	;00 =  6 mS (fastest rate)
00D0  06      		DB	6	;01 = 12 mS
00D1  0A      		DB	10	;10 = 20 mS
00D2  0F      		DB	15	;11 = 30 mS (slowest rate)
0000          	 IF $/256 NE STPTBL/256
		 ENDIF
		
00D3  00      	TPS:	DB	0	;NUMBER OF PHYSICAL HEAD POSITIONS (TRACKS PER SIDE)
00D4  00      	TPS2:	DB	0	;NUMBER OF TRACKS USED ON SECOND SIDE
0000          	 IF TPS+1 NE TPS2
		 ENDIF
		
00D5          	SEL$Z17:
00D5  219E05  		LXI	H,DISK$CTLR	;DEFINE ENTRY TO THIS INTERNAL ROUTINE
00D8  223E00  		SHLD	?PASS	;PUT ADDRESS WHERE FORMAT PROGRAM CAN FIND IT
00DB  DD221606		SIXD	SAVE$IX
00DF  FD221806		SIYD	SAVE$IY
00E3  AF      		XRA	A
00E4  320A06  		STA	SELRR
00E7  3AF705  		LDA	PNDWRT
00EA  B7      		ORA	A
00EB  C4C202  		CNZ	WR$SEC
00EE  3A7116  		LDA	NEWDSK
00F1  87      		ADD	A	;*2
00F2  87      		ADD	A	;*4
00F3  87      		ADD	A	;*8
00F4  87      		ADD	A	;*16
00F5  4F      		MOV	C,A
00F6  0600    		MVI	B,0
00F8  212C00  		LXI	H,SGL$BASE
00FB  09      		DAD	B
00FC  220406  		SHLD	DPHA
00FF  E5      		PUSH	H
0100  DDE1    		POPIX
0102  DD6E0A  		LDX	L,+10	;DPB ADDRESS
0105  DD660B  		LDX	H,+11
0108  220206  		SHLD	DPBA
010B  E5      		PUSH	H
010C  FDE1    		POPIY
010E  FD7E03  		LDY	A,+3	;BSM
0111  32FC05  		STA	BLKMSK
0114  FD7E0D  		LDY	A,+13	;TRACK OFFSET
0117  32FA05  		STA	OFFSET
011A  110F00  		LXI	D,+15	;MODE BYTES
011D  19      		DAD	D	;
011E  220006  		SHLD	MODES
0121  7E      		MOV	A,M
0122  E603    		ANI	11B	;PHYSICAL SECTOR SIZE
0124  32FF05  		STA	BLCODE
0127  23      		INX	H
0128  012824  		LXI	B,(36)*256+(40) ;40 TRACKS, 36 USED ON SECOND SIDE
012B  CB5E    		BIT	3,M	;TRACK DENSITY BIT
012D  2803    		JRZ	NOTDT
012F  015048  		LXI	B,(72)*256+(80) ;80 TRACKS, 72 USED ON SECOND SIDE
0132  ED43D300	NOTDT:	SBCD	TPS
0136  7E      		MOV	A,M
0137  E603    		ANI	11B	;STEPRATE
0139  11CF00  		LXI	D,STPTBL
013C  83      		ADD	E	;TABLE MUST NOT SPAN PAGE BOUNARY
013D  5F      		MOV	E,A
013E  1A      		LDAX	D
013F  32F505  		STA	ASTEPR	;COUNTER VALUE EQUIVELENT TO STEPRATE CODE
0142  23      		INX	H
0143  7E      		MOV	A,M
0144  E607    		ANI	111B	;SKEW TABLE CODE
0146  119B00  		LXI	D,SEC$TBL
0149  FE04    		CPI	4
014B  DA5101  		JC	GOTSKW
014E  11AF00  		LXI	D,SKEW4
0151  DD7300  	GOTSKW: STX	E,+0	;SAVE SKEW TABLE
0154  DD7201  		STX	D,+1
0157  CD6B01  		CALL	LOGIN	;CONDITIONAL LOG-IN OF DRIVE (TEST FOR HALF-TRACK)
015A  E1      		POP	H	;DISCARD RETURN ADDRESS (TO BIOS)
015B  2A0406  		LHLD	DPHA
015E  3A7116  		LDA	NEWDSK
0161  4F      		MOV	C,A
0162  DD2A1606		LIXD	SAVE$IX
0166  FD2A1806		LIYD	SAVE$IY
016A  C9      		RET
		
016B          	LOGIN:	
016B  3A7116  		LDA	NEWDSK
016E  011100  		LXI	B,17
0171  213C16  		LXI	H,MIXER
0174  EDB1    		CCIR
0176  3E11    		MVI	A,17
0178  91      		SUB	C
0179  47      		MOV	B,A
017A  210016  		LXI	H,BIOS 
017D  1177F2  		LXI	D,-0D89H	;POSITION OF "GET LOGIN" FUNCTION IN BDOS
0180  19      		DAD	D
0181  5E      		MOV	E,M	;PICK UP ADDRESS OF "GET LOGIN" ROUTINE
0182  23      		INX	H
0183  56      		MOV	D,M
0184  EB      		XCHG
0185  23      		INX	H	;SKIP PAST OP-CODE
0186  5E      		MOV	E,M	;PICK UP ADDRESS OF LOGIN VECTOR
0187  23      		INX	H
0188  56      		MOV	D,M
0189  EB      		XCHG
018A  5E      		MOV	E,M	;PICK UP LOGIN VECTOR
018B  23      		INX	H
018C  56      		MOV	D,M
018D  CB1A    	LG0:	RARR	D
018F  CB1B    		RARR	E
0191  10FA    		DJNZ	LG0
0193  D8      		RC
		;
		;   TEST DISKETTE/DRIVE FOR "48 IN 96 TPI"
		;
0194  3A7116  		LDA	NEWDSK
0197  321D06  		STA	HSTDSK	;MAKE SURE "SELECT" KNOWS WHAT DRIVE TO SELECT
019A  CD9E04  		CALL	SELECT
019D  D8      		RC		;NOT READY
019E  CD3604  		CALL	RECALIBRATE	;[CY]=ERROR
01A1  D8      		RC	;IF ERROR HERE, IGNORE IT.
01A2  0E20    		MVI	C,00100000B	;STEP-IN
01A4  CD6F05  		CALL	STEPHEAD	;STEP IN ONCE...
01A7  CD6F05  		CALL	STEPHEAD	;STEP IN TWICE.
01AA  DD210B06		LXIX	TEC
01AE  CDCA03  		CALL	READ$ADDRESS	;FIND OUT WHERE WE ARE.
01B1  F5      		PUSH	PSW
01B2  CD3604  		CALL	RECALIBRATE	;PUT HEAD WHERE SYSTEM CAN FIND IT.
01B5  F1      		POP	PSW
01B6  3813    		JRC	SELERR	;ERROR HERE MAY INDICATE 96 IN 48 TPI
01B8  7A      		MOV	A,D	;TRACK NUMBER
01B9  FE02    		CPI	2
01BB  C8      		RZ	;MEDIA MATCHES DRIVE, NO CHANGES TO MAKE
01BC  FE01    		CPI	1	;IF 48 TPI DISK IN 96 TPI DRIVE
01BE  200B    		JRNZ	SELERR
01C0  2A0006  		LHLD	MODES
01C3  23      		INX	H
01C4  CB5E    		BIT	3,M	;TEST IF DPB IS SET CORRECTLY
01C6  2003    		JRNZ	SELERR	;IF NOT, CANNOT PROCESS THE DISKETTE
01C8  CBE6    		SETB	4,M	;ELSE SETUP FOR "HALF-TRACK"
01CA  C9      		RET
		
01CB  AF      	SELERR: XRA	A
01CC  3C      		INR	A
01CD  320A06  		STA	SELRR
01D0  C9      		RET
		
01D1          	READ$Z17:
01D1  DD221606		SIXD	SAVE$IX
01D5  FD221806		SIYD	SAVE$IY
01D9  3AF705  		LDA	PNDWRT
01DC  B7      		ORA	A
01DD  C4C202  		CNZ	WR$SEC
01E0  3E03    		MVI	A,READOP
01E2  1809    		JR	RWOPER
		
01E4          	WRITE$Z17:
01E4  DD221606		SIXD	SAVE$IX
01E8  FD221806		SIYD	SAVE$IY
01EC  79      		MOV	A,C
		
01ED  32F605  	RWOPER: STA	WRTYPE		; SAVE WRITE TYPE
01F0  3A0A06  		LDA	SELRR
01F3  B7      		ORA	A
01F4  C0      		RNZ
01F5  D5      		PUSH	D		; TEMPORARILY SAVE RECORD NUMBER
01F6  010300  		LXI	B,3
01F9  217116  		LXI	H,NEWDSK
01FC  111A06  		LXI	D,REQDSK
01FF  EDB0    		LDIR
0201  D1      		POP	D		; RESTORE RECORD NUMBER
		;*****************************************************************************
		; DBLOCK: THIS SUBROUTINE PERFORMS THE DEBLOCKING FUNCTION.		     ;
		;	  INPUTS: NEWSEC (THE REQUESTED LOGICAL SECTOR) 		     ;
		;		  BLCODE (THE DEBLOCKING CODE DETERMINED FROM THE MODE BYTE) ;
		;	  OUTPUTS:NEWSEC (THE REQUIRED PHYSICAL SECTOR) 		     ;
		;		  BLKSEC (THE POSITION OF THE REQUESTED LOGICAL SECTOR	     ;
		;			   WITHIN THE PHYSICAL SECTOR)			     ;
		;									     ;
0202  AF      	DBLOCK: XRA	A		; CLEAR CARRY				     ;
0203  4F      		MOV	C,A		; CALCULATE PHYSICAL SECTOR		     ;
0204  3AFF05  		LDA	BLCODE							     ;
0207  47      		MOV	B,A							     ;
0208  3A7316  		LDA	NEWSEC							     ;
020B  05      	DBLOK1: DCR	B							     ;
020C  FA1402  		JM	DBLOK2							     ;
020F  1F      		RAR								     ;
0210  CB19    		RARR	C							     ;
0212  18F7    		JR	DBLOK1							     ;
0214  321C06  	DBLOK2: STA	REQSEC		; SAVE IT				     ;
0217  3AFF05  		LDA	BLCODE		; CALCULATE BLKSEC			     ;
021A  3D      	DBLOK3: DCR	A							     ;
021B  FA2202  		JM	DBLOK4							     ;
021E  CB01    		RLCR	C							     ;
0220  18F8    		JR	DBLOK3							     ;
0222  79      	DBLOK4: MOV	A,C							     ;
0223  32F805  		STA	BLKSEC		; STORE IT				     ;
		;*****************************************************************************
		
0226  AF      		XRA	A		; NON-ZERO VALUE TO ACC.
0227  3D      		DCR	A
0228  32F905  		STA	RD$FLAG 	; FLAG A PRE-READ
022B  3AF605  		LDA	WRTYPE
022E  1F      		RAR			; CARRY IS SET ON WRDIR AND READOP
022F  3828    		JRC	ALLOC		; NO NEED TO CHECK FOR UNALLOCATED RECORDS
0231  1F      		RAR			; CARRY IS SET ON WRUNA
0232  3009    		JRNC	CHKUNA
0234  ED53FD05		SDED	URECORD 	; SET UNALLOCATED RECORD #
0238  AF      		XRA	A
0239  3D      		DCR	A
023A  32FB05  		STA	UNALLOC 	; FLAG WRITING OF AN UNALLOCATED BLOCK
023D  3AFB05  	CHKUNA: LDA	UNALLOC 	; ARE WE WRITING AN UNALLOCATED BLOCK ?
0240  B7      		ORA	A
0241  2816    		JRZ	ALLOC
0243  2AFD05  		LHLD	URECORD 	; IS REQUESTED RECORD SAME AS EXPECTED
0246  ED52    		DSBC	D		; SAME AS EXPECTED UNALLOCATED RECORD ?
0248  200F    		JRNZ	ALLOC		; IF NOT, THEN DONE WITH UNALLOCATED BLOCK
024A  AF      		XRA	A		; CLEAR PRE-READ FLAG
024B  32F905  		STA	RD$FLAG
024E  13      		INX	D		; INCREMENT TO NEXT EXPECTED UNALLOCATED RECORD
024F  ED53FD05		SDED	URECORD
0253  3AFC05  		LDA	BLKMSK
0256  A3      		ANA	E		; IS IT THE START OF A NEW BLOCK ?
0257  2004    		JRNZ	CHKRD
0259  AF      	ALLOC:	XRA	A		; NO LONGER WRITING AN UNALLOCATED BLOCK
025A  32FB05  		STA	UNALLOC
025D          	CHKRD:				; IS SECTOR ALREADY IN BUFFER ?
		;*****************************************************************************
		; CHKSEC: THIS SUBROUTINE COMPARES THE REQUESTED DISK TRACK AND SECTOR	     ;
		;	  TO THE DISK,TRACK AND SECTOR CURRENTLY IN THE BUFFER. 	     ;
		;	  OUTPUT: ZERO FLAG SET IF SAME, RESET IF DIFFERENT		     ;
		;									     ;
025D  217216  	CHKSEC: LXI	H,NEWTRK
0260  3AFA05  		LDA	OFFSET
0263  BE      		CMP	M		; IS IT THE DIRECTORY TRACK ?
0264  2005    		JRNZ	CHKBUF
0266  23      		INX	H
0267  7E      		MOV	A,M
0268  B7      		ORA	A		; FIRST SECTOR OF DIRECTORY ?
0269  2812    		JRZ	READIT 
026B  211A06  	CHKBUF: LXI	H,REQDSK						     ;
026E  111D06  		LXI	D,HSTDSK						     ;
0271  0603    		MVI	B,3							     ;
0273  1A      	CHKNXT: LDAX	D							     ;
0274  BE      		CMP	M							     ;
0275  2006    		JRNZ	READIT
0277  23      		INX	H							     ;
0278  13      		INX	D							     ;
0279  10F8    		DJNZ	CHKNXT							     ;
		;*****************************************************************************
		
027B  1819    		JR	NOREAD		; THEN NO NEED TO PRE-READ
027D  3AF705  	READIT: LDA	PNDWRT		; IS THERE A SECTOR THAT NEEDS TO BE WRITTEN ?
0280  B7      		ORA	A
0281  C4C202  		CNZ	WR$SEC		; WRITE IT
0284  111D06  		LXI	D,HSTDSK	; SET UP NEW BUFFER PARAMETERS
0287  211A06  		LXI	H,REQDSK
028A  010300  		LXI	B,3
028D  EDB0    		LDIR
028F  3AF905  		LDA	RD$FLAG 	; DO WE NEED TO PRE-READ ?
0292  B7      		ORA	A
0293  C4D502  		CNZ	RD$SEC		; READ THE SECTOR
0296  2100F0  	NOREAD: LXI	H,HSTBUF	; POINT TO START OF SECTOR BUFFER
0299  018000  		LXI	B,128
029C  3AF805  		LDA	BLKSEC		; POINT TO LOCATION OF CORRECT LOGICAL SECTOR
029F  3D      	MOVIT1: DCR	A
02A0  FAA602  		JM	MOVIT2
02A3  09      		DAD	B
02A4  18F9    		JR	MOVIT1
02A6  ED5B7616	MOVIT2: LDED	DMAA		; POINT TO DMA
02AA  3AF605  		LDA	WRTYPE		; IS IT A READ OR A WRITE
02AD  FE03    		CPI	READOP
02AF  2806    		JRZ	MOVIT3
02B1  EB      		XCHG			; SWITCH DIRECTION OF MOVE FOR WRITE
02B2  AF      		XRA	A		; FLAG A PENDING WRITE
02B3  3D      		DCR	A
02B4  32F705  		STA	PNDWRT
02B7  EDB0    	MOVIT3: LDIR			; MOVE IT
02B9  3AF605  		LDA	WRTYPE		; CHECK FOR DIRECTORY WRITE
02BC  3D      		DCR	A
02BD  CCC202  		CZ	WR$SEC		; WRITE THE SECTOR IF IT IS
02C0  AF      		XRA	A		; FLAG NO ERROR
02C1  C9      		RET			; RETURN TO BDOS (OR RESEL ROUTINE)
		
02C2  CD2A03  	WR$SEC: CALL	WRITE		; WRITE A PHYSICAL SECTOR
02C5  3E00    		MVI	A,0
02C7  32F705  		STA	PNDWRT		; FLAG NO PENDING WRITE
02CA  C8      		RZ			; RETURN IF WRITE WAS SUCCESSFUL
02CB  3AF605  		LDA	WRTYPE
02CE  FE03    		CPI	READOP		; IGNORE ERROR IF THIS IS A READ OPERATION
02D0  3E00    		MVI	A,0	;BUT MAKE SURE EVERYONE SEES "NO ERROR"
02D2  C8      		RZ
02D3  1809    		JR	RWERR
		
02D5  CDE202  	RD$SEC: CALL	READ		; READ A PHYSICAL SECTOR
02D8  C8      		RZ			; RETURN IF SUCCESSFUL
02D9  3EFF    		MVI	A,0FFH		; FLAG BUFFER AS UNKNOWN
02DB  321D06  		STA	HSTDSK
02DE  D1      	RWERR:	POP	D		; THROW AWAY TOP OF STACK
02DF  3E01    		MVI	A,1		; SIGNAL ERROR TO BDOS
02E1  C9      		RET			; RETURN TO BDOS (OR RESEL ROUTINE)
		
		
		
		***** PHYSICAL READ-SECTOR ROUTINE ******
		** RETURNS [NZ] IF ERROR	       **
		** USES ALL REGISTERS (IX,IY)	       **
		*****************************************
02E2          	READ:
02E2  CD9E04  		CALL	SELECT
02E5  DA1D04  		JC	ERROR
02E8  CD2105  		CALL	SEEK
02EB  DA1D04  		JC	ERROR
02EE          	READ01:
02EE  FD210E06		LXIY	SSC
02F2  FD36000A		MVIY	10,+0
02F6          	READ1:
02F6  CD8803  		CALL	FIND$SECTOR	;DISABLES INTERUPTS ++++++++++++++++++++++
02F9  DA1D04  		JC	ERROR	;MUST ENABLE INTERUPTS
02FC  0E03    		MVI	C,3
02FE  CD8304  	XSYNC	CALL	SYNC0
0301  0D      		DCR	C
0302  C2FE02  		JNZ	XSYNC
0305  2100F0  		LXI	H,HSTBUF
0308  0600    		MVI	B,0	;256 BYTES
030A  CD8604  		CALL	SYNC
030D  DA1E03  		JC	ERRX
0310  CD6704  	RD	CALL	INPUT$DISK
0313  77      		MOV	M,A
0314  23      		INX	H
0315  10F9    		DJNZ	RD
0317  6A      		MOV	L,D
0318  CD6704  		CALL	INPUT$DISK
031B  FB      		EI			;ENABLE INTERUPTS +++++++++++++++++++++++++
031C  95      		SUB	L
031D  C8      		RZ	;SUCCESSFULL READ...
031E  FB      	ERRX	EI			;ENABLE INTERUPTS +++++++++++++++++++++++++
031F  FD3500  		DCRY	+0
0322  20D2    		JRNZ	READ1
0324  CD2104  		CALL	ERROR1	;SETS STATUS BIT
0327  C31D04  		JMP	ERROR
		
		***** PHYSICAL WRITE-SECTOR ROUTINE ******
		** RETURNS [NZ] IF ERROR		**
		** USES ALL REGISTERS (IX,IY)		**
		**					**
		******************************************
032A          	WRITE:
032A  CD9E04  		CALL	SELECT
032D  DA1D04  		JC	ERROR
0330  CA1D04  		JZ	ERROR
0333  CD2105  		CALL	SEEK
0336  DA1D04  		JC	ERROR
0339  2A0006  		LHLD	MODES	;PREVENT ATTEMPTED WRITE TO 48 TPI DISK IN 96 TPI DRIVE
033C  23      		INX	H
033D  CB66    		BIT	4,M
033F  C0      		RNZ	;RETURN ERROR IF ATTEMPTED WRITE TO "HALF TRACK" DISK
0340  AF      		XRA	A
0341  D37D    		OUT	?STAT	;SET FILL CHARACTER
0343  CD8803  		CALL	FIND$SECTOR	;DISABLES INTERUPTS ++++++++++++++++++++++++
0346  DA1D04  		JC	ERROR
0349  3E2D    		MVI	A,45	;312uS
034B  3D      	WLOOP	DCR	A
034C  C24B03  		JNZ	WLOOP
034F  3A0E00  		LDA	?CTL$BYTE
0352  F601    		ORI	00000001B	;WRITE ENABLE
0354  D37F    		OUT	?DISK$CTL
0356  2100F0  		LXI	H,HSTBUF
0359  0600    		MVI	B,0	;256 BYTES
035B  0E0A    		MVI	C,10	; WRITE 10 NULLS TO PAD DATA
035D  AF      	NLOOP	XRA	A
035E  CD7504  		CALL	OUTPUT$DISK
0361  0D      		DCR	C
0362  C25D03  		JNZ	NLOOP
0365  3EFD    		MVI	A,0FDH	;SYNC CHARACTER
0367  57      		MOV	D,A	;FORCE CLEARING OF CRC
0368  CD7504  		CALL	OUTPUT$DISK
036B  7E      	WRT	MOV	A,M
036C  CD7504  		CALL	OUTPUT$DISK
036F  23      		INX	H
0370  10F9    		DJNZ	WRT
0372  7A      		MOV	A,D	;GET CRC
0373  CD7504  		CALL	OUTPUT$DISK	;WRITE CRC ON DISK
0376  CD7504  		CALL	OUTPUT$DISK	; NOW 3 NULLS...
0379  CD7504  		CALL	OUTPUT$DISK
037C  CD7504  		CALL	OUTPUT$DISK
037F  3A0E00  		LDA	?CTL$BYTE
0382  CD9E05  		CALL	DISK$CTLR	;RESTORE CTRL LINES
0385  AF      		XRA	A
0386  FB      		EI			;ENABLE INTERUPTS ++++++++++++++++++++++++++
0387  C9      		RET
		
		
		***** FINDS SECTOR HEADER ****************
		** RETURNS [CY] IF ERROR		**
		** USES ALL REGISTERS (IX)		**
		**					**
		******************************************
0388          	FIND$SECTOR:
0388  DD210B06		LXIX	TEC
038C  DD360005		MVIX	5,+0	;TRACK-ERROR RETRY COUNTER
0390  DD360124	FIND1	MVIX	36,+1	;SECTOR SEARCH RETRY COUNTER
0394  CDCA03  	FIND5	CALL	READ$ADDRESS	;DISABLES INTERUPTS +++++++++++++++++++++++
0397  D8      		RC		; >> ACCUMILATED NO-ERROR TIME....
0398  210F06  		LXI	H,SIDE	;
039B  7B      		MOV	A,E	;SIDE NUMBER
039C  BE      		CMP	M	; >>	CYCLES
039D  C2A603  		JNZ	SKERR
03A0  23      		INX	H
03A1  7A      		MOV	A,D	;TRACK NUMBER
03A2  BE      		CMP	M
03A3  CABC03  		JZ	OVER2	; >>	CYCLES
03A6  FB      	SKERR:	EI
03A7  DD3500  		DCRX	+0
03AA  CA5704  		JZ	SEEK$ERROR
03AD  CD3604  		CALL	RECALIBRATE
03B0  DA5704  		JC	SEEK$ERROR
03B3  CD2105  		CALL	SEEK
03B6  DA5704  		JC	SEEK$ERROR
03B9  C39003  		JMP	FIND1
03BC  3A1F06  	OVER2	LDA	HSTSEC	;SECTOR NUMBER
03BF  B9      		CMP	C
03C0  C8      		RZ		; >>	CYCLES
03C1  DD3501  		DCRX	+1
03C4  C29403  		JNZ	FIND5
03C7  C32104  		JMP	ERROR1
		
		;******* READ ADDRESS from diskette ***************
		; ENTRY: assumes IX points to "TEC"
		; RETURN: (D)=track  (E)=side  (C)=sector
		;	or [CY] if error.
		;
03CA          	READ$ADDRESS:		;ALWAYS EXITS WITH INTERUPTS DISABLED....
03CA  DD36020A		MVIX	10,+2	;INIT CHECK-SUM ERROR COUNTER
03CE          	FIND50:
03CE  2E0C    		MVI	L,12	;MUST FIND SYNC IN 12 INDEX HOLES
03D0          	FIND$INDEX:
03D0  FB      		EI			;ENABLE INTERUPTS +++++++++++++++++++++++
03D1  DB7F    		IN	?DISK$CTL
03D3  E601    		ANI	00000001B
03D5  4F      		MOV	C,A
03D6  DB7F    	FLOOP	IN	?DISK$CTL
03D8  E601    		ANI	00000001B
03DA  B9      		CMP	C
03DB  28F9    		JRZ	FLOOP
03DD  4F      		MOV	C,A
03DE  FE00    		CPI	00000000B
03E0  20F4    		JRNZ	FLOOP
03E2  E5      		PUSH	H
03E3  210B00  		LXI	H,?CLOCK
03E6  3E06    		MVI	A,6	;12 mS WAIT
03E8  86      		ADD	M
03E9  BE      	FXL	CMP	M
03EA  C2E903  		JNZ	FXL
03ED  F3      		DI			;DISABLE INTERUPTS ++++++++++++++++++++++
03EE  E1      		POP	H
03EF  DB7F    	FL1	IN	?DISK$CTL
03F1  1F      		RAR
03F2  30FB    		JRNC	FL1
03F4  CD8304  		CALL	SYNC0
03F7  CD8604  		CALL	SYNC
03FA  D20404  		JNC	OVER1
03FD  2D      		DCR	L
03FE  C2D003  		JNZ	FIND$INDEX
0401  C32104  		JMP	ERROR1		;SETS [CY] AND STATUS BIT, RETURNS
0404  CD6704  	OVER1	CALL	INPUT$DISK	;SIDE NUMBER
0407  6F      		MOV	L,A
0408  CD6704  		CALL	INPUT$DISK	;TRACK NUMBER
040B  67      		MOV	H,A
040C  CD6704  		CALL	INPUT$DISK	;SECTOR NUMBER
040F  4F      		MOV	C,A
0410  CD6704  		CALL	INPUT$DISK	;TEST CHECK-SUM
0413  EB      		XCHG		;PUT TRACK/SIDE IN EXPECTED PLACE (DE)
0414  C8      		RZ		;CHECK-SUM CORRECT
0415  DD3502  		DCRX	+2
0418  CA2104  		JZ	ERROR1
041B  18B1    		JR	FIND50
		
041D          	ERROR:
041D  AF      		XRA	A
041E  3C      		INR	A	;TO SIGNAL ERROR
041F  FB      		EI
0420  C9      		RET
		
0421          	ERROR1:
0421  213316  		LXI	H,DSK$STAT
0424  CBDE    		SETB	3,M	;FORMAT ERROR
0426  37      		STC
0427  C9      		RET
		
0428  210C00  	PAUSE5	LXI	H,?CLOCK+1	;HI BYTE TICS EVERY 512mS
042B  1803    		JR	PAUSX
042D  210B00  	PAUSE:	LXI	H,?CLOCK
0430  86      	PAUSX	ADD	M
0431  FB      		EI
0432  BE      	PLOOP	CMP	M
0433  20FD    		JRNZ	PLOOP
0435  C9      		RET
		
0436          	RECALIBRATE:
0436  AF      		XRA	A
0437  320706  		STA	TRACK
043A  06FF    	RECAL	MVI	B,255
043C  DB7F    	REC1	IN	?DISK$CTL
043E  E602    		ANI	00000010B
0440  2021    		JRNZ	RECDON	;IF ALREADY AT TRK0
0442  3A0E00  		LDA	?CTL$BYTE
0445  F640    		ORI	01000000B	;STEP
0447  CD9E05  		CALL	DISK$CTLR
044A  E6BF    		ANI	10111111B
044C  CD9E05  		CALL	DISK$CTLR
044F  3AF505  		LDA	ASTEPR	;TIME FOR HEAD TO STEP
0452  CD2D04  		CALL	PAUSE
0455  10E5    		DJNZ	REC1
0457          	SEEK$ERROR:
0457  AF      		XRA	A
0458  2F      		CMA
0459  320706  		STA	TRACK
045C  213316  		LXI	H,DSK$STAT
045F  CBD6    		SETB	2,M	;SEEK ERROR
0461  37      		STC
0462  C9      		RET
		
0463  3E0A    	RECDON	MVI	A,?SETTLE
0465  18C6    		JR	PAUSE
		
0467          	INPUT$DISK:
0467  DB7D    		IN	?STAT
0469  1F      		RAR
046A  D26704  		JNC	INPUT$DISK
046D  DB7C    		IN	?DATA
046F  5F      		MOV	E,A
0470  AA      		XRA	D
0471  07      		RLC
0472  57      		MOV	D,A
0473  7B      		MOV	A,E
0474  C9      		RET
		
0475          	OUTPUT$DISK:
0475  5F      		MOV	E,A
0476  DB7D    		IN	?STAT
0478  17      		RAL
0479  D27604  		JNC	OUTPUT$DISK+1
047C  7B      		MOV	A,E
047D  D37C    		OUT	?DATA
047F  AA      		XRA	D
0480  07      		RLC
0481  57      		MOV	D,A
0482  C9      		RET
		
0483  AF      	SYNC0	XRA	A
0484  1802    		JR	SYNCX
		
0486          	SYNC:
0486  3EFD    		MVI	A,0FDH
0488          	SYNCX:
0488  1650    		MVI	D,80	;TRY 80 TIMES
048A  D37E    		OUT	?RCVR
048C  DB7E    		IN	?RCVR	;RESET RECEIVER
048E  DB7F    	SLOOP	IN	?DISK$CTL
0490  E608    		ANI	00001000B
0492  2005    		JRNZ	FOUND
0494  15      		DCR	D
0495  20F7    		JRNZ	SLOOP
0497  37      		STC
0498  C9      		RET
0499  DB7C    	FOUND	IN	?DATA
049B  1600    		MVI	D,0	;CLEAR CRC
049D  C9      		RET
		
		
049E          	SELECT:
049E  210606  		LXI	H,DRIVE
04A1  3A1D06  		LDA	HSTDSK
04A4  BE      		CMP	M
04A5  F5      		PUSH	PSW
04A6  5E      		MOV	E,M
04A7  77      		MOV	M,A
04A8  1600    		MVI	D,0
04AA  211106  		LXI	H,TRKA
04AD  19      		DAD	D
04AE  3A0706  		LDA	TRACK
04B1  77      		MOV	M,A
04B2  ED5B0606		LDED	DRIVE
04B6  1600    		MVI	D,0
04B8  211106  		LXI	H,TRKA
04BB  19      		DAD	D
04BC  7E      		MOV	A,M
04BD  320706  		STA	TRACK
04C0  F1      		POP	PSW
04C1  2804    		JRZ	NO$SEL
04C3  AF      		XRA	A
04C4  320806  		STA	SEL$TIMER
04C7  3A0606  	NO$SEL	LDA	DRIVE
04CA  3C      		INR	A
04CB  0603    		MVI	B,3
04CD  0E02    		MVI	C,00000010B	;DRIVE A:
04CF  3D      	DRVL	DCR	A
04D0  CAD904  		JZ	GDRIVE
04D3  CB01    		RLCR	C
04D5  10F8    		DJNZ	DRVL
04D7  0E00    		MVI	C,0	;DESELECT ALL DRIVES
04D9  3E90    	GDRIVE	MVI	A,?MOTOR$ON
04DB  B1      		ORA	C
04DC  320E00  		STA	?CTL$BYTE
04DF  CD9E05  		CALL	DISK$CTLR	;TURN MOTOR ON NOW
04E2  3A0706  		LDA	TRACK
04E5  FEFF    		CPI	0FFH	;MEANS DRIVE IS NOT LOGGED-ON
04E7  2012    		JRNZ	LOGGED
04E9  CD3604  		CALL	RECALIBRATE	;DETERMINE HEAD POSITION
04EC  D8      		RC		;IF ERROR
04ED  210000  		LXI	H,0
04F0  220F06  		SHLD	SIDE
04F3  210D00  		LXI	H,?INT$BYTE
04F6  CBB6    		RES	6,M
04F8  7E      		MOV	A,M
04F9  D3F2    		OUT	?PORT
04FB          	LOGGED:
04FB  DB7F    		IN	?DISK$CTL
04FD  E601    		ANI	00000001B
04FF  5F      		MOV	E,A
0500  010008  		LXI	B,0800H ;MUST FIND INDEX BEFORE COUNT GOES TO ZERO
0503  DB7F    	IDX	IN	?DISK$CTL
0505  E601    		ANI	00000001B
0507  BB      		CMP	E
0508  2007    		JRNZ	IDX$FOUND
050A  0B      		DCX	B
050B  78      		MOV	A,B
050C  B1      		ORA	C
050D  20F4    		JRNZ	IDX
050F  1E00    		MVI	E,0
0511          	IDX$FOUND:
0511  B3      		ORA	E
0512  5F      		MOV	E,A
0513  DB7F    		IN	?DISK$CTL
0515  E604    		ANI	00000100B	;WRITE PROTECT
0517  0F      		RRC
0518  B3      		ORA	E		;READY
0519  323316  		STA	DSK$STAT
051C  2F      		CMA		;NOT-READY
051D  1F      		RAR		; INTO CY BIT
051E  CB47    		BIT	0,A	; WRITE ENABLE NOTCH INTO ZR BIT
0520  C9      		RET
		
0521          	SEEK:
0521  210706  		LXI	H,TRACK
0524  3A1E06  		LDA	HSTTRK
0527  46      		MOV	B,M
0528  77      		MOV	M,A
0529  CD8F05  		CALL	CONVERT
052C  321006  		STA	SIDE+1
052F  F5      		PUSH	PSW
0530  3A0D00  		LDA	?INT$BYTE
0533  E6BF    		ANI	10111111B
0535  B1      		ORA	C
0536  320D00  		STA	?INT$BYTE
0539  D3F2    		OUT	?PORT
053B  79      		MOV	A,C
053C  07      		RLC
053D  07      		RLC
053E  320F06  		STA	SIDE
0541  78      		MOV	A,B
0542  CD8F05  		CALL	CONVERT
0545  47      		MOV	B,A
0546  F1      		POP	PSW
0547  FE00    		CPI	0	;IF SEEK-TRK-0 THEN RECALIBRATE
0549  CA3A04  		JZ	RECAL
054C  0E20    		MVI	C,00100000B	;STEP TOWARDS HUB
054E  90      		SUB	B
054F  C8      		RZ		;IF RELATIVE TRACKS SAME
0550  3004    		JRNC	SEEK1
0552  2F      		CMA
0553  3C      		INR	A
0554  0E00    		MVI	C,00000000B	;ELSE STEP OUTWARD (TOWARDS RIM)
0556  47      	SEEK1	MOV	B,A	;# OF TRACKS TO SKIP
0557  2A0006  		LHLD	MODES
055A  23      		INX	H
055B  56      		MOV	D,M	;HALF-TRACK BIT IS #4
055C          	STEP:
055C  CB62    		BIT	4,D
055E  C46F05  		CNZ	STEPHEAD
0561  CD6F05  		CALL	STEPHEAD
0564  10F6    		DJNZ	STEP
0566  3A0E00  		LDA	?CTL$BYTE
0569  CD9E05  		CALL	DISK$CTLR	;RESTORE CTL LINES
056C  C36304  		JMP	RECDON	;HEAD-SETTLE PAUSE
		
056F          	STEPHEAD:
056F  CB69    		BIT	5,C	;TEST DIRECTION OF STEP
0571  2005    		JRNZ	NOTOUT	;IF NOT "OUT" THEN DON'T WORRY...
0573  DB7F    		IN	?DISK$CTL	;ELSE MAKE SURE WE DON'T TRY TO STEP PAST TRK-0
0575  E602    		ANI	0010B	;INTO "NEGATIVE TRACKS"
0577  C0      		RNZ
0578  3A0E00  	NOTOUT: LDA	?CTL$BYTE
057B  B1      		ORA	C
057C  CD9E05  		CALL	DISK$CTLR
057F  F640    		ORI	01000000B	;STEP BIT
0581  CD9E05  		CALL	DISK$CTLR
0584  E6BF    		ANI	10111111B	;STEP BIT OFF
0586  CD9E05  		CALL	DISK$CTLR
0589  3AF505  		LDA	ASTEPR	;TIME FOR HEAD TO STEP
058C  C32D04  		JMP	PAUSE
		
058F          	CONVERT:
058F  0E00    		MVI	C,00000000B	;SIDE 0
0591  2AD300  		LHLD	TPS	;TPS AND TPS2
0594  BD      		CMP	L	;ACCESS TO SECOND SIDE??
0595  D8      		RC	;IF NOT, QUIT HERE
0596  95      		SUB	L	;PUT TRACK NUMBER IN PROPER RANGE
0597  2F      		CMA
0598  3C      		INR	A	;NEGATE TRACK NUMBER FOR COMPUTATION
0599  84      		ADD	H	;EFFECT: SUBTRACT TRACK FROM "TPS2"
059A  3D      		DCR	A	; -1 BECAUSE TRACKS ARE NUMBERED 0-N
059B  0E40    		MVI	C,01000000B	;BIT TO SELECT SECOND SIDE
059D  C9      		RET
		
059E          	DISK$CTLR:
059E  D37F    		OUT	?DISK$CTL
05A0  F5      		PUSH	PSW
05A1  4F      		MOV	C,A
05A2  E610    		ANI	00010000B	;MOTOR BIT
05A4  CABC05  		JZ	MT$ON
05A7  F3      		DI
05A8  3A0906  		LDA	MOTOR$TIMER
05AB  B7      		ORA	A
05AC  3E28    		MVI	A,?MOTOR$TIME
05AE  320906  		STA	MOTOR$TIMER
05B1  320806  		STA	SEL$TIMER
05B4  C2BC05  		JNZ	MT$ON
05B7  3E02    		MVI	A,?MTRDLY
05B9  CD2804  		CALL	PAUSE5
05BC  79      	MT$ON	MOV	A,C
05BD  E60E    		ANI	00001110B	;SELECT BITS
05BF  CAD405  		JZ	NOT$ON
05C2  F3      		DI
05C3  3A0806  		LDA	SEL$TIMER
05C6  B7      		ORA	A
05C7  3E04    		MVI	A,?SEL$TIME
05C9  320806  		STA	SEL$TIMER
05CC  C2D405  		JNZ	NOT$ON
05CF  3E19    		MVI	A,?SEL
05D1  CD2D04  		CALL	PAUSE
05D4  F1      	NOT$ON	POP	PSW
05D5  FB      		EI
05D6  C9      		RET
		
05D7          	TIME$OUT:
05D7  210906  		LXI	H,MOTOR$TIMER
05DA  35      		DCR	M
05DB  FAEB05  		JM	MOTOR$OFF
05DE  2B      		DCX	H
05DF  35      		DCR	M
05E0  F0      		RP
05E1          	SEL$OFF:
05E1  3A0E00  		LDA	?CTL$BYTE
05E4  E6F1    		ANI	11110001B
05E6  D37F    		OUT	?DISK$CTL
05E8  3600    		MVI	M,0
05EA  C9      		RET
		
05EB          	MOTOR$OFF:
05EB  3600    		MVI	M,0
05ED  3A0E00  		LDA	?CTL$BYTE
05F0  E6E1    		ANI	11100001B
05F2  D37F    		OUT	?DISK$CTL
05F4  C9      		RET
		
05F5  00      	ASTEPR: DB	0	;STEP RATE (CONVERTED FROM MODE BYTES)
05F6  00      	WRTYPE: DB	0
05F7  00      	PNDWRT	DB	0
05F8  00      	BLKSEC	DB	0
05F9  00      	RD$FLAG DB	0
05FA  00      	OFFSET	DB	0
05FB  00      	UNALLOC DB	0
05FC  00      	BLKMSK	DB	0
05FD  0000    	URECORD DW	0
05FF  00      	BLCODE	DB	0
0600  0000    	MODES	DW	0
0602  0000    	DPBA	DW	0
0604  0000    	DPHA	DW	0
		
0606  04      	DRIVE	DB	4	;CURRENTLY SELECTED DRIVE (IN HARDWARE)
0607  FF      	TRACK	DB	0FFH	;CURRENT HEAD POSITION FOR CURRENT DRIVE
0608  01      	SEL$TIMER	DB	1
0609  01      	MOTOR$TIMER	DB	1
060A  00      	SELRR	DB	0
060B  00      	TEC	DB	0
060C  00      	SEC	DB	0
060D  00      	CEC	DB	0
		
060E  00      	SSC	DB	0
		
060F  0000    	SIDE	DB	0,0	;SIDE/TRACK NUMBERS FOR COMPARE TO SECTOR-HEADER
		
0611  FFFFFFFF	TRKA:	DB	255,255,255,255,0	;CURRENT HEAD POSITION FOR EACH DRIVE
      00
		
0616  0000    	SAVE$IX DW	0
0618  0000    	SAVE$IY DW	0
		
061A  00      	REQDSK: DB	0
061B  00      	REQTRK: DB	0
061C  00      	REQSEC: DB	0
		
061D  FF      	HSTDSK: DB	0FFH
061E  FF      	HSTTRK: DB	0FFH
061F  FF      	HSTSEC: DB	0FFH
		
0620  00000000		REPT	(($+0FFH) AND 0FF00H)-$
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
		
0700          	MODLEN	EQU	$-MBASE
0700  24800000	 DB 00100100B,10000000B,00000000B,00000000B,00000000B,00000000B,00000101B,01010000B
      00000550
0708  05500550	 DB 00000101B,01010000B,00000101B,01010000B,00000000B,00000000B,00000000B,00000000B
      00000000
0710  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
0718  00000102	 DB 00000000B,00000000B,00000001B,00000010B,00100010B,01000100B,10000000B,00100010B
      22448022
0720  00201040	 DB 00000000B,00100000B,00010000B,01000000B,10000010B,00000000B,00000100B,00010000B
      82000410
0728  40848044	 DB 01000000B,10000100B,10000000B,01000100B,10000100B,01000100B,00010000B,00001000B
      84441008
0730  00000248	 DB 00000000B,00000000B,00000010B,01001000B,10000010B,01000100B,10001000B,00000000B
      82448800
0738  20010891	 DB 00100000B,00000001B,00001000B,10010001B,00000001B,00010001B,00100000B,00010010B
      01112012
0740  02220244	 DB 00000010B,00100010B,00000010B,01000100B,00000100B,00100100B,00000001B,00001001B
      04240109
0748  04042409	 DB 00000100B,00000100B,00100100B,00001001B,00100000B,00000100B,10000000B,00000001B
      20048001
0750  12404482	 DB 00010010B,01000000B,01000100B,10000010B,00100000B,01001000B,00000010B,00010001B
      20480211
0758  08440104	 DB 00001000B,01000100B,00000001B,00000100B,00001001B,00100100B,01000000B,10010000B
      09244090
0760  89092020	 DB 10001001B,00001001B,00100000B,00100000B,00000010B,01001001B,00100100B,10010000B
      02492490
0768  04820080	 DB 00000100B,10000010B,00000000B,10000000B,10001000B,00100010B,00000100B,10010010B
      88220492
0770  08100221	 DB 00001000B,00010000B,00000010B,00100001B,00000100B,00001001B,00100100B,10010010B
      04092492
0778  02400000	 DB 00000010B,01000000B,00000000B,00000000B,00000000B,00001000B,00000010B,01001000B
      00080248
0780  92222020	 DB 10010010B,00100010B,00100000B,00100000B,00010000B,00000000B,00000000B,01000000B
      10000040
0788  00424812	 DB 00000000B,01000010B,01001000B,00010010B,00000000B,00001000B,00000000B,00010000B
      00080010
0790  00000000	 DB 00000000B,00000000B,00000000B,00000000B,10010000B,00001000B,10000100B,00100001B
      90088421
0798  02402000	 DB 00000010B,01000000B,00100000B,00000000B,01001000B,00010000B,00100000B,00000000B
      48102000
07A0  00000010	 DB 00000000B,00000000B,00000000B,00010000B,00010010B,00010010B,00000000B,00000000B
      12120000
07A8  88100040	 DB 10001000B,00010000B,00000000B,01000000B,10010000B,00010010B,00000000B,00000010B
      90120002
07B0  10921000	 DB 00010000B,10010010B,00010000B,00000000B,00000010B,00100000B,10010010B,00010000B
      02209210
07B8  44121044	 DB 01000100B,00010010B,00010000B,01000100B,00000000B,00000000B,00000000B,00000000B
      00000000
07C0  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
07C8  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
07D0  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
07D8  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
		
		********************************************************
		** COMMON BUFFERS
		********************************************************
C000          		ORG	COMBUF
C000          		DS	20
C014          		DS	64
C054          		DS	2
C056          	DIRBUF	DS	128
		********************************************************
		
		********************************************************
		** MINI-FLOPPY BUFFERS
		********************************************************
F000          		ORG	BUFFER
F000          	HSTBUF: DS	256
		
F100          	CSV0	DS	16
F110          	CSV1	DS	16
F120          	CSV2	DS	16
F130          	ALV0	DS	24
F148          	ALV1	DS	24
F160          	ALV2	DS	24
		**********************************************************
0178          	BUFLEN	EQU	$-BUFFER
F178          		END



Statistics:

     4	passes
     0	jr promotions
   183	symbols
  2030	bytes

   422	macro calls
  3756	macro bytes
     0	invented symbols
