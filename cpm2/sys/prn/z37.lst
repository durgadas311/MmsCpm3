2035          	VERS	EQU	'5 '		; November 2, 1982  13:24  klf	"Z37.ASM"
		; Step rate bug fixed
		**********************************************************
		;	Disk I/O module for MMS CP/M 2.24
		;	on the Heath/Zenith 89
		;	for the Zenith Z37 controller
		;	Copyright (c) 1981 Magnolia Microsystems
		;*********************************************************
0000  0007C805		DW	modlen,buflen
		 
0000          	BASE	EQU	0000H		; ORG FOR RELOCATION
						; alternate 0 and 100h.
		
			MACLIB Z80
**** Z80.lib ****
**** z37.asm ****
			$-MACRO
		;---------------------------------------------------------
		;
		;	Physical drives are assigned as follows:
		;
		;	46 - 1st Z37 drive
		;	47 - 2nd Z37 drive
		;	48 - 3rd Z37 drive
		;	49 - 4th Z37 drive
		;
		;---------------------------------------------------------
		;	Ports and Constants
		;---------------------------------------------------------
		;  PORT ASSIGNMENTS
0078          	FD$BASE EQU	078H		; BASE PORT ADDRESS
0078          	FD$CON	EQU	FD$BASE 	; DISK CONTROL PORT
0079          	FD$INT	EQU	FD$BASE+1	; INTERFACE MUX PORT
007A          	FD$CMD	EQU	FD$BASE+2	; 1797 COMMAND REGISTER
007A          	FD$STA	EQU	FD$BASE+2	;      STATUS REGISTER
007B          	FD$DAT	EQU	FD$BASE+3	;      DATA REGISTER
007A          	FD$SEC	EQU	FD$BASE+2	;      SECTOR REGISTER
007B          	FD$TRK	EQU	FD$BASE+3	;      TRACK REGISTER
		
		;  INTERFACE MUX PORT FLAGS
0000          	FD$CD	EQU	0		; ACCESS C/D REGISTERS
0001          	FD$TS	EQU	1		; ACCESS T/S REGISTERS
		
		;  COMMANDS
0000          	FDCRST	EQU	000H		; RESTORE
0010          	FDCSEK	EQU	010H		; SEEK
0020          	FDCSTP	EQU	020H		; STEP
0040          	FDCSTI	EQU	040H		; STEP IN
0060          	FDCSTO	EQU	060H		; STEP OUT
0080          	FDCRDS	EQU	080H		; READ SECTOR
00A0          	FDCWRS	EQU	0A0H		; WRITE SECTOR
00C0          	FDCRDA	EQU	0C0H		; READ ADDRESS
00E0          	FDCRDT	EQU	0E0H		; READ TRACK
00F0          	FDCWRT	EQU	0F0H		; WRITE TRACK
00D0          	FDCFI	EQU	0D0H		; FORCE INTERRUPT
		
		;  TYPE 1 COMMAND FLAGS
0010          	FDFUTR	EQU	00010000B	; UPDATE TRACK REGISTER
0008          	FDFHLB	EQU	00001000B	; HEAD LOAD AT BEGINNING
0004          	FDFVRF	EQU	00000100B	; VERIFY FLAGS
		
		;  TYPE 1 COMMAND STEP RATE FLAGS
0000          	FDFS6	EQU	00000000B	; STEP RATE 6 MS
0001          	FDFS12	EQU	00000001B	;	   12
0002          	FDFS20	EQU	00000010B	;	   20
0003          	FDFS30	EQU	00000011B	;	   30
		
		;  TYPE 2&3 COMMAND FLAGS
0010          	FDFMRF	EQU	00010000B	; MULTIPLE RECORD FLAG
0008          	FDFSLF	EQU	00001000B	; SECTOR LENGTH FLAG
0004          	FDFDLF	EQU	00000100B	; 30 MS DELAY
0002          	FDFSS1	EQU	00000010B	; SELECT SIDE 1
0001          	FDFDDM	EQU	00000001B	; DELETED DATA MARK
		
		;  TYPE 4 COMMAND FLAGS
0000          	FDFINI	EQU	00000000B	; TERMINATE WITH NO INTERRUPT
0001          	FDFII0	EQU	00000001B	; NOT READY TO READY TRANSITION
0002          	FDFII1	EQU	00000010B	; READY TO NOT READY TRANSITION
0004          	FDFII2	EQU	00000100B	; INDEX PULSE
0008          	FDFII3	EQU	00001000B	; IMMEDIATE INTERRUPT
		
		;  STATUS FLAGS
0080          	FDSNRD	EQU	10000000B	; NOT READY
0040          	FDSWPV	EQU	01000000B	; WRITE PROTECT VIOLATION
0020          	FDSHLD	EQU	00100000B	; HEAD IS LOADED
0020          	FDSRTE	EQU	00100000B	; RECORD TYPE
0020          	FDSWTF	EQU	00100000B	; WRITE FAULT
0010          	FDSSEK	EQU	00010000B	; SEEK ERROR
0010          	FDSRNF	EQU	00010000B	; RECORD NOT FOUND
0008          	FDSCRC	EQU	00001000B	; CRC ERROR
0004          	FDSTK0	EQU	00000100B	; FOUND TRACK 0
0004          	FDSLDT	EQU	00000100B	; LOST DATA
0002          	FDSIND	EQU	00000010B	; INDEX HOLE
0001          	FDSBSY	EQU	00000001B	; BUSY
		
		;  INFO RETURNED BY A READ ADDRESS COMMAND
0000          	FDRATRK EQU	0		; TRACK
0001          	FDRASID EQU	1		; SIDE
0002          	FDRASEC EQU	2		; SECTOR
0003          	FDRASL	EQU	3		; SECTOR LENGTH
0004          	FDRACRC EQU	4		; 2 BYTE CRC
0006          	FDRAL	EQU	6		; LENGTH OF READ ADDRESS INFO
		
		;  DISK HEADER SECTOR LENGTH VALUES
0000          	FDSL128 EQU	0		; SECTOR LENGTH 128
0001          	FDSL256 EQU	1		; SECTOR LENGTH 256
0002          	FDSL512 EQU	2		; SECTOR LENGTH 512
0003          	FDSL1K	EQU	3		; SECTOR LENGTH 1024
		
		;  CONTROL REGISTER FLAGS
0001          	CONIRQ	EQU	00000001B	; ENABLE INT REQ
0002          	CONDRQ	EQU	00000010B	; ENABLE DRQ INT / DISABLE SYSTEM INT
0004          	CONMFM	EQU	00000100B	; ENABLE MFM
0008          	CONMO	EQU	00001000B	; MOTOR(S) ON
0010          	CONDS0	EQU	00010000B	; DRIVE 0
0020          	CONDS1	EQU	00100000B	; DRIVE 1
0040          	CONDS2	EQU	01000000B	; DRIVE 2
0080          	CONDS3	EQU	10000000B	; DRIVE 3
		
		;  DISK PARAMETER ENTRY DESCRIPTION
000A          	DPHDPB	EQU	10		; DISK PARAMETER BLOCK ADDRESS
		
		;  HEATH EXTENSIONS
0060          	DPEH37	EQU	01100000B	; H37
0008          	DPEHL	EQU	8		; LENGTH OF HEATH EXTENSION
		
		; MODE BYTES
0004          	MOD48RO EQU	00000100B	; BIT 2 -- 48 TPI MEDIA IN 96 TPI DRIVE (R/O)
0040          	MODEDD	EQU	01000000B	; BIT 6 -- 0=SINGLE DENSITY 1=DOUBLE
0001          	MODE2S	EQU	00000001B	; BIT 0 -- 0=SINGLE DENSITY 1=DOUBLE
0080          	TRKUNK	EQU	10000000B	; TRACK POSITION UNKNOWN
		
		;  DISK PARAMETER BLOCK
000F          	DPBL	EQU	15		; LENGTH OF DISK PARAMETER BLOCK
		
		;  DISK LABEL DEFINITIONS
0000          	LABVER	EQU	0		; CURRENT FORM # FOR LABEL
0000          	LABBUF	EQU	0		; SLOT FOR JUMP INSTRUCTION AROUND LABEL
0004          	LABEL	EQU	LABBUF+4
0004          	LABTYP	EQU	LABEL+0 	; SLOT FOR LABEL TYPE
0005          	LABHTH	EQU	LABTYP+1	; SLOT FOR HEATH EXTENSIONS TO DPE
000D          	LABDPB	EQU	LABHTH+DPEHL	; SLOT FOR DISK PARAMETER BLOCK
001C          	LABCS	EQU	LABDPB+DPBL	; CHECKSUM
0019          	LABLEN	EQU	LABCS-LABEL+1	; LABEL LENGTH
		
		;  MISCELLANEOUS VALUES
0014          	FDHDD	EQU	20
060F          	DELAY37 EQU	6*256+15	; DESELECT AND MOTOR TURN OFF DELAY
0020          	H37VEC	EQU	8*4		; LEVEL 4 INTERRUPT
0023          	DLYMO37 EQU	H37VEC+3	; MOTOR TURN OFF DELAY COUNTER
0024          	DLYH37	EQU	H37VEC+4	; DESELECT DELAY COUNTER
0025          	H37CTL	EQU	H37VEC+5	; H37 CONTROL REGISTER IMAGE
0026          	H37IRET EQU	H37VEC+6	; WHERE TO GO AFTER INTERRUPT ADDRESS
		
00F2          	PORT	EQU	0F2H		; Z89 INTERRUPT CONTROL
00E8          	PORT1	EQU	0E8H		; SERIAL PORT #1
00E0          	PORT2	EQU	0E0H		; SERIAL PORT #2
00D8          	PORT3	EQU	0D8H		; SERIAL PORT #3
00D0          	PORT4	EQU	0D0H		; SERIAL PORT #4
		
002E          	driv0	equ	46		; first drive in system
0004          	ndriv	equ	4		; # of drives is system
0010          	DPHL	EQU	16		; LENGTH OF DISK PARAMETER HEADER
000F          	DPBL	EQU	15		; LENGTH OF DISK PARAMETER BLOCK
000A          	DPHDPB	EQU	10		; LOCATION OF DPB ADDRESS WITHIN DPH
0004          	MOD48RO EQU	00000100B	; 48 TPI DISK IN 96 TPI DRIVE (R/O)
0040          	MODEDD	EQU	01000000B	; DOUBLE DENSITY
0019          	LABLEN	EQU	19H		; LENGTH OF Z37 DISK LABEL
0004          	LABEL	EQU	04H		; POSITION OF LABEL IN SECTOR 0
0005          	LABHTH	EQU	05H		; START OF "HEATH EXTENSION" IN SECTOR 0
0001          	MODE2S	EQU	00000001H	; DOUBLE SIDED
000D          	LABDPB	EQU	0DH		; START OF DPB IN SECTOR 0
0000          	LABVER	EQU	00		; LABEL VERSION NUMBER
0060          	DPEH37	EQU	60H		; I.D.
		;--------------------------------------------------------
		;	Links to rest of system
		;--------------------------------------------------------
1600          	PATCH	EQU	BASE+1600H	; Points linker to BIOS overlay operation
0000          	MBASE	EQU	BASE		; Base address for module (0h or 0100h)
C000          	COMBUF	EQU	BASE+0C000H	; points linker to Common Buffer area
F000          	BUFFER	EQU	BASE+0F000H	; points linker to Module buffer area
		
		;-------------------------------------------------------
		;	Standard CP/M page-zero assignments
		;-------------------------------------------------------
0000          		ORG	0
0000          	?CPM		DS	3	; Jump to warm boot routine in BIOS
0003          	?DEV$STAT	DS	1	; Iobyte
0004          	?LOGIN$DSK	DS	1	; High nybble = user #, low = Drive
0005          	?BDOS		DS	3	; Jump to BDOS call 5 routines.
0008          	?RST1		DS	3	; Clock servicing routine vector
000B          	?CLOCK		DS	2	; Timer values
000D          	?INT$BYTE	DS	1
000E          	?CTL$BYTE	DS	1
000F          			DS	1
0010          	?RST2		DS	8
0018          	?RST3		DS	8
0020          	?RST4		DS	8
0028          	?RST5		DS	8
0030          	?RST6		DS	8	; Interrupt routine for DD board
0038          	?RST7		DS	8
0040          			DS	28
005C          	?FCB		DS	36
0080          	?DMA		DS	128
		?TPA		DS	0
		
		;-------------------------------------------------------
		;	Overlay module information on BIOS
		;-------------------------------------------------------
1600          		ORG	PATCH
1600          		DS	51		;JUMP TABLE
1633          	DSK$STAT:
1633          		DS	1		; FDC status byte from last disk I/O
1634          	STEPR:	DS	1		; MIMI-FLOPPY STEP-RATE
1635          	SIDED:	DS	3		; CONFIG CONTROL FOR DRIVES
1638          		DS	4		; FOR EIGHT-INCH REMEX
163C  2E2F3031	MIXER:	DB	46,47,48,49
1640          		DS	12
164C          	DRIVE$BASE:
164C  2E32    		DB	46,50		; first drive, last drive+1
164E  0000    		DW	MBASE		; start of module
1650          		DS	28
		
166C          	TIME$OUT:
166C          		DS	3
166F          	NEWBAS	DS	2
1671          	NEWDSK	DS	1
1672          	NEWTRK	DS	1
1673          	NEWSEC	DS	1
1674          	HRDTRK	DS	2
1676          	DMAA	DS	2
		
		;-------------------------------------------------------
		;	Start of relocatable disk I/O module.
		;-------------------------------------------------------
0000          		ORG	MBASE		; START OF MODULE
		
0000  C3EB00  		JMP	SEL$Z37
0003  C36002  		JMP	READ$Z37
0006  C36B02  		JMP	WRITE$Z37
		
0009  5A38392D		DB	'Z89-37',0,'Double Density Controller ',0,'2.24'
      33370044
      6F75626C
      65204465
      6E736974
      7920436F
      6E74726F
      6C6C6572
      2000322E
      3234
002F  3520    		DW	VERS
0031  24      		DB	'$'
0032          	DPH:
0032  00000000		DW	0,0,0,0,DIRBUF,DPB46,CSV46,ALV46
      00000000
      56C07200
      00F440F4
0042  00000000		DW	0,0,0,0,DIRBUF,DPB47,CSV47,ALV47
      00000000
      56C08700
      72F4B2F4
0052  00000000		DW	0,0,0,0,DIRBUF,DPB48,CSV48,ALV48
      00000000
      56C09C00
      E4F424F5
0062  00000000		DW	0,0,0,0,DIRBUF,DPB49,CSV49,ALV49
      00000000
      56C0B100
      56F596F5
		
0072  2400    	DPB46:	DW	36		; SECTORS PER TRACK
0074  040F01  		DB	4,15,1		; BSH,BSM,EXM
0077  52005F00		DW	83-1,96-1	; DSM-1,DRM-1
007B  C000    		DB	11000000B,0	; AL0,AL1
007D  18000300		DW	24,3		; CKS,OFF
0081  026300  		DB	00000010B,01100011B,00000000B	; MODE BYTES
0084  C08407  		DB	11000000B,10000100B,00000111B	; MODE MASKS
		
0087  2400    	DPB47:	DW	36		; SECTORS PER TRACK
0089  040F01  		DB	4,15,1		; BSH,BSM,EXM
008C  52005F00		DW	83-1,96-1	; DSM-1,DRM-1
0090  C000    		DB	11000000B,0	; AL0,AL1
0092  18000300		DW	24,3		; CKS,OFF
0096  026300  		DB	00000010B,01100011B,00000000B	; MODE BYTES
0099  C08407  		DB	11000000B,10000100B,00000111B	; MODE MASKS
		
009C  2400    	DPB48:	DW	36		; SECTORS PER TRACK
009E  040F01  		DB	4,15,1		; BSH,BSM,EXM
00A1  52005F00		DW	83-1,96-1	; DSM-1,DRM-1
00A5  C000    		DB	11000000B,0	; AL0,AL1
00A7  18000300		DW	24,3		; CKS,OFF
00AB  026300  		DB	00000010B,01100011B,00000000B	; MODE BYTES
00AE  C08407  		DB	11000000B,10000100B,00000111B	; MODE MASKS
		
00B1  2400    	DPB49:	DW	36		; SECTORS PER TRACK
00B3  040F01  		DB	4,15,1		; BSH,BSM,EXM
00B6  52005F00		DW	83-1,96-1	; DSM-1,DRM-1
00BA  C000    		DB	11000000B,0	; AL0,AL1
00BC  18000300		DW	24,3		; CKS,OFF
00C0  026300  		DB	00000010B,01100011B,00000000B	; MODE BYTES
00C3  C08407  		DB	11000000B,10000100B,00000111B	; MODE MASKS
		
		**************************************************************************
		;									 *
		; INIT$COMBO -- SETS UP JUMP TO INTERRUPT ROUTINE IN PAGE 0 OF MEMORY;	 *
		;   AND JUMP TO Z37 MOTOR TIME OUT ROUTINE IN BIOS OVERLAY AREA 	 *
		;*************************************************************************
		 
00C6          	INIT$Z37:
00C6  3E01    		MVI	A,1		; FLAG DRIVER AS INITIALIZED
00C8  329606  		STA	INIT$FLAG
		
00CB  3EC3    		MVI	A,(JMP) 	; INSTALL H37 INTERRUPT ROUTINE
00CD  213006  		LXI	H,H37ISR
00D0  322000  		STA	H37VEC
00D3  222100  		SHLD	H37VEC+1
		
00D6  216C16  		LXI	H,TIME$OUT	; MOVE JUMP TO Z17 TIME OUT ROUTINE
00D9  117806  		LXI	D,TIME$Z17
00DC  010300  		LXI	B,3
00DF  EDB0    		LDIR
00E1  214E06  		LXI	H,MTRDLY	; INSTALL Z37 TIME OUT ROUTINE
00E4  226D16  		SHLD	TIME$OUT+1
00E7  326C16  		STA	TIME$OUT	; ACC. STILL CONTAINS (JMP)
00EA  C9      		RET
		
00EB          	SEL$Z37:
00EB  3A9406  		LDA	PNDWRT		; CLEAR ANY PENDING WRITE
00EE  B7      		ORA	A
00EF  C44103  		CNZ	WR$SEC
00F2  3A9606  		LDA	INIT$FLAG	; INITIALIZE DRIVER IF THIS IS FIRST CALL
00F5  B7      		ORA	A
00F6  CCC600  		CZ	INIT$Z37
00F9  AF      		XRA	A
00FA  329806  		STA	SELERR		; NO SELECT ERROR (YET)
00FD  327B06  		STA	RDYFLG		; ASSUME DISK NOT READY 
0100  3A7116  		LDA	NEWDSK		; get drive select code in 'A'.
0103  D62E    		SUI	DRIV0		; relate drive number to 0
0105  328406  		STA	RELDSK		; SAVE IT
0108  212200  	SEL0:	LXI	H,DPH-DPHL	; POINT TO DPH TABLE
010B  111000  		LXI	D,DPHL
010E  19      	SEL1:	DAD	D
010F  3D      		DCR	A
0110  F20E01  		JP	SEL1
0113  110A00  		LXI	D,DPHDPB
0116  19      		DAD	D		; POINT TO ADDRESS OF DPB
0117  CD2B06  		CALL	HLIHL		; POINT TO DPB
011A  229A06  		SHLD	CURDPB
011D  110F00  		LXI	D,DPBL
0120  19      		DAD	D		; POINT TO MODE BYTES
0121  228206  		SHLD	MODE		; SAVE MODE BYTE POINTER
0124  E5      		PUSH	H
0125  CD5A01  		CALL	LOGIN		; HAS DISK BEEN LOGGED IN ?
0128  D48301  		CNC	PHYSEL
012B  E1      		POP	H		; GET MODE BYTE 1
012C  23      		INX	H
012D  3E28    		MVI	A,40		; 40 TRACKS PER SIDE
012F  CB5E    		BIT	3,M		;  FOR SINGLE TRACK
0131  2801    		JRZ	STRK		;  80 FOR DOUBLE TRACK
0133  87      		ADD	A
0134  327D06  	STRK:	STA	TPS
		; CALCULATE DEBLOCKING PARAMETERS
0137  2A9A06  		LHLD	CURDPB		; GET DPB ADDRESS
013A  23      		INX	H
013B  23      		INX	H
013C  23      		INX	H
013D  7E      		MOV	A,M		; GET BLOCK MASK
013E  328C06  		STA	BLKMSK		; SAVE IT
0141  110A00  		LXI	D,10
0144  19      		DAD	D
0145  7E      		MOV	A,M		; GET TRACK OFFSET
0146  329706  		STA	OFFSET		; SAVE IT
0149  2A8206  		LHLD	MODE
014C  7E      		MOV	A,M
014D  E603    		ANI	03H		; ISOLATE SECTOR SIZE BITS
014F  329506  		STA	BLCODE		; STARE AS DEBLOCK CODE
		; RETURN TO BIOS
0152  3A8406  		LDA	RELDSK
0155  4F      		MOV	C,A		; RESTORE PHYSICAL DRIVE #
0156  113200  		LXI	D,DPH		; SELDSK NEEDS START OF DPH TABLE
0159  C9      		RET
		
015A  3A7116  	LOGIN:	LDA	NEWDSK		; CHECK FOR DISK LOGGED IN
015D  011100  		LXI	B,17
0160  213C16  		LXI	H,MIXER
0163  EDB1    		CCIR
0165  3E11    		MVI	A,17
0167  91      		SUB	C
0168  47      		MOV	B,A
0169  210016  		LXI	H,PATCH
016C  11890D  		LXI	D,0D89H
016F  B7      		ORA	A
0170  ED52    		DSBC	D
0172  CD2B06  		CALL	HLIHL
0175  23      		INX	H
0176  CD2B06  		CALL	HLIHL
0179  CD2B06  		CALL	HLIHL
017C  CB1C    	ROTHL:	RARR	H
017E  CB1D    		RARR	L
0180  10FA    		DJNZ	ROTHL
0182  C9      		RET
		;--------------------------------------------------------------------------
		; PHYSICAL SELECT ROUTINE -- TO READ DISK LABEL, GET MODE AND DPB INFO,
		;   AND CHECK FOR HALF-TRACK
		;--------------------------------------------------------------------------
0183  2A8206  	PHYSEL: LHLD	MODE		; DO WE NEED TO READ THE LABEL ?
0186  CB66    		BIT	4,M
0188  CA1402  		JZ	PHYSEL3 	;  GO ON IF NOT
018B  3A7116  		LDA	NEWDSK
018E  328D06  		STA	HSTDSK
0191  AF      		XRA	A
0192  328E06  		STA	HSTTRK		; TRACK 0
0195  328F06  		STA	HSTSEC		; SECTOR 0
0198  329906  		STA	SELOP		; FLAG A SELECT OPERATION
019B  32A006  		STA	MODFLG		; RESET CHANGED MODE FLAG
019E  3E05    		MVI	A,5		; 5 RETRYS FOR A SELECT OPERATION
01A0  327F06  		STA	RETRYS
01A3  CD5E03  		CALL	READ		; TRY READING LABEL AT DENSITY
						; CURRENTLY INDICATED IN TABLES
01A6  2819    		JRZ	PHYSEL1 	; BR IF SUCCESSFUL
01A8  3E05    		MVI	A,5		; RESET RETRYS TO 5
01AA  327F06  		STA	RETRYS
01AD  32A006  		STA	MODFLG		; SET CHANGED MODE FLAG
01B0  2A8206  		LHLD	MODE
01B3  23      		INX	H		; POINT TO MODE BYTE 2
01B4  7E      		MOV	A,M		; TRY OTHER DENSITY
01B5  EE40    		XRI	MODEDD
01B7  77      		MOV	M,A
01B8  CDE805  		CALL	ON$H37		; THIS SETS DENSITY ACCORDING TO MODE BYTE
01BB  CD5E03  		CALL	READ		; TRY TO READ LABEL
01BE  C24E02  		JNZ	PHYSEL5 	; ERROR
01C1  AF      	PHYSEL1:XRA	A		; ZERO ACCUM.
01C2  0619    		MVI	B,LABLEN	; GET LENGTH OF LABEL
01C4  2104F0  		LXI	H,HSTBUF+LABEL
01C7  86      	CHKLAB1:ADD	M
01C8  23      		INX	H
01C9  10FC    		DJNZ	CHKLAB1
01CB  3C      		INR	A
01CC  2809    		JRZ	PHYSEL2 	; BR IF CORRECT CHECKSUM
01CE  3AA006  		LDA	MODFLG
01D1  B7      		ORA	A		; MODE BEEN CHANGED ?
01D2  C25302  		JNZ	PHYSEL6 	;  THEN ERROR
01D5  183D    		JR	PHYSEL3 	; OTHERWISE DONE, KEEPING OLD MODE BYTES
		
		;
		;  EXTRACT MODE INFORMATION FROM LABEL
		;
01D7          	PHYSEL2:
01D7  2A8206  		LHLD	MODE		; HL POINTS TO MODE BYTE
01DA  1105F0  		LXI	D,HSTBUF+LABHTH ; DE POINTS TO HEATH EXTENSION IN LABEL
01DD  1A      		LDAX	D		; GET FIRST BYTE OF HEATH EXTENSION
01DE  0618    		MVI	B,00011000B	; Z37 DOUBLE DENSITY FORMAT
01E0  0E01    		MVI	C,00000001B	; 256 BYTES PER SECTOR
01E2  CB57    		BIT	2,A		; GET EXTENDED DOUBLE DENSITY BIT
01E4  2804    		JRZ	GETSID
01E6  0630    		MVI	B,00110000B	; Z37 EXTENDED DOUBLE DENSITY FORMAT
01E8  0E03    		MVI	C,00000011B	; 1024 BYTES PER SECTOR
01EA  E601    	GETSID: ANI	00000001B	; GET SIDED BIT
01EC  0F      		RRC
01ED  0F      		RRC
01EE  0F      		RRC			; MOVE TO BIT POSITION 5
01EF  B1      		ORA	C		; OR IN SECTOR SIZE BITS
01F0  F614    		ORI	00010100B	; OR IN OTHER Z37 RELATED BITS
01F2  77      		MOV	M,A		; SAVE NEW MODE BYTE 1
01F3  23      		INX	H		; POINT TO MODE BYTE 2
01F4  0E00    		MVI	C,0		; BITS FOR SINGLE DENSITY
01F6  1A      		LDAX	D
01F7  CB4F    		BIT	1,A		; GET DOUBLE DENSITY BIT
01F9  2802    		JRZ	SDEN
01FB  0E60    		MVI	C,01100000B	; DOUBLE DENSITY
01FD  E608    	SDEN:	ANI	00001000B	; GET TRACK DENSITY BIT
01FF  B1      		ORA	C		; OR IN SECTOR SIZE BITS
0200  4F      		MOV	C,A
0201  7E      		MOV	A,M		; GET MODE BYTE 2
0202  E603    		ANI	00000011B	; KEEP STEP RATE BITS
0204  B1      		ORA	C		; OR IN NEW BITS
0205  77      		MOV	M,A		; SAVE NEW MODE BYTE 2
0206  23      		INX	H		; POINT TO MODE BYTE 3
0207  70      		MOV	M,B		; SAVE NEW MODE BYTE 3
		;
		;		MOVE LABEL INFO TO DISK PARAMETER BLOCK.
		;
0208  ED5B9A06		LDED	CURDPB		; GET DPB ADDRESS
020C  210DF0  		LXI	H,HSTBUF+LABDPB ; GET ADDRESS OF INFO IN LABEL
020F  010F00  		LXI	B,DPBL		; COUNT TO MOVE
0212  EDB0    		LDIR			; MOVE INFO
		;
		; CHECK FOR HALF-TRACK
		;
0214  CD7A05  	PHYSEL3:CALL	SELECT
0217  383A    		JRC	PHYSEL6 	; ERROR IF NOT READY
0219  CD1C05  		CALL	HOME		;RESTORE HEAD TO TRACK 0
021C  3835    		JRC	PHYSEL6
021E  0648    		MVI	B,FDCSTI+FDFHLB ;STEP IN, NO UPDATE
0220  CD5505  		CALL	TYPE$I
0223  CD5505  		CALL	TYPE$I		;STEP IN TWICE
0226  3EC0    		MVI	A,FDCRDA	; READ ADDRESS
0228  CD5905  		CALL	PUT$I
022B  E618    		ANI	FDSRNF+FDSCRC
022D  2024    		JRNZ	PHYSEL6
022F  3E01    		MVI	A,FD$TS 	; SELECT SECTOR REGISTER
0231  D379    		OUT	FD$INT
0233  DB7A    		IN	FD$SEC
0235  FE02    		CPI	2
0237  280E    		JRZ	PHYSEL4
0239  FE01    		CPI	1
023B  2016    		JRNZ	PHYSEL6
023D  2A8206  		LHLD	MODE
0240  23      		INX	H		; MODE BYTE 2
0241  CB5E    		BIT	3,M		; IS MODE SET TO DOUBLE TRACK ?
0243  200E    		JRNZ	PHYSEL6 	; ERROR BECAUSE WRONG DPB IS INSTALLED
0245  CBE6    		SETB	4,M		; SET HALF TRACK BIT
0247          	PHYSEL4:			; RESTORE
0247  CD1C05  		CALL	HOME  
024A  3807    		JRC	PHYSEL6
024C  180A    		JR	PHYSEL7
		
024E  3EFF    	PHYSEL5:MVI	A,0FFH
0250  328D06  		STA	HSTDSK		; FLAG BUFFER AS UNKNOWN
0253  3E01    	PHYSEL6:MVI	A,1
0255  329806  		STA	SELERR		; FLAG A SELECT ERROR
0258  3EFF    	PHYSEL7:MVI	A,0FFH
025A  329906  		STA	SELOP		; SELECT OPERATION IS OVER
025D  C34004  		JMP	DONE
		
		;-------------------------------------------------------------------------
		; HI-LEVEL READ/WRITE ROUTINES: THESE ROUTINES PERFORM DEBLOCKING AND
		;   DETERMINE WHETHER A PRE-READ IS NECESSARY BEFORE A WRITE
		;-------------------------------------------------------------------------
0000          	WRALL	EQU	0		; WRITE TO ALLOCATED
0001          	WRDIR	EQU	1		; WRITE TO DIRECTORY
0002          	WRUNA	EQU	2		; WRITE TO UNALLOCATED
0003          	READOP	EQU	3		; READ OPERATION
		
0260          	READ$Z37:
0260  3A9406  		LDA	PNDWRT		; SECTOR WAITING TO BE WRITTEN ?
0263  B7      		ORA	A
0264  C44103  		CNZ	WR$SEC
0267  3E03    		MVI	A,READOP	; FLAG A READ OPERATION
0269  1801    		JR	RWOPER
		
026B          	WRITE$Z37:
026B  79      		MOV	A,C
		
026C  328706  	RWOPER: STA	WRTYPE		; SAVE WRITE TYPE
026F  3A9806  		LDA	SELERR		; WAS THERE AN ERROR ON SELECT ?
0272  B7      		ORA	A
0273  C0      		RNZ
0274  3E15    		MVI	A,21		; 21 RETRYS FOR A READ/WRITE OPERATION
0276  327F06  		STA	RETRYS
0279  D5      		PUSH	D		; TEMPORARILY SAVE RECORD NUMBER
027A  010300  		LXI	B,3
027D  217116  		LXI	H,NEWDSK
0280  119006  		LXI	D,REQDSK
0283  EDB0    		LDIR
0285  D1      		POP	D		; RESTORE RECORD NUMBER
		;*****************************************************************************
		; DBLOCK: THIS SUBROUTINE PERFORMS THE DEBLOCKING FUNCTION.		     ;
		;	  INPUTS: NEWSEC (THE REQUESTED LOGICAL SECTOR) 		     ;
		;		  BLCODE (THE DEBLOCKING CODE DETERMINED FROM THE MODE BYTE) ;
		;	  OUTPUTS:NEWSEC (THE REQUIRED PHYSICAL SECTOR) 		     ;
		;		  BLKSEC (THE POSITION OF THE REQUESTED LOGICAL SECTOR	     ;
		;			   WITHIN THE PHYSICAL SECTOR)			     ;
		;									     ;
0286  AF      	DBLOCK: XRA	A		; CLEAR CARRY				     ;
0287  4F      		MOV	C,A		; CALCULATE PHYSICAL SECTOR		     ;
0288  3A9506  		LDA	BLCODE							     ;
028B  47      		MOV	B,A							     ;
028C  3A7316  		LDA	NEWSEC							     ;
028F  05      	DBLOK1: DCR	B							     ;
0290  FA9802  		JM	DBLOK2							     ;
0293  1F      		RAR								     ;
0294  CB19    		RARR	C							     ;
0296  18F7    		JR	DBLOK1							     ;
0298  329206  	DBLOK2: STA	REQSEC		; SAVE IT				     ;
029B  3A9506  		LDA	BLCODE		; CALCULATE BLKSEC			     ;
029E  3D      	DBLOK3: DCR	A							     ;
029F  FAA602  		JM	DBLOK4							     ;
02A2  CB01    		RLCR	C							     ;
02A4  18F8    		JR	DBLOK3							     ;
02A6  79      	DBLOK4: MOV	A,C							     ;
02A7  329306  		STA	BLKSEC		; STORE IT				     ;
		;*****************************************************************************
		
02AA  3C      		INR	A		; NON-ZERO VALUE TO ACC.
02AB  328806  		STA	RD$FLAG 	; FLAG A PRE-READ
02AE  3A8706  		LDA	WRTYPE
02B1  1F      		RAR			; CARRY IS SET ON WRDIR AND READOP
02B2  3827    		JRC	ALLOC		; NO NEED TO CHECK FOR UNALLOCATED RECORDS
02B4  1F      		RAR			; CARRY IS SET ON WRUNA
02B5  3008    		JRNC	CHKUNA
02B7  ED538906		SDED	URECORD 	; SET UNALLOCATED RECORD #
02BB  3D      		DCR	A
02BC  328B06  		STA	UNALLOC 	; FLAG WRITING OF AN UNALLOCATED BLOCK
02BF  3A8B06  	CHKUNA: LDA	UNALLOC 	; ARE WE WRITING AN UNALLOCATED BLOCK ?
02C2  B7      		ORA	A
02C3  2816    		JRZ	ALLOC
02C5  2A8906  		LHLD	URECORD 	; IS REQUESTED RECORD SAME AS EXPECTED
02C8  ED52    		DSBC	D		; SAME AS EXPECTED UNALLOCATED RECORD ?
02CA  200F    		JRNZ	ALLOC		; IF NOT, THEN DONE WITH UNALLOCATED BLOCK
02CC  AF      		XRA	A		; CLEAR PRE-READ FLAG
02CD  328806  		STA	RD$FLAG
02D0  13      		INX	D		; INCREMENT TO NEXT EXPECTED UNALLOCATED RECORD
02D1  ED538906		SDED	URECORD
02D5  3A8C06  		LDA	BLKMSK
02D8  A3      		ANA	E		; IS IT THE START OF A NEW BLOCK ?
02D9  2004    		JRNZ	CHKRD
02DB  AF      	ALLOC:	XRA	A		; NO LONGER WRITING AN UNALLOCATED BLOCK
02DC  328B06  		STA	UNALLOC
02DF          	CHKRD:				; IS SECTOR ALREADY IN BUFFER ?
		;*****************************************************************************
		; CHKSEC: THIS SUBROUTINE COMPARES THE REQUESTED DISK TRACK AND SECTOR	     ;
		;	  TO THE DISK,TRACK AND SECTOR CURRENTLY IN THE BUFFER. 	     ;
		;	  OUTPUT: ZERO FLAG SET IF SAME, RESET IF DIFFERENT		     ;
		;									     ;
02DF  217216  	CHKSEC: LXI	H,NEWTRK
02E2  3A9706  		LDA	OFFSET
02E5  BE      		CMP	M		; IS IT THE DIRECTORY TRACK ?
02E6  2005    		JRNZ	CHKBUF
02E8  23      		INX	H
02E9  7E      		MOV	A,M
02EA  B7      		ORA	A		; FIRST SECTOR OF DIRECTORY ?
02EB  2812    		JRZ	READIT 
02ED  219006  	CHKBUF: LXI	H,REQDSK						     ;
02F0  118D06  		LXI	D,HSTDSK						     ;
02F3  0603    		MVI	B,3							     ;
02F5  1A      	CHKNXT: LDAX	D							     ;
02F6  BE      		CMP	M							     ;
02F7  2006    		JRNZ	READIT
02F9  23      		INX	H							     ;
02FA  13      		INX	D							     ;
02FB  10F8    		DJNZ	CHKNXT							     ;
		;*****************************************************************************
		
02FD  1819    		JR	NOREAD		; THEN NO NEED TO PRE-READ
02FF  3A9406  	READIT: LDA	PNDWRT		; IS THERE A SECTOR THAT NEEDS TO BE WRITTEN ?
0302  B7      		ORA	A
0303  C44103  		CNZ	WR$SEC		; WRITE IT
0306  118D06  		LXI	D,HSTDSK	; SET UP NEW BUFFER PARAMETERS
0309  219006  		LXI	H,REQDSK
030C  010300  		LXI	B,3
030F  EDB0    		LDIR
0311  3A8806  		LDA	RD$FLAG 	; DO WE NEED TO PRE-READ ?
0314  B7      		ORA	A
0315  C45103  		CNZ	RD$SEC		; READ THE SECTOR
0318  2100F0  	NOREAD: LXI	H,HSTBUF	; POINT TO START OF SECTOR BUFFER
031B  018000  		LXI	B,128
031E  3A9306  		LDA	BLKSEC		; POINT TO LOCATION OF CORRECT LOGICAL SECTOR
0321  3D      	MOVIT1: DCR	A
0322  FA2803  		JM	MOVIT2
0325  09      		DAD	B
0326  18F9    		JR	MOVIT1
0328  ED5B7616	MOVIT2: LDED	DMAA		; POINT TO DMA
032C  3A8706  		LDA	WRTYPE		; IS IT A READ OR A WRITE
032F  FE03    		CPI	READOP
0331  2805    		JRZ	MOVIT3
0333  EB      		XCHG			; SWITCH DIRECTION OF MOVE FOR WRITE
0334  3C      		INR	A		; FLAG A PENDING WRITE (ANY NON-ZERO VALUE)
0335  329406  		STA	PNDWRT
0338  EDB0    	MOVIT3: LDIR			; MOVE IT
033A  FE02    		CPI	WRDIR+1 	; CHECK FOR DIRECTORY WRITE (+1 BECAUSE OF INR)
033C  CC4103  		CZ	WR$SEC		; WRITE THE SECTOR IF IT IS
033F  AF      		XRA	A		; FLAG NO ERROR
0340  C9      		RET			; RETURN TO BDOS (OR RESEL ROUTINE)
		
0341  AF      	WR$SEC: XRA	A
0342  329406  		STA	PNDWRT		; FLAG NO PENDING WRITE
0345  CD6A03  		CALL	WRITE		; WRITE A PHYSICAL SECTOR
0348  C8      		RZ			; RETURN IF WRITE WAS SUCCESSFUL
0349  3A8706  		LDA	WRTYPE
034C  FE03    		CPI	READOP		; IGNORE ERROR IF THIS IS A READ OPERATION
034E  C8      		RZ
034F  1809    		JR	RWERR
		
0351  CD5E03  	RD$SEC: CALL	READ		; READ A PHYSICAL SECTOR
0354  C8      		RZ			; RETURN IF SUCCESSFUL
0355  3EFF    		MVI	A,0FFH		; FLAG BUFFER AS UNKNOWN
0357  328D06  		STA	HSTDSK
035A  D1      	RWERR:	POP	D		; THROW AWAY TOP OF STACK
035B  3E01    		MVI	A,1		; SIGNAL ERROR TO BDOS
035D  C9      		RET			; RETURN TO BDOS (OR RESEL ROUTINE)
		
		;-------------------------------------------------------------------------
		; READ: LO-LEVEL I/O ROUTINE
		;-------------------------------------------------------------------------
035E  CD5704  	READ:	CALL	ACCESS$R	; START DRIVE AND STEP TO PROPER TRACK
0361  DA3E04  		JC	ERROR
0364  0688    		MVI	B,FDCRDS+FDFSLF ; READ COMMAND W/O SIDE SELECT
0366  3EA2    		MVI	A,0A2H		; INI INSTRUCTION (2ND BYTE)
0368  181B    		JR	TYPE$II
		
		;------------------------------------------------------------------------
		; WRITE: LO-LEVEL I/O ROUTINE						*
		;------------------------------------------------------------------------
036A  2A8206  	WRITE:	LHLD	MODE		; CHECK FOR HALF TRACK R/O
036D  23      		INX	H
036E  CB66    		BIT	4,M
0370  C23E04  		JNZ	ERROR		; R/O ERROR
0373  CD5704  		CALL	ACCESS$R	; ACCESS DRIVE FOR WRITE
0376  DA3E04  		JC	ERROR
0379  3A3316  		LDA	DSK$STAT	; GET DISK STATUS BYTE
037C  17      		RAL
037D  17      		RAL			; WRITE PROTECT BIT TO CARRY
037E  DA3E04  		JC	ERROR		; WRITE PROTECT ERROR
0381  06A8    		MVI	B,FDCWRS+FDFSLF ; WRITE COMMAND W/O SIDE SELECT
0383  3EA3    		MVI	A,0A3H		; OUTI INSTRUCTION (2ND BYTE)
0385          	TYPE$II:
0385  325404  		STA	FIX1+1		;setup physical routines for read/write
0388          	RETRY:						     
0388  C5      		PUSH	B		; save registers
0389  D5      		PUSH	D
038A  3A0D00  		LDA	?INT$BYTE	; get interrupt byte
038D  E6FD    		ANI	11111101B	; Turn 2 millisecond clock off
038F  D3F2    		OUT	PORT		; to prevent interupts from causing lost-data
0391  F3      		DI
0392  219C06  		LXI	H,SERIAL	; TURN OFF INTERRUPTS FROM SERIAL PORTS
0395  DBE9    		IN	PORT1+1
0397  77      		MOV	M,A
0398  23      		INX	H
0399  DBE1    		IN	PORT2+1
039B  77      		MOV	M,A
039C  23      		INX	H
039D  DBD9    		IN	PORT3+1
039F  77      		MOV	M,A
03A0  23      		INX	H
03A1  DBD1    		IN	PORT4+1
03A3  77      		MOV	M,A
03A4  AF      		XRA	A
03A5  D3E9    		OUT	PORT1+1
03A7  D3E1    		OUT	PORT2+1
03A9  D3D9    		OUT	PORT3+1
03AB  D3D1    		OUT	PORT4+1
03AD  FB      		EI
		
03AE  3E01    		MVI	A,FD$TS 	; SELECT SECTOR REGISTER
03B0  D379    		OUT	FD$INT
03B2  3A8F06  		LDA	HSTSEC		; MAKE SECTOR 1,2,3,...,SPT
03B5  3C      		INR	A
03B6  D37A    		OUT	FD$SEC		; SEND SECTOR NUMBER TO CONTROLLER
03B8  3A8606  		LDA	SIDE		; get the side select bits
03BB  B0      		ORA	B		; merge COMMAND and SIDE SELECT bits
03BC  47      		MOV	B,A
03BD  3A2500  		LDA	H37CTL		; TURN ON DRQ AND IRQ
03C0  F603    		ORI	CONDRQ+CONIRQ
03C2  D378    		OUT	FD$CON
03C4  3E00    		MVI	A,FD$CD 	; ACCESS C/D REGS.
03C6  D379    		OUT	FD$INT
03C8  78      		MOV	A,B		; GET COMMAND BACK IN ACC.
03C9  2100F0  		LXI	H,HSTBUF	; DATA BUFFER ADDRESS
03CC  0E7B    		MVI	C,FD$DAT	; DATA PORT TO REG. C
03CE  CD4F04  		CALL	IO$1024 	; TRANSFER THE SECTOR
03D1  323316  		STA	DSK$STAT	; save status of transfer
03D4  3A2500  		LDA	H37CTL	  
03D7  D378    		OUT	FD$CON		; TURN OFF INTERRUPTS
03D9  3ED0    		MVI	A,FDCFI
03DB  D37A    		OUT	FD$CMD		; FORCE TYPE I STATUS
		
03DD  3A0D00  		LDA	?INT$BYTE	; get interrupt byte
03E0  D3F2    		OUT	PORT		; CLOCK ON AGAIN
03E2  F3      		DI
03E3  119C06  		LXI	D,SERIAL	; RESTORE SERIAL PORT INTERRUPTS
03E6  1A      		LDAX	D
03E7  D3E9    		OUT	PORT1+1
03E9  13      		INX	D
03EA  1A      		LDAX	D
03EB  D3E1    		OUT	PORT2+1
03ED  13      		INX	D
03EE  1A      		LDAX	D
03EF  D3D9    		OUT	PORT3+1
03F1  13      		INX	D
03F2  1A      		LDAX	D
03F3  D3D1    		OUT	PORT4+1
03F5  FB      		EI
		
03F6  AF      		XRA	A		; CLEAR CARRY FOR DSBC
03F7  1100F0  		LXI	D,HSTBUF
03FA  ED52    		DSBC	D		; HL NOW CONTAINS # OF BYTES TRANSFERRED
03FC  3A3316  		LDA	DSK$STAT	; check for successful transfer
03FF  E6BF    		ANI	10111111B
0401  2015    		JRNZ	IOERR		; RETRY IF ERROR
0403  3A9906  		LDA	SELOP		; IS THIS A SELECT OPERATION ?
0406  B7      		ORA	A
0407  2809    		JRZ	POPRET		; THEN DON'T CHECK SECTOR SIZE
0409  3A9506  		LDA	BLCODE		; CHECK IF CORRECT NUMBER OF BYTES TRANSFERRED
040C  FE03    		CPI	3
040E  2001    		JRNZ	NOTED		; BLCODE=3 => 1024 BYTE SECTOR EXPECTED
0410  3C      		INR	A		; INCREMENT BECAUSE (H) FOR 1024 IS 4
0411  BC      	NOTED:	CMP	H		; COMPARE TO EXPECTED SIZE
0412  D1      	POPRET: POP	D
0413  C1      		POP	B
0414  282A    		JRZ	DONE		; DONE IF CORRECT
0416  1805    		JR	TRYAGN		; RETRY IF INCORRECT
0418  D1      	IOERR:	POP	D
0419  C1      		POP	B
041A  DA3E04  		JC	ERROR		; ERROR IF NO READY SIGNAL
041D  217F06  	TRYAGN: LXI	H,RETRYS	; decrement retry count
0420  35      		DCR	M
0421  CA3E04  		JZ	ERROR		; NO MORE RETRIES
0424  7E      		MOV	A,M
0425  FE0A    		CPI	10
0427  D28803  		JNC	RETRY		; LESS THAN TEN RETRYS LEFT => STEP HEAD
042A  3A9906  		LDA	SELOP
042D  B7      		ORA	A
042E  CA8803  		JZ	RETRY		; DO NOT STEP HEAD IF SELECT OPERATION
0431  C5      		PUSH	B		; SAVE REGISTERS
0432  D5      		PUSH	D
0433  CD0D05  		CALL	STEPIN		; STEP IN COMMAND
0436  CD5B04  		CALL	SEEK		; SEEK WILL REPOSITION HEAD
0439  D1      		POP	D		; RESTORE REGISTERS
043A  C1      		POP	B
043B  C38803  		JMP	RETRY		; TRY AGAIN
		
		;-------------------------------------------------------------------------
		; ERROR: RESET PSW/Z TO INDICATE ERROR AND FALL THROUGH TO DONE
		; DONE:  SET DELAY VALUES FOR DESELECT AND MOTOR TURN OFF
		;-------------------------------------------------------------------------
043E  AF      	ERROR:	XRA	A		; PSW/Z MUST BE RESET TO INDICATE ERROR
043F  3C      		INR	A
0440  F5      	DONE:	PUSH	PSW		; SAVE ERROR STATUS
0441  3A9906  		LDA	SELOP		; CHECK FOR SELECT OPERATION
0444  B7      		ORA	A
0445  2806    		JRZ	RETRN
0447  210F06  		LXI	H,DELAY37	; SET DESELECT AND MOTOR TURN OFF DELAYS
044A  222300  		SHLD	DLYMO$37	;  UNLESS SELECT OPERATION IS IN PROGRESS
044D  F1      	RETRN:	POP	PSW		; RECALL ERROR STATUS
044E  C9      		RET
		
		;----------------------------------------------------------------------------
		; IO$1024: THIS IS THE I/O LOOP
		;----------------------------------------------------------------------------
044F          	IO$1024:
044F  D37A    		OUT	FD$CMD		; send command to controller
0451  FB      		EI			; turn on interrupts
0452  76      	RW1	HLT			; WAIT FOR DRQ
0453  EDA2    	FIX1	INI			; transfer byte (INI becomes OUTI for writes)
0455  18FB    		JR	RW1		; loop until transfer complete.
						; RETURN DONE BY INTERRUPT ROUTINE
		
		;----------------------------------------------------------------------------
		; ACCESS$R: PREPARE DRIVE TO READ A SECTOR
		;	    - SELECT DRIVE
		;	    - SEEK TO DESIRED TRACK
		;----------------------------------------------------------------------------
0457          	ACCESS$R:
0457  CD7A05  		CALL	SELECT		; SELECT DRIVE
045A  D8      		RC			; ERROR IF DRIVE NOT READY
045B  3A8E06  	SEEK:	LDA	HSTTRK		; GET REQUESTED TRACK
045E  0600    		MVI	B,0		; SET SIDE VALUE FOR SIDE 0
0460  2A8206  		LHLD	MODE
0463  CB56    		BIT	2,M
0465  200E    		JRNZ	CONZEN		; ALTERNATE CONVERT PROCEDURE FOR ZENITH DISKS
0467  217D06  		LXI	H,TPS		; GET TRACKS PER SIDE
046A  4E      		MOV	C,M
046B  B9      		CMP	C		; COMPARE REQUESTED TRACK WITH TRACKS-PER-SIDE
046C  3811    		JRC	SIDE0		; NO CONVERSION IF ON FIRST SIDE
046E  2F      		CMA			; NEGATE LOGICAL TRACK NUMBER
046F  3C      		INR	A
0470  81      		ADD	C
0471  81      		ADD	C		; ADD TOT TRACKS ON DISK SURFACES (2*NUM$TRKS)
0472  3D      		DCR	A		; SUBTRACT 1 BECAUSE TRACKS START AT 0
0473  1808    		JR	SIDE1
0475  CB6E    	CONZEN: BIT	5,M		; CHECK SIDED BIT
0477  2806    		JRZ	SIDE0		; NO CONVERT IF SINGLE SIDED
0479  A7      		ANA	A		; TO CLEAR CARRY
047A  1F      		RAR			; DIVIDE BY 2 TO GET REAL TRACK NUMBER
047B  3002    		JRNC	SIDE0
047D  0602    	SIDE1:	MVI	B,FDFSS1	; set side value for 2nd side	 
		
047F  4F      	SIDE0:	MOV	C,A		; store track number
0480  78      		MOV	A,B		
0481  328606  		STA	SIDE		; save side value for read/write command
0484  218006  		LXI	H,SEKERR	; initialize seek error counters
0487  3604    		MVI	M,4		; 4 ERRORS ON SEEK IS FATAL
0489  23      		INX	H
048A  360A    		MVI	M,10		; RESTORE once, then 9 errors are fatal
048C  79      	RETRS:	MOV	A,C		; get track number back
048D  B7      		ORA	A		; FORCES "RESTORE" IF "seek to track 0"
048E  CA1C05  		JZ	HOME		;RESTORE HEAD TO TRACK 0
0491  2A8206  		LHLD	MODE		;TRACK NUMBER IN (A) MUST BE PRESERVED
0494  23      		INX	H		; MODE BYTE 2
0495  66      		MOV	H,M		; BIT 4 IS THE HALF-TRACK OPTION
0496  3E01    		MVI	A,FD$TS 	; SELECT TRACK REGISTER
0498  D379    		OUT	FD$INT
049A  DB7B    		IN	FD$TRK		; GET CURRENT HEAD POSITION,
049C  91      		SUB	C		;SEE HOW FAR WE WANT TO GO.
049D  C8      		RZ			       ; IF ZERO TRACKS TO STEP, WERE FINISHED
049E  0678    		MVI	B,FDCSTO+FDFHLB+FDFUTR ; ASSUME STEP-OUT + UPDATE + HEADLOAD
04A0  3004    		JRNC	STOUT		       ; ASSUMPTION WAS CORRECT...
04A2  0658    		MVI	B,FDCSTI+FDFHLB+FDFUTR ; ELSE MUST BE STEP-IN
04A4  ED44    		NEG			       ; AND NUMBER OF TRACKS WOULD BE NEGATIVE
04A6  6F      	STOUT:	MOV	L,A		; COUNTER FOR STEPPING
04A7  CB64    	SEEK5:	BIT	4,H		; CHECK FOR 48 TPI DISK IN 96 TPI DRIVE
04A9  2809    		JRZ	NOTHT
04AB  CBA0    		RES	4,B		; SELECT NO-UPDATE
04AD  CD5505  		CALL	TYPE$I		; STEP HEAD
04B0  E604    		ANI	FDSTK0		; DID THIS STEP PUT US AT TRACK 0 ?
04B2  203A    		JRNZ	TRK0ERR
04B4  CBE0    	NOTHT:	SETB	4,B		; SELECT UPDATE TO TRACK-REG
04B6  CD5505  		CALL	TYPE$I		; STEP HEAD
04B9  E604    		ANI	FDSTK0		; DID THIS STEP PUT US AT TRACK 0 ?
04BB  2031    		JRNZ	TRK0ERR
04BD  2D      		DCR	L
04BE  20E7    		JRNZ	SEEK5
04C0  3E01    		MVI	A,FD$TS 	; SELECT SECTOR REGISTER
04C2  D379    		OUT	FD$INT
04C4  DB7A    		IN	FD$SEC		; SAVE CURRENT SECTOR NUMBER
04C6  6F      		MOV	L,A
04C7  CD4E05  		CALL	READ$ADDR	; GET ACTUAL TRACK UNDER HEAD (IN SECTOR REG)
04CA  3E01    		MVI	A,FD$TS 	; SECLECT SECTOR REGISTER
04CC  D379    		OUT	FD$INT
04CE  DB7A    		IN	FD$SEC		; GET TRACK NUMBER FROM MEDIA
04D0  67      		MOV	H,A
04D1  7D      		MOV	A,L
04D2  D37A    		OUT	FD$SEC		; RESTORE SECTOR NUMBER
04D4  3A3316  		LDA	DSK$STAT	; GET TRUE ERROR STATUS OF READ-ADDRESS
04D7  E618    		ANI	FDSRNF+FDSCRC	; CRC ERROR + REC-NOT-FOUND
04D9  7C      		MOV	A,H		; ACTUAL TRACK FROM READ-ADDRESS
04DA  218006  		LXI	H,SEKERR	; POINT TO ERROR COUNTERS
04DD  2015    		JRNZ	RESTR0
04DF  B9      		CMP	C		; (C) MUST STILL BE VALID DEST. TRACK
04E0  C8      		RZ	;NO ERRORS
04E1  35      	RTS00:	DCR	M		; SHOULD WE KEEP TRYING ?
04E2  37      		STC
04E3  C8      		RZ			; NO, WE'VE TRYED TOO MUCH
04E4  47      		MOV	B,A
04E5  3E01    		MVI	A,FD$TS 	; SELECT TRACK REGISTER
04E7  D379    		OUT	FD$INT
04E9  78      		MOV	A,B
04EA  D37B    		OUT	FD$TRK		; re-define head position accordingly
04EC  189E    		JR	RETRS		; RETRY SEEK
		
04EE          	TRK0ERR:
04EE  AF      		XRA	A
04EF  218006  		LXI	H,SEKERR
04F2  18ED    		JR	RTS00
		
04F4  23      	RESTR0: INX	H		; RESTORE ERROR COUNT
04F5  35      		DCR	M
04F6  37      		STC
04F7  C8      		RZ			; If count 0, return with Carry set.
04F8  7E      		MOV	A,M
04F9  FE09    		CPI	9
04FB  3005    		JRNC	RESTR1		; RESTORE ONLY FIRST TIME
04FD  CD0D05  		CALL	STEPIN		; OTHERWISE STEP HEAD IN 1 TRACK
0500  188A    		JR	RETRS
0502          	RESTR1: 			; RESTORE HEAD TO TRACK 0
0502  3E03    		MVI	A,00000011B
0504  327E06  		STA	STEPRA		; RETRY WITH MAXIMUM STEP RATE
0507  CD1C05  		CALL	HOME
050A  C38C04  		JMP	RETRS		; RETRY SEEK
		;----------------------------------------------------------------------------
		; STEPIN: STEP IN ONE TRACK
		;----------------------------------------------------------------------------
050D  2A8206  	STEPIN: LHLD	MODE
0510  23      		INX	H		; MODE BYTE 2
0511  CB66    		BIT	4,M		; CHECK HALF TRACK BIT
0513  0648    		MVI	B,FDC$STI+FDFHLB; STEP IN WITHOUT UPDATE
0515  C45505  		CNZ	TYPE$I		; STEP A SECOND TIME (W/O UPDATE) FOR HALF-TRK
0518  0658    		MVI	B,FDC$STI+FDFHLB+FDFUTR; STEP IN AND UPDATE TRACK REGISTER
051A  1839    		JR	TYPE$I
		
		;----------------------------------------------------------------------------
		; HOME: POSITION HEAD AT TRACK ZERO...
		;----------------------------------------------------------------------------
051C  3E00    	HOME:	MVI	A,FD$CD 	; SELECT STATUS REGISTER
051E  D379    		OUT	FD$INT
0520  DB7A    		IN	FD$STA		; GET STATUS
0522  47      		MOV	B,A
0523  3E01    		MVI	A,FD$TS 	; SELECT TRACK REGISTER
0525  D379    		OUT	FD$INT
0527  78      		MOV	A,B
0528  E604    		ANI	FDSTK0		;TEST TRACK ZERO SENSOR,
052A  201D    		JRNZ	@TRK0		;SKIP ROUTINE IF WE'RE ALREADY AT TRACK 0.
052C  DB7B    		IN	FD$TRK		;DOES THE SYSTEM THINK WE'RE AT TRACK 0 ??
052E  B7      		ORA	A
052F  200E    		JRNZ	HOME1	;IF IT DOESN'T, ITS PROBEBLY ALRIGHT TO GIVE "RESTORE"
0531  2E06    		MVI	L,6 ;(6 TRKS)	;ELSE WE COULD BE IN "NEGATIVE TRACKS" SO...
0533  0648    		MVI	B,FDCSTI+FDFHLB ;WE MUST STEP-IN A FEW TRACKS, LOOKING FOR THE
0535  CD5505  	HOME0:	CALL	TYPE$I		;TRACK ZERO SIGNAL.
0538  E604    		ANI	FDSTK0
053A  200D    		JRNZ	@TRK0
053C  2D      		DCR	L
053D  20F6    		JRNZ	HOME0
053F  0608    	HOME1:	MVI	B,FDCRST+FDFHLB ;RESTORE COMMAND, WITH HEADLOAD
0541  CD5505  		CALL	TYPE$I
0544  EE04    		XRI	FDSTK0		;TEST TRACK-0 SIGNAL
0546  1F      		RAR
0547  1F      		RAR
0548  1F      		RAR	;[CY] = 1 IF NOT AT TRACK 0
0549  3E00    	@TRK0:	MVI	A,0
054B  D37B    		OUT	FD$TRK		;MAKE SURE EVERYONE KNOWS WERE AT TRACK 0
054D  C9      		RET
		
		;---------------------------------------------------------------------------
		; READ$ADDR: READ A SECTOR HEADER OFF THE REQUESTED SIDE
		;---------------------------------------------------------------------------
054E          	READ$ADDR:
054E  3A8606  		LDA	SIDE
0551  F6C4    		ORI	FDCRDA+FDFDLF	; READ-ADDRESS COMMAND WITH SETTLE DELAY
0553  1804    		JR	PUT$I		; IGNORE DATA (AND DATA-LOST ERROR)
		
		;************************************************************************
		; TYPE$I -- Send a Type I (Seek/Restore) Command To The Controller	*
		; PUT$I -- Entry That Ignores Steprate Bits				*
		;************************************************************************
0555  3A7E06  	TYPE$I: LDA	STEPRA
0558  B0      		ORA	B
0559  47      	PUT$I:	MOV	B,A
055A  3E00    		MVI	A,FD$CD 	; SELECT COMMAND/STATUS PORT
055C  D379    		OUT	FD$INT
055E  78      		MOV	A,B
055F  F3      		DI			; prevent interrupt routines
0560  D37A    		OUT	FD$CMD		; SEND command TO CONTROLLER
0562  DB7A    	WB:	IN	FD$STA		; WAIT FOR BUSY SIGNAL
0564  1F      		RAR			; TO COME UP
0565  30FB    		JRNC	WB
0567  DB7A    	WNB:	IN	FD$STA		; poll controller for function-complete
0569  1F      		RAR			; Busy?
056A  38FB    		JRC	WNB		; wait until not busy.
056C  17      		RAL
056D  323316  		STA	DSK$STAT	;SAVE TYPE$II (III) STATUS FOR ERROR DETECTION.
0570  3ED0    		MVI	A,FDCFI 	;TERMINATE COMMAND (RESET STATUS TO TYPE 1)
0572  D37A    		OUT	FD$CMD 
0574  FB      		EI			; re-enable interrupts.
0575  DB7B    		IN	FD$DAT
0577  DB7A    		IN	FD$STA		; MUST RETURN WITH STATUS IN ACC.
0579  C9      		RET
		
		;---------------------------------------------------------------------------
		; SELECT: TURN ON MOTOR, SET UP STEP RATE, SET UP CORRENT TRACK NUMBER
		;---------------------------------------------------------------------------
057A  3A7B06  	SELECT: LDA	RDYFLG		; NEED TO CHECK FOR READY ?
057D  B7      		ORA	A
057E  CCB005  		CZ	CHKRDY
0581  D8      		RC			; ERROR IF NOT READY
0582  3EFF    		MVI	A,0FFH
0584  327B06  		STA	RDYFLG		; FLAG DRIVE AS READY
0587  2A8206  		LHLD	MODE		; point to drive mode byte table
058A  23      		INX	H
058B  3A8406  		LDA	RELDSK
058E  4F      		MOV	C,A
058F  7E      		MOV	A,M
0590  E603    		ANI	00000011B	; setup steprate bits for seek-restore commands
0592  327E06  		STA	STEPRA		; RATE FOR SUBSEQUENT SEEK/RESTORE
0595  218506  		LXI	H,LOGDSK	; save position (track) of current drive
0598  5E      		MOV	E,M		; in 'trks' array addressed by contents of
0599  71      		MOV	M,C		; location 'logdsk'.
059A  0600    		MVI	B,0
059C  50      		MOV	D,B
059D  21A106  		LXI	H,TRKS
05A0  19      		DAD	D
05A1  3E01    		MVI	A,FD$TS 	; SELECT TRACK REGISTER
05A3  D379    		OUT	FD$INT
05A5  DB7B    		IN	FD$TRK
05A7  77      		MOV	M,A		; SAVE CURRENT TRACK #
05A8  21A106  		LXI	H,TRKS		; identify position (track) of requested drive
05AB  09      		DAD	B		; from 'trks' array addressed by new 'logdsk'.
05AC  7E      		MOV	A,M
05AD  D37B    		OUT	FD$TRK		; set track number
05AF  C9      		RET
		
		;************************************************************************
		; CHKRDY -- Check for drive ready					*
		;************************************************************************
05B0  CDE805  	CHKRDY: CALL	ON$H37		; TURN ON DRIVE
05B3  CD3F06  		CALL	WAIT		; WAIT 'TIL UP TO SPEED
05B6  3E00    		MVI	A,FD$CD 	; ACCESS C/D REGS
05B8  D379    		OUT	FD$INT
05BA  3ED0    		MVI	A,FDCFI+FDFINI	; FORCE TYPE I STATUS
05BC  D37A    		OUT	FD$CMD
05BE  3E0A    		MVI	A,10
05C0          	RDYH37B:
05C0  3D      		DCR	A		; DELAY A WHILE TO LET CONTROLLER SETTLE
05C1  20FD    		JRNZ	RDYH37B
05C3  FB      		EI
05C4  210B00  		LXI	H,?CLOCK	; GET TIME VALUE
05C7  3EC8    		MVI	A,200
05C9  86      		ADD	M
05CA  47      		MOV	B,A		; (B) = TIME VALUE
05CB  0E00    		MVI	C,0		; (C) = HOLE COUNTER
05CD  51      		MOV	D,C		; (D) = INIT HOLE STATUS TO NO HOLE
05CE          	RDYH37C:
05CE  DB7A    		IN	FD$STA		; GET HOLE STATUS
05D0  E602    		ANI	FDSIND
05D2  BA      		CMP	D		; CHECK IF CHANGE IN STATUS
05D3  2807    		JRZ	RDYH37D 	; BR IF NO CHANGE
05D5  57      		MOV	D,A		; SAVE NEW STATUS
05D6  0C      		INR	C		; COUNT TRANSITION
05D7  3E14    		MVI	A,FDHDD
05D9          	RDYH37C1:
05D9  3D      		DCR	A
05DA  20FD    		JRNZ	RDYH37C1
05DC          	RDYH37D:
05DC  78      		MOV	A,B		; CHECK IF TIME UP
05DD  BE      		CMP	M
05DE  20EE    		JRNZ	RDYH37C 	; BR IF NOT
05E0  79      		MOV	A,C		; TIME UP -- CHECK # OF HOLES
05E1  FE02    		CPI	1*2
05E3  D8      		RC			; IF < 1 THEN ERROR
05E4  FE07    		CPI	3*2+1		; IF <=3 THEN OK
05E6  3F      		CMC
05E7  C9      		RET 
		
		;------------------------------------------------------------------
		; TURN ON MOTOR, SELECT DRIVE, AND SET SETTLE DELAY COUNTER
		;------------------------------------------------------------------
05E8          	ON$H37:
05E8  210000  		LXI	H,0
05EB  222300  		SHLD	DLYMO37
05EE  3A8406  		LDA	RELDSK
05F1  0604    		MVI	B,4
05F3  0E10    		MVI	C,CONDS0	; START WITH DRIVE 0 BIT POSITION
05F5  3D      	DRVL:	DCR	A
05F6  FAFF05  		JM	GDRIVE
05F9  CB01    		RLCR	C		; DRIVE SELECT CODE IN REG. C
05FB  10F8    		DJNZ	DRVL
05FD  0E00    		MVI	C,0		; NO DRIVE SELECTED
05FF  2A8206  	GDRIVE: LHLD	MODE
0602  23      		INX	H
0603  7E      		MOV	A,M
0604  E640    		ANI	MODEDD
0606  2802    		JRZ	ONH37A		; BR IF SINGLE
0608  3E04    		MVI	A,CONMFM	; SET DOUBLE DENSITY CONTROL FLAG
060A  B1      	ONH37A: ORA	C		; OR IN UNIT SELECT
060B  F608    		ORI	CONMO		; OR THE MOTOR ON
060D  D378    		OUT	FD$CON
060F  47      		MOV	B,A
0610  212500  		LXI	H,H37CTL	; GET CURRENT VALUE OF THE CONTROL PROT
0613  7E      		MOV	A,M
0614  E608    		ANI	CONMO		; IF THE MOTOR WAS ON
0616  2004    		JRNZ	ONH37B		; THEN WE DON'T HAVE TO WAIT FOR IT TO COME UP
0618  3EFB    		MVI	A,(1000+3)/4+1	; NORMAL TIMING (APPROX 1 SECOND)
061A  180A    		JR	ONH37C
061C  7E      	ONH37B	MOV	A,M		; GET THE OLD VALUE OF THE CONTROL PORT
061D  E6F0    		ANI	CONDS0+CONDS1+CONDS2+CONDS3	; CHECK SELECT DRIVE(S)
061F  A0      		ANA	B		; CHECK TO SEE IF SAME HEAD ALREADY DOWN
0620  3E00    		MVI	A,0
0622  2002    		JRNZ	ONH37C		; YES, ALREADY LOADED, NO DELAY
0624  3E0E    		MVI	A,(50+3)/4+1	; MUST DELAY FOR HEAD LOAD
0626  327C06  	ONH37C: STA	DLYW
0629  70      		MOV	M,B		; SET NEW VALUE OF CONTROL PORT
062A  C9      		RET
		
062B  7E      	HLIHL:	MOV	A,M		; LOAD HL INDIRECT THRU HL
062C  23      		INX	H
062D  66      		MOV	H,M
062E  6F      		MOV	L,A
062F  C9      		RET
		
		;---------------------------------------------------
		;	Z37 interrupt service routine.
		;---------------------------------------------------
0630  3E0A    	H37ISR: MVI	A,10
0632  3D      	H37ISR1:DCR	A		; DELAY A WHILE TO LET STATUS SETTLE
0633  20FD    		JRNZ	H37ISR1
0635  3E00    		MVI	A,FD$CD 	; SELECT STATUS REGISTER
0637  D379    		OUT	FD$INT
0639  DB7A    		IN	FD$STA		; Clear interrupt request
063B  33      		INX	SP		; TERMINATE SUB-ROUTINE by eliminating the
063C  33      		INX	SP		; return address PUSHed by the interrupt.
063D  FB      		EI			; turn interrupts back on.
063E  C9      		RET			; end
		
063F  3A0B00  	WAIT:	LDA	?CLOCK
0642  1F      		RAR			; IS IT EVEN, MAKING 4MS BIG TICKS ?
0643  38FA    		JRC	WAIT
0645  217C06  		LXI	H,DLYW		; CHECK WAIT TIMER
0648  7E      		MOV	A,M		;  AND DECREMENT IF IT IS NOT ALREADY ZERO
0649  B7      		ORA	A
064A  C8      		RZ
064B  35      		DCR	M
064C  18F1    		JR	WAIT
		
		;---------------------------------------------------
		; Z37 MOTOR TIME OUT ROUTINE
		;---------------------------------------------------
064E          	MTR$DLY: 
064E  212300  		LXI	H,DLYMO$37	; POINTER TO MOTOR DELAY TIME FOR H37
0651  7E      		MOV	A,M
0652  B7      		ORA	A		; IF ALREADY ZERO
0653  2823    		JRZ	TIME$Z17
0655  35      	DLY1:	DCR	M		; DECREMENT TIMER
0656  200A    		JRNZ	TIME$1		;   IF IT HAS NOT TIMED OUT CHECK HEADS
0658  3A2500  		LDA	H37CTL		; GET THE CURRENT VALUE OF THE CONTROL PORT
065B  E6F7    		ANI	0FFH-CONMO	; TURN OFF MOTOR
065D  322500  		STA	H37CTL
0660  D378    		OUT	FD$CON
0662  23      	TIME$1: INX	H		; POINT TO THE HEAD DELAY FOR H37
0663  7E      		MOV	A,M
0664  B7      		ORA	A		; IF ALREADY ZERO
0665  2811    		JRZ	TIME$Z17	;   THEN DON'T DECREMENT
0667  35      		DCR	M		; DECREMENT TIMER
0668  200E    		JRNZ	TIME$Z17	;   IF IT HAS NOT TIMED OUT THEN SKIP
066A  3A2500  		LDA	H37CTL		; DESELECT THE DRIVE
066D  E60F    		ANI	0FFH-CONDS0-CONDS1-CONDS2-CONDS3
066F  322500  		STA	H37CTL	  
0672  D378    		OUT	FD$CON
0674  AF      		XRA	A
0675  327B06  		STA	RDYFLG		; FLAG DRIVE AS NOT READY
0678          	TIME$Z17:
0678  C9      		RET
0679  0000    		DW	BASE		; TO GENERATE BIT MAP
		
		;-------------------------------------------------------------------------
		; MISCELLANEOUS STORAGE
		;-------------------------------------------------------------------------
067B  00      	RDYFLG: DB	0
067C  00      	DLYW:	DB	0
067D  00      	TPS:	DB	0		; TRACKS PER SIDE
067E  00      	STEPRA	DB	0		; STEP RATE CODE 
067F  00      	RETRYS	DB	0
0680  0000    	SEKERR	DB	0,0		; SEEK,RESTORE ERROR COUNTS
0682  0000    	MODE	DW	0		; POINTER TO MODE BYTE
0684  00      	RELDSK	DB	0		; DRIVE # RELATIVE TO 0
0685  04      	LOGDSK	DB	4		; CURRENT DRIVE SELECTED BY THIS MODULE
0686  00      	SIDE	DB	0		; SIDE SELECT BIT FOR COMMANDS
0687  00      	WRTYPE	DB	0
0688  00      	RD$FLAG DB	0
0689  0000    	URECORD DW	0
068B  00      	UNALLOC DB	0
068C  00      	BLKMSK	DB	0
068D  FF      	HSTDSK	DB	0FFH
068E  00      	HSTTRK	DB	0
068F  00      	HSTSEC	DB	0
0690  00      	REQDSK: DB	0
0691  00      	REQTRK: DB	0
0692  00      	REQSEC: DB	0
0693  00      	BLKSEC	DB	0
0694  00      	PNDWRT	DB	0
0695  00      	BLCODE	DB	0
0696          	INIT$FLAG:
0696  00      		DB	0
0697  00      	OFFSET: DB	0		; OFFSET TO DIRECTORY TRACK
0698  00      	SELERR: DB	0
0699  FF      	SELOP:	DB	0FFH
069A  0000    	CURDPB: DW	0
069C  00000000	SERIAL: DB	0,0,0,0
06A0  00      	MODFLG: DB	0
		;----------------------------------------------------
		;	Current head positions for each drive
		;----------------------------------------------------
06A1  FFFFFFFF	TRKS:	DB	255,255,255,255,0	
      00
			
06A6  00000000		REPT	(($+0FFH) AND 0FF00H)-$
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      00000000
      0000
		
0700          	MODLEN	EQU	$-MBASE 
		
0700  24800000	 DB 00100100B,10000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00010101B
      00000015
0708  40154015	 DB 01000000B,00010101B,01000000B,00010101B,01000000B,00010101B,01000000B,00000000B
      40154000
0710  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
0718  00210090	 DB 00000000B,00100001B,00000000B,10010000B,00010010B,01000100B,01001000B,10001001B
      12444889
0720  21202048	 DB 00100001B,00100000B,00100000B,01001000B,00010001B,00100000B,00000010B,01000000B
      11200240
0728  80904888	 DB 10000000B,10010000B,01001000B,10001000B,00100000B,00010000B,00001000B,10010000B
      20100890
0730  04248924	 DB 00000100B,00100100B,10001001B,00100100B,00100100B,00001001B,00100000B,00100100B
      24092024
0738  82008848	 DB 10000010B,00000000B,10001000B,01001000B,00000000B,00000000B,00000000B,00000000B
      00000000
0740  00120210	 DB 00000000B,00010010B,00000010B,00010000B,00100100B,00100000B,00000000B,00000001B
      24200001
0748  00402109	 DB 00000000B,01000000B,00100001B,00001001B,00100010B,00000010B,01000000B,10000001B
      22024081
0750  20222024	 DB 00100000B,00100010B,00100000B,00100100B,01000000B,01000100B,10000000B,00100010B
      40448022
0758  41010902	 DB 01000001B,00000001B,00001001B,00000010B,01001000B,00000001B,00100000B,00000000B
      48012000
0760  44901120	 DB 01000100B,10010000B,00010001B,00100000B,10001000B,00010010B,00000001B,00000010B
      88120102
0768  09101040	 DB 00001001B,00010000B,00010000B,01000000B,10010000B,00001000B,00100100B,10010000B
      90082490
0770  81000800	 DB 10000001B,00000000B,00001000B,00000000B,00000000B,00000000B,00001000B,00100000B
      00000820
0778  00109000	 DB 00000000B,00010000B,10010000B,00000000B,00000100B,00000000B,00000000B,01000010B
      04000042
0780  04100009	 DB 00000100B,00010000B,00000000B,00001001B,00010000B,01001000B,10000100B,10000100B
      10488484
0788  10000044	 DB 00010000B,00000000B,00000000B,01000100B,00100000B,01000000B,00000000B,00000000B
      20400000
0790  12009000	 DB 00010010B,00000000B,10010000B,00000000B,00000000B,00000001B,00000000B,10000000B
      00010080
0798  00400208	 DB 00000000B,01000000B,00000010B,00001000B,00000000B,00000000B,01000000B,00000001B
      00004001
07A0  02490100	 DB 00000010B,01001001B,00000001B,00000000B,00000000B,00000000B,00000001B,00000000B
      00000100
07A8  10008100	 DB 00010000B,00000000B,10000001B,00000000B,00000000B,00000001B,00000000B,00001000B
      00010008
07B0  82440901	 DB 10000010B,01000100B,00001001B,00000001B,00000000B,00100000B,00100100B,00000000B
      00202400
07B8  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,10000000B,10000000B
      00008080
07C0  40000000	 DB 01000000B,00000000B,00000000B,00000000B,00000000B,10000000B,00000000B,00000000B
      00800000
07C8  01000000	 DB 00000001B,00000000B,00000000B,00000000B,00000000B,00000000B,00000001B,00100000B
      00000120
07D0  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
07D8  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
		
		;--------------------------------------------------
		;	Common Buffers
		;--------------------------------------------------
C000          		ORG	COMBUF	
C000          		DS	20	
C014          		DS	64	
C054          		DS	2	
C056          	DIRBUF	DS	128
		;
		;-----------------------------------------------
		;	Local Buffers
		;-----------------------------------------------
F000          		ORG	BUFFER
F000          	HSTBUF	DS	1024
F400          	CSV46	DS	64
F440          	ALV46	DS	50
F472          	CSV47	DS	64
F4B2          	ALV47	DS	50
F4E4          	CSV48	DS	64
F524          	ALV48	DS	50
F556          	CSV49	DS	64
F596          	ALV49	DS	50
		;-------------------------------------------------------
05C8          	BUFLEN	EQU	$-BUFFER
F5C8          		END



Statistics:

     4	passes
     0	jr promotions
   289	symbols
  2028	bytes

   360	macro calls
  3757	macro bytes
     0	invented symbols
