		
		;  April 1, 1982  14:00  "BZ37.ASM"
		********** CP/M LINKABLE BOOT ROUTINE **********
		********** 5.25" Z37 CONTROLLER BOOT  **********
		
			TITLE	'BZ37 version 2.240'
		
0000  0001FFFF		DW	MODLEN,(-1)
		
0000          	BASE	EQU	0000H	;ORG FOR RELOC
		
			MACLIB Z80
**** Z80.lib ****
**** bz37.asm ****
			$-MACRO
		
		***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
		*****					      *****
		*****  46 = FIRST Z37 5.25" DRIVE             *****
		*****  47 = SECOND Z37 5.25" DRIVE            *****
		*****  48 = THIRD Z37 5.25" DRIVE             *****
		*****  49 = FOURTH Z37 5.25" DRIVE            *****
		*****					      *****
		***************************************************
		
		***************************************************
		**  PORTS AND CONSTANTS
		***************************************************
		
0009          	SPT	  EQU	9	; 9 (512 BYTE) SECTORS ON 5.25" DD
		
201F          	UIVEC	EQU	201FH		; INTERRUPT VECTORS BASE ADDRESS
0078          	Z37	EQU	078H
0078          	ICL	EQU	Z37+0		; DISK CONTROL PORT
0079          	ACL	EQU	Z37+1		; INTERFACE MUX PORT
007A          	COMD	EQU	Z37+2		; 1797 COMMAND REGISTER
007A          	STAT	EQU	Z37+2		; STATUS REGISTER
007A          	SECT	EQU	Z37+2		; SECTOR REGISTER
007B          	DATA	EQU	Z37+3		; DATA REGISTER
		
00F2          	?PORT	  EQU	0F2H
		
00D0          	?AUX	  EQU	0D0H
00E0          	?PRINTER  EQU	0E0H
00D8          	?MODEM	  EQU	0D8H
		
0003          	?LINE$CTL EQU	00000011B	; NO PARITY, 1 STOP BIT, 8 DATA BITS
000F          	?MOD$CTL  EQU	00001111B	; SET ALL CONTROL LINES TO 'READY'
		
0006          	?S19200   EQU	6	; 19,200 BAUD
000C          	?S9600	  EQU	12	;  9,600 BAUD
0018          	?S4800	  EQU	24	;  4,800 BAUD
0030          	?S2400	  EQU	48	;  2,400 BAUD
0060          	?S1200	  EQU	96	;  1,200 BAUD
00C0          	?S600	  EQU	192	;    600 BAUD
0180          	?S300	  EQU	384	;    300 BAUD
0300          	?S150	  EQU	768	;    150 BAUD
0417          	?S110	  EQU	1047	;    110 BAUD
		***************************************************
		
		***************************************************
		** LINKS TO REST OF SYSTEM
		***************************************************
0800          	@BDOS	  EQU	BASE+800H
1600          	@BIOS	  EQU	BASE+1600H
		***************************************************
		
		***************************************************
		** PAGE ZERO ASSIGNMENTS
		***************************************************
0000          		ORG	0
		
0000          	?CPM	   DS	3
0003          	?DEV$STAT  DS	1
0004          	?LOGIN$DSK DS	1
0005          	?BDOS	   DS	3
0008          	?RST1	   DS	3
000B          	?CLOCK	   DS	2
000D          	?INT$BYTE  DS	1
000E          	?CTL$BYTE  DS	1
000F          		   DS	77
005C          	?FCB	   DS	36
0080          	?DMA	   DS	128
		?TPA	   DS	0
		***************************************************
		
		***************************************************
		** START OF RELOCATABLE DISK BOOT MODULE
		*************************************************** 
2280          		ORG	2280H
2280          	BOOT:
2280  C38522  		JMP	AROUND
2283  00      	SECTRS	DB	0	; NUMBER OF SECTORS TO BOOT, FROM MOVCPM.COM
					; PATCHED DURING EXECUTION OF MOVCPM
2284  2E      	DRIVE	DB	46	; ALSO PATCHED BY ASSIGN PROGRAM
2285          	AROUND:
2285  E1      		POP	H	; ERROR ROUTINE ADDRESS
2286  310024  		LXI	SP,?STACK
2289  E5      		PUSH	H
		
		***************************************************
		*** START OF UNIQUE ROUTINE FOR BOOTING
		***************************************************
228A  3A8422  		LDA	DRIVE
228D  D62E    		SUI	46		; BOOT ONLY FROM Z37 DRIVES
228F  FE04    		CPI	4		; MAX. 4 DRIVES ON Z37
2291  D0      		RNC
2292  4F      		MOV	C,A
2293  3E08    		MVI	A,8
2295  87      	LOOP:	ADD	A
2296  0D      		DCR	C
2297  F29522  		JP	LOOP
229A  F60F    		ORI	00001111B	; TURN ON MOTOR, INTRQ, DRQ, DDEN
229C  D378    		OUT	ICL		; SEND TO CONTROL REGISTER
		
229E  3A8322  		LDA	SECTRS		; MAINTAIN FAST BOOTING,
22A1  C605    		ADI	00000101B	; ROUND UP (INCLUDE BOOT SECTORS)
22A3  E6FC    		ANI	11111100B	; INTEGER DIVISION
22A5  0F      		RRC
22A6  0F      		RRC			; BY 4
22A7  57      		MOV	D,A		; NUMBER OF SECTORS TO READ
		
22A8  216E23  		LXI	H,INTRQ
22AB  222920  		SHLD	UIVEC+9+1	; SET RST4 ROUTINE.
22AE  017B00  		LXI	B,DATA		; C = INPUT DATA PORT  B=0
22B1  210007  		LXI	H,@BDOS-256	; -256 FOR BOOT
22B4  3E0B    		MVI	A,00001011B	; RESTORE HEAD TO TRACK 0
22B6  F3      	STEP:	DI			; DO STEP BY POLLING BUSY (NOT BY INTRQ)
22B7  D37A    		OUT	COMD		; SEND STEP COMMAND
22B9  DB7A    	WB:	IN	STAT		; WAIT FOR BUSY
22BB  0F      		RRC
22BC  30FB    		JRNC	WB
22BE  DB7A    	WNB:	IN	STAT		; THEN WAIT FOR NOT BUSY
22C0  0F      		RRC
22C1  38FB    		JRC	WNB
22C3  DB7A    		IN	STAT		; INSURE INTRQ IS CLEARED
22C5  FB      		EI
22C6  3E01    		MVI	A,1
22C8  D379    		OUT	ACL		; ENABLE 1797 TRACK/SECTOR REGISTERS
22CA  AF      		XRA	A
22CB  D37A    		OUT	SECT		; START AT SECTOR 0 (BEFORE INCREMENT)
22CD  1E09    		MVI	E,SPT		; SET COUNTER FOR SECTORS-PER-TRACK
22CF  3E01    	RDSEC:	MVI	A,1
22D1  D379    		OUT	ACL		; ENABLE TRACK/SECTOR REGISTERS
22D3  DB7A    		IN	SECT
22D5  3C      		INR	A		; SECTOR # +1
22D6  D37A    		OUT	SECT
22D8  AF      		XRA	A		; SELECT COMMAND/DATA REGISTERS
22D9  D379    		OUT	ACL
22DB  3E88    		MVI	A,10001000B	; READ RECORD, SIDE 0
22DD  D37A    		OUT	COMD		; ISSUE COMMAND
22DF  FB      		EI
22E0  76      	RDLOOP: HLT
22E1  EDA2    		INI			; INPUT BYTE
22E3  18FB    		JR	RDLOOP		; LOOP UNTIL INTERRUPT
22E5  E69F    	INTRTN: ANI	10011111B	; SET PSW/Z TO INDICATE ERROR STATUS
22E7  2812    		JRZ	OK		; ALL'S WELL IF ZERO
22E9  3A6D23  		LDA	ERRF		; SEE IF THIS IS THE SECOND TRY
22EC  B7      		ORA	A
22ED  2008    		JRNZ	XIT
22EF  2F      		CMA
22F0  326D23  		STA	ERRF		; ALLOW RETRY ONLY ONCE
22F3  3E4B    		MVI	A,01001011B	; STEP-IN WITHOUT UPDATE (FOR 80 TRK DRIVE)
22F5  18BF    		JR	STEP
22F7  AF      	XIT:	XRA	A
22F8  D378    		OUT	ICL		; MOTOR OFF AND DESELECT
22FA  C7      		RST	0		; RETURN TO MONITOR
22FB  2F      	OK:	CMA
22FC  326D23  		STA	ERRF		; PREVENT FURTHER RETRY ON THIS TRACK
22FF  15      		DCR	D		; COUNT A SECTOR READ
2300  280B    		JRZ	DONE		; STOP IF ALL SECTORS READ
2302  1D      		DCR	E		; COUNT ONE SECTOR ON THIS TRACK
2303  20CA    		JRNZ	RDSEC		; LOOP IF MORE ON THIS TRACK
2305  AF      		XRA	A
2306  326D23  		STA	ERRF		; RESET FLAG FOR NEW TRACK
2309  3E5B    		MVI	A,01011011B	; STEP-IN WITH UPDATE
230B  18A9    		JR	STEP		; STEP-IN AND START NEW TRACK
230D  3E08    	DONE:	MVI	A,00001000B	; DESELECT DRIVE
230F  D378    		OUT	ICL   
		
		***************************************************
		** START OF SYSTEM INITIALIZATION
		*************************************************** 
2311  F3      		DI
		* INITIALIZE I/O, ETC
2312  AF      		XRA	A
2313  D3D4    		OUT	?AUX+4
2315  D3E4    		OUT	?PRINTER+4
2317  D3DC    		OUT	?MODEM+4
2319  3E03    		MVI	A,?LINE$CTL
231B  F680    		ORI	10000000B	; ENABLE DIVISOR LATCH
231D  D3D3    		OUT	?AUX+3
231F  D3E3    		OUT	?PRINTER+3
2321  D3DB    		OUT	?MODEM+3
		* BAUD RATE SETUP:
2323  210C00  		LXI	H,?S9600	; AUX SERIAL @ 9600 BAUD
2326  7D      		MOV	A,L
2327  D3D0    		OUT	?AUX
2329  7C      		MOV	A,H
232A  D3D1    		OUT	?AUX+1
232C  210C00  		LXI	H,?S9600	; PRINTER @ 9600 BAUD
232F  7D      		MOV	A,L
2330  D3E0    		OUT	?PRINTER
2332  7C      		MOV	A,H
2333  D3E1    		OUT	?PRINTER+1
2335  218001  		LXI	H,?S300 	; MODEM (PAPER TAPE) @ 300 BAUD
2338  7D      		MOV	A,L
2339  D3D8    		OUT	?MODEM
233B  7C      		MOV	A,H
233C  D3D9    		OUT	?MODEM+1
		* NOW GET PORTS READY FOR I/O
233E  3E03    		MVI	A,?LINE$CTL	; NOW DE-SELECT DIVISOR LATCH
2340  D3D3    		OUT	?AUX+3
2342  D3E3    		OUT	?PRINTER+3
2344  D3DB    		OUT	?MODEM+3
2346  3E0F    		MVI	A,?MOD$CTL	; SIGNAL 'READY'
2348  D3D4    		OUT	?AUX+4
234A  D3E4    		OUT	?PRINTER+4
234C  D3DC    		OUT	?MODEM+4
234E  DBD5    		IN	?AUX+5		; RESET ANY STRAY ACTIVITY
2350  DBE5    		IN	?PRINTER+5
2352  DBDD    		IN	?MODEM+5
2354  DBD0    		IN	?AUX
2356  DBE0    		IN	?PRINTER
2358  DBD8    		IN	?MODEM
		* END OF I/O INITIALIZATION
235A  216623  		LXI	H,?CODE 	; SEQUENCE TO MOVE MEMORY-MAP
235D  0607    		MVI	B,?CODE$LEN	; NUMBER OF BYTES IN SEQUENCE
235F  0EF2    		MVI	C,?PORT 	; I/O PORT TO SEND SEQUENCE
2361  EDB3    		OUTIR
2363  C30016  		JMP	@BIOS
2366  04      	?CODE	DB	0000$01$00B
2367  0C      		DB	0000$11$00B
2368  04      		DB	0000$01$00B
2369  08      		DB	0000$10$00B
236A  0C      		DB	0000$11$00B
236B  08      		DB	0000$10$00B
236C  22      		DB	0010$00$10B	; FOR "-FA" MACHINES
0007          	?CODE$LEN	EQU	$-?CODE
		
236D  00      	ERRF	DB	0	;ERROR FLAG FOR CONTROL OF 80 TRACK SITUATION:
		;IF A 40-TRACK DISK IS BEING BOOTED ON AN 80-TRACK DRIVE EACH TRACK
		;REQUIRES TWO STEPS, ONLY UPDATING TRACK REGISTER ON ONE.
		
236E  DB7A    	INTRQ:	IN	STAT		; TURN OFF INTRQ
2370  33      		INX	SP		; DISCARD RETURN ADDRESS
2371  33      		INX	SP
2372  FB      		EI
2373  C3E522  		JMP	INTRTN		; JUMP BACK TO READ LOOP
		
2376  00000000		REPT	256-($-BOOT)-1
      00000000
      00
		
237F  0A      	ID	DB	10		; BOOT ROUTINE IDENTIFICATION
0100          	MODLEN	EQU	$-BOOT		; MUST BE 256 BYTES
2400          	?STACK: EQU	$+128
		
2380  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00010000B,00000000B
      00001000
2388  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
2390  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B,00000000B
      00000000
2398  00000000	 DB 00000000B,00000000B,00000000B,00000000B,00000100B,00000000B,00000000B,00000000B
      04000000
23A0          		END



Statistics:

     4	passes
     0	jr promotions
    64	symbols
   292	bytes

    38	macro calls
  3756	macro bytes
     0	invented symbols
