		; Boot Module for CF - unit select via port CF$BA
			maclib	ram
**** ram.lib ****
**** bcf.asm ****
			maclib	core
**** core.lib ****
**** bcf.asm ****
		
0080          	CF$BA	equ	80h		; CF base port
0088          	CF$DA	equ	CF$BA+8	; CF data port
0089          	CF$ER	equ	CF$BA+9	; CF error register (read)
0089          	CF$FR	equ	CF$BA+9	; CF feature register (write)
008A          	CF$SC	equ	CF$BA+10	; CF sector count
008B          	CF$SE	equ	CF$BA+11	; CF sector number
008C          	CF$CL	equ	CF$BA+12	; CF cylinder low
008D          	CF$CH	equ	CF$BA+13	; CF cylinder high
008E          	CF$DH	equ	CF$BA+14	; CF drive/head
008F          	CF$CS	equ	CF$BA+15	; CF command/status
		
00EF          	CMD$FEA	equ	0efh	; Set Features command
		
0001          	F$8BIT	equ	001h	; enable 8-bit transfer
0082          	F$NOWC	equ	082h	; disable write-cache
		
0046          	drv0	equ	70
0002          	ndrv	equ	2
		
1000          		org	1000h
1000  01      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  4602    		db	drv0,ndrv	; +2,+3: phy drv base, num
		
1004  C31310  		jmp	init	; +4: init entry
1007  C31510  		jmp	boot	; +7: boot entry
		
100A  46      		db	'F'	; +10: Boot command letter
100B  04      		db	4	; +11: front panel key
100C  80      		db	80h	; +12: port, 0 if variable
100D  8D9CFF  		db	10001101b,10011100b,11111111b	; +13: FP display ("CF ")
1010  434600  		db	'CF',0	; +16: mnemonic string
		
1013  AF      	init:	xra	a	; NC
1014  C9      		ret
		
1015          	boot:
			; Partition is passed to bootloader, but we need
			; segment offset before we can start.
			; stack: retL, retH, str0, str1, ...
1015  210200  		lxi	h,2
1018  39      		dad	sp
1019  EB      		xchg		; DE=string
101A  210000  		lxi	h,0	; def seg/lun
101D  225821  		shld	l2156h+2
1020  225A21  		shld	l2156h+4
1023  2E00    		mvi	l,0	; each socket wired as master (drive 0)
1025  3E46    		mvi	a,drv0
1027  323420  		sta	l2034h	; pre-loader expects 70-78 for partn
102A  1A      		ldax	d
102B  13      		inx	d
102C  FEC3    		cpi	0c3h	; JMP means no string present
102E  CA5510  		jz	nostr
1031  CDCC10  		call	trydig
1034  D24810  		jnc	gotdig
1037  CDDB10  		call	tryltr
103A  D8      		rc
103B  1A      		ldax	d
103C  13      		inx	d
103D  B7      		ora	a
103E  CA5510  		jz	gotit
1041  CDCC10  		call	trydig
1044  D8      		rc
1045  C35210  		jmp	chkend
1048  1A      	gotdig:	ldax	d
1049  13      		inx	d
104A  B7      		ora	a
104B  CA5510  		jz	gotit
104E  CDDB10  		call	tryltr
1051  D8      		rc
1052  1A      	chkend:	ldax	d
1053  B7      		ora	a
1054  C0      		rnz	; max two chars
1055          	gotit:
1055  225621  	nostr:	shld	l2156h	; l2156h[0]=DRV|27:24, l2156h[1]=23:16
1058  3A3121  		lda	AIO$UNI	; 0000000d - 0/1
105B  C601    		adi	1	; 01b/10b
105D  D380    		out	CF$BA	; select CF card
105F  AF      		xra	a
1060  D389    		out	CF$FR	; needed after power-on?
			; select 8-bit mode
1062  3E01    		mvi	a,F$8BIT
1064  D389    		out	CF$FR
1066  3EEF    		mvi	a,CMD$FEA
1068  D38F    		out	CF$CS
106A  CDB210  		call	waitcf
106D  D8      		rc
			; disable write-cache
106E  3E82    		mvi	a,F$NOWC
1070  D389    		out	CF$FR
1072  3EEF    		mvi	a,CMD$FEA
1074  D38F    		out	CF$CS
1076  CDB210  		call	waitcf
1079  D8      		rc
107A  7D      		mov	a,l
107B  F6E0    		ori	11100000b	; LBA mode + std "1" bits
107D  D38E    		out	CF$DH	; LBA 27:4, drive 0, LBA mode
107F  7C      		mov	a,h
1080  D38D    		out	CF$CH	; LBA 23:16
1082  AF      		xra	a
1083  D38C    		out	CF$CL	; LBA 15:8
1085  D38B    		out	CF$SE	; LBA 7:0
1087  3E0A    		mvi	a,10
1089  D38A    		out	CF$SC	; 10 sectors (standard boot length)
108B  3E20    		mvi	a,20h	; READ SECTORS
108D  D38F    		out	CF$CS
108F  218022  		lxi	h,bootbf
1092  0E88    		mvi	c,CF$DA
1094  1E0A    		mvi	e,10	; num sectors
1096  0600    		mvi	b,0	; should always be 0 after inir
1098          	bcf0:
1098  CDB210  		call	waitcf
109B  D8      		rc
109C  E608    		ani	1000b	; DRQ
109E  CA9810  		jz	bcf0
10A1  CDEB10  		call	inir	; 256 bytes
10A4  CDEB10  		call	inir	; 512 bytes
10A7  1D      		dcr	e
10A8  C29810  		jnz	bcf0
10AB  AF      		xra	a
10AC  D380    		out	CF$BA	; deselect drive
			; final status check?
10AE  E1      		pop	h	; adj stack for possible string
10AF  C33B00  		jmp	hwboot
		
		; Returns A=CF status register byte, or CY for error
		; trashes D, must preserve HL, BC, E
10B2          	waitcf:
10B2  DB8F    		in	CF$CS
10B4  57      		mov	d,a
10B5  B7      		ora	a
10B6  FAB210  		jm	waitcf	; busy
10B9  3E01    		mvi	a,1	; error
10BB  A2      		ana	d
10BC  C2C710  		jnz	cferr
10BF  3E40    		mvi	a,01000000b	; ready
10C1  A2      		ana	d	; NC
10C2  CAC710  		jz	cferr
10C5  7A      		mov	a,d
10C6  C9      		ret
		
10C7          	cferr:
10C7  AF      		xra	a
10C8  D380    		out	CF$BA	; deselect drive
10CA  37      		stc
10CB  C9      		ret
		
10CC          	trydig:
10CC  FE30    		cpi	'0'	; digit?
10CE  D8      		rc	; error
10CF  FE3A    		cpi	'9'+1	; max 9 partitions
10D1  3F      		cmc
10D2  D8      		rc	; error - or letter
10D3  D630    		sui	'0'
10D5  C646    		adi	drv0
10D7  323420  		sta	l2034h	; pre-loader expects 70-78 for partn
10DA  C9      		ret
		
10DB          	tryltr:
10DB  FE41    		cpi	'A'
10DD  D8      		rc	; error - or digit
10DE  E65F    		ani	5fh	; toupper
10E0  D641    		sui	'A'	; 000sssss
10E2  FE1A    		cpi	26
10E4  3F      		cmc
10E5  D8      		rc
10E6  07      		rlc
10E7  07      		rlc
10E8  07      		rlc		; sssss000
10E9  67      		mov	h,a	; no overlap with DRV
10EA  C9      		ret
		
10EB  79      	inir:	mov	a,c
10EC  32F010  		sta	inir0+1
10EF  DB00    	inir0:	in	0
10F1  77      		mov	m,a
10F2  23      		inx	h
10F3  05      		dcr	b
10F4  C2EF10  		jnz	inir0
10F7  C9      		ret
		
10F8  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
0000          	if ($ > 1800h)
		endif
		
1100          	last:	end



Statistics:

     4	passes
     0	jr promotions
   105	symbols
   256	bytes

     8	macro calls
    16	macro bytes
     0	invented symbols
