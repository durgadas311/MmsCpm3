		; Bootstrap for the H8DCopy utility.
		; Uses the "LP" Serial Port, 0E0H / 340Q
00E0          	sport	equ	0e0h
00E0          	RBR	equ	sport+0
00E0          	DLL	equ	sport+0
00E1          	DLH	equ	sport+1
00E1          	IER	equ	sport+1
00E3          	LCR	equ	sport+3
00E4          	MCR	equ	sport+4
00E5          	LSR	equ	sport+5
000C          	BAUD	equ	000ch	; 9600, high byte must be 00.
		
			maclib	ram
**** ram.lib ****
**** ch8dcopy.asm ****
			maclib	core
**** core.lib ****
**** ch8dcopy.asm ****
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
0003          	CTLC	equ	3
		
2300          	bootadr	equ	2300H
2329          	bootend	equ	2329H
2662          	utilend	equ	2662H
		
1000          		org	1000h
1000  02      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  FF00    		db	255,0	; +2,+3: phy drv base, num
		
1004  C32610  		jmp	init	; +4: init entry
1007  C32F10  		jmp	exec	; +7: action entry
		
100A  68      		db	'h'	; +10: Command letter
100B  FF      		db	-1	; +11: front panel key
100C  00      		db	0	; +12: port, 0 if variable
100D  FFFFFF  		db	11111111b,11111111b,11111111b	; +13: FP display
1010  48384420		db	'H8D Utility Bootstrap',0	; +16: mnemonic string
      5574696C
      69747920
      426F6F74
      73747261
      7000
		
1026          	init:	; H17 must be installed, or this makes no sense.
			; but we check later, for display purposes.
1026  AF      		xra	a
1027  C9      		ret
		
1028  214211  	error:	lxi	h,errmsg
102B  CD4400  		call	msgout
102E  C9      		ret
		
102F          	exec:
102F  21D510  		lxi	h,signon
1032  CD4400  		call	msgout
1035  DBF2    		in	0f2h
1037  E603    		ani	00000011b
1039  C22810  		jnz	error
103C  210820  		lxi	h,MFlag
103F  F3      		di
1040  7E      		mov	a,m
1041  F602    		ori	10b	; disable disp updates
1043  77      		mov	m,a
1044  FB      		ei
1045  217211  		lxi	h,fpmsg
1048  110B20  		lxi	d,fpLeds
104B  010900  		lxi	b,9
104E  CDC810  		call	ldir
			; TODO: print message?
1051  21EE10  		lxi	h,stmsg
1054  CD4400  		call	msgout
			; would be nice to re-use this from h8core, but it's
			; pretty much carved in stone anyway.
			; H17 initialization:
1057  F3      		di
1058  AF      		xra	a
1059  D37F    		out	07fh
105B  215A1F  		lxi	h,01f5ah	; H17 floppy ROM template
105E  114820  		lxi	d,02048h	; RAM location of data
1061  015800  		lxi	b,88		; length of "R$CONST"
1064  CDC810  		call	ldir
1067  6B      		mov	l,e		; next section filled with 0...
1068  62      		mov	h,d
1069  13      		inx	d
106A  0E1E    		mvi	c,30
106C  77      		mov	m,a
106D  CDC810  		call	ldir	; fill l20a0h...
1070  3E07    		mvi	a,7
1072  211F20  		lxi	h,intvec	; vector area
1075          	h17ini0:
1075  36C3    		mvi	m,0c3h
1077  23      		inx	h
1078  3692    		mvi	m,LOW nulint
107A  23      		inx	h
107B  3610    		mvi	m,HIGH nulint
107D  23      		inx	h
107E  3D      		dcr	a
107F  C27510  		jnz	h17ini0
			; H17 "front" should now be propped-up.
1082  FB      		ei
1083  217B11  		lxi	h,bootstrap
1086  110023  		lxi	d,bootadr
1089  012A00  		lxi	b,bootlen
108C  CDC810  		call	ldir
108F  C30023  		jmp	bootadr
		
1092  FB      	nulint:	ei
1093  C9      		ret
		
		; wait for Rx data on sport, while checking for user abort
1094  DBED    	check:	in	0edh
1096  0F      		rrc
1097  D2AF10  		jnc	chk0
109A  DBE8    		in	0e8h
109C  FE03    		cpi	CTLC
109E  C2AF10  		jnz	chk0
10A1  E1      		pop	h	; discard local return adr
10A2  CD1B00  	abort:	call	crlf
10A5  210820  		lxi	h,MFlag
10A8  F3      		di
10A9  7E      		mov	a,m
10AA  E6FD    		ani	11111101b	; enable disp updates
10AC  77      		mov	m,a
10AD  FB      		ei
10AE  C9      		ret	; return (safely?) to monitor
10AF  DBE5    	chk0:	in	LSR
10B1  1F      		rar
10B2  D29410  		jnc	check
			; char is ready, see if the last one
10B5  7B      		mov	a,e
10B6  FE29    		cpi	LOW bootend
10B8  C0      		rnz
10B9  7A      		mov	a,d
10BA  FE23    		cpi	HIGH bootend
10BC  C0      		rnz
			; on last char of boot...
10BD  E5      		push	h
10BE  D5      		push	d
10BF  216711  		lxi	h,ready
10C2  CD4400  		call	msgout
10C5  D1      		pop	d
10C6  E1      		pop	h
10C7  C9      		ret
		
10C8  F5      	ldir:	push	psw
10C9  7E      	ldir0:	mov	a,m
10CA  12      		stax	d
10CB  23      		inx	h
10CC  13      		inx	d
10CD  0B      		dcx	b
10CE  78      		mov	a,b
10CF  B1      		ora	c
10D0  C2C910  		jnz	ldir0
10D3  F1      		pop	psw
10D4  C9      		ret
		
10D5  20483844	signon:	db	' H8D Utility bootstrap',CR,LF,0
      20557469
      6C697479
      20626F6F
      74737472
      61700D0A
      00
10EE  5573696E	stmsg:	db	'Using serial port '
      67207365
      7269616C
      20706F72
      7420
1100  33      		db	(sport SHR 6)+'0'
1101  34      		db	((sport SHR 3) AND 7)+'0'
1102  30      		db	(sport AND 7)+'0'
1103  51206174		db	'Q at 9600 baud',CR,LF
      20393630
      30206261
      75640D0A
1113  53746172		db	'Start the H8D Utility on host.',CR,LF
      74207468
      65204838
      44205574
      696C6974
      79206F6E
      20686F73
      742E0D0A
1133  43746C2D		db	'Ctl-C to quit ',0
      4320746F
      20717569
      742000
1142  074E6F20	errmsg:	db	BEL,'No H17 installed (dipswitch set?)',CR,LF,0
      48313720
      696E7374
      616C6C65
      64202864
      69707377
      69746368
      20736574
      3F290D0A
      00
1167  0D0A5265	ready:	db	CR,LF,'Ready.',CR,LF,0
      6164792E
      0D0A00
		; pattern for Front Panel display...
1172  9280C2  	fpmsg:	db	10010010b,10000000b,11000010b	; "H8d"
1175  FFDE8C  		db	11111111b,11011110b,10001100b	; " rE"
1178  90C2A2  		db	10010000b,11000010b,10100010b	; "Ady"
		
		; --------- bootstrap code --------
		; This code is moved to 2300H and must end with the PCHL at 2329H
		; WARNING: The booted code peeks into this code to get the port
		; address.
		;	org	bootadr
117B          	bootstrap:
117B  AF      		xra	a
117C  D3E3    		out	LCR
117E  D3E1    		out	IER
1180  D3E4    		out	MCR
1182  3D      		dcr	a	; want 80H but FF is OK
1183  D3E3    		out	LCR
1185  3E0C    		mvi	a,LOW BAUD
1187  D3E0    		out	DLL
1189  AF      		xra	a
118A  D3E1    		out	DLH
118C  3E07    		mvi	a,00000111b	; 8 bits, 2 stop
118E  D3E3    		out	LCR
1190  DBE5    		in	LSR
1192  DBE0    		in	RBR
1194  211F23  		lxi	h,(bs1-bootstrap)+bootadr
1197  116126  		lxi	d,utilend-1
119A  DBE5    	bs1:	in	LSR	; filler
119C  1F      		rar		; filler
119D  CD9410  		call	check	; WAS: jnc (bs1-bootstrap)+bootadr
			; returns when char available...
11A0  DBE0    		in	RBR
11A2  12      		stax	d
11A3  1B      		dcx	d
0000          	 if (($-bootstrap)+bootadr <> bootend)
		 endif
11A4  E9      		pchl
002A          	bootlen	equ	$-bootstrap
		; ----- end of bootstrap code -----
		
11A5  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFF
0000          	if ($ > 1800h)
		endif
		
1200          	last:	end



Statistics:

     4	passes
     0	jr promotions
   111	symbols
   512	bytes

    91	macro calls
    16	macro bytes
     0	invented symbols
