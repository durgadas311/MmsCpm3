		; Command module for I/O port input
		
			maclib	core
**** core.lib ****
**** cinput.asm ****
			maclib	core80
**** core80.lib ****
**** cinput.asm ****
			maclib	ram
**** ram.lib ****
**** cinput.asm ****
		
000D          	CR	equ	13
000A          	LF	equ	10
0008          	BS	equ	8
0003          	CTLC	equ	3
0007          	BEL	equ	7
001B          	ESC	equ	27
007F          	DEL	equ	127
		
1000          		org	1000h
1000  01      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  FF00    		db	255,0	; +2,+3: phy drv base, num
		
1004  C31810  		jmp	init	; +4: init entry
1007  C31A10  		jmp	exec	; +7: action entry
		
100A  49      		db	'I'	; +10: Command letter
100B  FF      		db	-1	; +11: front panel key
100C  00      		db	0	; +12: port, 0 if variable
100D  FFFFFF  		db	11111111b,11111111b,11111111b	; +13: FP display
1010  496E7075		db	'Input X',0	; +16: mnemonic string
      74205800
		
1018  AF      	init:	xra	a	; NC
1019  C9      		ret
		
101A          	exec:
101A  21A610  		lxi	h,signon
101D  CD4400  		call	msgout
1020  CD5610  		call	parshx
1023  D8      		rc
1024  7A      		mov	a,d
1025  32B310  		sta	port
1028  CD9010  		call	waitcr
102B  D8      		rc
102C  CD1B00  		call	crlf
102F  3AB310  		lda	port
1032  323610  		sta	inp+1
1035  DB00    	inp:	in	0
1037  32B410  		sta	value
103A          	show:
103A  21AC10  		lxi	h,prefx
103D  CD4400  		call	msgout
1040  3AB310  		lda	port
1043  CD3101  		call	hexout
1046  21B010  		lxi	h,prefx2
1049  CD4400  		call	msgout
104C  3AB410  		lda	value
104F  CD3101  		call	hexout
1052  C9      		ret
		
1053  C31B00  	fin:	jmp	crlf
		
		; Parse a 8-bit hex value.
		; Returns CY if abort, else D=value
1056  110000  	parshx:	lxi	d,0	; D=0, E=0
1059  CD8610  	ph0:	call	hexdig
105C  DA6F10  		jc	ph1	; might be CR...
105F  4F      		mov	c,a
1060  7A      		mov	a,d
1061  07      		rlc
1062  07      		rlc
1063  07      		rlc
1064  07      		rlc
1065  81      		add	c	; A=(D<<4)+val
1066  57      		mov	d,a
1067  1C      		inr	e
1068  7B      		mov	a,e
1069  FE02    		cpi	2
106B  DA5910  		jc	ph0
106E  C9      		ret	; NC
106F  FE0D    	ph1:	cpi	CR
1071  CA8010  		jz	ph2
1074  FE7F    		cpi	DEL
1076  37      		stc
1077  C8      		rz
1078  3E07    	phe:	mvi	a,BEL
107A  CDA210  		call	chrout
107D  C35910  		jmp	ph0
1080  7B      	ph2:	mov	a,e	; CR pressed
1081  B7      		ora	a
1082  CA7810  		jz	phe	; must enter at least one digit
1085  C9      		ret
		
		; Get a hex digit value
1086  CD2801  	hexdig:	call	hexin
1089  D8      		rc	; A=char
108A  CDA210  		call	chrout	; preserves A (all)
108D  C32501  		jmp	hexbin
		
		; wait for CR or DEL (cancel)
1090  CD4A00  	waitcr:	call	conin
1093  FE7F    		cpi	DEL
1095  37      		stc
1096  C8      		rz
1097  FE0D    		cpi	CR
1099  C8      		rz
109A  3E07    		mvi	a,BEL
109C  CDA210  		call	chrout
109F  C39010  		jmp	waitcr
		
10A2  2A2600  	chrout:	lhld	conout
10A5  E9      		pchl
		
10A6  6E707574	signon:	db	'nput ',0
      2000
10AC  494E2000	prefx:	db	'IN ',0
10B0  3A2000  	prefx2:	db	': ',0
10B3  00      	port:	db	0
10B4  00      	value:	db	0
		
10B5  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFF
		
1100          	last:	end



Statistics:

     4	passes
     0	jr promotions
   109	symbols
   256	bytes

    75	macro calls
    16	macro bytes
     0	invented symbols
