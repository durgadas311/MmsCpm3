                ; Stand-alone program to read two sectors from Z67 and dump in hex/ascii
                
 0100 =         DUMPZ	equ	256	; 128, 256, 512
 0000 =         TEST	equ	0	; use test data, don't read CF
                
                	maclib	core
                
 0080 =         CF$BA	equ	80h		; CF base port
 0088 =         CF$DA	equ	CF$BA+8	; CF data port
 0089 =         CF$ER	equ	CF$BA+9	; CF error register (read)
 0089 =         CF$FR	equ	CF$BA+9	; CF feature register (write)
 008A =         CF$SC	equ	CF$BA+10	; CF sector count
 008B =         CF$SE	equ	CF$BA+11	; CF sector number
 008C =         CF$CL	equ	CF$BA+12	; CF cylinder low
 008D =         CF$CH	equ	CF$BA+13	; CF cylinder high
 008E =         CF$DH	equ	CF$BA+14	; CF drive/head
 008F =         CF$CS	equ	CF$BA+15	; CF command/status
                
 00EF =         CMD$FEA	equ	0efh	; Set Features command
 00EC =         CMD$IDD	equ	0ech	; Identify Device
                
 0001 =         F$8BIT	equ	001h	; enable 8-bit transfer
 0082 =         F$NOWC	equ	082h	; disable write-cache
                
 000D =         CR	equ	13
 000A =         LF	equ	10
                
                ; locations in CF ID buffer
 0002 =         DEFCYL	equ	1 shl 1
 0006 =         DEFHDS	equ	3 shl 1
 000C =         DEFSPT	equ	6 shl 1
 000E =         DEFCAP	equ	7 shl 1	; double-word
 0036 =         MODEL	equ	27 shl 1
 0014 =         MODELZ	equ	40 shr 1
 0014 =         SN	equ	10 shl 1
 000A =         SNZ	equ	20 shr 1
 002E =         FWREV	equ	23 shl 1
 0004 =         FWREVZ	equ	8 shr 1
                
                	cseg
                start:
 0000 317A03    	lxi	sp,stack
                	; must scan past command name...
 0003 218022    	lxi	h,2280h
 0006 46        	mov	b,m	; len
 0007 23        	inx	h
 0008 7E        skipb:	mov	a,m
 0009 23        	inx	h
 000A B7        	ora	a
 000B CA3300    	jz	skp1
 000E FE20      	cpi	' '
 0010 C20800    	jnz	skipb
                
 0013 7E        skp0:	mov	a,m
 0014 23        	inx	h
 0015 B7        	ora	a
 0016 CA3300    	jz	skp1
 0019 FE31      	cpi	'1'
 001B CA2B00    	jz	skp2
 001E E65F      	ani	01011111b
 0020 FE44      	cpi	'D'
 0022 C21300    	jnz	skp0
 0025 32A302    	sta	dmp
 0028 C31300    	jmp	skp0
 002B D630      skp2:	sui	'0'
 002D 32A402    	sta	lun
 0030 C31300    	jmp	skp0
                skp1:
                if not TEST
                	; TODO: get LUN from command buffer...
 0033 3AA402    	lda	lun
 0036 C601      	adi	1	; 01b/10b
 0038 D380      	out	CF$BA	; select CF card
 003A AF        	xra	a
 003B D389      	out	CF$FR	; needed after power-on?
                	; select 8-bit mode
 003D 3E01      	mvi	a,F$8BIT
 003F D389      	out	CF$FR
 0041 3EEF      	mvi	a,CMD$FEA
 0043 D38F      	out	CF$CS
 0045 CD6902    	call	waitcf
 0048 DAFE00    	jc	fail
                	; disable write-cache
 004B 3E82      	mvi	a,F$NOWC
 004D D389      	out	CF$FR
 004F 3EEF      	mvi	a,CMD$FEA
 0051 D38F      	out	CF$CS
 0053 CD6902    	call	waitcf
 0056 DAFE00    	jc	fail
 0059 AF        	xra	a
 005A D38E      	out	CF$DH	; LBA 27:4, drive 0, LBA mode
 005C 3EEC      	mvi	a,CMD$IDD
 005E D38F      	out	CF$CS
 0060 217A03    	lxi	h,buffer
 0063 0E88      	mvi	c,CF$DA
 0065 0600      	mvi	b,0	; should always be 0 after inir
                bcf0:
 0067 CD6902    	call	waitcf
 006A DAFE00    	jc	fail
 006D E608      	ani	1000b	; DRQ
 006F CA6700    	jz	bcf0
 0072 CD9602    	call	inir	; 256 bytes
 0075 CD9602    	call	inir	; 512 bytes
 0078 AF        	xra	a
 0079 D380      	out	CF$BA	; deselect drive
                endif
 007B CD1B00    	call	crlf
                ; Now dump data...
                	; in all cases, dump 512 bytes.
 007E 3AA302    	lda	dmp
 0081 B7        	ora	a
 0082 CA9100    	jz	nodump
 0085 217A03    	lxi	h,buffer
 0088 110001    	lxi	d,DUMPZ
 008B CD1701    	call	dump
 008E C3FA00    	jmp	exit
                nodump:
 0091 21A502    	lxi	h,modmsg
 0094 CD4400    	call	msgout
 0097 21B003    	lxi	h,buffer+MODEL
 009A 0614      	mvi	b,MODELZ
 009C CD0701    	call	string
 009F CD1B00    	call	crlf
 00A2 21AD02    	lxi	h,snmsg
 00A5 CD4400    	call	msgout
 00A8 218E03    	lxi	h,buffer+SN
 00AB 060A      	mvi	b,SNZ
 00AD CD0701    	call	string
 00B0 CD1B00    	call	crlf
 00B3 21B302    	lxi	h,fwrmsg
 00B6 CD4400    	call	msgout
 00B9 21A803    	lxi	h,buffer+FWREV
 00BC 0604      	mvi	b,FWREVZ
 00BE CD0701    	call	string
 00C1 CD1B00    	call	crlf
 00C4 21B902    	lxi	h,cylmsg
 00C7 CD4400    	call	msgout
 00CA 217C03    	lxi	h,buffer+DEFCYL
 00CD CD9601    	call	decihl
 00D0 21C502    	lxi	h,hdsmsg
 00D3 CD4400    	call	msgout
 00D6 218003    	lxi	h,buffer+DEFHDS
 00D9 CD9601    	call	decihl
 00DC 21CF02    	lxi	h,sptmsg
 00DF CD4400    	call	msgout
 00E2 218603    	lxi	h,buffer+DEFSPT
 00E5 CD9601    	call	decihl
 00E8 CD1B00    	call	crlf
 00EB 21DB02    	lxi	h,capmsg
 00EE CD4400    	call	msgout
 00F1 218803    	lxi	h,buffer+DEFCAP
 00F4 CDD901    	call	d32ihl
 00F7 CD1B00    	call	crlf
                exit:
 00FA 2A1E00    	lhld	retmon
 00FD E9        	pchl
                
                fail:
 00FE 21E602    	lxi	h,errmsg
 0101 CD4400    	call	msgout
 0104 C3FA00    	jmp	exit
                
                ; HL=buf, B=len in words
                string:
 0107 4E        	mov	c,m
 0108 23        	inx	h
 0109 7E        	mov	a,m
 010A 23        	inx	h
 010B CD9001    	call	chrout
 010E 79        	mov	a,c
 010F CD9001    	call	chrout
 0112 05        	dcr	b
 0113 C20701    	jnz	string
 0116 C9        	ret
                
                ; HL=buffer, DE=length (multiple of 16)
                dump:
 0117 CD2D01    	call	dmpline
 011A CD1B00    	call	crlf
 011D 011000    	lxi	b,16
 0120 09        	dad	b
 0121 EB        	xchg
 0122 B7        	ora	a
 0123 CD8F02    	call	dsbcb
 0126 EB        	xchg
 0127 7A        	mov	a,d
 0128 B3        	ora	e
 0129 C21701    	jnz	dump
 012C C9        	ret
                
                ; Dump 16 bytes at HL
                dmpline:
 012D D5        	push	d
 012E E5        	push	h
                	; yuk... need offset, not address...
 012F 117A03    	lxi	d,buffer
 0132 B7        	ora	a
 0133 CD8802    	call	dsbcd
 0136 CD7A01    	call	hexwrd
 0139 3E3A      	mvi	a,':'
 013B CD9001    	call	chrout
                	; blank space provided by dmphex
 013E E1        	pop	h
 013F E5        	push	h
 0140 CD5101    	call	dmphex
 0143 218302    	lxi	h,spcs
 0146 CD4400    	call	msgout
 0149 E1        	pop	h
 014A E5        	push	h
 014B CD6201    	call	dmpchr
 014E E1        	pop	h
 014F D1        	pop	d
 0150 C9        	ret
                
                dmphex:
 0151 0610      	mvi	b,16
 0153 3E20      dh0:	mvi	a,' '
 0155 CD9001    	call	chrout
 0158 7E        	mov	a,m
 0159 CD7F01    	call	hexout
 015C 23        	inx	h
 015D 05C25301  	dcr b ! jnz	dh0
 0161 C9        	ret
                
                dmpchr:
 0162 0610      	mvi	b,16
 0164 7E        dc0:	mov	a,m
 0165 FE20      	cpi	' '
 0167 DA6F01    	jc	dc1
 016A FE7F      	cpi	'~'+1
 016C DA7101    	jc	dc2
 016F 3E2E      dc1:	mvi	a,'.'
 0171 CD9001    dc2:	call	chrout
 0174 23        	inx	h
 0175 05C26401  	dcr b ! jnz	dc0
 0179 C9        	ret
                
                ; HL=word
 017A 7C        hexwrd:	mov	a,h
 017B CD7F01    	call	hexout
 017E 7D        	mov	a,l
 017F F5        hexout:	push	psw
 0180 07        	rlc
 0181 07        	rlc
 0182 07        	rlc
 0183 07        	rlc
 0184 CD8801    	call	hexdig
 0187 F1        	pop	psw
 0188 E60F      hexdig:	ani	0fh
 018A C690      	adi	90h
 018C 27        	daa
 018D CE40      	aci	40h
 018F 27        	daa
 0190 E5        chrout:	push	h
 0191 2A2600    	lhld	conout
 0194 E3        	xthl
 0195 C9        	ret
                
                
                ; load (HL) into HL and print
                decihl:
 0196 7E        	mov	a,m
 0197 23        	inx	h
 0198 66        	mov	h,m
 0199 6F        	mov	l,a
                ; Print out HL in decimal
                decwrd:
 019A 0E00      	mvi	c,0	; leading zero suppression
                dec16:
 019C 111027    	lxi	d,10000
 019F CDBB01    	call	div16
 01A2 11E803    	lxi	d,1000
 01A5 CDBB01    	call	div16
 01A8 116400    	lxi	d,100
 01AB CDBB01    	call	div16
 01AE 110A00    	lxi	d,10
 01B1 CDBB01    	call	div16
 01B4 7D        	mov	a,l
 01B5 C630      	adi	'0'
 01B7 CD9001    	call	chrout
 01BA C9        	ret
                
 01BB 0600      div16:	mvi	b,0
 01BD B7        dv0:	ora	a
 01BE CD8802    	call	dsbcd
 01C1 04        	inr	b
 01C2 D2BD01    	jnc	dv0
 01C5 19        	dad	d
 01C6 05        	dcr	b
 01C7 C2D001    	jnz	dv1
 01CA 79        	mov	a,c
 01CB B7        	ora	a
 01CC C2D001    	jnz	dv1
 01CF C9        	ret
 01D0 0E01      dv1:	mvi	c,1
 01D2 3E30      	mvi	a,'0'
 01D4 80        	add	b
 01D5 CD9001    	call	chrout
 01D8 C9        	ret
                
                ; HL = (int32) - MSW, LSW, little-endian words
                d32ihl:
 01D9 4E        	mov	c,m
 01DA 23        	inx	h
 01DB 46        	mov	b,m
 01DC 23        	inx	h
 01DD 5E        	mov	e,m
 01DE 23        	inx	h
 01DF 56        	mov	d,m
                ; print number in BC:DE
                dec32:
 01E0 2E00      	mvi	l,0
 01E2 2609      	mvi	h,9
 01E4 E5        	push	h	; control vars on stack
 01E5 211402    	lxi	h,mlt10
 01E8 AF        dd1:	xra	a
 01E9 CD4D02    dd0:	call	sub32
 01EC 3C        	inr	a
 01ED D2E901    	jnc	dd0
 01F0 CD3802    	call	add32
 01F3 E3        	xthl	; control vars in HL
 01F4 3D        	dcr	a
 01F5 C2FD01    	jnz	dd2
 01F8 2D        	dcr	l
 01F9 2C        	inr	l
 01FA CA0402    	jz	dd3
 01FD 2E01      dd2:	mvi	l,1
 01FF C630      	adi	'0'
 0201 CD9001    	call	chrout
                dd3:
 0204 25        	dcr	h
 0205 E3        	xthl	; control vars back on stack
 0206 23        	inx	h
 0207 23        	inx	h
 0208 23        	inx	h
 0209 23        	inx	h
 020A C2E801    	jnz	dd1
 020D E1        	pop	h
 020E 3E30      	mvi	a,'0'
 0210 83        	add	e
 0211 C39001    	jmp	chrout
                
                mlt10:
 0214 3B9ACA00  	db	3Bh,9Ah,0CAh,00h	;  1,000,000,000
 0218 05F5E100  	db	05h,0F5h,0E1h,00h	;    100,000,000
 021C 00989680  	db	00h,98h,96h,80h		;     10,000,000
 0220 000F4240  	db	00h,0Fh,42h,40h		;      1,000,000
 0224 000186A0  	db	00h,01h,86h,0A0h	;        100,000
 0228 00002710  	db	00h,00h,27h,10h		;         10,000
 022C 000003E8  	db	00h,00h,03h,0E8h	;          1,000
 0230 00000064  	db	00h,00h,00h,64h		;            100
 0234 0000000A  	db	00h,00h,00h,0ah		;             10
                
                ; BC:DE += (mlt10[HL])
 0238 F5        add32:	push	psw
 0239 23        	inx	h
 023A 23        	inx	h
 023B 23        	inx	h
 023C 7B        	mov	a,e
 023D 86        	add	m
 023E 5F        	mov	e,a
 023F 2B        	dcx	h
 0240 7A        	mov	a,d
 0241 8E        	adc	m
 0242 57        	mov	d,a
 0243 2B        	dcx	h
 0244 79        	mov	a,c
 0245 8E        	adc	m
 0246 4F        	mov	c,a
 0247 2B        	dcx	h
 0248 78        	mov	a,b
 0249 8E        	adc	m
 024A 47        	mov	b,a
 024B F1        	pop	psw
 024C C9        	ret	; CY ignored
                
                ; BC:DE += (mlt10[HL])
 024D F5        sub32:	push	psw
 024E 23        	inx	h
 024F 23        	inx	h
 0250 23        	inx	h
 0251 7B        	mov	a,e
 0252 96        	sub	m
 0253 5F        	mov	e,a
 0254 2B        	dcx	h
 0255 7A        	mov	a,d
 0256 9E        	sbb	m
 0257 57        	mov	d,a
 0258 2B        	dcx	h
 0259 79        	mov	a,c
 025A 9E        	sbb	m
 025B 4F        	mov	c,a
 025C 2B        	dcx	h
 025D 78        	mov	a,b
 025E 9E        	sbb	m
 025F 47        	mov	b,a
                	; CY = borrow... must preserve
 0260 DA6602    	jc	sb0
 0263 F1        	pop	psw
 0264 B7        	ora	a	; NC
 0265 C9        	ret
 0266 F1        sb0:	pop	psw
 0267 37        	stc
 0268 C9        	ret
                
                ; Returns A=CF status register byte, or CY for error
                ; trashes D, must preserve HL, BC, E
                waitcf:
 0269 DB8F      	in	CF$CS
 026B 57        	mov	d,a
 026C B7        	ora	a
 026D FA6902    	jm	waitcf	; busy
 0270 3E01      	mvi	a,1	; error
 0272 A2        	ana	d
 0273 C27E02    	jnz	cferr
 0276 3E40      	mvi	a,01000000b	; ready
 0278 A2        	ana	d	; NC
 0279 CA7E02    	jz	cferr
 027C 7A        	mov	a,d
 027D C9        	ret
                
                cferr:
 027E AF        	xra	a
 027F D380      	out	CF$BA	; deselect drive
 0281 37        	stc
 0282 C9        	ret
                
 0283 2020202000spcs:	db	'    ',0
                
                ; HL = HL - DE - CY
 0288 7D        dsbcd:	mov	a,l
 0289 9B        	sbb	e
 028A 6F        	mov	l,a
 028B 7C        	mov	a,h
 028C 9A        	sbb	d
 028D 67        	mov	h,a
 028E C9        	ret
 028F 7D        dsbcb:	mov	a,l
 0290 99        	sbb	c
 0291 6F        	mov	l,a
 0292 7C        	mov	a,h
 0293 98        	sbb	b
 0294 67        	mov	h,a
 0295 C9        	ret
                
 0296 79        inir:	mov	a,c
 0297 329B02    	sta	inir0+1
 029A DB00      inir0:	in	0
 029C 77        	mov	m,a
 029D 23        	inx	h
 029E 05        	dcr	b
 029F C29A02    	jnz	inir0
 02A2 C9        	ret
                
 02A3 00        dmp:	db	0	; 'D' if dump hex vs. print info
 02A4 00        lun:	db	0
 02A5 4D6F64656Cmodmsg:	db	'Model: ',0
 02AD 532F4E3A20snmsg:	db	'S/N: ',0
 02B3 5265763A20fwrmsg:	db	'Rev: ',0
 02B9 43796C696Ecylmsg:	db	'Cylinders: ',0
 02C5 2C20486561hdsmsg:	db	', Heads: ',0
 02CF 2C20536563sptmsg:	db	', Sectors: ',0
 02DB 4361706163capmsg:	db	'Capacity: ',0
 02E6 434620636Ferrmsg:	db	'CF command failed',CR,LF,0
                
 02FA           	ds	128
 037A           stack:	ds	0
                
 037A           buffer:	ds	0	; 512
                if TEST
                	db	8Ah,84h,1Ch,1Fh,00h,00h,10h,00h,00h,00h,40h,02h,3Fh,00h,7Ah,00h
                	db	40h,7Eh,00h,00h,20h,20h,20h,20h,31h,30h,36h,32h,30h,31h,31h,49h
                	db	30h,39h,4Ah,38h,39h,31h,35h,32h,02h,00h,02h,00h,04h,00h,44h,48h
                	db	20h,58h,2Eh,34h,32h,33h,61h,53h,44h,6Eh,73h,69h,20h,6Bh,44h,53h
                	db	46h,43h,32h,48h,30h,2Dh,34h,30h,20h,47h,20h,20h,20h,20h,20h,20h
                	db	20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,04h,00h
                	db	00h,00h,00h,03h,00h,00h,00h,02h,00h,00h,03h,00h,1Ch,1Fh,10h,00h
                	db	3Fh,00h,40h,7Eh,7Ah,00h,00h,01h,40h,7Eh,7Ah,00h,00h,00h,07h,00h
                endif
                
 037A           	end
