                ; Stand-alone program to read two sectors from Z67 and dump in hex/ascii
                
 0100 =         DUMPZ	equ	256	; 128, 256, 512
 0000 =         TEST	equ	0	; use test data, don't read CF
                
                	maclib	core
                
 0080 =         CF$BA	equ	80h		; CF base port
 0088 =         CF$DA	equ	CF$BA+8	; CF data port
 0089 =         CF$ER	equ	CF$BA+9	; CF error register (read)
 0089 =         CF$FR	equ	CF$BA+9	; CF feature register (write)
 008A =         CF$SC	equ	CF$BA+10	; CF sector count
 008B =         CF$SE	equ	CF$BA+11	; CF sector number
 008C =         CF$CL	equ	CF$BA+12	; CF cylinder low
 008D =         CF$CH	equ	CF$BA+13	; CF cylinder high
 008E =         CF$DH	equ	CF$BA+14	; CF drive/head
 008F =         CF$CS	equ	CF$BA+15	; CF command/status
                
 00EF =         CMD$FEA	equ	0efh	; Set Features command
 00EC =         CMD$IDD	equ	0ech	; Identify Device
                
 0001 =         F$8BIT	equ	001h	; enable 8-bit transfer
 0082 =         F$NOWC	equ	082h	; disable write-cache
                
 000D =         CR	equ	13
 000A =         LF	equ	10
                
                ; locations in CF ID buffer
 0002 =         DEFCYL	equ	1 shl 1
 0006 =         DEFHDS	equ	3 shl 1
 000C =         DEFSPT	equ	6 shl 1
 000E =         DEFCAP	equ	7 shl 1	; double-word
 0036 =         MODEL	equ	27 shl 1
 0014 =         MODELZ	equ	40 shr 1
 0014 =         SN	equ	10 shl 1
 000A =         SNZ	equ	20 shr 1
 002E =         FWREV	equ	23 shl 1
 0004 =         FWREVZ	equ	8 shr 1
                
                	cseg
                start:
 0000 31A003    	lxi	sp,stack
                	; must scan past command name...
 0003 218022    	lxi	h,2280h
 0006 46        	mov	b,m	; len
 0007 23        	inx	h
 0008 7E        skipb:	mov	a,m
 0009 23        	inx	h
 000A B7        	ora	a
 000B CA3300    	jz	skp1
 000E FE20      	cpi	' '
 0010 C20800    	jnz	skipb
                
 0013 7E        skp0:	mov	a,m
 0014 23        	inx	h
 0015 B7        	ora	a
 0016 CA3300    	jz	skp1
 0019 FE31      	cpi	'1'
 001B CA2B00    	jz	skp2
 001E E65F      	ani	01011111b
 0020 FE44      	cpi	'D'
 0022 C21300    	jnz	skp0
 0025 32B802    	sta	dmp
 0028 C31300    	jmp	skp0
 002B D630      skp2:	sui	'0'
 002D 32B902    	sta	lun
 0030 C31300    	jmp	skp0
                skp1:
                if not TEST
                	; TODO: get LUN from command buffer...
 0033 3AB902    	lda	lun
 0036 C601      	adi	1	; 01b/10b
 0038 D380      	out	CF$BA	; select CF card
 003A AF        	xra	a
 003B D389      	out	CF$FR	; needed after power-on?
                	; select 8-bit mode
 003D 3E01      	mvi	a,F$8BIT
 003F D389      	out	CF$FR
 0041 3EEF      	mvi	a,CMD$FEA
 0043 D38F      	out	CF$CS
 0045 CD7E02    	call	waitcf
 0048 DA0401    	jc	fail
                	; disable write-cache
 004B 3E82      	mvi	a,F$NOWC
 004D D389      	out	CF$FR
 004F 3EEF      	mvi	a,CMD$FEA
 0051 D38F      	out	CF$CS
 0053 CD7E02    	call	waitcf
 0056 DA0401    	jc	fail
 0059 AF        	xra	a
 005A D38E      	out	CF$DH	; LBA 27:4, drive 0, LBA mode
 005C 3EEC      	mvi	a,CMD$IDD
 005E D38F      	out	CF$CS
 0060 21A003    	lxi	h,buffer
 0063 0E88      	mvi	c,CF$DA
 0065 0600      	mvi	b,0	; should always be 0 after inir
                bcf0:
 0067 CD7E02    	call	waitcf
 006A DA0401    	jc	fail
 006D E608      	ani	1000b	; DRQ
 006F CA6700    	jz	bcf0
 0072 CDAB02    	call	inir	; 256 bytes
 0075 CDAB02    	call	inir	; 512 bytes
 0078 AF        	xra	a
 0079 D380      	out	CF$BA	; deselect drive
                endif
 007B CD1B00    	call	crlf
                ; Now dump data...
                	; in all cases, dump 512 bytes.
 007E 3AB802    	lda	dmp
 0081 B7        	ora	a
 0082 CA9100    	jz	nodump
 0085 21A003    	lxi	h,buffer
 0088 110001    	lxi	d,DUMPZ
 008B CD2C01    	call	dump
 008E C30001    	jmp	exit
                nodump:
 0091 21BA02    	lxi	h,modmsg
 0094 CD4400    	call	msgout
 0097 21D603    	lxi	h,buffer+MODEL
 009A 0614      	mvi	b,MODELZ
 009C CD0D01    	call	string
 009F CD1B00    	call	crlf
 00A2 21C202    	lxi	h,snmsg
 00A5 CD4400    	call	msgout
 00A8 21B403    	lxi	h,buffer+SN
 00AB 060A      	mvi	b,SNZ
 00AD CD0D01    	call	string
 00B0 CD1B00    	call	crlf
 00B3 21C802    	lxi	h,fwrmsg
 00B6 CD4400    	call	msgout
 00B9 21CE03    	lxi	h,buffer+FWREV
 00BC 0604      	mvi	b,FWREVZ
 00BE CD0D01    	call	string
 00C1 CD1B00    	call	crlf
 00C4 21CE02    	lxi	h,cylmsg
 00C7 CD4400    	call	msgout
 00CA 21A203    	lxi	h,buffer+DEFCYL
 00CD CDAB01    	call	decihl
 00D0 21DA02    	lxi	h,hdsmsg
 00D3 CD4400    	call	msgout
 00D6 21A603    	lxi	h,buffer+DEFHDS
 00D9 CDAB01    	call	decihl
 00DC 21E402    	lxi	h,sptmsg
 00DF CD4400    	call	msgout
 00E2 21AC03    	lxi	h,buffer+DEFSPT
 00E5 CDAB01    	call	decihl
 00E8 CD1B00    	call	crlf
 00EB 21F002    	lxi	h,capmsg
 00EE CD4400    	call	msgout
 00F1 21AE03    	lxi	h,buffer+DEFCAP
 00F4 CDEE01    	call	d32ihl
 00F7 21FB02    	lxi	h,blkmsg
 00FA CD4400    	call	msgout
 00FD CD1B00    	call	crlf
                exit:
 0100 2A1E00    	lhld	retmon
 0103 E9        	pchl
                
                fail:
 0104 210C03    	lxi	h,errmsg
 0107 CD4400    	call	msgout
 010A C30001    	jmp	exit
                
                ; HL=buf, B=len in words
 010D 1E00      string:	mvi	e,0	; leading blank suppression
 010F 4E        	mov	c,m
 0110 23        	inx	h
 0111 7E        	mov	a,m
 0112 23        	inx	h
 0113 CD1F01    	call	debchr
 0116 79        	mov	a,c
 0117 CD1F01    	call	debchr
 011A 05        	dcr	b
 011B C20D01    	jnz	string
 011E C9        	ret
                ; suppress leading blanks...
 011F FE20      debchr:	cpi	' '
 0121 C22701    	jnz	deb0
 0124 1D        	dcr	e
 0125 1C        	inr	e
 0126 C8        	rz
 0127 1E01      deb0:	mvi	e,1
 0129 C3A501    	jmp	chrout
                
                ; HL=buffer, DE=length (multiple of 16)
                dump:
 012C CD4201    	call	dmpline
 012F CD1B00    	call	crlf
 0132 011000    	lxi	b,16
 0135 09        	dad	b
 0136 EB        	xchg
 0137 B7        	ora	a
 0138 CDA402    	call	dsbcb
 013B EB        	xchg
 013C 7A        	mov	a,d
 013D B3        	ora	e
 013E C22C01    	jnz	dump
 0141 C9        	ret
                
                ; Dump 16 bytes at HL
                dmpline:
 0142 D5        	push	d
 0143 E5        	push	h
                	; yuk... need offset, not address...
 0144 11A003    	lxi	d,buffer
 0147 B7        	ora	a
 0148 CD9D02    	call	dsbcd
 014B CD8F01    	call	hexwrd
 014E 3E3A      	mvi	a,':'
 0150 CDA501    	call	chrout
                	; blank space provided by dmphex
 0153 E1        	pop	h
 0154 E5        	push	h
 0155 CD6601    	call	dmphex
 0158 219802    	lxi	h,spcs
 015B CD4400    	call	msgout
 015E E1        	pop	h
 015F E5        	push	h
 0160 CD7701    	call	dmpchr
 0163 E1        	pop	h
 0164 D1        	pop	d
 0165 C9        	ret
                
                dmphex:
 0166 0610      	mvi	b,16
 0168 3E20      dh0:	mvi	a,' '
 016A CDA501    	call	chrout
 016D 7E        	mov	a,m
 016E CD9401    	call	hexout
 0171 23        	inx	h
 0172 05C26801  	dcr b ! jnz	dh0
 0176 C9        	ret
                
                dmpchr:
 0177 0610      	mvi	b,16
 0179 7E        dc0:	mov	a,m
 017A FE20      	cpi	' '
 017C DA8401    	jc	dc1
 017F FE7F      	cpi	'~'+1
 0181 DA8601    	jc	dc2
 0184 3E2E      dc1:	mvi	a,'.'
 0186 CDA501    dc2:	call	chrout
 0189 23        	inx	h
 018A 05C27901  	dcr b ! jnz	dc0
 018E C9        	ret
                
                ; HL=word
 018F 7C        hexwrd:	mov	a,h
 0190 CD9401    	call	hexout
 0193 7D        	mov	a,l
 0194 F5        hexout:	push	psw
 0195 07        	rlc
 0196 07        	rlc
 0197 07        	rlc
 0198 07        	rlc
 0199 CD9D01    	call	hexdig
 019C F1        	pop	psw
 019D E60F      hexdig:	ani	0fh
 019F C690      	adi	90h
 01A1 27        	daa
 01A2 CE40      	aci	40h
 01A4 27        	daa
 01A5 E5        chrout:	push	h
 01A6 2A2600    	lhld	conout
 01A9 E3        	xthl
 01AA C9        	ret
                
                
                ; load (HL) into HL and print
                decihl:
 01AB 7E        	mov	a,m
 01AC 23        	inx	h
 01AD 66        	mov	h,m
 01AE 6F        	mov	l,a
                ; Print out HL in decimal
                decwrd:
 01AF 0E00      	mvi	c,0	; leading zero suppression
                dec16:
 01B1 111027    	lxi	d,10000
 01B4 CDD001    	call	div16
 01B7 11E803    	lxi	d,1000
 01BA CDD001    	call	div16
 01BD 116400    	lxi	d,100
 01C0 CDD001    	call	div16
 01C3 110A00    	lxi	d,10
 01C6 CDD001    	call	div16
 01C9 7D        	mov	a,l
 01CA C630      	adi	'0'
 01CC CDA501    	call	chrout
 01CF C9        	ret
                
 01D0 0600      div16:	mvi	b,0
 01D2 B7        dv0:	ora	a
 01D3 CD9D02    	call	dsbcd
 01D6 04        	inr	b
 01D7 D2D201    	jnc	dv0
 01DA 19        	dad	d
 01DB 05        	dcr	b
 01DC C2E501    	jnz	dv1
 01DF 79        	mov	a,c
 01E0 B7        	ora	a
 01E1 C2E501    	jnz	dv1
 01E4 C9        	ret
 01E5 0E01      dv1:	mvi	c,1
 01E7 3E30      	mvi	a,'0'
 01E9 80        	add	b
 01EA CDA501    	call	chrout
 01ED C9        	ret
                
                ; HL = (int32) - MSW, LSW, little-endian words
                d32ihl:
 01EE 4E        	mov	c,m
 01EF 23        	inx	h
 01F0 46        	mov	b,m
 01F1 23        	inx	h
 01F2 5E        	mov	e,m
 01F3 23        	inx	h
 01F4 56        	mov	d,m
                ; print number in BC:DE
                dec32:
 01F5 2E00      	mvi	l,0
 01F7 2609      	mvi	h,9
 01F9 E5        	push	h	; control vars on stack
 01FA 212902    	lxi	h,mlt10
 01FD AF        dd1:	xra	a
 01FE CD6202    dd0:	call	sub32
 0201 3C        	inr	a
 0202 D2FE01    	jnc	dd0
 0205 CD4D02    	call	add32
 0208 E3        	xthl	; control vars in HL
 0209 3D        	dcr	a
 020A C21202    	jnz	dd2
 020D 2D        	dcr	l
 020E 2C        	inr	l
 020F CA1902    	jz	dd3
 0212 2E01      dd2:	mvi	l,1
 0214 C630      	adi	'0'
 0216 CDA501    	call	chrout
                dd3:
 0219 25        	dcr	h
 021A E3        	xthl	; control vars back on stack
 021B 23        	inx	h
 021C 23        	inx	h
 021D 23        	inx	h
 021E 23        	inx	h
 021F C2FD01    	jnz	dd1
 0222 E1        	pop	h
 0223 3E30      	mvi	a,'0'
 0225 83        	add	e
 0226 C3A501    	jmp	chrout
                
                mlt10:
 0229 3B9ACA00  	db	3Bh,9Ah,0CAh,00h	;  1,000,000,000
 022D 05F5E100  	db	05h,0F5h,0E1h,00h	;    100,000,000
 0231 00989680  	db	00h,98h,96h,80h		;     10,000,000
 0235 000F4240  	db	00h,0Fh,42h,40h		;      1,000,000
 0239 000186A0  	db	00h,01h,86h,0A0h	;        100,000
 023D 00002710  	db	00h,00h,27h,10h		;         10,000
 0241 000003E8  	db	00h,00h,03h,0E8h	;          1,000
 0245 00000064  	db	00h,00h,00h,64h		;            100
 0249 0000000A  	db	00h,00h,00h,0ah		;             10
                
                ; BC:DE += (mlt10[HL])
 024D F5        add32:	push	psw
 024E 23        	inx	h
 024F 23        	inx	h
 0250 23        	inx	h
 0251 7B        	mov	a,e
 0252 86        	add	m
 0253 5F        	mov	e,a
 0254 2B        	dcx	h
 0255 7A        	mov	a,d
 0256 8E        	adc	m
 0257 57        	mov	d,a
 0258 2B        	dcx	h
 0259 79        	mov	a,c
 025A 8E        	adc	m
 025B 4F        	mov	c,a
 025C 2B        	dcx	h
 025D 78        	mov	a,b
 025E 8E        	adc	m
 025F 47        	mov	b,a
 0260 F1        	pop	psw
 0261 C9        	ret	; CY ignored
                
                ; BC:DE += (mlt10[HL])
 0262 F5        sub32:	push	psw
 0263 23        	inx	h
 0264 23        	inx	h
 0265 23        	inx	h
 0266 7B        	mov	a,e
 0267 96        	sub	m
 0268 5F        	mov	e,a
 0269 2B        	dcx	h
 026A 7A        	mov	a,d
 026B 9E        	sbb	m
 026C 57        	mov	d,a
 026D 2B        	dcx	h
 026E 79        	mov	a,c
 026F 9E        	sbb	m
 0270 4F        	mov	c,a
 0271 2B        	dcx	h
 0272 78        	mov	a,b
 0273 9E        	sbb	m
 0274 47        	mov	b,a
                	; CY = borrow... must preserve
 0275 DA7B02    	jc	sb0
 0278 F1        	pop	psw
 0279 B7        	ora	a	; NC
 027A C9        	ret
 027B F1        sb0:	pop	psw
 027C 37        	stc
 027D C9        	ret
                
                ; Returns A=CF status register byte, or CY for error
                ; trashes D, must preserve HL, BC, E
                waitcf:
 027E DB8F      	in	CF$CS
 0280 57        	mov	d,a
 0281 B7        	ora	a
 0282 FA7E02    	jm	waitcf	; busy
 0285 3E01      	mvi	a,1	; error
 0287 A2        	ana	d
 0288 C29302    	jnz	cferr
 028B 3E40      	mvi	a,01000000b	; ready
 028D A2        	ana	d	; NC
 028E CA9302    	jz	cferr
 0291 7A        	mov	a,d
 0292 C9        	ret
                
                cferr:
 0293 AF        	xra	a
 0294 D380      	out	CF$BA	; deselect drive
 0296 37        	stc
 0297 C9        	ret
                
 0298 2020202000spcs:	db	'    ',0
                
                ; HL = HL - DE - CY
 029D 7D        dsbcd:	mov	a,l
 029E 9B        	sbb	e
 029F 6F        	mov	l,a
 02A0 7C        	mov	a,h
 02A1 9A        	sbb	d
 02A2 67        	mov	h,a
 02A3 C9        	ret
 02A4 7D        dsbcb:	mov	a,l
 02A5 99        	sbb	c
 02A6 6F        	mov	l,a
 02A7 7C        	mov	a,h
 02A8 98        	sbb	b
 02A9 67        	mov	h,a
 02AA C9        	ret
                
 02AB 79        inir:	mov	a,c
 02AC 32B002    	sta	inir0+1
 02AF DB00      inir0:	in	0
 02B1 77        	mov	m,a
 02B2 23        	inx	h
 02B3 05        	dcr	b
 02B4 C2AF02    	jnz	inir0
 02B7 C9        	ret
                
 02B8 00        dmp:	db	0	; 'D' if dump hex vs. print info
 02B9 00        lun:	db	0
 02BA 4D6F64656Cmodmsg:	db	'Model: ',0
 02C2 532F4E3A20snmsg:	db	'S/N: ',0
 02C8 5265763A20fwrmsg:	db	'Rev: ',0
 02CE 43796C696Ecylmsg:	db	'Cylinders: ',0
 02DA 2C20486561hdsmsg:	db	', Heads: ',0
 02E4 2C20536563sptmsg:	db	', Sectors: ',0
 02F0 4361706163capmsg:	db	'Capacity: ',0
 02FB 20626C6F63blkmsg:	db	' blocks(sectors)',0
 030C 434620636Ferrmsg:	db	'CF command failed',CR,LF,0
                
 0320           	ds	128
 03A0           stack:	ds	0
                
 03A0           buffer:	ds	0	; 512
                if TEST
                ; Data from Norberto's 4G SanDisk:
                	db	8Ah,84h,1Ch,1Fh,00h,00h,10h,00h,00h,00h,40h,02h,3Fh,00h,7Ah,00h
                	db	40h,7Eh,00h,00h,20h,20h,20h,20h,31h,30h,36h,32h,30h,31h,31h,49h
                	db	30h,39h,4Ah,38h,39h,31h,35h,32h,02h,00h,02h,00h,04h,00h,44h,48h
                	db	20h,58h,2Eh,34h,32h,33h,61h,53h,44h,6Eh,73h,69h,20h,6Bh,44h,53h
                	db	46h,43h,32h,48h,30h,2Dh,34h,30h,20h,47h,20h,20h,20h,20h,20h,20h
                	db	20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,20h,04h,00h
                	db	00h,00h,00h,03h,00h,00h,00h,02h,00h,00h,03h,00h,1Ch,1Fh,10h,00h
                	db	3Fh,00h,40h,7Eh,7Ah,00h,00h,01h,40h,7Eh,7Ah,00h,00h,00h,07h,00h
                ; 0080:
                	db	03h,00h,78h,00h,78h,00h,78h,00h,78h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	10h,00h,00h,00h,20h,00h,04h,40h,00h,40h,00h,00h,04h,00h,00h,40h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                ; 0100: data not gathered
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                ; 0180: data not gathered
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                	db	00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
                endif
                
 03A0           	end
