		; H8 Z80-CPU v3.2 Monitor (EEPROM 28C256)
0020          	VERN	equ	020h	; ROM version
		
0000          	false	equ	0
FFFF          	true	equ	not false
		
0000          	alpha	equ	0
0015          	beta	equ	21
		
FFFF          	z180	equ	true
0000          	h8nofp	equ	false
0000          	h89	equ	false
0000          	nofp	set	false
		
			maclib	ram
**** ram.lib ****
**** h8z180.asm ****
			maclib	setup
**** setup.lib ****
**** h8z180.asm ****
FFFF          	if z180
F180          	pcode	set	0f180h
			maclib	z180
**** z180.lib ****
**** h8z180.asm ****
FFFF          	use$dma	equ	true
0000          	if h8nofp
		endif
0000          	if h89
		endif
		else	; Z80 based
		endif	; z180 else z80
		
0000          	if h8nofp or h89
		endif
			$*macro
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
0009          	TAB	equ	9
0008          	BS	equ	8
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
		; ctrl port F2 bit definitions
0014          	ctl$SPD		equ	00010100b	; CPU speed control bits
0002          	ctl$CLK		equ	00000010b	; enable H89 2mS clock (not used here)
0008          	ctl$MEM1	equ	00001000b	; maps full ROM (if !ORG0)
0020          	ctl$ORG0	equ	00100000b	; maps full RAM
0080          	ctl$IO1		equ	10000000b	; enables EEPROM write
		
		; MFlag bit definitions
0080          	mfl$HLT	equ	10000000b	; disable HLT processing (TODO)
0040          	mfl$NRF	equ	01000000b	; disable refresh of display
0002          	mfl$DDU	equ	00000010b	; disable disp update (debug info)
0001          	mfl$CLK	equ	00000001b	; allow 2mS clock hook (user hook)
		
FFFF          	if z180
		; Z180 internal registers (I/O ports) - CCR
0034          	itc	equ	34h
0038          	mmu$cbr	equ	38h
0039          	mmu$bbr	equ	39h
003A          	mmu$cbar equ	3ah
0020          	sar0l	equ	20h
0021          	sar0h	equ	21h
0022          	sar0b	equ	22h
0023          	dar0l	equ	23h
0024          	dar0h	equ	24h
0025          	dar0b	equ	25h
0026          	bcr0l	equ	26h
0027          	bcr0h	equ	27h
0030          	dstat	equ	30h
0031          	dmode	equ	31h
0032          	dcntl	equ	32h
		else
		endif
		
3000          	memtest	equ	03000h
C000          	ramboot	equ	0c000h
		; fudge this... H17 junk
1F5A          	R$CONST	equ	01f5ah	; 037.132 R.CONST block...
1C19          	CLOCK	equ	01c19h	; 034.031 CLOCK
		
		; offsets in a module
0000          	mdpgs	equ	0	; num pages
0001          	mdorg	equ	1	; ORG for module (run/load addr)
0002          	mdbase	equ	2	; base phy drv num
0003          	mdluns	equ	3	; num LUNs
0004          	mdinit	equ	4	; init entry point
0007          	mdboot	equ	7	; boot entry point
000A          	mdchr	equ	10	; device letter
000B          	mdkey	equ	11	; device key
000C          	mdport	equ	12	; device port, 0 if variable
000D          	mddisp	equ	13	; boot front panel mnemonic
0010          	mdname	equ	16	; boot string
		
FFFF          	if z180
		; Where ROM is mapped-in for searching...
4000          	btmap	equ	4000h
6000          	btmods	equ	btmap+2000h
C000          	bterom	equ	btmap+8000h
		else
		endif
		
0010          	rptcnt	equ	16
0001          	debounce equ	1
		
		; Start of ROM code
0000          		org	00000h
		
0000          	rombeg:
0000          	rst0:
0000          	if nofp
		else
0000  F3      		di	; can't be JMP or Heath CP/M thinks we're an H89
0001  C34303  		jmp	init
		endif
		
0004  C30A02  		jmp	getport
0007  00      		db	0
		
0008  CD7000  	rst1:	call	intsetup
000B  2A1B20  		lhld	ticcnt
000E  C36400  		jmp	int1$cont
0000          	if ((high int1$cont) <> 0)
		endif
		
0010          	rst2	equ	$-1	; must be a nop...
0011  CD7000  		call	intsetup
0014  1A      		ldax	d
0015  C39001  		jmp	int2$cont
		
0018  C32520  	rst3:	jmp	vrst3	; 0018
		
001B  C3020A  		jmp	crlf	; 001b
001E  9A0F    		dw	retmon	; 001e
		
0020  C32820  	rst4:	jmp	vrst4
		
0023  000000  		db	0,0,0	; overlayed by WizNet boot, others
0026  D503    		dw	conout	; pointer, not vector; A=char
		
0028  C32B20  	rst5:	jmp	vrst5
		
002B  C33002  		jmp	delay
002E  3F00    	qmsg:	db	'?',TRM
		
0030  C32E20  	rst6:	jmp	vrst6
		
0033  00000000		db	0,0,0,0,0	; overlayed by WizNet boot, others
      00
		
0038  C33120  	rst7:	jmp	vrst7
		
		; routines made public (to modules)
003B  C33603  		jmp	hwboot	; 003b
003E  C33A03  		jmp	hxboot	; 003e
0041  C39F01  		jmp	take$A	; 0041
0044  C30C0A  		jmp	msgout	; 0044
0047  C3120E  		jmp	linin	; 0047
004A  C3350A  		jmp	conin1	; 004a - without kaypad or DEL
		
004D          	intret:
004D  F1      		pop	psw
004E  F1      		pop	psw
004F  C1      		pop	b
0050  D1      		pop	d
0051  E1      		pop	h
0052          		popix
0052  DDE1    		DB	0DDH,0E1H
0054          		popiy
0054  FDE1    		DB	0FDH,0E1H
0056          		exx
0056  D9      		DB	0D9H
0057          		exaf
0057  08      		DB	08H
0058  C1      		pop	b	; I,R - R cannot be restored
0059  78      		mov	a,b
005A          		stai
005A  ED47    		DB	0EDH,47H
005C  F1      		pop	psw
005D  C1      		pop	b
005E  D1      		pop	d
005F  E1      		pop	h
0060          		exx
0060  D9      		DB	0D9H
0061          		exaf
0061  08      		DB	08H
0062          	nulint:
0062  FB      		ei
0063  C9      		ret
		
0000          	if nofp
		endif
		
0064          	int1$cont:
0064  23      		inx	h
0065  221B20  		shld	ticcnt
0068  3A3620  		lda	ctl$F2
006B  D3F2    		out	0f2h
0000          	if nofp
		else
006D  C3BA0B  		jmp	int1$fp
		endif
		
0070          	intsetup:
0070          		exx
0070  D9      		DB	0D9H
0071          		exaf
0071  08      		DB	08H
0072  E3      		xthl	; HL=PC (ret adr)
0073  D5      		push	d
0074  C5      		push	b
0075  F5      		push	psw
0076          		ldar
0076  ED5F    		DB	0EDH,5FH
0078  4F      		mov	c,a
0079          		ldai
0079  ED57    		DB	0EDH,57H
007B  47      		mov	b,a
007C  C5      		push	b
007D          		pushiy
007D  FDE5    		DB	0FDH,0E5H
007F          		pushix
007F  DDE5    		DB	0DDH,0E5H
0081  E5      		push	h	; save PC
0082          		exx
0082  D9      		DB	0D9H
0083          		exaf
0083  08      		DB	08H
0084  E3      		xthl		; HL=PC
0085  D5      		push	d
0086  C5      		push	b
0087  F5      		push	psw
0088  EB      		xchg		; DE=PC
0089  211800  		lxi	h,nReg-2
008C  39      		dad	sp
008D  E5      		push	h
008E  D5      		push	d	; save PC
008F  110920  		lxi	d,ctl$F0
0092  1A      		ldax	d
0093  2F      		cma
0094  E630    		ani	030h
0096  C8      		rz
0097  210200  		lxi	h,2
009A  39      		dad	sp
009B  221D20  		shld	monstk	; a.k.a. RegPtr
009E  C9      		ret
		
009F          	re$entry:		; re-entry point for errors, etc.
009F  210920  		lxi	h,ctl$F0
00A2  36F0    		mvi	m,0f0h	; !beep, 2mS, MON, !SI
00A4  2A1D20  		lhld	monstk
00A7  F9      		sphl
00A8  CDD303  		call	belout	; TODO: beep front panel if appropriate
			;jmp	start
00AB          	start:
00AB  21AB00  		lxi	h,start
00AE  E5      		push	h
			; reset FP display... this doesn't make a lot of sense...
00AF  3A0720  		lda	DspMod
00B2  E601    		ani	00000001b
00B4  2F      		cma
00B5  320620  		sta	DsProt
00B8  FB      		ei
			; avoid prompt if last was keypad command...
00B9  21DA06  		lxi	h,prompt
00BC  3A3B20  		lda	lstcmd
00BF  B7      		ora	a
00C0  F40C0A  		cp	msgout
00C3          	prloop:
			; could take one of two paths here,
			; console or kaypad...
00C3  CD4D0A  		call	cmdin
00C6  FE3F    		cpi	'?'	; HELP command?
00C8  CA0E07  		jz	nocmd0	; handled my add-on
00CB  E6DF    		ani	11011111b ; toupper
00CD  323B20  		sta	lstcmd
FFFF          	if not nofp
00D0  FA4A09  		jm	kpcmd	; from keypad... jumps back here...
		endif
00D3  21E300  	cmchr:	lxi	h,cmdtab
00D6  061A    		mvi	b,numcmd
00D8          	cmloop:
00D8  BE      		cmp	m
00D9  23      		inx	h
00DA          		jrz	docmd
00DA  285E    		DB	28H,docmd-$-1
00DC  23      		inx	h
00DD  23      		inx	h
00DE          		djnz	cmloop
00DE  10F8    		DB	10H,cmloop-$-1
00E0  C31107  		jmp	nocmd
		
00E3          	cmdtab:
			; console commands
00E3  44      		db	'D' !
00E4  740E    	 dw cmddmp	; Dump memory
00E6  47      		db	'G' !
00E7  6701    	 dw cmdgo	; Go
00E9  53      		db	'S' !
00EA  7A03    	 dw cmdsub	; Substitute in memory
00EC  50      		db	'P' !
00ED  4301    	 dw cmdpc	; Set PC
00EF  42      		db	'B' !
00F0  6D02    	 dw cmdboot; Boot
00F2  4D      		db	'M' !
00F3  7B04    	 dw cmdmt	; Memory Test
00F5  56      		db	'V' !
00F6  850F    	 dw prtver	; Version of ROM
00F8  4C      		db	'L' !
00F9  B20E    	 dw cmdlb	; List boot modules
00FB  48      		db	'H' !
00FC  EF0E    	 dw cmdhb	; long list (Help) boot modules
00FE  58      		db	'X' !
00FF  5A0F    	 dw cmdx	; extended command set X_
		; TODO: vflash.sys does 'U', 'A' may require more complexity.
		;	db	'A' ! dw cmdab	; Add boot module
		;	db	'U' ! dw cmdur	; Update entire ROM
FFFF          	if not nofp
			; front-panel commands    key(old)  command/action
0101  80      		db	80h !
0102  3A07    	 dw kpubt	; [0]     - Universal Boot
0104  81      		db	81h !
0105  FA07    	 dw kppbt	; [1]     - Pri Boot
0107  82      		db	82h !
0108  3708    	 dw kpsbt	; [2]     - Sec Boot
010A  83      		db	83h !
010B  AB08    	 dw kprdx	; [3]     - Radix Mode
010D  84      		db	84h !
010E  5306    	 dw kpgo	; [4]     - Go
0110  85      		db	85h !
0111  5C06    	 dw kpin	; [5]     - Input
0113  86      		db	86h !
0114  6606    	 dw kpout	; [6]     - Output
0116  87      		db	87h !
0117  7606    	 dw kpsst	; [7]     - Single Step
0119  88      		db	88h !
011A  9A08    	 dw kptap	; [8]     - Cass Load
011C  89      		db	89h !
011D  9A08    	 dw kptap	; [9]     - Cass Store
011F  8A      		db	8ah !
0120  E408    	 dw kpnxt	; [A] [+] - Next
0122  8B      		db	8bh !
0123  FC08    	 dw kpprv	; [B] [-] - Prev
0125  8C      		db	8ch !
0126  6C06    	 dw kpabt	; [C] [*] - CANCEL, usually
0128  8D      		db	8dh !
0129  6D06    	 dw kprw	; [D] [/] - Display/Alter
012B  8E      		db	8eh !
012C  1709    	 dw kpmem	; [E] [#] - Memory Mode
012E  8F      		db	8fh !
012F  2C09    	 dw kprgm	; [F] [.] - Register Mode
		endif
001A          	numcmd	equ	($-cmdtab)/3
		
0000          	if nofp
		endif
		
			rept	0137h-$
0131  FF      		db	0ffh
0132  FF      		db	0ffh
0133  FF      		db	0ffh
0134  FF      		db	0ffh
0135  FF      		db	0ffh
0136  FF      		db	0ffh
0000          	if	($ <> 0137h)
		endif
0137  C30000  		jmp	0	; initialized by H47 boot module
		
0000          	if nofp
		endif
		
013A          	docmd:
013A  B7      		ora	a
013B  F4D503  		cp	conout
013E  4E      		mov	c,m
013F  23      		inx	h
0140  66      		mov	h,m
0141  69      		mov	l,c
0142  E9      	icall:	pchl
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; PC command (set PC)
0143          	cmdpc:
0143  21F406  		lxi	h,pcms
0146  CD0C0A  		call	msgout
0149  2A1D20  		lhld	RegPtr
014C  111800  		lxi	d,24	; Reg[PC]
014F  19      		dad	d
0150  5E      		mov	e,m
0151  23      		inx	h
0152  56      		mov	d,m
0153  2B      		dcx	h
0154  EB      		xchg		; HL=PC, DE=adr to store
0155  CDC303  		call	inhexcr
0158          		jrc	cmdpc0	; hex digit entered
0158  3807    		DB	38H,cmdpc0-$-1
015A  CD3304  		call	adrnl	; show current PC (HL)
015D  CDC303  		call	inhexcr	; get another char
0160  D0      		rnc	; CR entered, don't update value
0161          	cmdpc0:
0161  EB      		xchg	; HL=adr to store
0162          	cmdpc1:
0162  160D    		mvi	d,CR
0164  C3E003  		jmp	adrin
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Go command
0167          	cmdgo:
0167  21E606  		lxi	h,goms
016A  CD0C0A  		call	msgout
016D  2A1D20  		lhld	RegPtr
0170  111800  		lxi	d,24	; Reg[PC]
0173  19      		dad	d	; HL=adr to store
0174  CDC303  		call	inhexcr
0177  DC6201  		cc	cmdpc1	; read HEX until CR, store in HL
017A  CD020A  		call	crlf
FFFF          	if not nofp
			; TODO: make single-step work on H8
017D  3ED0    		mvi	a,0d0h	; no-beep, 2mS, !MON, !single-step
017F          		jr	cmdgo0
017F  1808    		DB	18H,cmdgo0-$-1
0181  F3      		di	; TODO: dead code? single-step...
0182  3A0920  		lda	ctl$F0
0185  EE10    		xri	010h	; toggle single-step
0187  D3F0    		out	0f0h
		else
		endif
0189          	cmdgo0:
0189  320920  		sta	ctl$F0
018C  E1      		pop	h
018D  C34D00  		jmp	intret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
0190          	int2$cont:
FFFF          	if not nofp
0190  F610    		ori	010h	; disable single-step
0192  D3F0    		out	0f0h
0194  12      		stax	d
0195  E620    		ani	020h	; MON active?
		else
		endif
0197  C2AB00  		jnz	start	; break to monitor code
019A  C32220  		jmp	vrst2	; else chain to (possible) user code.
		
019D          	take$5:
019D  3E05    		mvi	a,5	; 5 seconds
019F          	take$A:	; set a timeout for A seconds
019F  21AF01  		lxi	h,timeout
01A2  222020  		shld	vrst1+1
01A5  325221  		sta	SEC$CNT
01A8  3E01    		mvi	a,1
01AA  320820  		sta	MFlag
01AD  FB      		ei
01AE  C9      		ret
		
01AF          	timeout:
01AF  211B20  		lxi	h,ticcnt
01B2  AF      		xra	a
01B3  B6      		ora	m
01B4  C0      		rnz
01B5  23      		inx	h
01B6  7E      		mov	a,m
01B7  0F      		rrc
01B8  D8      		rc
			; every 512 ticks... 1024mS
01B9  215221  		lxi	h,SEC$CNT
01BC  35      		dcr	m
01BD  C0      		rnz
01BE          	error:
01BE  2A1D20  		lhld	monstk
01C1  F9      		sphl
01C2  212E00  		lxi	h,qmsg
01C5  CD0C0A  		call	msgout	; A=0 on return
01C8  216200  		lxi	h,nulint
01CB  222020  		shld	vrst1+1
01CE  320820  		sta	MFlag	; A=0 from msgout
01D1  DBF2    		in	0f2h
01D3  E603    		ani	00000011b
01D5          		jrnz	error0
01D5  2002    		DB	20H,error0-$-1
01D7  D37F    		out	07fh	; clear H17 ctrl port (A=0)
01D9          	error0:
01D9  C39F00  		jmp	re$entry
		
		; determine device for port 078H
		; return phy drv number in D.
01DC          	gtdev1:
01DC  1600    		mvi	d,0	; Z17
01DE  DBF2    		in	0f2h
01E0          	gtdev0:
01E0  E603    		ani	00000011b	; port 078H device
01E2  C8      		rz		; Z17 (or Z37)
01E3  FE01    		cpi	01b
01E5  1605    		mvi	d,5
01E7  C8      		rz		; Z47
01E8  FE02    		cpi	10b
01EA  1603    		mvi	d,3	; Z67/MMS77320
01EC  C8      		rz
01ED  16FF    		mvi	d,0ffh
01EF  C9      		ret	; NZ
		
		; determine device for port 078H
		; return phy drv number in D.
01F0          	gtdev2:
01F0  162E    		mvi	d,46	; Z37
01F2  DBF2    		in	0f2h
01F4  0F      		rrc
01F5  0F      		rrc
01F6          		jr	gtdev0	; rest are same
01F6  18E8    		DB	18H,gtdev0-$-1
		
		; determine default boot device.
01F8          	gtdfbt:
01F8  110000  		lxi	d,0
01FB  DBF2    		in	0f2h
01FD  E670    		ani	01110000b	; default boot selection
01FF  FE20    		cpi	00100000b	; device at 07CH
0201          		jrz	gtdev1
0201  28D9    		DB	28H,gtdev1-$-1
0203  FE30    		cpi	00110000b	; device at 078H
0205          		jrz	gtdev2
0205  28E9    		DB	28H,gtdev2-$-1
0207  C31C0D  		jmp	gtdvtb		; get MMS device
		
		; Check SW501 for installed device.
		; C = desired port pattern, 00=Z17/Z37, 01=Z47, 10=Z67, 11=undefined
		; returns base I/O port adr in B.
020A          	getport:
020A  067C    		mvi	b,07ch
020C  DBF2    		in	0f2h
020E  E603    		ani	003h
0210  B9      		cmp	c
0211  C8      		rz
0212  0678    		mvi	b,078h
0214  DBF2    		in	0f2h
0216  0F      		rrc
0217  0F      		rrc
0218  E603    		ani	003h
021A  B9      		cmp	c
021B  C9      		ret	; let caller decide error handling (NZ)
		
021C  212502  	s501er:	lxi	h,s501ms
021F  CD0C0A  		call	msgout
0222  C39F00  		jmp	re$entry
		
0225  20535731	s501ms:	db	' SW1 wrong',TRM
      2077726F
      6E6700
		
0230          	delay:
0230  E5      		push	h
0231  211B20  		lxi	h,ticcnt
0234  86      		add	m
0235          	delay0:
0235  BE      		cmp	m
0236          		jrnz	delay0
0236  20FD    		DB	20H,delay0-$-1
0238  E1      		pop	h
0239  C9      		ret
		
023A          	gotnum:	; Boot N... "N" in D
023A  D5      		push	d	; save unit num (E)
023B  4A      		mov	c,d
023C  06FF    		mvi	b,-1	; boot modules only
023E  21190C  		lxi	h,bfnum
0241  CDA30C  		call	bfind	; might have already been loaded...
0244  D1      		pop	d
0245  DABE01  		jc	error
0248  CDC802  		call	vfport
024B  DA1C02  		jc	s501er
			; convert phy drv to phy base + unit
024E  7A      		mov	a,d
024F          		ldx	d,mdbase
024F  DD5602  		DB	0DDH,d*8+46H,mdbase
0252  92      		sub	d
0253  5F      		mov	e,a	; always zero?
0254  C30B03  		jmp	goboot
		
			rept	0260h-$
0257  FF      		db	0ffh
0258  FF      		db	0ffh
0259  FF      		db	0ffh
025A  FF      		db	0ffh
025B  FF      		db	0ffh
025C  FF      		db	0ffh
025D  FF      		db	0ffh
025E  FF      		db	0ffh
025F  FF      		db	0ffh
0000          	if	($ <> 0260h)
		endif
		; Legacy entry for "Horn" - beep for num 2mS ticks in A
0260  E5      	hhorn:	push	h
0261  CDC705  		call	set$horn
0264  213C20  		lxi	h,horn
0267  AF      		xra	a
0268  BE      	hhorn0:	cmp	m
0269          		jrnz	hhorn0
0269  20FD    		DB	20H,hhorn0-$-1
026B  E1      		pop	h
026C  C9      		ret
		
026D          	cmdboot:
026D  21E106  		lxi	h,bootms
0270  CD0C0A  		call	msgout	; complete (B)oot
0273  3EC3    		mvi	a,0c3h
0275  328022  		sta	bootbf	; mark "no string"
0278  AF      		xra	a
0279  325021  		sta	cport
027C  318022  		lxi	sp,bootbf
027F  0E0D    		mvi	c,CR	; end input on CR
0281          		jr	boot0
0281  1803    		DB	18H,boot0-$-1
0283          	bterr:
0283  CDD303  		call	belout
0286          	boot0:
0286  CD150A  		call	conin
0289  B9      		cmp	c
028A  CA620D  		jz	dfboot	; default boot, by phy drv...
028D  1E00    		mvi	e,0
			; boot by letter... Boot alpha-
028F  E65F    		ani	05fh ; toupper
0291  FE41    		cpi	'A'
0293          		jrc	bterr
0293  38EE    		DB	38H,bterr-$-1
0295  FE5B    		cpi	'Z'+1
0297          		jrnc	bterr
0297  30EA    		DB	30H,bterr-$-1
0299  FE41    		cpi	'A'
029B          		jrc	bterr
029B  38E6    		DB	38H,bterr-$-1
029D  CDD503  		call	conout
02A0  CDD503  		call	conout
02A3  FE42    		cpi	'B'
02A5  DA2F0D  		jc	A$boot	; 'A' is synonym for default
02A8  C5      	gotit1:	push	b
02A9  4F      		mov	c,a
02AA  06FF    		mvi	b,-1	; boot modules only
02AC  21FD0B  		lxi	h,bfchr
02AF  CDA30C  		call	bfind
02B2  C1      		pop	b
02B3  DABE01  		jc	error
02B6  CDC802  		call	vfport
02B9  DA1C02  		jc	s501er
02BC          		ldx	d,mdbase	; base phy drv num
02BC  DD5602  		DB	0DDH,d*8+46H,mdbase
02BF          	gotit:
02BF  1E00    		mvi	e,0
02C1  3E2D    		mvi	a,'-'	; next is optional unit number...
02C3  CDD503  		call	conout
02C6          		jr	luboot0
02C6  1815    		DB	18H,luboot0-$-1
		
		; verify port is set
		; IX=boot module (in memory)
02C8          	vfport:	ldx	a,mdport
02C8  DD7E0C  		DB	0DDH,a*8+46H,mdport
02CB  B7      		ora	a
02CC          		jrnz	vfp0
02CC  2007    		DB	20H,vfp0-$-1
02CE  3A5021  		lda	cport	; if btinit did not set, we can't go on
02D1  B7      		ora	a
02D2  C0      		rnz
02D3  37      		stc
02D4  C9      		ret
02D5  325021  	vfp0:	sta	cport
02D8  AF      		xra	a
02D9  C9      		ret
		
02DA          	lunerr:
02DA  CDD303  		call	belout
02DD          	luboot0:
02DD  CD1D04  		call	hexin
02E0          		jrnc	luboot2	; valid HEX digit...
02E0  300D    		DB	30H,luboot2-$-1
02E2  B9      		cmp	c
02E3          		jrz	goboot
02E3  2826    		DB	28H,goboot-$-1
02E5  FE3A    		cpi	':'
02E7          		jrz	colon
02E7  2815    		DB	28H,colon-$-1
02E9  FE20    		cpi	' '
02EB          		jrz	space
02EB  280C    		DB	28H,space-$-1
02ED          		jr	lunerr
02ED  18EB    		DB	18H,lunerr-$-1
02EF          	luboot2:
02EF  CD520E  		call	E$x16$A
02F2          		jrc	lunerr
02F2  38E6    		DB	38H,lunerr-$-1
02F4  CDD503  		call	conout
02F7          		jr	luboot0
02F7  18E4    		DB	18H,luboot0-$-1
02F9          	space:
02F9  CDD503  		call	conout
02FC          		jr	luboot0	; TODO: this gets dodgy if spaces between digits.
02FC  18DF    		DB	18H,luboot0-$-1
		
02FE          	colon:	; get arbitrary string as last boot param
02FE  CDD503  		call	conout	; echo ':'
0301  218122  		lxi	h,bootbf+1
0304  CD120E  		call	linin
0307  78      		mov	a,b	; excludes TRM
0308  328022  		sta	bootbf	; bootbf: <len> <string...> as in CP/M cmd buf
		; D=Phys Drive base number, E=Unit number
		; (or, D=Phys Drive unit, E=0)
		; module must have already been loaded
		; NOTE: string might have been placed at bootbf...
		; SP was set to 'bootbf'...
030B          	goboot:
030B          		lxiy	error
030B  FD21    		DB	0FDH,21H
030D  BE01    		DW	error
030F  CD020A  		call	crlf
		; IY=error routine
		; Move string to stack, if present.
		; Stack space is 292 bytes, be certain not to overrun.
		; Since len value is 127 max + TRM, should be OK.
		; Can't use stack until copy is done... can't destroy DE...
0312          	gbooty:
0312  218022  		lxi	h,bootbf
0315  7E      		mov	a,m
0316  FEC3    		cpi	0c3h
0318          		jrz	gboot0
0318  280C    		DB	28H,gboot0-$-1
031A  4F      		mov	c,a	; length
031B  0600    		mvi	b,0
031D  23      		inx	h	; first byte of string...
031E  09      		dad	b	; point to end (TRM)
031F          	btstr1:
031F  7E      		mov	a,m
0320  F5      		push	psw
0321  33      		inx	sp	; undo half of push
0322  2B      		dcx	h
0323  0D      		dcr	c
0324          		jrnz	btstr1
0324  20F9    		DB	20H,btstr1-$-1
0326          	gboot0:
0326          		pushiy	; error routine
0326  FDE5    		DB	0FDH,0E5H
		; IX=boot module (in memory)
		; D=phy drv base, E=unit
0328          	doboot:	; common boot path for console and keypad
0328  CDC509  		call	h17init	; leaves interrupts disabled
032B  7B      		mov	a,e
032C  323121  		sta	AIO$UNI	; relative unit num
032F  7A      		mov	a,d
0330  323420  		sta	l2034h	; boot phys drv base
0333  C3FE0C  		jmp	btboot
			; btboot effectively returns here on success
			; (in most cases)
0336  AF      	hwboot:	xra	a
0337  320820  		sta	MFlag
033A  21191C  	hxboot:	lxi	h,CLOCK
033D  222020  		shld	vrst1+1
0340  C38022  		jmp	bootbf
		
		; ROM start point - initialize everything
		; We know we have at least 64K RAM...
		; But, right now, ROM is in 0000-7FFF so must copy
		; core code and switch to RAM...
0343          	init:
FFFF          	if z180
		; Might arrive here from a TRAP...
0343          		in0	a,itc
0343  ED3834  		DB	0EDH, a*8+00H, itc
0346          		bit	7,a
0346  CB7F    		DB	0CBH,7*8+a+40H
0348  C2C80D  		jnz	trap
034B  21FFFF  	init0:	lxi	h,0ffffh
034E  F9      		sphl
034F  E5      		push	h	; save top on stack
0350  CD020E  		call	savram
			; map in 8K of ROM from 0xf8000 into 0x4000
0353  3EC4    		mvi	a,1100$0100b	; ca at 0xc000, ba at 0x4000
0355          		out0	a,mmu$cbar
0355  ED393A  		DB	0EDH, a*8+01H, mmu$cbar
			; both CBR and BBR are "0" - if got here via RESET
FFFF          	if use$dma
			; DMA F8000-FA000 into 00000-02000
0358  CD1A06  		call	dmarom
		else
		endif
		else
		endif
			; save config data
035B  210010  		lxi	h,suadr
035E  1100F8  		lxi	d,susave
0361  010F01  		lxi	b,sumax
0364          		ldir
0364  EDB0    		DB	0EDH,0B0H
0366  219F00  		lxi	h,re$entry
0369  E5      		push	h
036A  CD5504  		call	coninit
036D  CD8506  		call	meminit
0370  CF      		rst	1	; kick-start clock
0371  21A50F  		lxi	h,signon
0374  CD0C0A  		call	msgout
			; save registers on stack, for debugger access...
0377  C37000  		jmp	intsetup
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Substitute command
037A          	cmdsub:
037A  21E906  		lxi	h,subms
037D  CD0C0A  		call	msgout
0380  211420  		lxi	h,ABUSS
0383  B7      		ora	a	; NC
0384  160D    		mvi	d,CR
0386  CDE003  		call	adrin
0389  EB      		xchg
038A          	cmdsub0:
038A  CD3304  		call	adrnl
038D  7E      		mov	a,m
038E  CD4204  		call	hexout
0391  CD3E04  		call	spout
0394          	cmdsub1:
0394  CD1D04  		call	hexin
0397          		jrnc	cmdsub4
0397  3019    		DB	30H,cmdsub4-$-1
0399  FE0D    		cpi	CR
039B          		jrz	cmdsub2
039B  280C    		DB	28H,cmdsub2-$-1
039D  FE2D    		cpi	'-'
039F          		jrz	cmdsub3
039F  280B    		DB	28H,cmdsub3-$-1
03A1  FE2E    		cpi	'.'
03A3  C8      		rz
03A4  CDD303  		call	belout
03A7          		jr	cmdsub1
03A7  18EB    		DB	18H,cmdsub1-$-1
03A9          	cmdsub2:
03A9  23      		inx	h
03AA          		jr	cmdsub0
03AA  18DE    		DB	18H,cmdsub0-$-1
03AC          	cmdsub3:
03AC  CDD503  		call	conout
03AF  2B      		dcx	h
03B0          		jr	cmdsub0
03B0  18D8    		DB	18H,cmdsub0-$-1
03B2          	cmdsub4:
03B2  3600    		mvi	m,000h
03B4          	cmdsub5:
03B4  CDD503  		call	conout
03B7  CD1404  		call	hexbin
03BA          		rld
03BA  ED6F    		DB	0EDH, 6FH
03BC  CDC303  		call	inhexcr
03BF          		jrnc	cmdsub2
03BF  30E8    		DB	30H,cmdsub2-$-1
03C1          		jr	cmdsub5
03C1  18F1    		DB	18H,cmdsub5-$-1
		
03C3          	inhexcr:
03C3  CD150A  		call	conin
03C6  FE0D    		cpi	CR
03C8  C8      		rz
03C9  CD2004  		call	hexchk
03CC  3F      		cmc
03CD  D8      		rc
03CE  CDD303  		call	belout
03D1          		jr	inhexcr
03D1  18F0    		DB	18H,inhexcr-$-1
		
03D3          	belout:
03D3  3E07    		mvi	a,BEL
03D5          	conout:
03D5  F5      		push	psw
03D6          	conot1:
03D6  DBED    		in	0edh
03D8  E620    		ani	00100000b
03DA          		jrz	conot1
03DA  28FA    		DB	28H,conot1-$-1
03DC  F1      		pop	psw
03DD  D3E8    		out	0e8h
03DF  C9      		ret
		
		; D=term char (e.g. '.' for Substitute)
		; HL=location to store address
		; CY=first digit in A
03E0          	adrin:
03E0  E5      		push	h	; adr to store value
03E1  D4150A  		cnc	conin
03E4  BA      		cmp	d	; no input?
03E5  CA4E06  		jz	adrin3
03E8  210000  		lxi	h,0
03EB  37      		stc
03EC  D4150A  	adrin0:	cnc	conin
03EF  CD2004  		call	hexchk
03F2          		jrc	adrin1
03F2  380E    		DB	38H,adrin1-$-1
03F4  CDD503  		call	conout
03F7  CD1404  		call	hexbin
03FA  29      		dad	h
03FB  29      		dad	h
03FC  29      		dad	h
03FD  29      		dad	h
03FE  B5      		ora	l
03FF  6F      		mov	l,a
0400          		jr	adrin0
0400  18EA    		DB	18H,adrin0-$-1
0402          	adrin1:
0402  BA      		cmp	d
0403          		jrz	adrin2
0403  2806    		DB	28H,adrin2-$-1
0405  CDD303  		call	belout
0408  B7      		ora	a
0409          		jr	adrin0
0409  18E1    		DB	18H,adrin0-$-1
040B          	adrin2:
040B  CDD503  		call	conout
040E  EB      		xchg
040F  E1      		pop	h
0410  73      		mov	m,e
0411  23      		inx	h
0412  72      		mov	m,d
0413  C9      		ret
		
0414          	hexbin:
0414  D63A    		sui	'9'+1
0416          		jrnc	hexbi0
0416  3002    		DB	30H,hexbi0-$-1
0418  C607    		adi	7
041A          	hexbi0:
041A  C603    		adi	3
041C  C9      		ret
		
041D          	hexin:
041D  CD150A  		call	conin
0420          	hexchk:
0420  FE30    		cpi	'0'
0422  D8      		rc
0423  FE3A    		cpi	'9'+1
0425  3F      		cmc
0426  D0      		rnc
0427  FE41    		cpi	'A'
0429  D8      		rc
042A  E65F    		ani	05fh	; toupper
042C  FE41    		cpi	'A'
042E  D8      		rc
042F  FE47    		cpi	'F'+1
0431  3F      		cmc
0432  C9      		ret
		
		; HL = adr to print
0433          	adrnl:
0433  CD020A  		call	crlf
0436          	adrout:
0436  7C      		mov	a,h
0437  CD4204  		call	hexout
043A  7D      		mov	a,l
043B  CD4204  		call	hexout
043E          	spout:
043E  3E20    		mvi	a,' '
0440          		jr	conout
0440  1893    		DB	18H,conout-$-1
		
0442          	hexout:
0442  F5      		push	psw
0443  07      		rlc
0444  07      		rlc
0445  07      		rlc
0446  07      		rlc
0447  CD4B04  		call	hexdig
044A  F1      		pop	psw
044B          	hexdig:
044B  E60F    		ani	00fh
044D  C690    		adi	090h
044F  27      		daa
0450  CE40    		aci	040h
0452  27      		daa
0453          		jr	conout
0453  1880    		DB	18H,conout-$-1
		
0455          	coninit:
0455  0E0C    		mvi	c,12	; 9600 baud
0457  DBF2    		in	0f2h
0459  E680    		ani	10000000b	; 9600/19.2K?
045B          		jrz	ci0
045B  2802    		DB	28H,ci0-$-1
045D  0E06    		mvi	c,6	; 19.2K baud
045F  3E83    	ci0:	mvi	a,083h
0461  D3EB    		out	0ebh
0463  AF      		xra	a
0464  D3E9    		out	0e9h
0466  79      		mov	a,c
0467  D3E8    		out	0e8h
0469  3E03    		mvi	a,003h
046B  D3EB    		out	0ebh
046D  AF      		xra	a
046E  D3E9    		out	0e9h
0470  3E0F    		mvi	a,00001111b	; OUT2=1 hides 16C2550 intr enable diff
0472  D3EC    		out	0ech
0474  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Memory Test command
		
0475          	cserr:
0475  21C006  		lxi	h,cserms
0478  C30C0A  		jmp	msgout
		
047B          	cmdmt:
047B  210107  		lxi	h,mtms
047E  CD0C0A  		call	msgout
0481  CDFB09  		call	waitcr
0484  21CD06  		lxi	h,topms
0487  CD0C0A  		call	msgout
048A  210000  		lxi	h,0
048D  39      		dad	sp
048E  7C      		mov	a,h
048F  3C      		inr	a
0490          		jrz	cmdmt0
0490  2802    		DB	28H,cmdmt0-$-1
0492  D620    		sui	020h
0494          	cmdmt0:
0494  67      		mov	h,a
0495  2E00    		mvi	l,0
0497  2B      		dcx	h
0498  D630    		sui	'0'
049A  5F      		mov	e,a
049B  CD3604  		call	adrout
049E  CD020A  		call	crlf
04A1  1600    		mvi	d,000h
04A3  0E30    		mvi	c,030h
04A5  0600    		mvi	b,000h
04A7          		exx
04A7  D9      		DB	0D9H
04A8  21D904  		lxi	h,mtest0
04AB  11FE2F  		lxi	d,memtest - (mtest1-mtest0)
04AE  01EE00  		lxi	b,mtestZ-mtest0
04B1          		ldir
04B1  EDB0    		DB	0EDH,0B0H
04B3  110030  		lxi	d,memtest
04B6  21DB04  		lxi	h,mtest1
04B9  0EEC    		mvi	c,mtestZ-mtest1
04BB  AF      		xra	a
04BC          		exaf
04BC  08      		DB	08H
04BD  AF      		xra	a
04BE          	cmdmt1:
04BE  86      		add	m
04BF          		exaf
04BF  08      		DB	08H
04C0  EB      		xchg
04C1  86      		add	m
04C2          		exaf
04C2  08      		DB	08H
04C3  EB      		xchg
04C4  23      		inx	h
04C5  13      		inx	d
04C6  0D      		dcr	c
04C7          		jrnz	cmdmt1
04C7  20F5    		DB	20H,cmdmt1-$-1
04C9  4F      		mov	c,a
04CA          		exaf
04CA  08      		DB	08H
04CB  B9      		cmp	c
04CC          		jrnz	cserr
04CC  20A7    		DB	20H,cserr-$-1
04CE  F3      		di
04CF  3A3620  		lda	ctl$F2
04D2  E614    		ani	ctl$SPD	; all but speed bits OFF
04D4  F620    		ori	ctl$ORG0	; set ORG0 only
			; pass ctl$F2 in A...
04D6  C3FE2F  		jmp	memtest - (mtest1-mtest)
		
		;------------------------------------------------
		; Start of relocated code...
		; Memory Test routine, position-independent
		;
04D9          	mtest0:
04D9          	mtest:
			; A reg contains desired ctl$F2 image
04D9  D3F2    		out	0f2h
04DB          	mtest1:		; lands at 03000h - retained relocated code
04DB          		exx
04DB  D9      		DB	0D9H
04DC  62      		mov	h,d
04DD  2E00    		mvi	l,0
04DF  78      		mov	a,b
04E0          		exx
04E0  D9      		DB	0D9H
04E1  4F      		mov	c,a
04E2  0602    		mvi	b,2
04E4          	mtest2:
04E4  79      		mov	a,c
04E5  07      		rlc
04E6  07      		rlc
04E7  07      		rlc
04E8  07      		rlc
04E9  4F      		mov	c,a
04EA  E60F    		ani	00fh
04EC  C690    		adi	090h
04EE  27      		daa
04EF  CE40    		aci	040h
04F1  27      		daa
04F2  D3E8    		out	0e8h
04F4          	mtest3:
04F4  DBED    		in	0edh
04F6  E620    		ani	020h
04F8          		jrz	mtest3
04F8  28FA    		DB	28H,mtest3-$-1
04FA  05      		dcr	b
04FB          		jrnz	mtest2
04FB  20E7    		DB	20H,mtest2-$-1
04FD  3E0D    		mvi	a,CR
04FF  D3E8    		out	0e8h
0501          		exx
0501  D9      		DB	0D9H
0502  78      		mov	a,b
0503          	mtest4:
0503  77      		mov	m,a
0504  C601    		adi	1
0506  27      		daa
0507  2C      		inr	l
0508          		jrnz	mtest4
0508  20F9    		DB	20H,mtest4-$-1
050A  24      		inr	h
050B  0D      		dcr	c
050C          		jrnz	mtest4
050C  20F5    		DB	20H,mtest4-$-1
050E  7C      		mov	a,h
050F  92      		sub	d
0510  4F      		mov	c,a
0511  62      		mov	h,d
0512  2E00    		mvi	l,0
0514  78      		mov	a,b
0515          	mtest5:
0515  BE      		cmp	m
0516          		jrnz	mtest9
0516  2046    		DB	20H,mtest9-$-1
0518  C601    		adi	1
051A  27      		daa
051B  2C      		inr	l
051C          		jrnz	mtest5
051C  20F7    		DB	20H,mtest5-$-1
051E  24      		inr	h
051F  0D      		dcr	c
0520          		jrnz	mtest5
0520  20F3    		DB	20H,mtest5-$-1
0522          		exx
0522  D9      		DB	0D9H
0523  210030  		lxi	h,memtest
0526  110000  		lxi	d,0
0529  01EC00  		lxi	b,mtestZ-mtest1
052C          		exx
052C  D9      		DB	0D9H
052D  7A      		mov	a,d
052E  EE30    		xri	030h
0530  57      		mov	d,a
0531          		jrz	mtest6
0531  2803    		DB	28H,mtest6-$-1
0533  4B      		mov	c,e
0534          		jr	mtest7
0534  180A    		DB	18H,mtest7-$-1
0536          	mtest6:
0536  0E30    		mvi	c,030h
0538  3E01    		mvi	a,001h
053A  80      		add	b
053B  27      		daa
053C  47      		mov	b,a
053D          		exx
053D  D9      		DB	0D9H
053E  EB      		xchg
053F          		exx
053F  D9      		DB	0D9H
0540          	mtest7:
0540          		exx
0540  D9      		DB	0D9H
0541          		ldir
0541  EDB0    		DB	0EDH,0B0H
0543  7A      		mov	a,d
0544  E6F0    		ani	0f0h
0546  67      		mov	h,a
0547  2E00    		mvi	l,0
0549  0EEC    		mvi	c,mtestZ-mtest1
054B  AF      		xra	a
054C          	mtest8:
054C  86      		add	m
054D  23      		inx	h
054E  0D      		dcr	c
054F          		jrnz	mtest8
054F  20FB    		DB	20H,mtest8-$-1
0551  4F      		mov	c,a
0552          		exaf
0552  08      		DB	08H
0553  B9      		cmp	c
0554          		jrnz	mtestE
0554  2049    		DB	20H,mtestE-$-1
0556          		exaf
0556  08      		DB	08H
0557  7A      		mov	a,d
0558  E6F0    		ani	0f0h
055A  67      		mov	h,a
055B  2E00    		mvi	l,0
055D  E9      		pchl
055E          	mtest9:
055E  AE      		xra	m
055F  57      		mov	d,a
0560  3E0A    		mvi	a,LF
0562  D3E8    		out	0e8h
0564          	mtestA:
0564  DBED    		in	0edh
0566  E620    		ani	020h
0568          		jrz	mtestA
0568  28FA    		DB	28H,mtestA-$-1
056A  0E02    		mvi	c,2
056C  0604    		mvi	b,4
056E          	mtestB:
056E  7C      		mov	a,h
056F  07      		rlc
0570  07      		rlc
0571  07      		rlc
0572  07      		rlc
0573  E60F    		ani	00fh
0575  C690    		adi	090h
0577  27      		daa
0578  CE40    		aci	040h
057A  27      		daa
057B  D3E8    		out	0e8h
057D          	mtestC:
057D  DBED    		in	0edh
057F  E620    		ani	020h
0581          		jrz	mtestC
0581  28FA    		DB	28H,mtestC-$-1
0583  29      		dad	h
0584  29      		dad	h
0585  29      		dad	h
0586  29      		dad	h
0587          		djnz	mtestB
0587  10E5    		DB	10H,mtestB-$-1
0589  3E20    		mvi	a,' '
058B  D3E8    		out	0e8h
058D          	mtestD:
058D  DBED    		in	0edh
058F  E620    		ani	020h
0591          		jrz	mtestD
0591  28FA    		DB	28H,mtestD-$-1
0593  0D      		dcr	c
0594  EB      		xchg
0595  0602    		mvi	b,002h
0597          		jrnz	mtestB
0597  20D5    		DB	20H,mtestB-$-1
0599  3E2A    		mvi	a,'*'
059B  D3E8    		out	0e8h
059D          		jr	mtestG
059D  1814    		DB	18H,mtestG-$-1
059F          	mtestE:
059F  DBED    		in	0edh
05A1  E620    		ani	020h
05A3          		jrz	mtestE
05A3  28FA    		DB	28H,mtestE-$-1
05A5  3E0A    		mvi	a,LF
05A7  D3E8    		out	0e8h
05A9          	mtestF:
05A9  DBED    		in	0edh
05AB  E620    		ani	020h
05AD          		jrz	mtestF
05AD  28FA    		DB	28H,mtestF-$-1
05AF  3E21    		mvi	a,'!'
05B1  D3E8    		out	0e8h
05B3          	mtestG:
05B3  DBED    		in	0edh
05B5  E620    		ani	020h
05B7          		jrz	mtestG
05B7  28FA    		DB	28H,mtestG-$-1
05B9  AF      		xra	a
05BA  06FA    		mvi	b,0fah
05BC          	mtestH:
05BC  3D      		dcr	a
05BD          		jrnz	mtestH
05BD  20FD    		DB	20H,mtestH-$-1
05BF          		djnz	mtestH
05BF  10FB    		DB	10H,mtestH-$-1
05C1  3E07    		mvi	a,BEL
05C3  D3E8    		out	0e8h
05C5          		jr	mtestG
05C5  18EC    		DB	18H,mtestG-$-1
		; End of relocated code
05C7          	mtestZ	equ	$
		;------------------------------------------------
		
		; must be called with interrupts off
		; A = horn delay, in 2mS ticks
		; A,HL used
05C7          	set$horn:
05C7  323C20  		sta	horn
05CA  210920  		lxi	h,ctl$F0
05CD          		res	7,m	; beep on
05CD  CBBE    		DB	0CBH,7*8+m+80H
05CF  7E      		mov	a,m
05D0  D3F0    		out	0f0h
05D2  C9      		ret
		
		; must be called with interrupts enabled
		; A = horn delay, in 2mS ticks
		; A,HL used
05D3          	set$horn0:
05D3  F3      		di
05D4  CDC705  		call	set$horn
05D7  FB      		ei
05D8  C9      		ret
		
		; Special entry points expected by HDOS, or maybe Heath CP/M boot.
			rept	0613h-$
05D9  FF      		db	0ffh
05DA  FF      		db	0ffh
05DB  FF      		db	0ffh
05DC  FF      		db	0ffh
05DD  FF      		db	0ffh
05DE  FF      		db	0ffh
05DF  FF      		db	0ffh
05E0  FF      		db	0ffh
05E1  FF      		db	0ffh
05E2  FF      		db	0ffh
05E3  FF      		db	0ffh
05E4  FF      		db	0ffh
05E5  FF      		db	0ffh
05E6  FF      		db	0ffh
05E7  FF      		db	0ffh
05E8  FF      		db	0ffh
05E9  FF      		db	0ffh
05EA  FF      		db	0ffh
05EB  FF      		db	0ffh
05EC  FF      		db	0ffh
05ED  FF      		db	0ffh
05EE  FF      		db	0ffh
05EF  FF      		db	0ffh
05F0  FF      		db	0ffh
05F1  FF      		db	0ffh
05F2  FF      		db	0ffh
05F3  FF      		db	0ffh
05F4  FF      		db	0ffh
05F5  FF      		db	0ffh
05F6  FF      		db	0ffh
05F7  FF      		db	0ffh
05F8  FF      		db	0ffh
05F9  FF      		db	0ffh
05FA  FF      		db	0ffh
05FB  FF      		db	0ffh
05FC  FF      		db	0ffh
05FD  FF      		db	0ffh
05FE  FF      		db	0ffh
05FF  FF      		db	0ffh
0600  FF      		db	0ffh
0601  FF      		db	0ffh
0602  FF      		db	0ffh
0603  FF      		db	0ffh
0604  FF      		db	0ffh
0605  FF      		db	0ffh
0606  FF      		db	0ffh
0607  FF      		db	0ffh
0608  FF      		db	0ffh
0609  FF      		db	0ffh
060A  FF      		db	0ffh
060B  FF      		db	0ffh
060C  FF      		db	0ffh
060D  FF      		db	0ffh
060E  FF      		db	0ffh
060F  FF      		db	0ffh
0610  FF      		db	0ffh
0611  FF      		db	0ffh
0612  FF      		db	0ffh
0000          	if	($ <> 0613h)
		endif
0613  C30000  		jmp	0	; initialized by H47 boot module
0616  00      		db	0
0617  C30000  		jmp	0	; initialized by H47 boot module
		
FFFF          	if z180
FFFF          	if use$dma
		; DMA F8000-FA000 into 00000-02000
		; copy core ROM (8K) into 0000 using DMAC
061A          	dmarom:
061A  21800F  		lxi	h,0f80h	; page addr (256B)
061D  110000  		lxi	d,0000h	; page addr (256B)
0620  010020  		lxi	b,2000h	; bytes
		; Generic memcpy using DMAC.
		; HL=src, DE=dst, all units 256B "pages".
		; BC=count, units are bytes
0623          	dmacpy:
0623  AF      		xra	a
0624          		out0	a,dar0l	; (256B page boundary)
0624  ED3923  		DB	0EDH, a*8+01H, dar0l
0627          		out0	e,dar0h ;
0627  ED1924  		DB	0EDH, e*8+01H, dar0h
062A          		out0	d,dar0b	; dest addr
062A  ED1125  		DB	0EDH, d*8+01H, dar0b
062D          		out0	a,sar0l	; (256B page boundary)
062D  ED3920  		DB	0EDH, a*8+01H, sar0l
0630          		out0	l,sar0h ;
0630  ED2921  		DB	0EDH, l*8+01H, sar0h
0633          		out0	h,sar0b	; source addr
0633  ED2122  		DB	0EDH, h*8+01H, sar0b
0636          		out0	c,bcr0l	;
0636  ED0926  		DB	0EDH, c*8+01H, bcr0l
0639          		out0	b,bcr0h	; byte count
0639  ED0127  		DB	0EDH, b*8+01H, bcr0h
063C  3E02    		mvi	a,00000010b	; mem2mem, burst mode
063E          		out0	a,dmode
063E  ED3931  		DB	0EDH, a*8+01H, dmode
0641  3E60    		mvi	a,01100000b	; DE0,/DWE0(!/DWE1) - start ch 0
0643          		out0	a,dstat
0643  ED3930  		DB	0EDH, a*8+01H, dstat
0646  0E30    		mvi	c,dstat
0648          	init1:	tstio	01000000b	; wait for DMAC to idle
0648  ED7440  		DB	0EDH, 74H, 01000000b
064B          		jrnz	init1
064B  20FB    		DB	20H,init1-$-1
064D  C9      		ret
		endif
		endif
		
064E  E1      	adrin3:	pop	h
064F  5E      		mov	e,m
0650  23      		inx	h
0651  56      		mov	d,m
0652  C9      		ret
		
FFFF          	if not nofp
0653          	kpgo:
0653  3ED0    		mvi	a,11010000b	; MON off
0655  320920  		sta	ctl$F0
0658  E1      		pop	h	; discard ret adr
0659  C34D00  		jmp	intret	; execute
		
065C  2A1420  	kpin:	lhld	ABUSS
065F  4C      		mov	c,h	; port
0660          		inp	l	; get value
0660  ED68    		DB	0EDH,l*8+40H
0662  221420  		shld	ABUSS
0665  C9      		ret
		
0666  2A1420  	kpout:	lhld	ABUSS
0669  4C      		mov	c,h	; port
066A          		outp	l	; output value
066A  ED69    		DB	0EDH,l*8+41H
066C  C9      	kpabt:	ret
		
066D          	kprw:	; switch between display/modify
066D  3A0720  		lda	DspMod
0670  EE01    		xri	1
0672  320720  		sta	DspMod
0675  C9      		ret
		
0676          	kpsst:	; single-step one instruction
0676  F3      		di
0677  3A0920  		lda	ctl$F0
067A  EE10    		xri	00010000b	; disable SS inhibit
067C  D3F0    		out	0f0h
067E  320920  	sst1:	sta	ctl$F0
0681  E1      		pop	h	; discard ret adr
0682  C34D00  		jmp	intret	; execute
		endif
		
		; initialize monitor memory at 2000h
0685          	meminit:
0685  AF      		xra	a
0686  325321  		sta	l2153h
0689  323B20  		sta	lstcmd
068C  320520  		sta	RegI
068F  320620  		sta	DsProt
0692  320720  		sta	DspMod
0695  323920  		sta	Radix
0698  323A20  		sta	kpchar
069B  323C20  		sta	horn
069E  3C      		inr	a	; 1
069F  320A20  		sta	Refind
0000          	if nofp
		else
06A2  3E20    		mvi	a,ctl$ORG0	; ORG0 on, 2mS off...
		endif
06A4  323620  		sta	ctl$F2	; 2mS off, ORG0 on
06A7  D3F2    		out	0f2h	; enable RAM now...
06A9  3EC9    		mvi	a,0c9h	; RET
06AB  320420  		sta	PrsRAM
06AE  210050  		lxi	h,05000h	; 0, (beep, 2mS, !MON, !SI)
06B1  220820  		shld	MFlag	; MFlag, CtlFlg
06B4  21FFFF  		lxi	h,0ffffh	; top of memory
06B7  221420  		shld	ABUSS
06BA  3E01    		mvi	a,debounce
06BC  321720  		sta	kpcnt
06BF  C9      		ret
		
		; for cmdmt...
06C0  07436B73	cserms:	db	BEL,'Cksum error',TRM
      756D2065
      72726F72
      00
06CD  546F7020	topms:	db	'Top of Mem: ',TRM
      6F66204D
      656D3A20
      00
		
06DA  0D0A4838	prompt:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
06DE  3A2000  		db	': ',TRM
06E1  6F6F7420	bootms:	db	'oot ',TRM
      00
06E6  6F2000  	goms:	db	'o ',TRM
06E9  75627374	subms:	db	'ubstitute ',TRM
      69747574
      652000
06F4  726F6720	pcms:	db	'rog Counter ',TRM
      436F756E
      74657220
      00
0701  656D2074	mtms:	db	'em test',TRM
      65737400
0709  756D7020	dmpms:	db	'ump ',TRM
      00
		
		; command not built-in, check modules.
		; should only be called for console commands.
		; A=cmd key/chr (also in 'lstcmd')
070E          	nocmd0:
070E  323B20  		sta	lstcmd
0711          	nocmd:
0711  4F      		mov	c,a
0712  0600    		mvi	b,0	; no boot modules
0714  21FD0B  		lxi	h,bfchr
0717  CDA30C  		call	bfind
071A          		jrc	cmerr
071A  3809    		DB	38H,cmerr-$-1
071C  3A3B20  		lda	lstcmd
071F  CDD503  		call	conout
0722  C3FE0C  		jmp	cmexec
		
0725  CDD303  	cmerr:	call	belout
0728  C3C300  		jmp	prloop
		
FFFF          	if not nofp
		; get "alternate" (secondary) boot device...
072B          	galtbt:
072B  110000  		lxi	d,0
072E  DBF2    		in	0f2h
0730  E670    		ani	01110000b	; default boot selection
0732  FE20    		cpi	00100000b	; if default at 07CH,
0734  CAF001  		jz	gtdev2		; get 078H device...
		; if device was not 07CH, then use 07CH... ???
		;;	cpi	00110000b	; if device at 078H
		;;	jz	gtdev1		; get 07CH device...
0737  C3DC01  		jmp	gtdev1		; get 07CH device...
		
073A          	kpubt:
073A  3A0820  		lda	MFlag
073D  F602    		ori	mfl$DDU	; disable disp updates
073F  320820  		sta	MFlag
0742  CDAC0B  		call	clrdisp	; clean slate
0745  01650B  		lxi	b,dDev
0748  110B20  		lxi	d,Aleds
074B  CDA20B  		call	mov3dsp
074E  CD3F0A  		call	keyin	; get device
0751  E67F    		ani	01111111b
0753  FE0C    		cpi	0ch	; cancel
0755  CAB207  		jz	kperr
0758  325121  		sta	BDF
075B  4F      		mov	c,a
075C  06FF    		mvi	b,-1	; boot modules only
075E  210B0C  		lxi	h,bfkey
0761  CDA30C  		call	bfind
0764          		jrc	deverr
0764  384C    		DB	38H,deverr-$-1
0766  DD      		db	0ddh !
0767  44      	 mov b,h	; mov b,IXh ; module address
0768  0E0D    		mvi	c,mddisp
076A  110B20  		lxi	d,Aleds
076D  CDA20B  		call	mov3dsp
0770  D5      		push	d	; save LEDs pointer
			; determine if fixed port...
0771          		ldx	a,mdport
0771  DD7E0C  		DB	0DDH,a*8+46H,mdport
0774  B7      		ora	a
0775          		jrnz	gotprt
0775  2018    		DB	20H,gotprt-$-1
0777  01680B  		lxi	b,dPor
077A  CDA20B  		call	mov3dsp
077D  CD3F0A  		call	keyin	; get port
0780  E67F    		ani	01111111b
0782  FE04    		cpi	04h	; 0..3 allowed
0784  D2B207  		jnc	deverr
0787  5F      		mov	e,a
0788  1600    		mvi	d,0
078A  21F607  		lxi	h,ports
078D  19      		dad	d
078E  7E      		mov	a,m
078F  E1      	gotprt:	pop	h	; LEDs pointer
0790  325021  		sta	cport
0793  CDD90A  		call	dod	; decode number to HL
0796  54      		mov	d,h
0797  5D      		mov	e,l
0798  016B0B  		lxi	b,dUni
079B  CDA20B  		call	mov3dsp
079E  CD3F0A  		call	keyin	; get unit
07A1  E67F    		ani	01111111b
07A3  5F      		mov	e,a
07A4          		ldx	d,mdbase
07A4  DD5602  		DB	0DDH,d*8+46H,mdbase
07A7  3EC3    		mvi	a,0c3h
07A9  328022  		sta	bootbf	; mark "no string"
07AC  318022  		lxi	sp,bootbf
07AF  CD2803  		call	doboot	; only returns if error...
07B2          	kperr:
07B2          	deverr:
07B2  FB      		ei	; TODO: more required before this?
07B3  210820  		lxi	h,MFlag
07B6  7E      		mov	a,m
07B7  E6FE    		ani	not mfl$CLK	; disable "private" clock intr
07B9  F602    		ori	mfl$DDU		; disable disp updates
07BB  77      		mov	m,a
07BC  016E0B  		lxi	b,dErr
07BF  110B20  		lxi	d,Aleds
07C2  2E06    		mvi	l,6
07C4  CDA40B  		call	movLdsp
07C7  0E80    		mvi	c,10000000b	; beep on/off bit
07C9  211B20  		lxi	h,ticcnt
07CC  110920  		lxi	d,ctl$F0
07CF          	bterr0:
07CF  1A      		ldax	d
07D0  A9      		xra	c	; beep on
07D1  12      		stax	d
07D2  7E      		mov	a,m
07D3  C619    		adi	25	; 50mS
07D5          	bterr2:
07D5  BE      		cmp	m
07D6          		jrnz	bterr2
07D6  20FD    		DB	20H,bterr2-$-1
07D8  1A      		ldax	d
07D9  A9      		xra	c	; beep off
07DA  12      		stax	d
07DB  7E      		mov	a,m
07DC  C6FF    		adi	-1
07DE  BE      	bterr1:	cmp	m
07DF          		jrz	bterr0
07DF  28EE    		DB	28H,bterr0-$-1
07E1  3A3A20  		lda	kpchar
07E4  FE6F    		cpi	01101111b	; raw pattern for '*' or CANCEL
07E6          		jrnz	bterr1
07E6  20F6    		DB	20H,bterr1-$-1
07E8  AF      		xra	a
07E9  323A20  		sta	kpchar
07EC  210820  		lxi	h,MFlag
07EF  7E      		mov	a,m
07F0  E6BD    		ani	not (mfl$NRF+mfl$DDU)	; MFlag normal mode...
07F2  77      		mov	m,a
			; should return to 'start' but avoid extra prompts...
07F3  C39F00  		jmp	re$entry
		
		; port options for keys 0-3
07F6  787CB8BC	ports:	db	078h,07ch,0b8h,0bch
		
07FA          	kppbt:	; primary boot (default boot)
07FA  3EC3    		mvi	a,0c3h
07FC  328022  		sta	bootbf	; mark "no string"
07FF  01770B  		lxi	b,dPri
0802  CD6D08  		call	btdsp
0805  CDF801  		call	gtdfbt
0808  7A      		mov	a,d
0809  FEFF    		cpi	0ffh
080B  CAB207  		jz	kperr
080E  FEFE    		cpi	0feh
0810          		jrz	kppbt0
0810  2841    		DB	28H,kppbt0-$-1
0812          	kpbt0:
0812  AF      		xra	a
0813  325021  		sta	cport
0816  D5      		push	d	; phy drv, unit
0817  4A      		mov	c,d
0818  06FF    		mvi	b,-1	; boot modules only
081A  21190C  		lxi	h,bfnum
081D  CDA30C  		call	bfind	; might have already been loaded...
0820  DAB207  		jc	kperr
0823  CDC802  		call	vfport
0826  DAB207  		jc	kperr	; TODO: specific error? SW1 Error?
0829  CD8308  		call	btdsp2	; show device name
082C  D1      		pop	d	; phy drv, unit
082D  318022  		lxi	sp,bootbf
0830  21B207  		lxi	h,kperr
0833  E5      		push	h
0834  C32803  		jmp	doboot
		
0837          	kpsbt:	; secondary boot
0837  3EC3    		mvi	a,0c3h
0839  328022  		sta	bootbf	; mark "no string"
083C  017A0B  		lxi	b,dSec
083F  CD6D08  		call	btdsp
0842  2186F8  		lxi	h,susave+dsdev
0845  CD800D  		call	dfboot0
0848  DAB207  		jc	kperr
084B  B7      		ora	a
084C          		jrz	kpbt1
084C  2812    		DB	28H,kpbt1-$-1
084E  CD2B07  		call	galtbt
0851          		jr	kpbt0
0851  18BF    		DB	18H,kpbt0-$-1
		
0853  2104F8  	kppbt0:	lxi	h,susave+dpdev
0856  CD800D  		call	dfboot0
0859  DAB207  		jc	kperr
085C  B7      		ora	a
085D  C2B207  		jnz	kperr
0860          	kpbt1:
0860  CD8308  		call	btdsp2	; show device name
0863          		lxiy	kperr
0863  FD21    		DB	0FDH,21H
0865  B207    		DW	kperr
0867  318022  		lxi	sp,bootbf
086A  C31203  		jmp	gbooty
		
086D          	btdsp:
086D  3A0820  		lda	MFlag
0870  F602    		ori	mfl$DDU	; disable disp updates
0872  320820  		sta	MFlag
0875  D5      		push	d
0876  C5      		push	b
0877  CDAC0B  		call	clrdisp
087A  C1      		pop	b	; display string
087B  110B20  		lxi	d,Aleds
087E  CDA20B  		call	mov3dsp
0881  D1      		pop	d
0882  C9      		ret
		; IX=boot module
		; show device name in FP display
0883          	btdsp2:
0883  D5      		push	d	; device/unit
0884          		pushix
0884  DDE5    		DB	0DDH,0E5H
0886  E1      		pop	h
0887  110D00  		lxi	d,13	; FP display name
088A  19      		dad	d
088B  4D      		mov	c,l
088C  44      		mov	b,h
088D  111120  		lxi	d,Dleds
0890  CDA20B  		call	mov3dsp
			; TODO: fix this - is there a better way?
0893  3EFA    		mvi	a,250	;; make it briefly visible
0895  CD3002  		call	delay	;;
0898  D1      		pop	d	; device/unit
0899  C9      		ret
		
089A          	kptap:	; cassette load (read) or store (write, save)
089A  0600    		mvi	b,0	; command only
089C  0E88    		mvi	c,88h	; cassette module key
089E  210B0C  		lxi	h,bfkey
08A1  CDA30C  		call	bfind
08A4  DAB207  		jc	kperr
08A7  CDFE0C  		call	cmexec
08AA  C9      		ret
		
08AB          	kprdx:	; choose radix for display
08AB  3A0820  		lda	MFlag
08AE  F602    		ori	mfl$DDU	; disable disp updates
08B0  320820  		sta	MFlag
08B3  CDAC0B  		call	clrdisp
08B6  01740B  		lxi	b,dRad
08B9  110B20  		lxi	d,Aleds
08BC  CDA20B  		call	mov3dsp
08BF  3A3920  		lda	Radix
08C2  B7      		ora	a
08C3  2F      		cma		; 00->ff
08C4          		jrz	rdx0
08C4  2801    		DB	28H,rdx0-$-1
08C6  AF      		xra	a	; else 00
08C7  323920  	rdx0:	sta	Radix		; 00       ff
08CA  E613    		ani	00010011b	; 00->00,  ff->13
08CC  EE81    		xri	10000001b	; 00->81,  ff->92
08CE  321020  		sta	Aleds+5		; 00->'O', ff->'H'
			; wait 1S to allow user to see...
08D1  3EFA    		mvi	a,250		; 500mS
08D3  CD3002  		call	delay
08D6  3EFA    		mvi	a,250		; 500mS
08D8  CD3002  		call	delay
08DB  3A0820  		lda	MFlag
08DE  E6FD    		ani	not mfl$DDU	; enable disp updates
08E0  320820  		sta	MFlag
			; TODO: beep?
08E3  C9      		ret
		
08E4          	kpnxt:	; next register/memory addr
08E4  3A0720  		lda	DspMod
08E7  E602    		ani	00000010b	; Z if memory mode
08E9  2A1420  		lhld	ABUSS
08EC  110520  		lxi	d,RegI
08EF  23      		inx	h
08F0          		jrz	sae
08F0  2821    		DB	28H,sae-$-1
08F2  1A      		ldax	d
08F3  C602    		adi	2
08F5  12      		stax	d
08F6  FE1A    		cpi	nReg
08F8  D8      		rc
08F9  AF      		xra	a
08FA  12      		stax	d
08FB  C9      		ret
		
08FC          	kpprv:	; previous register/memory addr
08FC  3A0720  		lda	DspMod
08FF  E602    		ani	00000010b	; Z if memory mode
0901  2A1420  		lhld	ABUSS
0904  110520  		lxi	d,RegI
0907  2B      		dcx	h
0908          		jrz	sae
0908  2809    		DB	28H,sae-$-1
090A  1A      		ldax	d
090B  D602    		sui	2
090D  12      		stax	d
090E  D0      		rnc
090F  3E18    		mvi	a,nReg-2
0911  12      		stax	d
0912  C9      		ret
		
0913  221420  	sae:	shld	ABUSS
0916  C9      		ret
		
0917          	kpmem:	; switch to memory mode - enter address
0917  AF      		xra	a	; also NC
0918  320720  		sta	DspMod	; display memory...
091B  320620  		sta	DsProt	; periods all on...
091E  211520  		lxi	h,ABUSS+1	; little-endian, enter hi byte first
0921  CD8109  		call	iob
0924  2B      		dcx	h	; HL=low byte of address
0925  0600    		mvi	b,0
0927  B7      		ora	a	; CY=0
0928  CD8109  		call	iob
092B  C9      		ret		; back to start... TODO: prevent re-prompt
		
092C          	kprgm:	; switch to register mode
092C  3E02    		mvi	a,2
092E  320720  		sta	DspMod	; display registers...
0931  AF      		xra	a
0932  320620  		sta	DsProt	; periods all on...
0935  CD3F0A  		call	keyin
0938  E67F    		ani	01111111b
093A  FE0C    		cpi	(nReg-1)/2	; PC requires spcl
093C          		jrc	reg0
093C  3807    		DB	38H,reg0-$-1
093E  D603    		sub	3		; gap in codes?
0940  FE0C    		cpi	12		; was 15...
0942  C2B207  		jnz	kperr	; TODO: proper handling
0945  07      	reg0:	rlc	; times 2
0946  320520  		sta	RegI
0949  C9      		ret		; back to start... TODO: prevent re-prompt
		
094A          	kpcmd:	; A=keypad command, +80h
			; keypad pressed...
094A  FE8A    		cpi	8ah	; non-digit (hex req first be '0')
094C  D2D300  		jnc	cmchr
094F  47      		mov	b,a
0950  3A0720  		lda	DspMod
0953  0F      		rrc	; CY=alter mode
0954          		jrc	kpalter	; alter mode - numeric values only
0954  3804    		DB	38H,kpalter-$-1
0956  78      		mov	a,b
0957  C3D300  		jmp	cmchr
		; A=DspMod >> 1, B=key
095A          	kpalter:
095A  2A1420  		lhld	ABUSS
095D  0F      		rrc	; register (else memory)
095E          		jrc	kpreg
095E  3809    		DB	38H,kpreg-$-1
0960  37      		stc
0961  CD8109  		call	iob
0964  23      		inx	h
0965  221420  		shld	ABUSS
0968  C9      		ret
		
		; B=key
0969          	kpreg:
0969  3A0520  		lda	RegI
096C  B7      		ora	a
096D  CAB207  		jz	kperr	; RegI == 0 (SP) not allowed
0970  5F      		mov	e,a
0971  1600    		mvi	d,0
0973  2A1D20  		lhld	RegPtr
0976  19      		dad	d
0977  23      		inx	h	; HL=high byte of address
0978  37      		stc
0979  CD8109  		call	iob
097C  2B      		dcx	h	; HL=low byte of address
097D  CD8109  		call	iob
0980  C9      		ret
		
		; Input Octal(or Hex) byte
		; B=key, CY=first digit
0981          	iob:	rarr	c	; save CY => C bit 7
0981  CB19    		DB	0CBH, 18H + c
0983  3A3920  		lda	Radix
0986  B7      		ora	a
0987  78      		mov	a,b
0988          		jrz	ioboct
0988  2820    		DB	28H,ioboct-$-1
		; iobhex - to avoid conflict with cmd keys A-F, first input must be [0]
		; So, hex input requires 3 or 5 + 1 keys.
098A          		ralr	c	; restore CY
098A  CB11    		DB	0CBH, 10H+c
098C  D43F0A  		cnc	keyin
098F  E67F    		ani	01111111b
0991  C2B207  		jnz	kperr
0994  1602    		mvi	d,2
0996  CD3F0A  	iobh0:	call	keyin
0999  E67F    		ani	01111111b
099B  5F      		mov	e,a
099C  7E      		mov	a,m
099D  07      		rlc
099E  07      		rlc
099F  07      		rlc
09A0  07      		rlc
09A1  E6F0    		ani	11110000b
09A3  B3      		ora	e	; also ensure NC for loop
09A4  77      		mov	m,a
09A5  15      		dcr	d
09A6          		jrnz	iobh0
09A6  20EE    		DB	20H,iobh0-$-1
09A8          		jr	iob0
09A8  181A    		DB	18H,iob0-$-1
09AA          	ioboct:
09AA          		ralr	c	; restore CY
09AA  CB11    		DB	0CBH, 10H+c
09AC  1603    		mvi	d,3
09AE  D43F0A  	iobo0:	cnc	keyin
09B1  E67F    		ani	01111111b
09B3  FE08    		cpi	8
09B5  D2B207  		jnc	kperr
09B8  5F      		mov	e,a
09B9  7E      		mov	a,m
09BA  07      		rlc
09BB  07      		rlc
09BC  07      		rlc
09BD  E6F8    		ani	11111000b
09BF  B3      		ora	e	; also ensure NC for loop
09C0  77      		mov	m,a
09C1  15      		dcr	d
09C2          		jrnz	iobo0
09C2  20EA    		DB	20H,iobo0-$-1
09C4          	iob0:
			; TODO: blip to ack entry?
09C4  C9      		ret
		endif
		
		; returns with interrupts disabled
		; preserves DE
09C5          	h17init:
09C5  F3      		di
09C6  DBF2    		in	0f2h
09C8  E603    		ani	00000011b	; port 7C - only one for H17
09CA          		jrnz	h17in0
09CA  2003    		DB	20H,h17in0-$-1
09CC  AF      		xra	a
09CD  D37F    		out	07fh	; avoid this if H17 not configured
09CF  D5      	h17in0:	push	d
09D0  210920  		lxi	h,ctl$F0
09D3  36D0    		mvi	m,11010000b	; !beep, 2mS, !mon, !SI
09D5  215A1F  		lxi	h,R$CONST
09D8  114820  		lxi	d,D$CONST
09DB  015800  		lxi	b,88
09DE          		ldir
09DE  EDB0    		DB	0EDH,0B0H
09E0  6B      		mov	l,e
09E1  62      		mov	h,d
09E2  13      		inx	d
09E3  0E1E    		mvi	c,30
09E5  77      		mov	m,a
09E6          		ldir	; fill l20a0h...
09E6  EDB0    		DB	0EDH,0B0H
09E8  3E07    		mvi	a,7
09EA  211F20  		lxi	h,intvec	; vector area
09ED          	h17ini0:
09ED  36C3    		mvi	m,0c3h
09EF  23      		inx	h
09F0  3662    		mvi	m,LOW (nulint-rst0)
09F2  23      		inx	h
09F3  3600    		mvi	m,HIGH (nulint-rst0)
09F5  23      		inx	h
09F6  3D      		dcr	a
09F7          		jrnz	h17ini0
09F7  20F4    		DB	20H,h17ini0-$-1
09F9  D1      		pop	d
09FA  C9      		ret
		
09FB          	waitcr:
09FB  CD150A  		call	conin
09FE  FE0D    		cpi	CR
0A00          		jrnz	waitcr
0A00  20F9    		DB	20H,waitcr-$-1
0A02          	crlf:
0A02  3E0D    		mvi	a,CR
0A04  CDD503  		call	conout
0A07  3E0A    		mvi	a,LF
0A09  C3D503  		jmp	conout
		
0A0C          	msgout:
0A0C  7E      		mov	a,m
0A0D  B7      		ora	a
0A0E  C8      		rz
0A0F  CDD503  		call	conout
0A12  23      		inx	h
0A13          		jr	msgout
0A13  18F7    		DB	18H,msgout-$-1
		
		; called in the context of a command on console
0A15  DBED    	conin:	in	0edh
0A17  0F      		rrc
0A18          		jrc	conin0
0A18  3811    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A1A  DBDA    		in	0dah	; VDIP1/FT245R status
0A1C  E608    		ani	00001000b	; VDIP1 RxR
0000          	if nofp
		else
0A1E          		jrz	novdip2
0A1E  2802    		DB	28H,novdip2-$-1
0A20  DBD9    		in	0d9h	; flush char
0A22          	novdip2:
0A22  3A3A20  		lda	kpchar
0A25  B7      		ora	a
0A26          		jrz	conin
0A26  28ED    		DB	28H,conin-$-1
			; cancel console cmd, leave keypad char for cmdin
0A28  C3AB00  		jmp	start
		endif
		
0A2B  DBE8    	conin0:	in	0e8h
0A2D  E67F    		ani	07fh
0A2F  FE7F    		cpi	DEL	; DEL key restarts from anywhere?
0A31  CA9F00  		jz	re$entry
0A34  C9      		ret
		
		; Pure console input, no tricks
0A35  DBED    	conin1:	in	0edh
0A37  0F      		rrc
0A38          		jrnc	conin1
0A38  30FB    		DB	30H,conin1-$-1
0A3A  DBE8    		in	0e8h
0A3C  E67F    		ani	07fh
0A3E  C9      		ret
		
FFFF          	if not nofp
		; called in the context of command on front-panel
0A3F  3A3A20  	keyin:	lda	kpchar
0A42  B7      		ora	a
0A43          		jrnz	getkey
0A43  201B    		DB	20H,getkey-$-1
0A45  DBED    		in	0edh
0A47  0F      		rrc
0A48          		jrnc	keyin
0A48  30F5    		DB	30H,keyin-$-1
			; cancel kaypad cmd, leave console char for cmdin
			; TODO: what modes need reset?
0A4A  C3AB00  		jmp	start
		endif
		
		; wait for command - console or keypad
0A4D          	cmdin:
0A4D  DBED    		in	0edh
0A4F  0F      		rrc
0A50          		jrc	conin0
0A50  38D9    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A52  DBDA    		in	0dah	; VDIP1/FT245R status
0A54  E608    		ani	00001000b	; VDIP1 RxR
			; INS8250 IIR always 0
			; 16550 IIR is RxD timeout (?)
			; 16C2550 ISR is RxD timeout (?)
0000          	if nofp
		else
0A56          		jrz	novdip1
0A56  2802    		DB	28H,novdip1-$-1
0A58  DBD9    		in	0d9h	; flush char
0A5A          	novdip1:
0A5A  3A3A20  		lda	kpchar
0A5D  B7      		ora	a
0A5E          		jrz	cmdin
0A5E  28ED    		DB	28H,cmdin-$-1
0A60  F5      	getkey:	push	psw	; A=scan code
0A61  AF      		xra	a
0A62  323A20  		sta	kpchar
0A65  F1      		pop	psw
0A66  EEFE    		xri	11111110b
0A68  0F      		rrc
0A69          		jrnc	gotkey
0A69  3004    		DB	30H,gotkey-$-1
0A6B  0F      		rrc
0A6C  0F      		rrc
0A6D  0F      		rrc
0A6E  0F      		rrc
0A6F  E60F    	gotkey:	ani	00001111b
0A71  F680    		ori	10000000b	; distinguish from console input
			; TODO: check for CANCEL key?
0A73  C9      		ret
		endif
		
FFFF          	if not nofp
		; keypad check at 32mS
0A74  211620  	kpchk:	lxi	h,RckA
0A77  DBF0    		in	0f0h
0A79  BE      		cmp	m	; RckA
0A7A          		jrnz	kpchk0
0A7A  2014    		DB	20H,kpchk0-$-1
0A7C  E611    		ani	00010001b
0A7E  FE11    		cpi	00010001b
0A80  C8      		rz	; nothing pressed
0A81  7E      		mov	a,m
			; need to count auto-repeat/debounce
0A82  23      		inx	h	; kpcnt
0A83  35      		dcr	m
0A84  C0      		rnz
			; got a key press...
0A85  323A20  		sta	kpchar
0A88  3610    		mvi	m,rptcnt
0A8A  3E02    		mvi	a,4/2	; 4mS click
0A8C  CDC705  		call	set$horn
0A8F  C9      		ret
0A90  77      	kpchk0:	mov	m,a	; RckA
0A91  23      		inx	h	; kpcnt
0A92  3601    		mvi	m,debounce
0A94  C9      		ret
		
		; Update Front-panel Display
		; B=MFlag, destroyed
0A95  3E02    	ufd:	mvi	a,mfl$DDU
0A97  A0      		ana	b
0A98  C0      		rnz		; updates disabled
0A99  210620  		lxi	h,DsProt
0A9C          		rlcr	m
0A9C  CB06    		DB	0CBH, 00H + m
0A9E  46      		mov	b,m
0A9F  23      		inx	h	; DspMod
0AA0  7E      		mov	a,m
0AA1  E602    		ani	00000010b
0AA3  2A1420  		lhld	ABUSS
0AA6          		jrz	ufd1	; displaying memory
0AA6  2812    		DB	28H,ufd1-$-1
			; displaying registers
0AA8  CD970B  		call	lra	; locate register address offset (DE)
0AAB  E5      		push	h
0AAC  217D0B  		lxi	h,LedRegTbl
0AAF  19      		dad	d
0AB0  7E      		mov	a,m
0AB1  23      		inx	h
0AB2  66      		mov	h,m
0AB3  6F      		mov	l,a
0AB4  E3      		xthl
0AB5  B4      		ora	h
0AB6  7E      		mov	a,m
0AB7  23      		inx	h
0AB8  66      		mov	h,m
0AB9  6F      		mov	l,a
0ABA  F5      	ufd1:	push	psw
0ABB  EB      		xchg
0ABC  210B20  		lxi	h,Aleds
0ABF  7A      		mov	a,d
0AC0  CDD90A  		call	dod
0AC3  7B      		mov	a,e
0AC4  CDD90A  		call	dod
0AC7  F1      		pop	psw
0AC8  1A      		ldax	d
0AC9          		jrz	dod	; if displaying memory
0AC9  280E    		DB	28H,dod-$-1
			; displaying register name
0ACB  C1      		pop	b
0ACC  111120  		lxi	d,Dleds
0ACF  2E03    	mv3byt:	mvi	l,3
0AD1  0A      	mvb:	ldax	b
0AD2  12      		stax	d
0AD3  03      		inx	b
0AD4  13      		inx	d
0AD5  2D      		dcr	l
0AD6          		jrnz	mvb
0AD6  20F9    		DB	20H,mvb-$-1
0AD8  C9      		ret
		
		; B=dot flag
0AD9  4F      	dod:	mov	c,a	; value to display
0ADA  3A3920  		lda	Radix
0ADD  B7      		ora	a	; Z if octal (also CY=0)
0ADE  79      		mov	a,c
0ADF          		jrnz	dodhex
0ADF  2021    		DB	20H,dodhex-$-1
0AE1  D5      		push	d
0AE2  0E03    		mvi	c,3
0AE4  17      	dodr5:	ral
0AE5  17      		ral
0AE6  17      		ral
0AE7  F5      		push	psw
0AE8  E607    		ani	07h
0AEA  C62E    		adi	LOW doddig
0AEC  5F      		mov	e,a
0AED  3E0B    		mvi	a,HIGH doddig
0AEF  CE00    		aci	0
0AF1  57      		mov	d,a
0AF2  1A      		ldax	d
0AF3  A8      		xra	b	; DP on/off
0AF4  E67F    		and	01111111b	; why???
0AF6  A8      		xra	b
0AF7  77      		mov	m,a
0AF8  23      		inx	h
0AF9  78      		mov	a,b	; rlcr b
0AFA  07      		rlc
0AFB  47      		mov	b,a
0AFC  F1      		pop	psw
0AFD  0D      		dcr	c
0AFE          		jrnz	dodr5
0AFE  20E4    		DB	20H,dodr5-$-1
0B00  D1      		pop	d
0B01  C9      		ret
		
0B02  D5      	dodhex:	push	d
0B03  0E02    		mvi	c,2
0B05  07      	deh55:	rlc
0B06  07      		rlc
0B07  07      		rlc
0B08  07      		rlc
0B09  F5      		push	psw
0B0A  E60F    		ani	0fh
0B0C  C62E    		adi	LOW doddig
0B0E  5F      		mov	e,a
0B0F  3E0B    		mvi	a,HIGH doddig
0B11  CE00    		aci	0
0B13  57      		mov	d,a
0B14  1A      		ldax	d
0B15  A8      		xra	b		; DP on/off
0B16  E67F    		ani	01111111b	; why???
0B18  A8      		xra	b		; ???
0B19  77      		mov	m,a
0B1A  23      		inx	h
0B1B          		rlcr	b
0B1B  CB00    		DB	0CBH, 00H + b
0B1D  F1      		pop	psw
0B1E  0D      		dcr	c
0B1F          		jrnz	deh55
0B1F  20E4    		DB	20H,deh55-$-1
0B21  D1      		pop	d
0B22  3E6F    		mvi	a,01101111b	; "_"
0B24  A8      		xra	b		; DP on/off
0B25  E67F    		ani	01111111b	; why???
0B27  A8      		xra	b		; ???
0B28  77      		mov	m,a
0B29  23      		inx	h
0B2A  78      		mov	a,b	; rlcr b
0B2B  07      		rlc
0B2C  47      		mov	b,a
0B2D  C9      		ret
		
		; octal (base 8) 7-seg translation
0B2E  01      	doddig:	db	00000001b	; "0."
0B2F  73      		db	01110011b	; "1."
0B30  48      		db	01001000b	; "2."
0B31  60      		db	01100000b	; "3."
0B32  32      		db	00110010b	; "4."
0B33  24      		db	00100100b	; "5."
0B34  04      		db	00000100b	; "6."
0B35  71      		db	01110001b	; "7."
0B36  00      		db	00000000b	; "8."
0B37  20      		db	00100000b	; "9."
0B38  10      		db	00010000b	; "A."
0B39  06      		db	00000110b	; "b."
0B3A  0D      		db	00001101b	; "C."
0B3B  42      		db	01000010b	; "d."
0B3C  0C      		db	00001100b	; "E."
0B3D  1C      		db	00011100b	; "F."
		
0B3E  FFA498  	dSP:	db	11111111b,10100100b,10011000b	; " SP"
0B41  FF909C  	dPSW:	db	11111111b,10010000b,10011100b	; " AF"
0B44  FF868D  	dBC:	db	11111111b,10000110b,10001101b	; " BC"
0B47  FFC28C  	dDE:	db	11111111b,11000010b,10001100b	; " DE"
0B4A  FF928F  	dHL:	db	11111111b,10010010b,10001111b	; " HL"
0B4D  FFF3B6  	dIX:	db	11111111b,11110011b,10110110b	; " IX"
0B50  FFF3DE  	dIY:	db	11111111b,11110011b,11011110b	; " IY"
0B53  FFF3D3  	dIR:	db	11111111b,11110011b,11010011b	; " IR"
0B56  909CBF  	dPSWp:	db	10010000b,10011100b,10111111b	; "AF'"
0B59  868DBF  	dBCp:	db	10000110b,10001101b,10111111b	; "BC'"
0B5C  C28CBF  	dDEp:	db	11000010b,10001100b,10111111b	; "DE'"
0B5F  928FBF  	dHLp:	db	10010010b,10001111b,10111111b	; "HL'"
0B62  FF98CE  	dPC:	db	11111111b,10011000b,11001110b	; " PC"
		
0B65  C28C83  	dDev:	db	11000010b,10001100b,10000011b	; "dEU" (dev)
0B68  98C6DE  	dPor:	db	10011000b,11000110b,11011110b	; "Por"
0B6B  83D6F7  	dUni:	db	10000011b,11010110b,11110111b	; "Uni"
0B6E  8CDEDE  	dErr:	db	10001100b,11011110b,11011110b	; "Error "
0B71  C6DEFF  		db	11000110b,11011110b,11111111b
0B74  DE90C2  	dRad:	db	11011110b,10010000b,11000010b	; "rAd"
0B77  98DEDF  	dPri:	db	10011000b,11011110b,11011111b	; "Pri"
0B7A  A48C8D  	dSec:	db	10100100b,10001100b,10001101b	; "SEC"
		
0B7D          	LedRegTbl:
0B7D  3E0B    		dw	dSP	; 0
0B7F  410B    		dw	dPSW	; 1
0B81  440B    		dw	dBC	; 2
0B83  470B    		dw	dDE	; 3
0B85  4A0B    		dw	dHL	; 4
0B87  4D0B    		dw	dIX	; 5	- TODO
0B89  500B    		dw	dIY	; 6	- TODO
0B8B  530B    		dw	dIR	; 7	- TODO
0B8D  560B    		dw	dPSWp	; 8	- TODO
0B8F  590B    		dw	dBCp	; 9	- TODO
0B91  5C0B    		dw	dDEp	; 10	- TODO
0B93  5F0B    		dw	dHLp	; 11	- TODO
0B95  620B    		dw	dPC	; 12	- 5
001A          	nReg	equ	$-LedRegTbl	; 2x num registers...
		
0B97  3A0520  	lra:	lda	RegI
0B9A  5F      	lrax:	mov	e,a
0B9B  1600    		mvi	d,0
0B9D  2A1D20  		lhld	RegPtr
0BA0  19      		dad	d
0BA1  C9      		ret
		
0BA2          	mov3dsp:
0BA2  2E03    		mvi	l,3
0BA4          	movLdsp:
0BA4  0A      	md0:	ldax	b
0BA5  12      		stax	d
0BA6  03      		inx	b
0BA7  13      		inx	d
0BA8  2D      		dcr	l
0BA9          		jrnz	md0
0BA9  20F9    		DB	20H,md0-$-1
0BAB  C9      		ret
		
0BAC          	clrdisp:
0BAC  210B20  		lxi	h,fpLeds
0BAF  5D      		mov	e,l
0BB0  54      		mov	d,h
0BB1  010800  		lxi	b,9-1
0BB4  36FF    		mvi	m,11111111b
0BB6  13      		inx	d
0BB7          		ldir
0BB7  EDB0    		DB	0EDH,0B0H
0BB9  C9      		ret
		
		; Front panel display refresh and keypad check
0BBA          	int1$fp:
0BBA  0E00    		mvi	c,0
0BBC  213C20  		lxi	h,horn
0BBF  7E      		mov	a,m
0BC0  B7      		ora	a
0BC1          		jrz	fp1
0BC1  2805    		DB	28H,fp1-$-1
0BC3  35      		dcr	m
0BC4          		jrnz	fp1
0BC4  2002    		DB	20H,fp1-$-1
0BC6  0E80    		mvi	c,10000000b	; beep off
0BC8          	fp1:
0BC8  210820  		lxi	h,MFlag
0BCB  46      		mov	b,m
0BCC  23      		inx	h	; ctl$F0
0BCD  7E      		mov	a,m
0BCE  B1      		ora	c	; beep off bit
0BCF  77      		mov	m,a
0BD0          		bit	6,b	; refresh display?
0BD0  CB70    		DB	0CBH,6*8+b+40H
0BD2          		jrnz	fp3
0BD2  200B    		DB	20H,fp3-$-1
0BD4  23      		inx	h	; Refind
0BD5  35      		dcr	m
0BD6          		jrnz	fp2
0BD6  2002    		DB	20H,fp2-$-1
0BD8  3609    		mvi	m,9
0BDA  5E      	fp2:	mov	e,m	; 1-9
0BDB  1600    		mvi	d,0
0BDD  19      		dad	d	; HL = &fpLeds[E-1]
0BDE  B3      		ora	e	; merge digit select
0BDF          	fp3:
0BDF  D3F0    		out	0f0h
0BE1  7E      		mov	a,m	; FP segments (fpLeds[E-1])
0BE2  D3F1    		out	0f1h
			; See if time to update display values or check keypad
0BE4  2E1B    		mvi	l,LOW ticcnt
0BE6  7E      		mov	a,m
0BE7  F5      		push	psw
0BE8  E61F    		ani	31	; 64mS
0BEA  CC950A  		cz	ufd	; B=MFlag, destroyed
0BED  F1      		pop	psw
0BEE  E60F    		ani	15	; 32mS
0BF0  CC740A  		cz	kpchk
		endif
0BF3          	int1$xx:
			; not really FP related, but no space in low ROM...
0BF3  3A0820  		lda	MFlag
0BF6  0F      		rrc		; mfl$CLK private int1?
0BF7  DC1F20  		cc	vrst1
0BFA  C34D00  		jmp	intret
		
		; match module by character (letter)
		; C=letter, B=00:cmd,ff:boot
0BFD          	bfchr:	ldx	a,+2	; phy drv or type
0BFD  DD7E02  		DB	0DDH,a*8+46H,+2
0C00  D6C8    		sui	200	; boot modules < 200
0C02  9F      		sbb	a	; ff=boot, 00=cmd
0C03  B8      		cmp	b	; ZR=match
0C04          		jrnz	bfn0
0C04  2023    		DB	20H,bfn0-$-1
0C06          		ldx	a,mdchr
0C06  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C09  B9      		cmp	c
0C0A  C9      		ret
		
		; match module by FP key
		; C=FP key, B=00:cmd,ff:boot
0C0B          	bfkey:	ldx	a,+2	; phy drv or type
0C0B  DD7E02  		DB	0DDH,a*8+46H,+2
0C0E  D6C8    		sui	200	; boot modules < 200
0C10  9F      		sbb	a	; ff=boot, 00=cmd
0C11  B8      		cmp	b	; ZR=match
0C12          		jrnz	bfn0
0C12  2015    		DB	20H,bfn0-$-1
0C14          		ldx	a,mdkey
0C14  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C17  B9      		cmp	c
0C18  C9      		ret
		
		; match boot module by phy drv number
		; C=phy drv (base), B=type
		; Only for boot modules
0C19          	bfnum:	ldx	a,mdbase	; phy drv or type
0C19  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C1C  FEC8    		cpi	200	; boot modules < 200
0C1E          		jrnc	bfn0	; skip if >= 200
0C1E  3009    		DB	30H,bfn0-$-1
0C20  79      		mov	a,c
0C21          		subx	mdbase
0C21  DD9602  		DB	0DDH,96H,mdbase
0C24  B7      		ora	a
0C25          		jrnz	bfn0
0C25  2002    		DB	20H,bfn0-$-1
0C27  AF      		xra	a
0C28  C9      		ret
0C29  AF      	bfn0:	xra	a
0C2A  3C      		inr	a
0C2B  C9      		ret
		
		; List only boot modules
		; On first module, C=0
0C2C          	bflst:	ldx	a,mdbase	; phy drv or type
0C2C  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C2F  FEC8    		cpi	200	; boot modules < 200
0C31          		jrnc	bfn0
0C31  30F6    		DB	30H,bfn0-$-1
0C33  79      		mov	a,c
0C34  B7      		ora	a
0C35  3E2C    		mvi	a,','
0C37  C4D503  		cnz	conout
0C3A  0C      		inr	c
0C3B  78      		mov	a,b
0C3C          		subx	mdbase
0C3C  DD9602  		DB	0DDH,96H,mdbase
0C3F  B7      		ora	a
0C40  3E2A    		mvi	a,'*'
0C42  CCD503  		cz	conout
0C45          		pushix
0C45  DDE5    		DB	0DDH,0E5H
0C47  E1      		pop	h
0C48  111000  		lxi	d,mdname
0C4B  19      		dad	d
0C4C  CD0C0A  		call	msgout
0C4F  212C0C  		lxi	h,bflst
0C52          		jr	bfn0	; NZ - keep going
0C52  18D5    		DB	18H,bfn0-$-1
		
		; List only boot modules
0C54          	bfllst:	ldx	a,mdbase	; phy drv or type
0C54  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C57  FEC8    		cpi	200	; boot modules < 200
0C59          		jrnc	bfn0
0C59  30CE    		DB	30H,bfn0-$-1
0C5B  78      		mov	a,b
0C5C          		subx	mdbase
0C5C  DD9602  		DB	0DDH,96H,mdbase
0C5F  B7      		ora	a
0C60  3E20    		mvi	a,' '
0C62          		jrnz	bfll2
0C62  2002    		DB	20H,bfll2-$-1
0C64  3E2A    		mvi	a,'*'
0C66  CDD503  	bfll2:	call	conout
0C69          		pushix
0C69  DDE5    		DB	0DDH,0E5H
0C6B  E1      		pop	h
0C6C  111000  		lxi	d,mdname
0C6F  19      		dad	d
0C70  CD0C0A  		call	msgout
0C73  3E09    		mvi	a,TAB
0C75  CDD503  		call	conout
0C78          		ldx	a,mdchr
0C78  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C7B  CDD503  		call	conout
0C7E  3E20    		mvi	a,' '
0C80  CDD503  		call	conout
0C83          		ldx	a,mdkey
0C83  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C86  C630    		adi	'0'
0C88          		jrnc	bfll0
0C88  3002    		DB	30H,bfll0-$-1
0C8A  3E2D    		mvi	a,'-'
0C8C  CDD503  	bfll0:	call	conout
0C8F  3E20    		mvi	a,' '
0C91  CDD503  		call	conout
0C94          		ldx	a,mdbase
0C94  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C97  CD040D  		call	decout
0C9A  CD020A  		call	crlf
0C9D  21540C  		lxi	h,bfllst
0CA0  AF      		xra	a	; NZ - keep going
0CA1  3C      		inr	a	;
0CA2  C9      		ret
		
		; Find boot module and load into 1000h if necessary.
		; HL=match function: returns Z if found, BC=target, IX=module
		; Return CY at end of modules (not found)
		; Return IX=loaded module (run location)
		; Must preserve BC during search loop.
0CA3          	bfind:
			; can't check if it's loaded until we know where it's loaded...
			; first, check if already loaded
			;lxix	btovl
			;call	icall
			;rz
0CA3          	bfind0:
FFFF          	if z180
			; map ROM F8000 into 4000
0CA3  3EF4    		mvi	a,0f8h-04h
0CA5          		out0	a,mmu$bbr
0CA5  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0CA8          		lxix	btmods	; start of modules...
0CA8  DD21    		DB	0DDH,21H
0CAA  0060    		DW	btmods
0CAC  CD4201  	bf0:	call	icall
0CAF          		jrz	bf9
0CAF  281E    		DB	28H,bf9-$-1
0CB1          		ldx	d,mdpgs
0CB1  DD5600  		DB	0DDH,d*8+46H,mdpgs
0CB4  1E00    		mvi	e,0
0CB6          		dadx	d
0CB6  DD19    		DB	0DDH,d*8+09H
0CB8          		pushix
0CB8  DDE5    		DB	0DDH,0E5H
0CBA  F1      		pop	psw	; A=IXh
0CBB  FEC0    		cpi	HIGH bterom	; end of ROM
0CBD          		jrnc	bf1
0CBD  300A    		DB	30H,bf1-$-1
0CBF          		ldx	a,mdpgs
0CBF  DD7E00  		DB	0DDH,a*8+46H,mdpgs
0CC2  B7      		ora	a
0CC3          		jrz	bf1
0CC3  2804    		DB	28H,bf1-$-1
0CC5  FEFF    		cpi	0ffh
0CC7          		jrnz	bf0
0CC7  20E3    		DB	20H,bf0-$-1
0CC9          	bf1:
FFFF          	if z180
0CC9  AF      		xra	a
0CCA          		out0	a,mmu$bbr
0CCA  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0CCD  37      		stc	; CY = end of list (not found)
0CCE  C9      		ret
		
0CCF          	bf9:	; match found, now load into place and init
0CCF          		ldx	b,mdpgs
0CCF  DD4600  		DB	0DDH,b*8+46H,mdpgs
0CD2          		ldx	d,mdorg
0CD2  DD5601  		DB	0DDH,d*8+46H,mdorg
0CD5          		pushix		;
0CD5  DDE5    		DB	0DDH,0E5H
0CD7  E1      		pop	h	; HL=IX (module in logical addr)
0CD8  1E00    		mvi	e,0
0CDA  0E00    		mvi	c,0
0CDC  D5      		push	d
FFFF          	if z180
FFFF          	if use$dma
0CDD  7C      		mov	a,h	; L should (must) be 00... also E...
0CDE  D640    		sui	40h	; remove offset of mapping @ 4000h
0CE0  C680    		adi	80h	; low byte of 0f80h ROM page addr
0CE2  6F      		mov	l,a
0CE3  3E0F    		mvi	a,0fh	; hi byte of 0f80h ROM page addr
0CE5  CE00    		aci	0
0CE7  67      		mov	h,a	; HL=ROM phy addr
0CE8  5A      		mov	e,d	; shift dest addr into page addr
0CE9  1600    		mvi	d,0	; always in low memory?
0CEB  CD2306  		call	dmacpy
		else
		endif
		else
		endif
0CEE          		popix	; module load addr
0CEE  DDE1    		DB	0DDH,0E1H
			; now call init routine... but must restore RAM...
FFFF          	if z180
0CF0  AF      		xra	a
0CF1          		out0	a,mmu$bbr
0CF1  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0CF4  CDF80C  		call	btinit	; CY indicates error, pass along...
0CF7  C9      		ret
		
		; IX=module in real memory
0CF8          	btinit:	pushix
0CF8  DDE5    		DB	0DDH,0E5H
0CFA  E1      		pop	h
0CFB  2E04    		mvi	l,mdinit
0CFD  E9      		pchl
		
		; IX=module in real memory
0CFE          	cmexec:
0CFE          	btboot:	pushix
0CFE  DDE5    		DB	0DDH,0E5H
0D00  E1      		pop	h
0D01  2E07    		mvi	l,mdboot
0D03  E9      		pchl
		
		; assume < 100
0D04          	decout:
0D04  1630    		mvi	d,'0'
0D06          	decot0:
0D06  D60A    		sui	10
0D08  DA0F0D  		jc	decot1
0D0B  14      		inr	d
0D0C  C3060D  		jmp	decot0
0D0F          	decot1:
0D0F  C60A    		adi	10
0D11  C630    		adi	'0'
0D13  F5      		push	psw
0D14  7A      		mov	a,d
0D15  CDD503  		call	conout
0D18  F1      		pop	psw
0D19  C3D503  		jmp	conout
		
		; Returns NZ if found, D=phy drv
0D1C          	gtdvtb:
0D1C  DBF2    		in	0f2h
0D1E  E670    		ani	01110000b	; default boot device
0D20  07      		rlc
0D21  07      		rlc
0D22  07      		rlc
0D23  07      		rlc
0D24  21C00D  		lxi	h,defbt
0D27          	gtdvtb0:
0D27  85      		add	l
0D28  6F      		mov	l,a
0D29  3E00    		mvi	a,0
0D2B  8C      		adc	h
0D2C  67      		mov	h,a
0D2D  56      		mov	d,m	; might be FF or FE
0D2E  C9      		ret
		
0D2F          	A$boot:
0D2F  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D32  7A      		mov	a,d
0D33  FEFF    		cpi	0ffh
0D35  CA1C02  		jz	s501er
0D38  FEFE    		cpi	0feh
0D3A          		jrnz	findit
0D3A  200D    		DB	20H,findit-$-1
0D3C  2104F8  		lxi	h,susave+dpdev
0D3F  7E      		mov	a,m
0D40  23      		inx	h
0D41  FEFF    		cpi	0ffh
0D43  CA1C02  		jz	s501er	; not setup
0D46  C3A802  		jmp	gotit1
0D49          	findit:
0D49  D5      		push	d
0D4A  C5      		push	b
0D4B  4A      		mov	c,d
0D4C  06FF    		mvi	b,-1	; boot modules only
0D4E  21190C  		lxi	h,bfnum
0D51  CDA30C  		call	bfind
0D54  C1      		pop	b
0D55  D1      		pop	d
0D56  DA1C02  		jc	s501er
0D59  CDC802  		call	vfport
0D5C  DA1C02  		jc	s501er
0D5F  C3BF02  		jmp	gotit
		
		; default boot selected from console
0D62          	dfboot:
0D62  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D65  7A      		mov	a,d
0D66  FEFF    		cpi	0ffh
0D68  CABE01  		jz	error
0D6B  FEFE    		cpi	0feh
0D6D  C23A02  		jnz	gotnum
0D70  2104F8  		lxi	h,susave+dpdev
0D73  CD800D  		call	dfboot0
0D76  DABE01  		jc	error
0D79  B7      		ora	a
0D7A  C2BE01  		jnz	error
0D7D  C30B03  		jmp	goboot
		
0D80          	dfboot0:	; HL=setup data for pri or sec
0D80  7E      		mov	a,m
0D81  23      		inx	h
0D82  FEFF    		cpi	0ffh
0D84  C8      		rz		; A <> 0: not setup
0D85  E5      		push	h
0D86  4F      		mov	c,a
0D87  06FF    		mvi	b,-1	; boot modules only
0D89  21FD0B  		lxi	h,bfchr
0D8C  CDA30C  		call	bfind
0D8F  E1      		pop	h
0D90  D8      		rc		; CY: no module - error
0D91  CDC802  		call	vfport
0D94  D8      		rc		; CY: SW501 error
0D95          		ldx	d,mdbase
0D95  DD5602  		DB	0DDH,d*8+46H,mdbase
0D98  7E      		mov	a,m
0D99  23      		inx	h
0D9A  FEFF    		cpi	0ffh
0D9C          		jrnz	dfbt0
0D9C  2001    		DB	20H,dfbt0-$-1
0D9E  AF      		xra	a
0D9F          	dfbt0:	cmpx	mdluns
0D9F  DDBE03  		DB	0DDH,0BEH,mdluns
0DA2  3F      		cmc
0DA3  D8      		rc
0DA4  5F      		mov	e,a	; DE=phy drv base,unit
0DA5  7E      		mov	a,m
0DA6  FEFF    		cpi	0ffh	; no string?
0DA8          		jrz	dfbt2
0DA8  2814    		DB	28H,dfbt2-$-1
0DAA  D5      		push	d
0DAB  118122  		lxi	d,bootbf+1	; len in +0...
0DAE  0E00    		mvi	c,0
0DB0  7E      	dfbt1:	mov	a,m
0DB1  12      		stax	d
0DB2  23      		inx	h
0DB3  13      		inx	d
0DB4  0C      		inr	c
0DB5  B7      		ora	a
0DB6          		jrnz	dfbt1
0DB6  20F8    		DB	20H,dfbt1-$-1
0DB8  79      		mov	a,c
0DB9  3D      		dcr	a
0DBA  328022  		sta	bootbf
0DBD  D1      		pop	d
0DBE  AF      	dfbt2:	xra	a	; A=0: ready to boot
0DBF  C9      		ret
		
0DC0          	defbt:	; default boot table... port F2 bits 01110000b
0DC0  21      		db	33	; -000---- MMS 5" floppy 0
0DC1  1D      		db	29	; -001---- MMS 8" floppy 0
0DC2  FF      		db	0ffh	; -010---- n/a  (port 7CH)
0DC3  FF      		db	0ffh	; -011---- n/a  (port 78H)
0DC4  29      		db	41	; -100---- VDIP1
0DC5  46      		db	70	; -101---- GIDE disk part 0
0DC6  3C      		db	60	; -110---- Network
0DC7  FE      		db	0feh	; -111---- use setup primary
		
FFFF          	if z180
		; TODO: preserve CPU regs for debug/front-panel
		; (by the time we reach intsetup, everything is trashed)
0DC8          	trap:
0DC8  E1      		pop	h
0DC9  2B      		dcx	h
0DCA          		bit	6,a
0DCA  CB77    		DB	0CBH,6*8+a+40H
0DCC          		jrz	trap0
0DCC  2801    		DB	28H,trap0-$-1
0DCE  2B      		dcx	h
0DCF          	trap0:
0DCF  47      		mov	b,a
0DD0  3EFF    		mvi	a,1111$1111b
0DD2          		out0	a,mmu$cbar
0DD2  ED393A  		DB	0EDH, a*8+01H, mmu$cbar
0DD5  AF      		xra	a
0DD6          		out0	a,mmu$cbr
0DD6  ED3938  		DB	0EDH, a*8+01H, mmu$cbr
0DD9          		out0	a,mmu$bbr
0DD9  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
0DDC  31FFFF  		lxi	sp,0ffffh
0DDF  E5      		push	h
0DE0  78      		mov	a,b
0DE1  E67F    		ani	01111111b	; reset TRAP
0DE3          		out0	a,itc
0DE3  ED3934  		DB	0EDH, a*8+01H, itc
0DE6  21F60D  		lxi	h,trpms
0DE9  CD0C0A  		call	msgout
0DEC  E1      		pop	h
0DED  CD3604  		call	adrout
0DF0  CD020A  		call	crlf
0DF3  C34B03  		jmp	init0
		
0DF6  0D0A2A2A	trpms:	db	CR,LF,'*** TRAP ',TRM
      2A205452
      41502000
		endif
		
FFFF          	if z180
0E02          	savram:	; TODO: implement this w/o DMAC?
0E02  210000  		lxi	h,000h	; save from 00000h
0E05  110003  		lxi	d,300h	; save into 30000h
0E08  010040  		lxi	b,16*1024	; save all 16K
0E0B  CD2306  		call	dmacpy
0E0E  C9      		ret
		else
		endif
		
0E0F  3600    	linix:	mvi	m,0	; terminate buffer
0E11  C9      		ret
		
		; input a line from console, allow backspace
		; HL=buffer (size 128)
		; returns B=num chars, 128 max (never is 0c3h)
0E12          	linin:
0E12  0600    		mvi	b,0	; count chars
0E14  CD150A  	lini0	call	conin	; handles DEL (cancel)
0E17  FE0D    		cpi	CR
0E19          		jrz	linix
0E19  28F4    		DB	28H,linix-$-1
0E1B  FE08    		cpi	BS
0E1D          		jrz	backup
0E1D  281C    		DB	28H,backup-$-1
0E1F  FE20    		cpi	' '
0E21          		jrc	chrnak
0E21  3811    		DB	38H,chrnak-$-1
0E23  FE7F    		cpi	'~'+1
0E25          		jrnc	chrnak
0E25  300D    		DB	30H,chrnak-$-1
0E27  77      	chrok:	mov	m,a
0E28  23      		inx	h
0E29  04      		inr	b
0E2A  FA320E  		jm	chrovf	; 128 chars max
0E2D  CDD503  		call	conout
0E30          		jr	lini0
0E30  18E2    		DB	18H,lini0-$-1
0E32  2B      	chrovf:	dcx	h
0E33  05      		dcr	b
0E34  3E07    	chrnak:	mvi	a,BEL
0E36  CDD503  		call	conout
0E39          		jr	lini0
0E39  18D9    		DB	18H,lini0-$-1
0E3B          	backup:
0E3B  78      		mov	a,b
0E3C  B7      		ora	a
0E3D          		jrz	lini0
0E3D  28D5    		DB	28H,lini0-$-1
0E3F  05      		dcr	b
0E40  2B      		dcx	h
0E41  3E08    		mvi	a,BS
0E43  CDD503  		call	conout
0E46  3E20    		mvi	a,' '
0E48  CDD503  		call	conout
0E4B  3E08    		mvi	a,BS
0E4D  CDD503  		call	conout
0E50          		jr	lini0
0E50  18C2    		DB	18H,lini0-$-1
		
		; Used during entry of LUN in boot command.
		; multiply E by 16, check for >= (IX+mdnum) (or overflow)
		; add in A (converted to binary).
		; IX=active boot module
		; Returns CY on overflow, else E updated to new LUN value
0E52          	E$x16$A:
0E52  43      		mov	b,e
0E53          		ralr	b
0E53  CB10    		DB	0CBH, 10H+b
0E55  D8      		rc
0E56          		ralr	b
0E56  CB10    		DB	0CBH, 10H+b
0E58  D8      		rc
0E59          		ralr	b
0E59  CB10    		DB	0CBH, 10H+b
0E5B  D8      		rc
0E5C          		ralr	b
0E5C  CB10    		DB	0CBH, 10H+b
0E5E  D8      		rc
0E5F  F5      		push	psw
0E60  D630    		sui	'0'
0E62  FE0A    		cpi	9+1
0E64          		jrc	ex16a0
0E64  3802    		DB	38H,ex16a0-$-1
0E66  D607    		sui	'A'-'0'-10
0E68  80      	ex16a0:	add	b	; never CY
0E69          		cmpx	mdluns	; might be 0ffh
0E69  DDBE03  		DB	0DDH,0BEH,mdluns
0E6C          		jrc	ex16a1	; value OK
0E6C  3803    		DB	38H,ex16a1-$-1
0E6E  F1      		pop	psw
0E6F  37      		stc
0E70  C9      		ret
0E71  5F      	ex16a1:	mov	e,a
0E72  F1      		pop	psw
0E73  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Dump command
0E74          	cmddmp:
0E74  210907  		lxi	h,dmpms
0E77  CD0C0A  		call	msgout
0E7A  211420  		lxi	h,ABUSS
0E7D  B7      		ora	a	; NC
0E7E  160D    		mvi	d,CR
0E80  CDE003  		call	adrin
0E83  EB      		xchg	; HL=adr
0E84  0608    		mvi	b,8	; 8 lines (one half page, 128 bytes)
0E86  C5      	dmp0:	push	b
0E87  CD3304  		call	adrnl	; CR,LF,"AAAA " (HL=AAAA)
0E8A  E5      		push	h
0E8B  0610    		mvi	b,16
0E8D  7E      	dmp1:	mov	a,m
0E8E  CD4204  		call	hexout
0E91  CD3E04  		call	spout
0E94  23      		inx	h
0E95          		djnz	dmp1
0E95  10F6    		DB	10H,dmp1-$-1
0E97  E1      		pop	h
0E98  0610    		mvi	b,16
0E9A  7E      	dmp2:	mov	a,m
0E9B  FE20    		cpi	' '
0E9D          		jrc	dmp3
0E9D  3804    		DB	38H,dmp3-$-1
0E9F  FE7F    		cpi	'~'+1
0EA1          		jrc	dmp4
0EA1  3802    		DB	38H,dmp4-$-1
0EA3  3E2E    	dmp3:	mvi	a,'.'
0EA5  CDD503  	dmp4:	call	conout
0EA8  23      		inx	h
0EA9          		djnz	dmp2
0EA9  10EF    		DB	10H,dmp2-$-1
0EAB  C1      		pop	b
0EAC          		djnz	dmp0
0EAC  10D8    		DB	10H,dmp0-$-1
0EAE  221420  		shld	ABUSS
0EB1  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; List available boot modules
0EB2  21C50E  	cmdlb:	lxi	h,lbmsg
0EB5  CD0C0A  		call	msgout
0EB8  CDF801  		call	gtdfbt
0EBB  42      		mov	b,d
0EBC  212C0C  		lxi	h,bflst
0EBF  0E00    		mvi	c,0
0EC1  CDA30C  		call	bfind0
0EC4  C9      		ret
		
0EC5  69737420	lbmsg:	db	'ist boot modules',CR,LF,0
      626F6F74
      206D6F64
      756C6573
      0D0A00
0ED8  656C7020	hbmsg:	db	'elp boot',CR,LF,0
      626F6F74
      0D0A00
0EE3  5072693A	hbmsg2:	db	'Pri: ',0
      2000
FFFF          	if not nofp
0EE9  5365633A	hbmsg3:	db	'Sec: ',0
      2000
		endif
		
		; Help boot command
0EEF  21D80E  	cmdhb:	lxi	h,hbmsg
0EF2  CD0C0A  		call	msgout
0EF5  CDF801  		call	gtdfbt
0EF8  42      		mov	b,d
0EF9  21540C  		lxi	h,bfllst
0EFC  CDA30C  		call	bfind0
			; Now display primary/secondary configs
0EFF  21E30E  		lxi	h,hbmsg2
0F02  1104F8  		lxi	d,susave+dpdev
0F05  DBF2    		in	0f2h
0F07  E670    		ani	01110000b	; default boot device
0F09  FE70    		cpi	01110000b	; use setup cfg?
0F0B  3E2A    		mvi	a,'*'
0F0D          		jrz	cmdhb6
0F0D  2802    		DB	28H,cmdhb6-$-1
0F0F  3E20    		mvi	a,' '
0F11  CD200F  	cmdhb6:	call	cmdhbx
FFFF          	if not nofp
0F14  21E90E  		lxi	h,hbmsg3
0F17  1186F8  		lxi	d,susave+dsdev
0F1A  3E20    		mvi	a,' '	; never the default
0F1C  CD200F  		call	cmdhbx
		endif
0F1F  C9      		ret
		
0F20  CDD503  	cmdhbx:	call	conout
0F23  CD0C0A  		call	msgout
0F26  1A      		ldax	d
0F27  13      		inx	d
0F28  FEFF    		cpi	0ffh
0F2A          		jrnz	cmdhb0
0F2A  2002    		DB	20H,cmdhb0-$-1
0F2C  3E2D    		mvi	a,'-'
0F2E  CDD503  	cmdhb0:	call	conout
0F31  3E20    		mvi	a,' '
0F33  CDD503  		call	conout
0F36  1A      		ldax	d
0F37  13      		inx	d
0F38  C630    		adi	'0'	; FF=2F,CY
0F3A          		jrnc	cmdhb1
0F3A  3002    		DB	30H,cmdhb1-$-1
0F3C  3E2D    		mvi	a,'-'
0F3E  CDD503  	cmdhb1:	call	conout
0F41  3E20    		mvi	a,' '
0F43  CDD503  		call	conout
0F46  1A      		ldax	d
0F47  FEFF    		cpi	0ffh
0F49          		jrnz	cmdhb2
0F49  2007    		DB	20H,cmdhb2-$-1
0F4B  3E2D    		mvi	a,'-'
0F4D  CDD503  		call	conout
0F50          		jr	cmdhb3
0F50  1804    		DB	18H,cmdhb3-$-1
0F52  EB      	cmdhb2:	xchg
0F53  CD0C0A  		call	msgout
0F56  CD020A  	cmdhb3:	call	crlf
0F59  C9      		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; eXtended command set
0F5A          	cmdx:
0F5A  CD150A  		call	conin	; get actual command character
0F5D  F620    		ori	00100000b	; lower case
0F5F  FE61    		cpi	'a'
0F61          		jrc	cmxerr
0F61  381D    		DB	38H,cmxerr-$-1
0F63  FE7B    		cpi	'z'+1
0F65          		jrnc	cmxerr
0F65  3019    		DB	30H,cmxerr-$-1
0F67  323B20  		sta	lstcmd
			; would like to re-use nocmd, but error path is wrong...
0F6A  4F      		mov	c,a
0F6B  0600    		mvi	b,0	; no boot modules
0F6D  21FD0B  		lxi	h,bfchr
0F70  CDA30C  		call	bfind
0F73          		jrc	cmxerr
0F73  380B    		DB	38H,cmxerr-$-1
0F75  3A3B20  		lda	lstcmd
0F78  E65F    		ani	01011111b	; upper case echo
0F7A  CDD503  		call	conout
0F7D  C3FE0C  		jmp	cmexec
		
0F80  CDD303  	cmxerr:	call	belout
0F83          		jr	cmdx
0F83  18D5    		DB	18H,cmdx-$-1
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Print ROM version command
0F85          	prtver:
0F85  21920F  		lxi	h,versms
0F88  CD0C0A  		call	msgout
0F8B  21B80F  		lxi	h,vernum
0F8E  CD0C0A  		call	msgout
0F91  C9      		ret
		
0F92  65727369	versms:	db	'ersion ',TRM
      6F6E2000
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		; code required to return to monitor from stand-alone programs.
0F9A          	retmon:
0F9A  F3      		di
0F9B  AF      		xra	a	; reset state of ctl port
0F9C  D3F2    		out	0f2h
FFFF          	if not nofp
0F9E  3EDF    		mvi	a,0dfh	; reset state of FP port 0
0FA0  D3F0    		out	0f0h
		endif
0FA2  C30000  		jmp	0
		
0FA5  0D0A4838	signon:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
0FA9  20      		db	' '
FFFF          	if z180
0FAA  5A313830		db	'Z180 '
      20
		endif
0FAF  4D6F6E69		db	'Monitor v'
      746F7220
      76
0FB8  322E30  	vernum:	db	(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0'
0000          	if alpha
		endif
0015          	if beta
0FBB  28626574		db	'(beta'
      61
0001          	if beta > 9
0FC0  32      		db	(beta/10)+'0'
		endif
0FC1  3129    		db	(beta MOD 10)+'0',')'
		endif
0FC3  0D0A00  		db	CR,LF,TRM
		
			rept	1000h-$-2
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC  FF      		db	0ffh
0FFD  FF      		db	0ffh
0FFE  80F1    		dw	pcode	; product code for system
0000          	if	($ <> 1000h)
		endif
		
		; module overlay area starts here...
		; ensure this does not match any...
1000  FFFF    		dw	-1
1002  0000    		db	0,0
		
			rept	1800h-$
1004  FF      		db	0ffh
1005  FF      		db	0ffh
1006  FF      		db	0ffh
1007  FF      		db	0ffh
1008  FF      		db	0ffh
1009  FF      		db	0ffh
100A  FF      		db	0ffh
100B  FF      		db	0ffh
100C  FF      		db	0ffh
100D  FF      		db	0ffh
100E  FF      		db	0ffh
100F  FF      		db	0ffh
1010  FF      		db	0ffh
1011  FF      		db	0ffh
1012  FF      		db	0ffh
1013  FF      		db	0ffh
1014  FF      		db	0ffh
1015  FF      		db	0ffh
1016  FF      		db	0ffh
1017  FF      		db	0ffh
1018  FF      		db	0ffh
1019  FF      		db	0ffh
101A  FF      		db	0ffh
101B  FF      		db	0ffh
101C  FF      		db	0ffh
101D  FF      		db	0ffh
101E  FF      		db	0ffh
101F  FF      		db	0ffh
1020  FF      		db	0ffh
1021  FF      		db	0ffh
1022  FF      		db	0ffh
1023  FF      		db	0ffh
1024  FF      		db	0ffh
1025  FF      		db	0ffh
1026  FF      		db	0ffh
1027  FF      		db	0ffh
1028  FF      		db	0ffh
1029  FF      		db	0ffh
102A  FF      		db	0ffh
102B  FF      		db	0ffh
102C  FF      		db	0ffh
102D  FF      		db	0ffh
102E  FF      		db	0ffh
102F  FF      		db	0ffh
1030  FF      		db	0ffh
1031  FF      		db	0ffh
1032  FF      		db	0ffh
1033  FF      		db	0ffh
1034  FF      		db	0ffh
1035  FF      		db	0ffh
1036  FF      		db	0ffh
1037  FF      		db	0ffh
1038  FF      		db	0ffh
1039  FF      		db	0ffh
103A  FF      		db	0ffh
103B  FF      		db	0ffh
103C  FF      		db	0ffh
103D  FF      		db	0ffh
103E  FF      		db	0ffh
103F  FF      		db	0ffh
1040  FF      		db	0ffh
1041  FF      		db	0ffh
1042  FF      		db	0ffh
1043  FF      		db	0ffh
1044  FF      		db	0ffh
1045  FF      		db	0ffh
1046  FF      		db	0ffh
1047  FF      		db	0ffh
1048  FF      		db	0ffh
1049  FF      		db	0ffh
104A  FF      		db	0ffh
104B  FF      		db	0ffh
104C  FF      		db	0ffh
104D  FF      		db	0ffh
104E  FF      		db	0ffh
104F  FF      		db	0ffh
1050  FF      		db	0ffh
1051  FF      		db	0ffh
1052  FF      		db	0ffh
1053  FF      		db	0ffh
1054  FF      		db	0ffh
1055  FF      		db	0ffh
1056  FF      		db	0ffh
1057  FF      		db	0ffh
1058  FF      		db	0ffh
1059  FF      		db	0ffh
105A  FF      		db	0ffh
105B  FF      		db	0ffh
105C  FF      		db	0ffh
105D  FF      		db	0ffh
105E  FF      		db	0ffh
105F  FF      		db	0ffh
1060  FF      		db	0ffh
1061  FF      		db	0ffh
1062  FF      		db	0ffh
1063  FF      		db	0ffh
1064  FF      		db	0ffh
1065  FF      		db	0ffh
1066  FF      		db	0ffh
1067  FF      		db	0ffh
1068  FF      		db	0ffh
1069  FF      		db	0ffh
106A  FF      		db	0ffh
106B  FF      		db	0ffh
106C  FF      		db	0ffh
106D  FF      		db	0ffh
106E  FF      		db	0ffh
106F  FF      		db	0ffh
1070  FF      		db	0ffh
1071  FF      		db	0ffh
1072  FF      		db	0ffh
1073  FF      		db	0ffh
1074  FF      		db	0ffh
1075  FF      		db	0ffh
1076  FF      		db	0ffh
1077  FF      		db	0ffh
1078  FF      		db	0ffh
1079  FF      		db	0ffh
107A  FF      		db	0ffh
107B  FF      		db	0ffh
107C  FF      		db	0ffh
107D  FF      		db	0ffh
107E  FF      		db	0ffh
107F  FF      		db	0ffh
1080  FF      		db	0ffh
1081  FF      		db	0ffh
1082  FF      		db	0ffh
1083  FF      		db	0ffh
1084  FF      		db	0ffh
1085  FF      		db	0ffh
1086  FF      		db	0ffh
1087  FF      		db	0ffh
1088  FF      		db	0ffh
1089  FF      		db	0ffh
108A  FF      		db	0ffh
108B  FF      		db	0ffh
108C  FF      		db	0ffh
108D  FF      		db	0ffh
108E  FF      		db	0ffh
108F  FF      		db	0ffh
1090  FF      		db	0ffh
1091  FF      		db	0ffh
1092  FF      		db	0ffh
1093  FF      		db	0ffh
1094  FF      		db	0ffh
1095  FF      		db	0ffh
1096  FF      		db	0ffh
1097  FF      		db	0ffh
1098  FF      		db	0ffh
1099  FF      		db	0ffh
109A  FF      		db	0ffh
109B  FF      		db	0ffh
109C  FF      		db	0ffh
109D  FF      		db	0ffh
109E  FF      		db	0ffh
109F  FF      		db	0ffh
10A0  FF      		db	0ffh
10A1  FF      		db	0ffh
10A2  FF      		db	0ffh
10A3  FF      		db	0ffh
10A4  FF      		db	0ffh
10A5  FF      		db	0ffh
10A6  FF      		db	0ffh
10A7  FF      		db	0ffh
10A8  FF      		db	0ffh
10A9  FF      		db	0ffh
10AA  FF      		db	0ffh
10AB  FF      		db	0ffh
10AC  FF      		db	0ffh
10AD  FF      		db	0ffh
10AE  FF      		db	0ffh
10AF  FF      		db	0ffh
10B0  FF      		db	0ffh
10B1  FF      		db	0ffh
10B2  FF      		db	0ffh
10B3  FF      		db	0ffh
10B4  FF      		db	0ffh
10B5  FF      		db	0ffh
10B6  FF      		db	0ffh
10B7  FF      		db	0ffh
10B8  FF      		db	0ffh
10B9  FF      		db	0ffh
10BA  FF      		db	0ffh
10BB  FF      		db	0ffh
10BC  FF      		db	0ffh
10BD  FF      		db	0ffh
10BE  FF      		db	0ffh
10BF  FF      		db	0ffh
10C0  FF      		db	0ffh
10C1  FF      		db	0ffh
10C2  FF      		db	0ffh
10C3  FF      		db	0ffh
10C4  FF      		db	0ffh
10C5  FF      		db	0ffh
10C6  FF      		db	0ffh
10C7  FF      		db	0ffh
10C8  FF      		db	0ffh
10C9  FF      		db	0ffh
10CA  FF      		db	0ffh
10CB  FF      		db	0ffh
10CC  FF      		db	0ffh
10CD  FF      		db	0ffh
10CE  FF      		db	0ffh
10CF  FF      		db	0ffh
10D0  FF      		db	0ffh
10D1  FF      		db	0ffh
10D2  FF      		db	0ffh
10D3  FF      		db	0ffh
10D4  FF      		db	0ffh
10D5  FF      		db	0ffh
10D6  FF      		db	0ffh
10D7  FF      		db	0ffh
10D8  FF      		db	0ffh
10D9  FF      		db	0ffh
10DA  FF      		db	0ffh
10DB  FF      		db	0ffh
10DC  FF      		db	0ffh
10DD  FF      		db	0ffh
10DE  FF      		db	0ffh
10DF  FF      		db	0ffh
10E0  FF      		db	0ffh
10E1  FF      		db	0ffh
10E2  FF      		db	0ffh
10E3  FF      		db	0ffh
10E4  FF      		db	0ffh
10E5  FF      		db	0ffh
10E6  FF      		db	0ffh
10E7  FF      		db	0ffh
10E8  FF      		db	0ffh
10E9  FF      		db	0ffh
10EA  FF      		db	0ffh
10EB  FF      		db	0ffh
10EC  FF      		db	0ffh
10ED  FF      		db	0ffh
10EE  FF      		db	0ffh
10EF  FF      		db	0ffh
10F0  FF      		db	0ffh
10F1  FF      		db	0ffh
10F2  FF      		db	0ffh
10F3  FF      		db	0ffh
10F4  FF      		db	0ffh
10F5  FF      		db	0ffh
10F6  FF      		db	0ffh
10F7  FF      		db	0ffh
10F8  FF      		db	0ffh
10F9  FF      		db	0ffh
10FA  FF      		db	0ffh
10FB  FF      		db	0ffh
10FC  FF      		db	0ffh
10FD  FF      		db	0ffh
10FE  FF      		db	0ffh
10FF  FF      		db	0ffh
1100  FF      		db	0ffh
1101  FF      		db	0ffh
1102  FF      		db	0ffh
1103  FF      		db	0ffh
1104  FF      		db	0ffh
1105  FF      		db	0ffh
1106  FF      		db	0ffh
1107  FF      		db	0ffh
1108  FF      		db	0ffh
1109  FF      		db	0ffh
110A  FF      		db	0ffh
110B  FF      		db	0ffh
110C  FF      		db	0ffh
110D  FF      		db	0ffh
110E  FF      		db	0ffh
110F  FF      		db	0ffh
1110  FF      		db	0ffh
1111  FF      		db	0ffh
1112  FF      		db	0ffh
1113  FF      		db	0ffh
1114  FF      		db	0ffh
1115  FF      		db	0ffh
1116  FF      		db	0ffh
1117  FF      		db	0ffh
1118  FF      		db	0ffh
1119  FF      		db	0ffh
111A  FF      		db	0ffh
111B  FF      		db	0ffh
111C  FF      		db	0ffh
111D  FF      		db	0ffh
111E  FF      		db	0ffh
111F  FF      		db	0ffh
1120  FF      		db	0ffh
1121  FF      		db	0ffh
1122  FF      		db	0ffh
1123  FF      		db	0ffh
1124  FF      		db	0ffh
1125  FF      		db	0ffh
1126  FF      		db	0ffh
1127  FF      		db	0ffh
1128  FF      		db	0ffh
1129  FF      		db	0ffh
112A  FF      		db	0ffh
112B  FF      		db	0ffh
112C  FF      		db	0ffh
112D  FF      		db	0ffh
112E  FF      		db	0ffh
112F  FF      		db	0ffh
1130  FF      		db	0ffh
1131  FF      		db	0ffh
1132  FF      		db	0ffh
1133  FF      		db	0ffh
1134  FF      		db	0ffh
1135  FF      		db	0ffh
1136  FF      		db	0ffh
1137  FF      		db	0ffh
1138  FF      		db	0ffh
1139  FF      		db	0ffh
113A  FF      		db	0ffh
113B  FF      		db	0ffh
113C  FF      		db	0ffh
113D  FF      		db	0ffh
113E  FF      		db	0ffh
113F  FF      		db	0ffh
1140  FF      		db	0ffh
1141  FF      		db	0ffh
1142  FF      		db	0ffh
1143  FF      		db	0ffh
1144  FF      		db	0ffh
1145  FF      		db	0ffh
1146  FF      		db	0ffh
1147  FF      		db	0ffh
1148  FF      		db	0ffh
1149  FF      		db	0ffh
114A  FF      		db	0ffh
114B  FF      		db	0ffh
114C  FF      		db	0ffh
114D  FF      		db	0ffh
114E  FF      		db	0ffh
114F  FF      		db	0ffh
1150  FF      		db	0ffh
1151  FF      		db	0ffh
1152  FF      		db	0ffh
1153  FF      		db	0ffh
1154  FF      		db	0ffh
1155  FF      		db	0ffh
1156  FF      		db	0ffh
1157  FF      		db	0ffh
1158  FF      		db	0ffh
1159  FF      		db	0ffh
115A  FF      		db	0ffh
115B  FF      		db	0ffh
115C  FF      		db	0ffh
115D  FF      		db	0ffh
115E  FF      		db	0ffh
115F  FF      		db	0ffh
1160  FF      		db	0ffh
1161  FF      		db	0ffh
1162  FF      		db	0ffh
1163  FF      		db	0ffh
1164  FF      		db	0ffh
1165  FF      		db	0ffh
1166  FF      		db	0ffh
1167  FF      		db	0ffh
1168  FF      		db	0ffh
1169  FF      		db	0ffh
116A  FF      		db	0ffh
116B  FF      		db	0ffh
116C  FF      		db	0ffh
116D  FF      		db	0ffh
116E  FF      		db	0ffh
116F  FF      		db	0ffh
1170  FF      		db	0ffh
1171  FF      		db	0ffh
1172  FF      		db	0ffh
1173  FF      		db	0ffh
1174  FF      		db	0ffh
1175  FF      		db	0ffh
1176  FF      		db	0ffh
1177  FF      		db	0ffh
1178  FF      		db	0ffh
1179  FF      		db	0ffh
117A  FF      		db	0ffh
117B  FF      		db	0ffh
117C  FF      		db	0ffh
117D  FF      		db	0ffh
117E  FF      		db	0ffh
117F  FF      		db	0ffh
1180  FF      		db	0ffh
1181  FF      		db	0ffh
1182  FF      		db	0ffh
1183  FF      		db	0ffh
1184  FF      		db	0ffh
1185  FF      		db	0ffh
1186  FF      		db	0ffh
1187  FF      		db	0ffh
1188  FF      		db	0ffh
1189  FF      		db	0ffh
118A  FF      		db	0ffh
118B  FF      		db	0ffh
118C  FF      		db	0ffh
118D  FF      		db	0ffh
118E  FF      		db	0ffh
118F  FF      		db	0ffh
1190  FF      		db	0ffh
1191  FF      		db	0ffh
1192  FF      		db	0ffh
1193  FF      		db	0ffh
1194  FF      		db	0ffh
1195  FF      		db	0ffh
1196  FF      		db	0ffh
1197  FF      		db	0ffh
1198  FF      		db	0ffh
1199  FF      		db	0ffh
119A  FF      		db	0ffh
119B  FF      		db	0ffh
119C  FF      		db	0ffh
119D  FF      		db	0ffh
119E  FF      		db	0ffh
119F  FF      		db	0ffh
11A0  FF      		db	0ffh
11A1  FF      		db	0ffh
11A2  FF      		db	0ffh
11A3  FF      		db	0ffh
11A4  FF      		db	0ffh
11A5  FF      		db	0ffh
11A6  FF      		db	0ffh
11A7  FF      		db	0ffh
11A8  FF      		db	0ffh
11A9  FF      		db	0ffh
11AA  FF      		db	0ffh
11AB  FF      		db	0ffh
11AC  FF      		db	0ffh
11AD  FF      		db	0ffh
11AE  FF      		db	0ffh
11AF  FF      		db	0ffh
11B0  FF      		db	0ffh
11B1  FF      		db	0ffh
11B2  FF      		db	0ffh
11B3  FF      		db	0ffh
11B4  FF      		db	0ffh
11B5  FF      		db	0ffh
11B6  FF      		db	0ffh
11B7  FF      		db	0ffh
11B8  FF      		db	0ffh
11B9  FF      		db	0ffh
11BA  FF      		db	0ffh
11BB  FF      		db	0ffh
11BC  FF      		db	0ffh
11BD  FF      		db	0ffh
11BE  FF      		db	0ffh
11BF  FF      		db	0ffh
11C0  FF      		db	0ffh
11C1  FF      		db	0ffh
11C2  FF      		db	0ffh
11C3  FF      		db	0ffh
11C4  FF      		db	0ffh
11C5  FF      		db	0ffh
11C6  FF      		db	0ffh
11C7  FF      		db	0ffh
11C8  FF      		db	0ffh
11C9  FF      		db	0ffh
11CA  FF      		db	0ffh
11CB  FF      		db	0ffh
11CC  FF      		db	0ffh
11CD  FF      		db	0ffh
11CE  FF      		db	0ffh
11CF  FF      		db	0ffh
11D0  FF      		db	0ffh
11D1  FF      		db	0ffh
11D2  FF      		db	0ffh
11D3  FF      		db	0ffh
11D4  FF      		db	0ffh
11D5  FF      		db	0ffh
11D6  FF      		db	0ffh
11D7  FF      		db	0ffh
11D8  FF      		db	0ffh
11D9  FF      		db	0ffh
11DA  FF      		db	0ffh
11DB  FF      		db	0ffh
11DC  FF      		db	0ffh
11DD  FF      		db	0ffh
11DE  FF      		db	0ffh
11DF  FF      		db	0ffh
11E0  FF      		db	0ffh
11E1  FF      		db	0ffh
11E2  FF      		db	0ffh
11E3  FF      		db	0ffh
11E4  FF      		db	0ffh
11E5  FF      		db	0ffh
11E6  FF      		db	0ffh
11E7  FF      		db	0ffh
11E8  FF      		db	0ffh
11E9  FF      		db	0ffh
11EA  FF      		db	0ffh
11EB  FF      		db	0ffh
11EC  FF      		db	0ffh
11ED  FF      		db	0ffh
11EE  FF      		db	0ffh
11EF  FF      		db	0ffh
11F0  FF      		db	0ffh
11F1  FF      		db	0ffh
11F2  FF      		db	0ffh
11F3  FF      		db	0ffh
11F4  FF      		db	0ffh
11F5  FF      		db	0ffh
11F6  FF      		db	0ffh
11F7  FF      		db	0ffh
11F8  FF      		db	0ffh
11F9  FF      		db	0ffh
11FA  FF      		db	0ffh
11FB  FF      		db	0ffh
11FC  FF      		db	0ffh
11FD  FF      		db	0ffh
11FE  FF      		db	0ffh
11FF  FF      		db	0ffh
1200  FF      		db	0ffh
1201  FF      		db	0ffh
1202  FF      		db	0ffh
1203  FF      		db	0ffh
1204  FF      		db	0ffh
1205  FF      		db	0ffh
1206  FF      		db	0ffh
1207  FF      		db	0ffh
1208  FF      		db	0ffh
1209  FF      		db	0ffh
120A  FF      		db	0ffh
120B  FF      		db	0ffh
120C  FF      		db	0ffh
120D  FF      		db	0ffh
120E  FF      		db	0ffh
120F  FF      		db	0ffh
1210  FF      		db	0ffh
1211  FF      		db	0ffh
1212  FF      		db	0ffh
1213  FF      		db	0ffh
1214  FF      		db	0ffh
1215  FF      		db	0ffh
1216  FF      		db	0ffh
1217  FF      		db	0ffh
1218  FF      		db	0ffh
1219  FF      		db	0ffh
121A  FF      		db	0ffh
121B  FF      		db	0ffh
121C  FF      		db	0ffh
121D  FF      		db	0ffh
121E  FF      		db	0ffh
121F  FF      		db	0ffh
1220  FF      		db	0ffh
1221  FF      		db	0ffh
1222  FF      		db	0ffh
1223  FF      		db	0ffh
1224  FF      		db	0ffh
1225  FF      		db	0ffh
1226  FF      		db	0ffh
1227  FF      		db	0ffh
1228  FF      		db	0ffh
1229  FF      		db	0ffh
122A  FF      		db	0ffh
122B  FF      		db	0ffh
122C  FF      		db	0ffh
122D  FF      		db	0ffh
122E  FF      		db	0ffh
122F  FF      		db	0ffh
1230  FF      		db	0ffh
1231  FF      		db	0ffh
1232  FF      		db	0ffh
1233  FF      		db	0ffh
1234  FF      		db	0ffh
1235  FF      		db	0ffh
1236  FF      		db	0ffh
1237  FF      		db	0ffh
1238  FF      		db	0ffh
1239  FF      		db	0ffh
123A  FF      		db	0ffh
123B  FF      		db	0ffh
123C  FF      		db	0ffh
123D  FF      		db	0ffh
123E  FF      		db	0ffh
123F  FF      		db	0ffh
1240  FF      		db	0ffh
1241  FF      		db	0ffh
1242  FF      		db	0ffh
1243  FF      		db	0ffh
1244  FF      		db	0ffh
1245  FF      		db	0ffh
1246  FF      		db	0ffh
1247  FF      		db	0ffh
1248  FF      		db	0ffh
1249  FF      		db	0ffh
124A  FF      		db	0ffh
124B  FF      		db	0ffh
124C  FF      		db	0ffh
124D  FF      		db	0ffh
124E  FF      		db	0ffh
124F  FF      		db	0ffh
1250  FF      		db	0ffh
1251  FF      		db	0ffh
1252  FF      		db	0ffh
1253  FF      		db	0ffh
1254  FF      		db	0ffh
1255  FF      		db	0ffh
1256  FF      		db	0ffh
1257  FF      		db	0ffh
1258  FF      		db	0ffh
1259  FF      		db	0ffh
125A  FF      		db	0ffh
125B  FF      		db	0ffh
125C  FF      		db	0ffh
125D  FF      		db	0ffh
125E  FF      		db	0ffh
125F  FF      		db	0ffh
1260  FF      		db	0ffh
1261  FF      		db	0ffh
1262  FF      		db	0ffh
1263  FF      		db	0ffh
1264  FF      		db	0ffh
1265  FF      		db	0ffh
1266  FF      		db	0ffh
1267  FF      		db	0ffh
1268  FF      		db	0ffh
1269  FF      		db	0ffh
126A  FF      		db	0ffh
126B  FF      		db	0ffh
126C  FF      		db	0ffh
126D  FF      		db	0ffh
126E  FF      		db	0ffh
126F  FF      		db	0ffh
1270  FF      		db	0ffh
1271  FF      		db	0ffh
1272  FF      		db	0ffh
1273  FF      		db	0ffh
1274  FF      		db	0ffh
1275  FF      		db	0ffh
1276  FF      		db	0ffh
1277  FF      		db	0ffh
1278  FF      		db	0ffh
1279  FF      		db	0ffh
127A  FF      		db	0ffh
127B  FF      		db	0ffh
127C  FF      		db	0ffh
127D  FF      		db	0ffh
127E  FF      		db	0ffh
127F  FF      		db	0ffh
1280  FF      		db	0ffh
1281  FF      		db	0ffh
1282  FF      		db	0ffh
1283  FF      		db	0ffh
1284  FF      		db	0ffh
1285  FF      		db	0ffh
1286  FF      		db	0ffh
1287  FF      		db	0ffh
1288  FF      		db	0ffh
1289  FF      		db	0ffh
128A  FF      		db	0ffh
128B  FF      		db	0ffh
128C  FF      		db	0ffh
128D  FF      		db	0ffh
128E  FF      		db	0ffh
128F  FF      		db	0ffh
1290  FF      		db	0ffh
1291  FF      		db	0ffh
1292  FF      		db	0ffh
1293  FF      		db	0ffh
1294  FF      		db	0ffh
1295  FF      		db	0ffh
1296  FF      		db	0ffh
1297  FF      		db	0ffh
1298  FF      		db	0ffh
1299  FF      		db	0ffh
129A  FF      		db	0ffh
129B  FF      		db	0ffh
129C  FF      		db	0ffh
129D  FF      		db	0ffh
129E  FF      		db	0ffh
129F  FF      		db	0ffh
12A0  FF      		db	0ffh
12A1  FF      		db	0ffh
12A2  FF      		db	0ffh
12A3  FF      		db	0ffh
12A4  FF      		db	0ffh
12A5  FF      		db	0ffh
12A6  FF      		db	0ffh
12A7  FF      		db	0ffh
12A8  FF      		db	0ffh
12A9  FF      		db	0ffh
12AA  FF      		db	0ffh
12AB  FF      		db	0ffh
12AC  FF      		db	0ffh
12AD  FF      		db	0ffh
12AE  FF      		db	0ffh
12AF  FF      		db	0ffh
12B0  FF      		db	0ffh
12B1  FF      		db	0ffh
12B2  FF      		db	0ffh
12B3  FF      		db	0ffh
12B4  FF      		db	0ffh
12B5  FF      		db	0ffh
12B6  FF      		db	0ffh
12B7  FF      		db	0ffh
12B8  FF      		db	0ffh
12B9  FF      		db	0ffh
12BA  FF      		db	0ffh
12BB  FF      		db	0ffh
12BC  FF      		db	0ffh
12BD  FF      		db	0ffh
12BE  FF      		db	0ffh
12BF  FF      		db	0ffh
12C0  FF      		db	0ffh
12C1  FF      		db	0ffh
12C2  FF      		db	0ffh
12C3  FF      		db	0ffh
12C4  FF      		db	0ffh
12C5  FF      		db	0ffh
12C6  FF      		db	0ffh
12C7  FF      		db	0ffh
12C8  FF      		db	0ffh
12C9  FF      		db	0ffh
12CA  FF      		db	0ffh
12CB  FF      		db	0ffh
12CC  FF      		db	0ffh
12CD  FF      		db	0ffh
12CE  FF      		db	0ffh
12CF  FF      		db	0ffh
12D0  FF      		db	0ffh
12D1  FF      		db	0ffh
12D2  FF      		db	0ffh
12D3  FF      		db	0ffh
12D4  FF      		db	0ffh
12D5  FF      		db	0ffh
12D6  FF      		db	0ffh
12D7  FF      		db	0ffh
12D8  FF      		db	0ffh
12D9  FF      		db	0ffh
12DA  FF      		db	0ffh
12DB  FF      		db	0ffh
12DC  FF      		db	0ffh
12DD  FF      		db	0ffh
12DE  FF      		db	0ffh
12DF  FF      		db	0ffh
12E0  FF      		db	0ffh
12E1  FF      		db	0ffh
12E2  FF      		db	0ffh
12E3  FF      		db	0ffh
12E4  FF      		db	0ffh
12E5  FF      		db	0ffh
12E6  FF      		db	0ffh
12E7  FF      		db	0ffh
12E8  FF      		db	0ffh
12E9  FF      		db	0ffh
12EA  FF      		db	0ffh
12EB  FF      		db	0ffh
12EC  FF      		db	0ffh
12ED  FF      		db	0ffh
12EE  FF      		db	0ffh
12EF  FF      		db	0ffh
12F0  FF      		db	0ffh
12F1  FF      		db	0ffh
12F2  FF      		db	0ffh
12F3  FF      		db	0ffh
12F4  FF      		db	0ffh
12F5  FF      		db	0ffh
12F6  FF      		db	0ffh
12F7  FF      		db	0ffh
12F8  FF      		db	0ffh
12F9  FF      		db	0ffh
12FA  FF      		db	0ffh
12FB  FF      		db	0ffh
12FC  FF      		db	0ffh
12FD  FF      		db	0ffh
12FE  FF      		db	0ffh
12FF  FF      		db	0ffh
1300  FF      		db	0ffh
1301  FF      		db	0ffh
1302  FF      		db	0ffh
1303  FF      		db	0ffh
1304  FF      		db	0ffh
1305  FF      		db	0ffh
1306  FF      		db	0ffh
1307  FF      		db	0ffh
1308  FF      		db	0ffh
1309  FF      		db	0ffh
130A  FF      		db	0ffh
130B  FF      		db	0ffh
130C  FF      		db	0ffh
130D  FF      		db	0ffh
130E  FF      		db	0ffh
130F  FF      		db	0ffh
1310  FF      		db	0ffh
1311  FF      		db	0ffh
1312  FF      		db	0ffh
1313  FF      		db	0ffh
1314  FF      		db	0ffh
1315  FF      		db	0ffh
1316  FF      		db	0ffh
1317  FF      		db	0ffh
1318  FF      		db	0ffh
1319  FF      		db	0ffh
131A  FF      		db	0ffh
131B  FF      		db	0ffh
131C  FF      		db	0ffh
131D  FF      		db	0ffh
131E  FF      		db	0ffh
131F  FF      		db	0ffh
1320  FF      		db	0ffh
1321  FF      		db	0ffh
1322  FF      		db	0ffh
1323  FF      		db	0ffh
1324  FF      		db	0ffh
1325  FF      		db	0ffh
1326  FF      		db	0ffh
1327  FF      		db	0ffh
1328  FF      		db	0ffh
1329  FF      		db	0ffh
132A  FF      		db	0ffh
132B  FF      		db	0ffh
132C  FF      		db	0ffh
132D  FF      		db	0ffh
132E  FF      		db	0ffh
132F  FF      		db	0ffh
1330  FF      		db	0ffh
1331  FF      		db	0ffh
1332  FF      		db	0ffh
1333  FF      		db	0ffh
1334  FF      		db	0ffh
1335  FF      		db	0ffh
1336  FF      		db	0ffh
1337  FF      		db	0ffh
1338  FF      		db	0ffh
1339  FF      		db	0ffh
133A  FF      		db	0ffh
133B  FF      		db	0ffh
133C  FF      		db	0ffh
133D  FF      		db	0ffh
133E  FF      		db	0ffh
133F  FF      		db	0ffh
1340  FF      		db	0ffh
1341  FF      		db	0ffh
1342  FF      		db	0ffh
1343  FF      		db	0ffh
1344  FF      		db	0ffh
1345  FF      		db	0ffh
1346  FF      		db	0ffh
1347  FF      		db	0ffh
1348  FF      		db	0ffh
1349  FF      		db	0ffh
134A  FF      		db	0ffh
134B  FF      		db	0ffh
134C  FF      		db	0ffh
134D  FF      		db	0ffh
134E  FF      		db	0ffh
134F  FF      		db	0ffh
1350  FF      		db	0ffh
1351  FF      		db	0ffh
1352  FF      		db	0ffh
1353  FF      		db	0ffh
1354  FF      		db	0ffh
1355  FF      		db	0ffh
1356  FF      		db	0ffh
1357  FF      		db	0ffh
1358  FF      		db	0ffh
1359  FF      		db	0ffh
135A  FF      		db	0ffh
135B  FF      		db	0ffh
135C  FF      		db	0ffh
135D  FF      		db	0ffh
135E  FF      		db	0ffh
135F  FF      		db	0ffh
1360  FF      		db	0ffh
1361  FF      		db	0ffh
1362  FF      		db	0ffh
1363  FF      		db	0ffh
1364  FF      		db	0ffh
1365  FF      		db	0ffh
1366  FF      		db	0ffh
1367  FF      		db	0ffh
1368  FF      		db	0ffh
1369  FF      		db	0ffh
136A  FF      		db	0ffh
136B  FF      		db	0ffh
136C  FF      		db	0ffh
136D  FF      		db	0ffh
136E  FF      		db	0ffh
136F  FF      		db	0ffh
1370  FF      		db	0ffh
1371  FF      		db	0ffh
1372  FF      		db	0ffh
1373  FF      		db	0ffh
1374  FF      		db	0ffh
1375  FF      		db	0ffh
1376  FF      		db	0ffh
1377  FF      		db	0ffh
1378  FF      		db	0ffh
1379  FF      		db	0ffh
137A  FF      		db	0ffh
137B  FF      		db	0ffh
137C  FF      		db	0ffh
137D  FF      		db	0ffh
137E  FF      		db	0ffh
137F  FF      		db	0ffh
1380  FF      		db	0ffh
1381  FF      		db	0ffh
1382  FF      		db	0ffh
1383  FF      		db	0ffh
1384  FF      		db	0ffh
1385  FF      		db	0ffh
1386  FF      		db	0ffh
1387  FF      		db	0ffh
1388  FF      		db	0ffh
1389  FF      		db	0ffh
138A  FF      		db	0ffh
138B  FF      		db	0ffh
138C  FF      		db	0ffh
138D  FF      		db	0ffh
138E  FF      		db	0ffh
138F  FF      		db	0ffh
1390  FF      		db	0ffh
1391  FF      		db	0ffh
1392  FF      		db	0ffh
1393  FF      		db	0ffh
1394  FF      		db	0ffh
1395  FF      		db	0ffh
1396  FF      		db	0ffh
1397  FF      		db	0ffh
1398  FF      		db	0ffh
1399  FF      		db	0ffh
139A  FF      		db	0ffh
139B  FF      		db	0ffh
139C  FF      		db	0ffh
139D  FF      		db	0ffh
139E  FF      		db	0ffh
139F  FF      		db	0ffh
13A0  FF      		db	0ffh
13A1  FF      		db	0ffh
13A2  FF      		db	0ffh
13A3  FF      		db	0ffh
13A4  FF      		db	0ffh
13A5  FF      		db	0ffh
13A6  FF      		db	0ffh
13A7  FF      		db	0ffh
13A8  FF      		db	0ffh
13A9  FF      		db	0ffh
13AA  FF      		db	0ffh
13AB  FF      		db	0ffh
13AC  FF      		db	0ffh
13AD  FF      		db	0ffh
13AE  FF      		db	0ffh
13AF  FF      		db	0ffh
13B0  FF      		db	0ffh
13B1  FF      		db	0ffh
13B2  FF      		db	0ffh
13B3  FF      		db	0ffh
13B4  FF      		db	0ffh
13B5  FF      		db	0ffh
13B6  FF      		db	0ffh
13B7  FF      		db	0ffh
13B8  FF      		db	0ffh
13B9  FF      		db	0ffh
13BA  FF      		db	0ffh
13BB  FF      		db	0ffh
13BC  FF      		db	0ffh
13BD  FF      		db	0ffh
13BE  FF      		db	0ffh
13BF  FF      		db	0ffh
13C0  FF      		db	0ffh
13C1  FF      		db	0ffh
13C2  FF      		db	0ffh
13C3  FF      		db	0ffh
13C4  FF      		db	0ffh
13C5  FF      		db	0ffh
13C6  FF      		db	0ffh
13C7  FF      		db	0ffh
13C8  FF      		db	0ffh
13C9  FF      		db	0ffh
13CA  FF      		db	0ffh
13CB  FF      		db	0ffh
13CC  FF      		db	0ffh
13CD  FF      		db	0ffh
13CE  FF      		db	0ffh
13CF  FF      		db	0ffh
13D0  FF      		db	0ffh
13D1  FF      		db	0ffh
13D2  FF      		db	0ffh
13D3  FF      		db	0ffh
13D4  FF      		db	0ffh
13D5  FF      		db	0ffh
13D6  FF      		db	0ffh
13D7  FF      		db	0ffh
13D8  FF      		db	0ffh
13D9  FF      		db	0ffh
13DA  FF      		db	0ffh
13DB  FF      		db	0ffh
13DC  FF      		db	0ffh
13DD  FF      		db	0ffh
13DE  FF      		db	0ffh
13DF  FF      		db	0ffh
13E0  FF      		db	0ffh
13E1  FF      		db	0ffh
13E2  FF      		db	0ffh
13E3  FF      		db	0ffh
13E4  FF      		db	0ffh
13E5  FF      		db	0ffh
13E6  FF      		db	0ffh
13E7  FF      		db	0ffh
13E8  FF      		db	0ffh
13E9  FF      		db	0ffh
13EA  FF      		db	0ffh
13EB  FF      		db	0ffh
13EC  FF      		db	0ffh
13ED  FF      		db	0ffh
13EE  FF      		db	0ffh
13EF  FF      		db	0ffh
13F0  FF      		db	0ffh
13F1  FF      		db	0ffh
13F2  FF      		db	0ffh
13F3  FF      		db	0ffh
13F4  FF      		db	0ffh
13F5  FF      		db	0ffh
13F6  FF      		db	0ffh
13F7  FF      		db	0ffh
13F8  FF      		db	0ffh
13F9  FF      		db	0ffh
13FA  FF      		db	0ffh
13FB  FF      		db	0ffh
13FC  FF      		db	0ffh
13FD  FF      		db	0ffh
13FE  FF      		db	0ffh
13FF  FF      		db	0ffh
1400  FF      		db	0ffh
1401  FF      		db	0ffh
1402  FF      		db	0ffh
1403  FF      		db	0ffh
1404  FF      		db	0ffh
1405  FF      		db	0ffh
1406  FF      		db	0ffh
1407  FF      		db	0ffh
1408  FF      		db	0ffh
1409  FF      		db	0ffh
140A  FF      		db	0ffh
140B  FF      		db	0ffh
140C  FF      		db	0ffh
140D  FF      		db	0ffh
140E  FF      		db	0ffh
140F  FF      		db	0ffh
1410  FF      		db	0ffh
1411  FF      		db	0ffh
1412  FF      		db	0ffh
1413  FF      		db	0ffh
1414  FF      		db	0ffh
1415  FF      		db	0ffh
1416  FF      		db	0ffh
1417  FF      		db	0ffh
1418  FF      		db	0ffh
1419  FF      		db	0ffh
141A  FF      		db	0ffh
141B  FF      		db	0ffh
141C  FF      		db	0ffh
141D  FF      		db	0ffh
141E  FF      		db	0ffh
141F  FF      		db	0ffh
1420  FF      		db	0ffh
1421  FF      		db	0ffh
1422  FF      		db	0ffh
1423  FF      		db	0ffh
1424  FF      		db	0ffh
1425  FF      		db	0ffh
1426  FF      		db	0ffh
1427  FF      		db	0ffh
1428  FF      		db	0ffh
1429  FF      		db	0ffh
142A  FF      		db	0ffh
142B  FF      		db	0ffh
142C  FF      		db	0ffh
142D  FF      		db	0ffh
142E  FF      		db	0ffh
142F  FF      		db	0ffh
1430  FF      		db	0ffh
1431  FF      		db	0ffh
1432  FF      		db	0ffh
1433  FF      		db	0ffh
1434  FF      		db	0ffh
1435  FF      		db	0ffh
1436  FF      		db	0ffh
1437  FF      		db	0ffh
1438  FF      		db	0ffh
1439  FF      		db	0ffh
143A  FF      		db	0ffh
143B  FF      		db	0ffh
143C  FF      		db	0ffh
143D  FF      		db	0ffh
143E  FF      		db	0ffh
143F  FF      		db	0ffh
1440  FF      		db	0ffh
1441  FF      		db	0ffh
1442  FF      		db	0ffh
1443  FF      		db	0ffh
1444  FF      		db	0ffh
1445  FF      		db	0ffh
1446  FF      		db	0ffh
1447  FF      		db	0ffh
1448  FF      		db	0ffh
1449  FF      		db	0ffh
144A  FF      		db	0ffh
144B  FF      		db	0ffh
144C  FF      		db	0ffh
144D  FF      		db	0ffh
144E  FF      		db	0ffh
144F  FF      		db	0ffh
1450  FF      		db	0ffh
1451  FF      		db	0ffh
1452  FF      		db	0ffh
1453  FF      		db	0ffh
1454  FF      		db	0ffh
1455  FF      		db	0ffh
1456  FF      		db	0ffh
1457  FF      		db	0ffh
1458  FF      		db	0ffh
1459  FF      		db	0ffh
145A  FF      		db	0ffh
145B  FF      		db	0ffh
145C  FF      		db	0ffh
145D  FF      		db	0ffh
145E  FF      		db	0ffh
145F  FF      		db	0ffh
1460  FF      		db	0ffh
1461  FF      		db	0ffh
1462  FF      		db	0ffh
1463  FF      		db	0ffh
1464  FF      		db	0ffh
1465  FF      		db	0ffh
1466  FF      		db	0ffh
1467  FF      		db	0ffh
1468  FF      		db	0ffh
1469  FF      		db	0ffh
146A  FF      		db	0ffh
146B  FF      		db	0ffh
146C  FF      		db	0ffh
146D  FF      		db	0ffh
146E  FF      		db	0ffh
146F  FF      		db	0ffh
1470  FF      		db	0ffh
1471  FF      		db	0ffh
1472  FF      		db	0ffh
1473  FF      		db	0ffh
1474  FF      		db	0ffh
1475  FF      		db	0ffh
1476  FF      		db	0ffh
1477  FF      		db	0ffh
1478  FF      		db	0ffh
1479  FF      		db	0ffh
147A  FF      		db	0ffh
147B  FF      		db	0ffh
147C  FF      		db	0ffh
147D  FF      		db	0ffh
147E  FF      		db	0ffh
147F  FF      		db	0ffh
1480  FF      		db	0ffh
1481  FF      		db	0ffh
1482  FF      		db	0ffh
1483  FF      		db	0ffh
1484  FF      		db	0ffh
1485  FF      		db	0ffh
1486  FF      		db	0ffh
1487  FF      		db	0ffh
1488  FF      		db	0ffh
1489  FF      		db	0ffh
148A  FF      		db	0ffh
148B  FF      		db	0ffh
148C  FF      		db	0ffh
148D  FF      		db	0ffh
148E  FF      		db	0ffh
148F  FF      		db	0ffh
1490  FF      		db	0ffh
1491  FF      		db	0ffh
1492  FF      		db	0ffh
1493  FF      		db	0ffh
1494  FF      		db	0ffh
1495  FF      		db	0ffh
1496  FF      		db	0ffh
1497  FF      		db	0ffh
1498  FF      		db	0ffh
1499  FF      		db	0ffh
149A  FF      		db	0ffh
149B  FF      		db	0ffh
149C  FF      		db	0ffh
149D  FF      		db	0ffh
149E  FF      		db	0ffh
149F  FF      		db	0ffh
14A0  FF      		db	0ffh
14A1  FF      		db	0ffh
14A2  FF      		db	0ffh
14A3  FF      		db	0ffh
14A4  FF      		db	0ffh
14A5  FF      		db	0ffh
14A6  FF      		db	0ffh
14A7  FF      		db	0ffh
14A8  FF      		db	0ffh
14A9  FF      		db	0ffh
14AA  FF      		db	0ffh
14AB  FF      		db	0ffh
14AC  FF      		db	0ffh
14AD  FF      		db	0ffh
14AE  FF      		db	0ffh
14AF  FF      		db	0ffh
14B0  FF      		db	0ffh
14B1  FF      		db	0ffh
14B2  FF      		db	0ffh
14B3  FF      		db	0ffh
14B4  FF      		db	0ffh
14B5  FF      		db	0ffh
14B6  FF      		db	0ffh
14B7  FF      		db	0ffh
14B8  FF      		db	0ffh
14B9  FF      		db	0ffh
14BA  FF      		db	0ffh
14BB  FF      		db	0ffh
14BC  FF      		db	0ffh
14BD  FF      		db	0ffh
14BE  FF      		db	0ffh
14BF  FF      		db	0ffh
14C0  FF      		db	0ffh
14C1  FF      		db	0ffh
14C2  FF      		db	0ffh
14C3  FF      		db	0ffh
14C4  FF      		db	0ffh
14C5  FF      		db	0ffh
14C6  FF      		db	0ffh
14C7  FF      		db	0ffh
14C8  FF      		db	0ffh
14C9  FF      		db	0ffh
14CA  FF      		db	0ffh
14CB  FF      		db	0ffh
14CC  FF      		db	0ffh
14CD  FF      		db	0ffh
14CE  FF      		db	0ffh
14CF  FF      		db	0ffh
14D0  FF      		db	0ffh
14D1  FF      		db	0ffh
14D2  FF      		db	0ffh
14D3  FF      		db	0ffh
14D4  FF      		db	0ffh
14D5  FF      		db	0ffh
14D6  FF      		db	0ffh
14D7  FF      		db	0ffh
14D8  FF      		db	0ffh
14D9  FF      		db	0ffh
14DA  FF      		db	0ffh
14DB  FF      		db	0ffh
14DC  FF      		db	0ffh
14DD  FF      		db	0ffh
14DE  FF      		db	0ffh
14DF  FF      		db	0ffh
14E0  FF      		db	0ffh
14E1  FF      		db	0ffh
14E2  FF      		db	0ffh
14E3  FF      		db	0ffh
14E4  FF      		db	0ffh
14E5  FF      		db	0ffh
14E6  FF      		db	0ffh
14E7  FF      		db	0ffh
14E8  FF      		db	0ffh
14E9  FF      		db	0ffh
14EA  FF      		db	0ffh
14EB  FF      		db	0ffh
14EC  FF      		db	0ffh
14ED  FF      		db	0ffh
14EE  FF      		db	0ffh
14EF  FF      		db	0ffh
14F0  FF      		db	0ffh
14F1  FF      		db	0ffh
14F2  FF      		db	0ffh
14F3  FF      		db	0ffh
14F4  FF      		db	0ffh
14F5  FF      		db	0ffh
14F6  FF      		db	0ffh
14F7  FF      		db	0ffh
14F8  FF      		db	0ffh
14F9  FF      		db	0ffh
14FA  FF      		db	0ffh
14FB  FF      		db	0ffh
14FC  FF      		db	0ffh
14FD  FF      		db	0ffh
14FE  FF      		db	0ffh
14FF  FF      		db	0ffh
1500  FF      		db	0ffh
1501  FF      		db	0ffh
1502  FF      		db	0ffh
1503  FF      		db	0ffh
1504  FF      		db	0ffh
1505  FF      		db	0ffh
1506  FF      		db	0ffh
1507  FF      		db	0ffh
1508  FF      		db	0ffh
1509  FF      		db	0ffh
150A  FF      		db	0ffh
150B  FF      		db	0ffh
150C  FF      		db	0ffh
150D  FF      		db	0ffh
150E  FF      		db	0ffh
150F  FF      		db	0ffh
1510  FF      		db	0ffh
1511  FF      		db	0ffh
1512  FF      		db	0ffh
1513  FF      		db	0ffh
1514  FF      		db	0ffh
1515  FF      		db	0ffh
1516  FF      		db	0ffh
1517  FF      		db	0ffh
1518  FF      		db	0ffh
1519  FF      		db	0ffh
151A  FF      		db	0ffh
151B  FF      		db	0ffh
151C  FF      		db	0ffh
151D  FF      		db	0ffh
151E  FF      		db	0ffh
151F  FF      		db	0ffh
1520  FF      		db	0ffh
1521  FF      		db	0ffh
1522  FF      		db	0ffh
1523  FF      		db	0ffh
1524  FF      		db	0ffh
1525  FF      		db	0ffh
1526  FF      		db	0ffh
1527  FF      		db	0ffh
1528  FF      		db	0ffh
1529  FF      		db	0ffh
152A  FF      		db	0ffh
152B  FF      		db	0ffh
152C  FF      		db	0ffh
152D  FF      		db	0ffh
152E  FF      		db	0ffh
152F  FF      		db	0ffh
1530  FF      		db	0ffh
1531  FF      		db	0ffh
1532  FF      		db	0ffh
1533  FF      		db	0ffh
1534  FF      		db	0ffh
1535  FF      		db	0ffh
1536  FF      		db	0ffh
1537  FF      		db	0ffh
1538  FF      		db	0ffh
1539  FF      		db	0ffh
153A  FF      		db	0ffh
153B  FF      		db	0ffh
153C  FF      		db	0ffh
153D  FF      		db	0ffh
153E  FF      		db	0ffh
153F  FF      		db	0ffh
1540  FF      		db	0ffh
1541  FF      		db	0ffh
1542  FF      		db	0ffh
1543  FF      		db	0ffh
1544  FF      		db	0ffh
1545  FF      		db	0ffh
1546  FF      		db	0ffh
1547  FF      		db	0ffh
1548  FF      		db	0ffh
1549  FF      		db	0ffh
154A  FF      		db	0ffh
154B  FF      		db	0ffh
154C  FF      		db	0ffh
154D  FF      		db	0ffh
154E  FF      		db	0ffh
154F  FF      		db	0ffh
1550  FF      		db	0ffh
1551  FF      		db	0ffh
1552  FF      		db	0ffh
1553  FF      		db	0ffh
1554  FF      		db	0ffh
1555  FF      		db	0ffh
1556  FF      		db	0ffh
1557  FF      		db	0ffh
1558  FF      		db	0ffh
1559  FF      		db	0ffh
155A  FF      		db	0ffh
155B  FF      		db	0ffh
155C  FF      		db	0ffh
155D  FF      		db	0ffh
155E  FF      		db	0ffh
155F  FF      		db	0ffh
1560  FF      		db	0ffh
1561  FF      		db	0ffh
1562  FF      		db	0ffh
1563  FF      		db	0ffh
1564  FF      		db	0ffh
1565  FF      		db	0ffh
1566  FF      		db	0ffh
1567  FF      		db	0ffh
1568  FF      		db	0ffh
1569  FF      		db	0ffh
156A  FF      		db	0ffh
156B  FF      		db	0ffh
156C  FF      		db	0ffh
156D  FF      		db	0ffh
156E  FF      		db	0ffh
156F  FF      		db	0ffh
1570  FF      		db	0ffh
1571  FF      		db	0ffh
1572  FF      		db	0ffh
1573  FF      		db	0ffh
1574  FF      		db	0ffh
1575  FF      		db	0ffh
1576  FF      		db	0ffh
1577  FF      		db	0ffh
1578  FF      		db	0ffh
1579  FF      		db	0ffh
157A  FF      		db	0ffh
157B  FF      		db	0ffh
157C  FF      		db	0ffh
157D  FF      		db	0ffh
157E  FF      		db	0ffh
157F  FF      		db	0ffh
1580  FF      		db	0ffh
1581  FF      		db	0ffh
1582  FF      		db	0ffh
1583  FF      		db	0ffh
1584  FF      		db	0ffh
1585  FF      		db	0ffh
1586  FF      		db	0ffh
1587  FF      		db	0ffh
1588  FF      		db	0ffh
1589  FF      		db	0ffh
158A  FF      		db	0ffh
158B  FF      		db	0ffh
158C  FF      		db	0ffh
158D  FF      		db	0ffh
158E  FF      		db	0ffh
158F  FF      		db	0ffh
1590  FF      		db	0ffh
1591  FF      		db	0ffh
1592  FF      		db	0ffh
1593  FF      		db	0ffh
1594  FF      		db	0ffh
1595  FF      		db	0ffh
1596  FF      		db	0ffh
1597  FF      		db	0ffh
1598  FF      		db	0ffh
1599  FF      		db	0ffh
159A  FF      		db	0ffh
159B  FF      		db	0ffh
159C  FF      		db	0ffh
159D  FF      		db	0ffh
159E  FF      		db	0ffh
159F  FF      		db	0ffh
15A0  FF      		db	0ffh
15A1  FF      		db	0ffh
15A2  FF      		db	0ffh
15A3  FF      		db	0ffh
15A4  FF      		db	0ffh
15A5  FF      		db	0ffh
15A6  FF      		db	0ffh
15A7  FF      		db	0ffh
15A8  FF      		db	0ffh
15A9  FF      		db	0ffh
15AA  FF      		db	0ffh
15AB  FF      		db	0ffh
15AC  FF      		db	0ffh
15AD  FF      		db	0ffh
15AE  FF      		db	0ffh
15AF  FF      		db	0ffh
15B0  FF      		db	0ffh
15B1  FF      		db	0ffh
15B2  FF      		db	0ffh
15B3  FF      		db	0ffh
15B4  FF      		db	0ffh
15B5  FF      		db	0ffh
15B6  FF      		db	0ffh
15B7  FF      		db	0ffh
15B8  FF      		db	0ffh
15B9  FF      		db	0ffh
15BA  FF      		db	0ffh
15BB  FF      		db	0ffh
15BC  FF      		db	0ffh
15BD  FF      		db	0ffh
15BE  FF      		db	0ffh
15BF  FF      		db	0ffh
15C0  FF      		db	0ffh
15C1  FF      		db	0ffh
15C2  FF      		db	0ffh
15C3  FF      		db	0ffh
15C4  FF      		db	0ffh
15C5  FF      		db	0ffh
15C6  FF      		db	0ffh
15C7  FF      		db	0ffh
15C8  FF      		db	0ffh
15C9  FF      		db	0ffh
15CA  FF      		db	0ffh
15CB  FF      		db	0ffh
15CC  FF      		db	0ffh
15CD  FF      		db	0ffh
15CE  FF      		db	0ffh
15CF  FF      		db	0ffh
15D0  FF      		db	0ffh
15D1  FF      		db	0ffh
15D2  FF      		db	0ffh
15D3  FF      		db	0ffh
15D4  FF      		db	0ffh
15D5  FF      		db	0ffh
15D6  FF      		db	0ffh
15D7  FF      		db	0ffh
15D8  FF      		db	0ffh
15D9  FF      		db	0ffh
15DA  FF      		db	0ffh
15DB  FF      		db	0ffh
15DC  FF      		db	0ffh
15DD  FF      		db	0ffh
15DE  FF      		db	0ffh
15DF  FF      		db	0ffh
15E0  FF      		db	0ffh
15E1  FF      		db	0ffh
15E2  FF      		db	0ffh
15E3  FF      		db	0ffh
15E4  FF      		db	0ffh
15E5  FF      		db	0ffh
15E6  FF      		db	0ffh
15E7  FF      		db	0ffh
15E8  FF      		db	0ffh
15E9  FF      		db	0ffh
15EA  FF      		db	0ffh
15EB  FF      		db	0ffh
15EC  FF      		db	0ffh
15ED  FF      		db	0ffh
15EE  FF      		db	0ffh
15EF  FF      		db	0ffh
15F0  FF      		db	0ffh
15F1  FF      		db	0ffh
15F2  FF      		db	0ffh
15F3  FF      		db	0ffh
15F4  FF      		db	0ffh
15F5  FF      		db	0ffh
15F6  FF      		db	0ffh
15F7  FF      		db	0ffh
15F8  FF      		db	0ffh
15F9  FF      		db	0ffh
15FA  FF      		db	0ffh
15FB  FF      		db	0ffh
15FC  FF      		db	0ffh
15FD  FF      		db	0ffh
15FE  FF      		db	0ffh
15FF  FF      		db	0ffh
1600  FF      		db	0ffh
1601  FF      		db	0ffh
1602  FF      		db	0ffh
1603  FF      		db	0ffh
1604  FF      		db	0ffh
1605  FF      		db	0ffh
1606  FF      		db	0ffh
1607  FF      		db	0ffh
1608  FF      		db	0ffh
1609  FF      		db	0ffh
160A  FF      		db	0ffh
160B  FF      		db	0ffh
160C  FF      		db	0ffh
160D  FF      		db	0ffh
160E  FF      		db	0ffh
160F  FF      		db	0ffh
1610  FF      		db	0ffh
1611  FF      		db	0ffh
1612  FF      		db	0ffh
1613  FF      		db	0ffh
1614  FF      		db	0ffh
1615  FF      		db	0ffh
1616  FF      		db	0ffh
1617  FF      		db	0ffh
1618  FF      		db	0ffh
1619  FF      		db	0ffh
161A  FF      		db	0ffh
161B  FF      		db	0ffh
161C  FF      		db	0ffh
161D  FF      		db	0ffh
161E  FF      		db	0ffh
161F  FF      		db	0ffh
1620  FF      		db	0ffh
1621  FF      		db	0ffh
1622  FF      		db	0ffh
1623  FF      		db	0ffh
1624  FF      		db	0ffh
1625  FF      		db	0ffh
1626  FF      		db	0ffh
1627  FF      		db	0ffh
1628  FF      		db	0ffh
1629  FF      		db	0ffh
162A  FF      		db	0ffh
162B  FF      		db	0ffh
162C  FF      		db	0ffh
162D  FF      		db	0ffh
162E  FF      		db	0ffh
162F  FF      		db	0ffh
1630  FF      		db	0ffh
1631  FF      		db	0ffh
1632  FF      		db	0ffh
1633  FF      		db	0ffh
1634  FF      		db	0ffh
1635  FF      		db	0ffh
1636  FF      		db	0ffh
1637  FF      		db	0ffh
1638  FF      		db	0ffh
1639  FF      		db	0ffh
163A  FF      		db	0ffh
163B  FF      		db	0ffh
163C  FF      		db	0ffh
163D  FF      		db	0ffh
163E  FF      		db	0ffh
163F  FF      		db	0ffh
1640  FF      		db	0ffh
1641  FF      		db	0ffh
1642  FF      		db	0ffh
1643  FF      		db	0ffh
1644  FF      		db	0ffh
1645  FF      		db	0ffh
1646  FF      		db	0ffh
1647  FF      		db	0ffh
1648  FF      		db	0ffh
1649  FF      		db	0ffh
164A  FF      		db	0ffh
164B  FF      		db	0ffh
164C  FF      		db	0ffh
164D  FF      		db	0ffh
164E  FF      		db	0ffh
164F  FF      		db	0ffh
1650  FF      		db	0ffh
1651  FF      		db	0ffh
1652  FF      		db	0ffh
1653  FF      		db	0ffh
1654  FF      		db	0ffh
1655  FF      		db	0ffh
1656  FF      		db	0ffh
1657  FF      		db	0ffh
1658  FF      		db	0ffh
1659  FF      		db	0ffh
165A  FF      		db	0ffh
165B  FF      		db	0ffh
165C  FF      		db	0ffh
165D  FF      		db	0ffh
165E  FF      		db	0ffh
165F  FF      		db	0ffh
1660  FF      		db	0ffh
1661  FF      		db	0ffh
1662  FF      		db	0ffh
1663  FF      		db	0ffh
1664  FF      		db	0ffh
1665  FF      		db	0ffh
1666  FF      		db	0ffh
1667  FF      		db	0ffh
1668  FF      		db	0ffh
1669  FF      		db	0ffh
166A  FF      		db	0ffh
166B  FF      		db	0ffh
166C  FF      		db	0ffh
166D  FF      		db	0ffh
166E  FF      		db	0ffh
166F  FF      		db	0ffh
1670  FF      		db	0ffh
1671  FF      		db	0ffh
1672  FF      		db	0ffh
1673  FF      		db	0ffh
1674  FF      		db	0ffh
1675  FF      		db	0ffh
1676  FF      		db	0ffh
1677  FF      		db	0ffh
1678  FF      		db	0ffh
1679  FF      		db	0ffh
167A  FF      		db	0ffh
167B  FF      		db	0ffh
167C  FF      		db	0ffh
167D  FF      		db	0ffh
167E  FF      		db	0ffh
167F  FF      		db	0ffh
1680  FF      		db	0ffh
1681  FF      		db	0ffh
1682  FF      		db	0ffh
1683  FF      		db	0ffh
1684  FF      		db	0ffh
1685  FF      		db	0ffh
1686  FF      		db	0ffh
1687  FF      		db	0ffh
1688  FF      		db	0ffh
1689  FF      		db	0ffh
168A  FF      		db	0ffh
168B  FF      		db	0ffh
168C  FF      		db	0ffh
168D  FF      		db	0ffh
168E  FF      		db	0ffh
168F  FF      		db	0ffh
1690  FF      		db	0ffh
1691  FF      		db	0ffh
1692  FF      		db	0ffh
1693  FF      		db	0ffh
1694  FF      		db	0ffh
1695  FF      		db	0ffh
1696  FF      		db	0ffh
1697  FF      		db	0ffh
1698  FF      		db	0ffh
1699  FF      		db	0ffh
169A  FF      		db	0ffh
169B  FF      		db	0ffh
169C  FF      		db	0ffh
169D  FF      		db	0ffh
169E  FF      		db	0ffh
169F  FF      		db	0ffh
16A0  FF      		db	0ffh
16A1  FF      		db	0ffh
16A2  FF      		db	0ffh
16A3  FF      		db	0ffh
16A4  FF      		db	0ffh
16A5  FF      		db	0ffh
16A6  FF      		db	0ffh
16A7  FF      		db	0ffh
16A8  FF      		db	0ffh
16A9  FF      		db	0ffh
16AA  FF      		db	0ffh
16AB  FF      		db	0ffh
16AC  FF      		db	0ffh
16AD  FF      		db	0ffh
16AE  FF      		db	0ffh
16AF  FF      		db	0ffh
16B0  FF      		db	0ffh
16B1  FF      		db	0ffh
16B2  FF      		db	0ffh
16B3  FF      		db	0ffh
16B4  FF      		db	0ffh
16B5  FF      		db	0ffh
16B6  FF      		db	0ffh
16B7  FF      		db	0ffh
16B8  FF      		db	0ffh
16B9  FF      		db	0ffh
16BA  FF      		db	0ffh
16BB  FF      		db	0ffh
16BC  FF      		db	0ffh
16BD  FF      		db	0ffh
16BE  FF      		db	0ffh
16BF  FF      		db	0ffh
16C0  FF      		db	0ffh
16C1  FF      		db	0ffh
16C2  FF      		db	0ffh
16C3  FF      		db	0ffh
16C4  FF      		db	0ffh
16C5  FF      		db	0ffh
16C6  FF      		db	0ffh
16C7  FF      		db	0ffh
16C8  FF      		db	0ffh
16C9  FF      		db	0ffh
16CA  FF      		db	0ffh
16CB  FF      		db	0ffh
16CC  FF      		db	0ffh
16CD  FF      		db	0ffh
16CE  FF      		db	0ffh
16CF  FF      		db	0ffh
16D0  FF      		db	0ffh
16D1  FF      		db	0ffh
16D2  FF      		db	0ffh
16D3  FF      		db	0ffh
16D4  FF      		db	0ffh
16D5  FF      		db	0ffh
16D6  FF      		db	0ffh
16D7  FF      		db	0ffh
16D8  FF      		db	0ffh
16D9  FF      		db	0ffh
16DA  FF      		db	0ffh
16DB  FF      		db	0ffh
16DC  FF      		db	0ffh
16DD  FF      		db	0ffh
16DE  FF      		db	0ffh
16DF  FF      		db	0ffh
16E0  FF      		db	0ffh
16E1  FF      		db	0ffh
16E2  FF      		db	0ffh
16E3  FF      		db	0ffh
16E4  FF      		db	0ffh
16E5  FF      		db	0ffh
16E6  FF      		db	0ffh
16E7  FF      		db	0ffh
16E8  FF      		db	0ffh
16E9  FF      		db	0ffh
16EA  FF      		db	0ffh
16EB  FF      		db	0ffh
16EC  FF      		db	0ffh
16ED  FF      		db	0ffh
16EE  FF      		db	0ffh
16EF  FF      		db	0ffh
16F0  FF      		db	0ffh
16F1  FF      		db	0ffh
16F2  FF      		db	0ffh
16F3  FF      		db	0ffh
16F4  FF      		db	0ffh
16F5  FF      		db	0ffh
16F6  FF      		db	0ffh
16F7  FF      		db	0ffh
16F8  FF      		db	0ffh
16F9  FF      		db	0ffh
16FA  FF      		db	0ffh
16FB  FF      		db	0ffh
16FC  FF      		db	0ffh
16FD  FF      		db	0ffh
16FE  FF      		db	0ffh
16FF  FF      		db	0ffh
1700  FF      		db	0ffh
1701  FF      		db	0ffh
1702  FF      		db	0ffh
1703  FF      		db	0ffh
1704  FF      		db	0ffh
1705  FF      		db	0ffh
1706  FF      		db	0ffh
1707  FF      		db	0ffh
1708  FF      		db	0ffh
1709  FF      		db	0ffh
170A  FF      		db	0ffh
170B  FF      		db	0ffh
170C  FF      		db	0ffh
170D  FF      		db	0ffh
170E  FF      		db	0ffh
170F  FF      		db	0ffh
1710  FF      		db	0ffh
1711  FF      		db	0ffh
1712  FF      		db	0ffh
1713  FF      		db	0ffh
1714  FF      		db	0ffh
1715  FF      		db	0ffh
1716  FF      		db	0ffh
1717  FF      		db	0ffh
1718  FF      		db	0ffh
1719  FF      		db	0ffh
171A  FF      		db	0ffh
171B  FF      		db	0ffh
171C  FF      		db	0ffh
171D  FF      		db	0ffh
171E  FF      		db	0ffh
171F  FF      		db	0ffh
1720  FF      		db	0ffh
1721  FF      		db	0ffh
1722  FF      		db	0ffh
1723  FF      		db	0ffh
1724  FF      		db	0ffh
1725  FF      		db	0ffh
1726  FF      		db	0ffh
1727  FF      		db	0ffh
1728  FF      		db	0ffh
1729  FF      		db	0ffh
172A  FF      		db	0ffh
172B  FF      		db	0ffh
172C  FF      		db	0ffh
172D  FF      		db	0ffh
172E  FF      		db	0ffh
172F  FF      		db	0ffh
1730  FF      		db	0ffh
1731  FF      		db	0ffh
1732  FF      		db	0ffh
1733  FF      		db	0ffh
1734  FF      		db	0ffh
1735  FF      		db	0ffh
1736  FF      		db	0ffh
1737  FF      		db	0ffh
1738  FF      		db	0ffh
1739  FF      		db	0ffh
173A  FF      		db	0ffh
173B  FF      		db	0ffh
173C  FF      		db	0ffh
173D  FF      		db	0ffh
173E  FF      		db	0ffh
173F  FF      		db	0ffh
1740  FF      		db	0ffh
1741  FF      		db	0ffh
1742  FF      		db	0ffh
1743  FF      		db	0ffh
1744  FF      		db	0ffh
1745  FF      		db	0ffh
1746  FF      		db	0ffh
1747  FF      		db	0ffh
1748  FF      		db	0ffh
1749  FF      		db	0ffh
174A  FF      		db	0ffh
174B  FF      		db	0ffh
174C  FF      		db	0ffh
174D  FF      		db	0ffh
174E  FF      		db	0ffh
174F  FF      		db	0ffh
1750  FF      		db	0ffh
1751  FF      		db	0ffh
1752  FF      		db	0ffh
1753  FF      		db	0ffh
1754  FF      		db	0ffh
1755  FF      		db	0ffh
1756  FF      		db	0ffh
1757  FF      		db	0ffh
1758  FF      		db	0ffh
1759  FF      		db	0ffh
175A  FF      		db	0ffh
175B  FF      		db	0ffh
175C  FF      		db	0ffh
175D  FF      		db	0ffh
175E  FF      		db	0ffh
175F  FF      		db	0ffh
1760  FF      		db	0ffh
1761  FF      		db	0ffh
1762  FF      		db	0ffh
1763  FF      		db	0ffh
1764  FF      		db	0ffh
1765  FF      		db	0ffh
1766  FF      		db	0ffh
1767  FF      		db	0ffh
1768  FF      		db	0ffh
1769  FF      		db	0ffh
176A  FF      		db	0ffh
176B  FF      		db	0ffh
176C  FF      		db	0ffh
176D  FF      		db	0ffh
176E  FF      		db	0ffh
176F  FF      		db	0ffh
1770  FF      		db	0ffh
1771  FF      		db	0ffh
1772  FF      		db	0ffh
1773  FF      		db	0ffh
1774  FF      		db	0ffh
1775  FF      		db	0ffh
1776  FF      		db	0ffh
1777  FF      		db	0ffh
1778  FF      		db	0ffh
1779  FF      		db	0ffh
177A  FF      		db	0ffh
177B  FF      		db	0ffh
177C  FF      		db	0ffh
177D  FF      		db	0ffh
177E  FF      		db	0ffh
177F  FF      		db	0ffh
1780  FF      		db	0ffh
1781  FF      		db	0ffh
1782  FF      		db	0ffh
1783  FF      		db	0ffh
1784  FF      		db	0ffh
1785  FF      		db	0ffh
1786  FF      		db	0ffh
1787  FF      		db	0ffh
1788  FF      		db	0ffh
1789  FF      		db	0ffh
178A  FF      		db	0ffh
178B  FF      		db	0ffh
178C  FF      		db	0ffh
178D  FF      		db	0ffh
178E  FF      		db	0ffh
178F  FF      		db	0ffh
1790  FF      		db	0ffh
1791  FF      		db	0ffh
1792  FF      		db	0ffh
1793  FF      		db	0ffh
1794  FF      		db	0ffh
1795  FF      		db	0ffh
1796  FF      		db	0ffh
1797  FF      		db	0ffh
1798  FF      		db	0ffh
1799  FF      		db	0ffh
179A  FF      		db	0ffh
179B  FF      		db	0ffh
179C  FF      		db	0ffh
179D  FF      		db	0ffh
179E  FF      		db	0ffh
179F  FF      		db	0ffh
17A0  FF      		db	0ffh
17A1  FF      		db	0ffh
17A2  FF      		db	0ffh
17A3  FF      		db	0ffh
17A4  FF      		db	0ffh
17A5  FF      		db	0ffh
17A6  FF      		db	0ffh
17A7  FF      		db	0ffh
17A8  FF      		db	0ffh
17A9  FF      		db	0ffh
17AA  FF      		db	0ffh
17AB  FF      		db	0ffh
17AC  FF      		db	0ffh
17AD  FF      		db	0ffh
17AE  FF      		db	0ffh
17AF  FF      		db	0ffh
17B0  FF      		db	0ffh
17B1  FF      		db	0ffh
17B2  FF      		db	0ffh
17B3  FF      		db	0ffh
17B4  FF      		db	0ffh
17B5  FF      		db	0ffh
17B6  FF      		db	0ffh
17B7  FF      		db	0ffh
17B8  FF      		db	0ffh
17B9  FF      		db	0ffh
17BA  FF      		db	0ffh
17BB  FF      		db	0ffh
17BC  FF      		db	0ffh
17BD  FF      		db	0ffh
17BE  FF      		db	0ffh
17BF  FF      		db	0ffh
17C0  FF      		db	0ffh
17C1  FF      		db	0ffh
17C2  FF      		db	0ffh
17C3  FF      		db	0ffh
17C4  FF      		db	0ffh
17C5  FF      		db	0ffh
17C6  FF      		db	0ffh
17C7  FF      		db	0ffh
17C8  FF      		db	0ffh
17C9  FF      		db	0ffh
17CA  FF      		db	0ffh
17CB  FF      		db	0ffh
17CC  FF      		db	0ffh
17CD  FF      		db	0ffh
17CE  FF      		db	0ffh
17CF  FF      		db	0ffh
17D0  FF      		db	0ffh
17D1  FF      		db	0ffh
17D2  FF      		db	0ffh
17D3  FF      		db	0ffh
17D4  FF      		db	0ffh
17D5  FF      		db	0ffh
17D6  FF      		db	0ffh
17D7  FF      		db	0ffh
17D8  FF      		db	0ffh
17D9  FF      		db	0ffh
17DA  FF      		db	0ffh
17DB  FF      		db	0ffh
17DC  FF      		db	0ffh
17DD  FF      		db	0ffh
17DE  FF      		db	0ffh
17DF  FF      		db	0ffh
17E0  FF      		db	0ffh
17E1  FF      		db	0ffh
17E2  FF      		db	0ffh
17E3  FF      		db	0ffh
17E4  FF      		db	0ffh
17E5  FF      		db	0ffh
17E6  FF      		db	0ffh
17E7  FF      		db	0ffh
17E8  FF      		db	0ffh
17E9  FF      		db	0ffh
17EA  FF      		db	0ffh
17EB  FF      		db	0ffh
17EC  FF      		db	0ffh
17ED  FF      		db	0ffh
17EE  FF      		db	0ffh
17EF  FF      		db	0ffh
17F0  FF      		db	0ffh
17F1  FF      		db	0ffh
17F2  FF      		db	0ffh
17F3  FF      		db	0ffh
17F4  FF      		db	0ffh
17F5  FF      		db	0ffh
17F6  FF      		db	0ffh
17F7  FF      		db	0ffh
17F8  FF      		db	0ffh
17F9  FF      		db	0ffh
17FA  FF      		db	0ffh
17FB  FF      		db	0ffh
17FC  FF      		db	0ffh
17FD  FF      		db	0ffh
17FE  FF      		db	0ffh
17FF  FF      		db	0ffh
0000          	if	($ <> 1800h)
		endif
1800          		end



Statistics:

     4	passes
     0	jr promotions
   439	symbols
  6144	bytes

  2782	macro calls
  4048	macro bytes
     0	invented symbols
