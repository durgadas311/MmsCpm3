		; H8 Z80-CPU v3.2 Monitor (EEPROM 28C256)
0020          	VERN	equ	020h	; ROM version
		
0000          	false	equ	0
FFFF          	true	equ	not false
		
0000          	alpha	equ	0
0019          	beta	equ	25
		
FFFF          	z180	equ	true
0000          	h8nofp	equ	false
0000          	h89	equ	false
0000          	nofp	set	false
		
			maclib	ram
**** ram.lib ****
**** h8z180.asm ****
			maclib	setup
**** setup.lib ****
**** h8z180.asm ****
FFFF          	if z180
F180          	pcode	set	0f180h
			maclib	z180
**** z180.lib ****
**** h8z180.asm ****
FFFF          	use$dma	equ	true
0000          	if h8nofp
		endif
0000          	if h89
		endif
		else	; Z80 based
		endif	; z180 else z80
		
0000          	if h8nofp or h89
		endif
			$*macro
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
0009          	TAB	equ	9
0008          	BS	equ	8
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
		; ctrl port F2 bit definitions
0014          	ctl$SPD		equ	00010100b	; CPU speed control bits
0002          	ctl$CLK		equ	00000010b	; enable H89 2mS clock (not used here)
0008          	ctl$MEM1	equ	00001000b	; maps full ROM (if !ORG0)
0020          	ctl$ORG0	equ	00100000b	; maps full RAM
0080          	ctl$IO1		equ	10000000b	; enables EEPROM write
		
		; MFlag bit definitions
0080          	mfl$HLT	equ	10000000b	; disable HLT processing (TODO)
0040          	mfl$NRF	equ	01000000b	; disable refresh of display
0002          	mfl$DDU	equ	00000010b	; disable disp update (debug info)
0001          	mfl$CLK	equ	00000001b	; allow 2mS clock hook (user hook)
		
FFFF          	if z180
		; Z180 internal registers (I/O ports) - CCR
0034          	itc	equ	34h
0038          	mmu$cbr	equ	38h
0039          	mmu$bbr	equ	39h
003A          	mmu$cbar equ	3ah
0020          	sar0l	equ	20h
0021          	sar0h	equ	21h
0022          	sar0b	equ	22h
0023          	dar0l	equ	23h
0024          	dar0h	equ	24h
0025          	dar0b	equ	25h
0026          	bcr0l	equ	26h
0027          	bcr0h	equ	27h
0030          	dstat	equ	30h
0031          	dmode	equ	31h
0032          	dcntl	equ	32h
		else
		endif
		
00A0          	rtc	equ	0a0h	; standard port address of RTC 72421
		
3000          	memtest	equ	03000h
C000          	ramboot	equ	0c000h
		; fudge this... H17 junk
1F5A          	R$CONST	equ	01f5ah	; 037.132 R.CONST block...
1C19          	CLOCK	equ	01c19h	; 034.031 CLOCK
		
		; offsets in a module
0000          	mdpgs	equ	0	; num pages
0001          	mdorg	equ	1	; ORG for module (run/load addr)
0002          	mdbase	equ	2	; base phy drv num
0003          	mdluns	equ	3	; num LUNs
0004          	mdinit	equ	4	; init entry point
0007          	mdboot	equ	7	; boot entry point
000A          	mdchr	equ	10	; device letter
000B          	mdkey	equ	11	; device key
000C          	mdport	equ	12	; device port, 0 if variable
000D          	mddisp	equ	13	; boot front panel mnemonic
0010          	mdname	equ	16	; boot string
		
FFFF          	if z180
		; Where ROM is mapped-in for searching...
4000          	btmap	equ	4000h
6000          	btmods	equ	btmap+2000h
C000          	bterom	equ	btmap+8000h
		else
		endif
		
0010          	rptcnt	equ	16
0001          	debounce equ	1
		
		; Start of ROM code
0000          		org	00000h
		
0000          	rombeg:
0000          	rst0:
0000          	if nofp
		else
0000  F3      		di	; can't be JMP or Heath CP/M thinks we're an H89
0001  C34303  		jmp	init
		endif
		
0004  C30A02  		jmp	getport
0007  00      		db	0
		
0008  CD7000  	rst1:	call	intsetup
000B  2A1B20  		lhld	ticcnt
000E  C36400  		jmp	int1$cont
0000          	if ((high int1$cont) <> 0)
		endif
		
0010          	rst2	equ	$-1	; must be a nop...
0011  CD7000  		call	intsetup
0014  1A      		ldax	d
0015  C39001  		jmp	int2$cont
		
0018  C32520  	rst3:	jmp	vrst3	; 0018
		
001B  C3030A  		jmp	crlf	; 001b
001E  8B0F    		dw	retmon	; 001e
		
0020  C32820  	rst4:	jmp	vrst4
		
0023  000000  		db	0,0,0	; overlayed by WizNet boot, others
0026  D803    		dw	conout	; pointer, not vector; A=char
		
0028  C32B20  	rst5:	jmp	vrst5
		
002B  C33002  		jmp	delay
002E  3F00    	qmsg:	db	'?',TRM
		
0030  C32E20  	rst6:	jmp	vrst6
		
0033  00000000		db	0,0,0,0,0	; overlayed by WizNet boot, others
      00
		
0038  C33120  	rst7:	jmp	vrst7
		
		; routines made public (to modules)
003B  C33603  		jmp	hwboot	; 003b
003E  C33A03  		jmp	hxboot	; 003e
0041  C39F01  		jmp	take$A	; 0041
0044  C30D0A  		jmp	msgout	; 0044
0047  C3030E  		jmp	linin	; 0047
004A  C3360A  		jmp	conin1	; 004a - without kaypad or DEL
		
004D          	intret:
004D  F1      		pop	psw
004E  F1      		pop	psw
004F  C1      		pop	b
0050  D1      		pop	d
0051  E1      		pop	h
0052          		popix
0052  DDE1    		DB	0DDH,0E1H
0054          		popiy
0054  FDE1    		DB	0FDH,0E1H
0056          		exx
0056  D9      		DB	0D9H
0057          		exaf
0057  08      		DB	08H
0058  C1      		pop	b	; I,R - R cannot be restored
0059  78      		mov	a,b
005A          		stai
005A  ED47    		DB	0EDH,47H
005C  F1      		pop	psw
005D  C1      		pop	b
005E  D1      		pop	d
005F  E1      		pop	h
0060          		exx
0060  D9      		DB	0D9H
0061          		exaf
0061  08      		DB	08H
0062          	nulint:
0062  FB      		ei
0063  C9      		ret
		
0000          	if nofp
		endif
		
0064          	int1$cont:
0064  23      		inx	h
0065  221B20  		shld	ticcnt
0068  3A3620  		lda	ctl$F2
006B  D3F2    		out	0f2h
0000          	if nofp
		else
006D  C3AB0B  		jmp	int1$fp
		endif
		
0070          	intsetup:
0070          		exx
0070  D9      		DB	0D9H
0071          		exaf
0071  08      		DB	08H
0072  E3      		xthl	; HL=PC (ret adr)
0073  D5      		push	d
0074  C5      		push	b
0075  F5      		push	psw
0076          		ldar
0076  ED5F    		DB	0EDH,5FH
0078  4F      		mov	c,a
0079          		ldai
0079  ED57    		DB	0EDH,57H
007B  47      		mov	b,a
007C  C5      		push	b
007D          		pushiy
007D  FDE5    		DB	0FDH,0E5H
007F          		pushix
007F  DDE5    		DB	0DDH,0E5H
0081  E5      		push	h	; save PC
0082          		exx
0082  D9      		DB	0D9H
0083          		exaf
0083  08      		DB	08H
0084  E3      		xthl		; HL=PC
0085  D5      		push	d
0086  C5      		push	b
0087  F5      		push	psw
0088  EB      		xchg		; DE=PC
0089  211800  		lxi	h,nReg-2
008C  39      		dad	sp
008D  E5      		push	h
008E  D5      		push	d	; save PC
008F  110920  		lxi	d,ctl$F0
0092  1A      		ldax	d
0093  2F      		cma
0094  E630    		ani	030h
0096  C8      		rz
0097  210200  		lxi	h,2
009A  39      		dad	sp
009B  221D20  		shld	monstk	; a.k.a. RegPtr
009E  C9      		ret
		
009F          	re$entry:		; re-entry point for errors, etc.
009F  210920  		lxi	h,ctl$F0
00A2  36F0    		mvi	m,0f0h	; !beep, 2mS, MON, !SI
00A4  2A1D20  		lhld	monstk
00A7  F9      		sphl
00A8  CDD603  		call	belout	; TODO: beep front panel if appropriate
			;jmp	start
00AB          	start:
00AB  21AB00  		lxi	h,start
00AE  E5      		push	h
			; reset FP display... this doesn't make a lot of sense...
00AF  3A0720  		lda	DspMod
00B2  E601    		ani	00000001b
00B4  2F      		cma
00B5  320620  		sta	DsProt
00B8  FB      		ei
			; avoid prompt if last was keypad command...
00B9  21DA06  		lxi	h,prompt
00BC  3A3B20  		lda	lstcmd
00BF  B7      		ora	a
00C0  F40D0A  		cp	msgout
00C3          	prloop:
			; could take one of two paths here,
			; console or kaypad...
00C3  CD4E0A  		call	cmdin
00C6  FE3F    		cpi	'?'	; HELP command?
00C8  CA0E07  		jz	nocmd0	; handled my add-on
00CB  E6DF    		ani	11011111b ; toupper
00CD  323B20  		sta	lstcmd
FFFF          	if not nofp
00D0  FA4B09  		jm	kpcmd	; from keypad... jumps back here...
		endif
00D3  21E300  	cmchr:	lxi	h,cmdtab
00D6  061A    		mvi	b,numcmd
00D8          	cmloop:
00D8  BE      		cmp	m
00D9  23      		inx	h
00DA          		jrz	docmd
00DA  285E    		DB	28H,docmd-$-1
00DC  23      		inx	h
00DD  23      		inx	h
00DE          		djnz	cmloop
00DE  10F8    		DB	10H,cmloop-$-1
00E0  C31107  		jmp	nocmd
		
00E3          	cmdtab:
			; console commands
00E3  44      		db	'D' !
00E4  650E    	 dw cmddmp	; Dump memory
00E6  47      		db	'G' !
00E7  6701    	 dw cmdgo	; Go
00E9  53      		db	'S' !
00EA  7D03    	 dw cmdsub	; Substitute in memory
00EC  50      		db	'P' !
00ED  4301    	 dw cmdpc	; Set PC
00EF  42      		db	'B' !
00F0  6D02    	 dw cmdboot; Boot
00F2  4D      		db	'M' !
00F3  9B04    	 dw cmdmt	; Memory Test
00F5  56      		db	'V' !
00F6  760F    	 dw prtver	; Version of ROM
00F8  4C      		db	'L' !
00F9  A30E    	 dw cmdlb	; List boot modules
00FB  48      		db	'H' !
00FC  E00E    	 dw cmdhb	; long list (Help) boot modules
00FE  58      		db	'X' !
00FF  4B0F    	 dw cmdx	; extended command set X_
		; TODO: vflash.sys does 'U', 'A' may require more complexity.
		;	db	'A' ! dw cmdab	; Add boot module
		;	db	'U' ! dw cmdur	; Update entire ROM
FFFF          	if not nofp
			; front-panel commands    key(old)  command/action
0101  80      		db	80h !
0102  3A07    	 dw kpubt	; [0]     - Universal Boot
0104  81      		db	81h !
0105  FB07    	 dw kppbt	; [1]     - Pri Boot
0107  82      		db	82h !
0108  3808    	 dw kpsbt	; [2]     - Sec Boot
010A  83      		db	83h !
010B  AC08    	 dw kprdx	; [3]     - Radix Mode
010D  84      		db	84h !
010E  5306    	 dw kpgo	; [4]     - Go
0110  85      		db	85h !
0111  5C06    	 dw kpin	; [5]     - Input
0113  86      		db	86h !
0114  6606    	 dw kpout	; [6]     - Output
0116  87      		db	87h !
0117  7606    	 dw kpsst	; [7]     - Single Step
0119  88      		db	88h !
011A  9B08    	 dw kptap	; [8]     - Cass Load
011C  89      		db	89h !
011D  9B08    	 dw kptap	; [9]     - Cass Store
011F  8A      		db	8ah !
0120  E508    	 dw kpnxt	; [A] [+] - Next
0122  8B      		db	8bh !
0123  FD08    	 dw kpprv	; [B] [-] - Prev
0125  8C      		db	8ch !
0126  6C06    	 dw kpabt	; [C] [*] - CANCEL, usually
0128  8D      		db	8dh !
0129  6D06    	 dw kprw	; [D] [/] - Display/Alter
012B  8E      		db	8eh !
012C  1809    	 dw kpmem	; [E] [#] - Memory Mode
012E  8F      		db	8fh !
012F  2D09    	 dw kprgm	; [F] [.] - Register Mode
		endif
001A          	numcmd	equ	($-cmdtab)/3
		
0000          	if nofp
		endif
		
			rept	0137h-$
0131  FF      		db	0ffh
0132  FF      		db	0ffh
0133  FF      		db	0ffh
0134  FF      		db	0ffh
0135  FF      		db	0ffh
0136  FF      		db	0ffh
0000          	if	($ <> 0137h)
		endif
0137  C30000  		jmp	0	; initialized by H47 boot module
		
0000          	if nofp
		endif
		
013A          	docmd:
013A  B7      		ora	a
013B  F4D803  		cp	conout
013E  4E      		mov	c,m
013F  23      		inx	h
0140  66      		mov	h,m
0141  69      		mov	l,c
0142  E9      	icall:	pchl
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; PC command (set PC)
0143          	cmdpc:
0143  21F406  		lxi	h,pcms
0146  CD0D0A  		call	msgout
0149  2A1D20  		lhld	RegPtr
014C  111800  		lxi	d,24	; Reg[PC]
014F  19      		dad	d
0150  5E      		mov	e,m
0151  23      		inx	h
0152  56      		mov	d,m
0153  2B      		dcx	h
0154  EB      		xchg		; HL=PC, DE=adr to store
0155  CDC603  		call	inhexcr
0158          		jrc	cmdpc0	; hex digit entered
0158  3807    		DB	38H,cmdpc0-$-1
015A  CD5104  		call	adrnl	; show current PC (HL)
015D  CDC603  		call	inhexcr	; get another char
0160  D0      		rnc	; CR entered, don't update value
0161          	cmdpc0:
0161  EB      		xchg	; HL=adr to store
0162          	cmdpc1:
0162  160D    		mvi	d,CR
0164  C3FE03  		jmp	adrin
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Go command
0167          	cmdgo:
0167  21E606  		lxi	h,goms
016A  CD0D0A  		call	msgout
016D  2A1D20  		lhld	RegPtr
0170  111800  		lxi	d,24	; Reg[PC]
0173  19      		dad	d	; HL=adr to store
0174  CDC603  		call	inhexcr
0177  DC6201  		cc	cmdpc1	; read HEX until CR, store in HL
017A  CD030A  		call	crlf
FFFF          	if not nofp
			; TODO: make single-step work on H8
017D  3ED0    		mvi	a,0d0h	; no-beep, 2mS, !MON, !single-step
017F          		jr	cmdgo0
017F  1808    		DB	18H,cmdgo0-$-1
0181  F3      		di	; TODO: dead code? single-step...
0182  3A0920  		lda	ctl$F0
0185  EE10    		xri	010h	; toggle single-step
0187  D3F0    		out	0f0h
		else
		endif
0189          	cmdgo0:
0189  320920  		sta	ctl$F0
018C  E1      		pop	h
018D  C34D00  		jmp	intret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
0190          	int2$cont:
FFFF          	if not nofp
0190  F610    		ori	010h	; disable single-step
0192  D3F0    		out	0f0h
0194  12      		stax	d
0195  E620    		ani	020h	; MON active?
		else
		endif
0197  C2AB00  		jnz	start	; break to monitor code
019A  C32220  		jmp	vrst2	; else chain to (possible) user code.
		
019D          	take$5:
019D  3E05    		mvi	a,5	; 5 seconds
019F          	take$A:	; set a timeout for A seconds
019F  21AF01  		lxi	h,timeout
01A2  222020  		shld	vrst1+1
01A5  325221  		sta	SEC$CNT
01A8  3E01    		mvi	a,1
01AA  320820  		sta	MFlag
01AD  FB      		ei
01AE  C9      		ret
		
01AF          	timeout:
01AF  211B20  		lxi	h,ticcnt
01B2  AF      		xra	a
01B3  B6      		ora	m
01B4  C0      		rnz
01B5  23      		inx	h
01B6  7E      		mov	a,m
01B7  0F      		rrc
01B8  D8      		rc
			; every 512 ticks... 1024mS
01B9  215221  		lxi	h,SEC$CNT
01BC  35      		dcr	m
01BD  C0      		rnz
01BE          	error:
01BE  2A1D20  		lhld	monstk
01C1  F9      		sphl
01C2  212E00  		lxi	h,qmsg
01C5  CD0D0A  		call	msgout	; A=0 on return
01C8  216200  		lxi	h,nulint
01CB  222020  		shld	vrst1+1
01CE  320820  		sta	MFlag	; A=0 from msgout
01D1  DBF2    		in	0f2h
01D3  E603    		ani	00000011b
01D5          		jrnz	error0
01D5  2002    		DB	20H,error0-$-1
01D7  D37F    		out	07fh	; clear H17 ctrl port (A=0)
01D9          	error0:
01D9  C39F00  		jmp	re$entry
		
		; determine device for port 078H
		; return phy drv number in D.
01DC          	gtdev1:
01DC  1600    		mvi	d,0	; Z17
01DE  DBF2    		in	0f2h
01E0          	gtdev0:
01E0  E603    		ani	00000011b	; port 078H device
01E2  C8      		rz		; Z17 (or Z37)
01E3  FE01    		cpi	01b
01E5  1605    		mvi	d,5
01E7  C8      		rz		; Z47
01E8  FE02    		cpi	10b
01EA  1603    		mvi	d,3	; Z67/MMS77320
01EC  C8      		rz
01ED  16FF    		mvi	d,0ffh
01EF  C9      		ret	; NZ
		
		; determine device for port 078H
		; return phy drv number in D.
01F0          	gtdev2:
01F0  162E    		mvi	d,46	; Z37
01F2  DBF2    		in	0f2h
01F4  0F      		rrc
01F5  0F      		rrc
01F6          		jr	gtdev0	; rest are same
01F6  18E8    		DB	18H,gtdev0-$-1
		
		; determine default boot device.
01F8          	gtdfbt:
01F8  110000  		lxi	d,0
01FB  DBF2    		in	0f2h
01FD  E670    		ani	01110000b	; default boot selection
01FF  FE20    		cpi	00100000b	; device at 07CH
0201          		jrz	gtdev1
0201  28D9    		DB	28H,gtdev1-$-1
0203  FE30    		cpi	00110000b	; device at 078H
0205          		jrz	gtdev2
0205  28E9    		DB	28H,gtdev2-$-1
0207  C30D0D  		jmp	gtdvtb		; get MMS device
		
		; Check SW501 for installed device.
		; C = desired port pattern, 00=Z17/Z37, 01=Z47, 10=Z67, 11=undefined
		; returns base I/O port adr in B.
020A          	getport:
020A  067C    		mvi	b,07ch
020C  DBF2    		in	0f2h
020E  E603    		ani	003h
0210  B9      		cmp	c
0211  C8      		rz
0212  0678    		mvi	b,078h
0214  DBF2    		in	0f2h
0216  0F      		rrc
0217  0F      		rrc
0218  E603    		ani	003h
021A  B9      		cmp	c
021B  C9      		ret	; let caller decide error handling (NZ)
		
021C  212502  	s501er:	lxi	h,s501ms
021F  CD0D0A  		call	msgout
0222  C39F00  		jmp	re$entry
		
0225  20535731	s501ms:	db	' SW1 wrong',TRM
      2077726F
      6E6700
		
0230          	delay:
0230  E5      		push	h
0231  211B20  		lxi	h,ticcnt
0234  86      		add	m
0235          	delay0:
0235  BE      		cmp	m
0236          		jrnz	delay0
0236  20FD    		DB	20H,delay0-$-1
0238  E1      		pop	h
0239  C9      		ret
		
023A          	gotnum:	; Boot N... "N" in D
023A  D5      		push	d	; save unit num (E)
023B  4A      		mov	c,d
023C  06FF    		mvi	b,-1	; boot modules only
023E  210A0C  		lxi	h,bfnum
0241  CD940C  		call	bfind	; might have already been loaded...
0244  D1      		pop	d
0245  DABE01  		jc	error
0248  CDC802  		call	vfport
024B  DA1C02  		jc	s501er
			; convert phy drv to phy base + unit
024E  7A      		mov	a,d
024F          		ldx	d,mdbase
024F  DD5602  		DB	0DDH,d*8+46H,mdbase
0252  92      		sub	d
0253  5F      		mov	e,a	; always zero?
0254  C30B03  		jmp	goboot
		
			rept	0260h-$
0257  FF      		db	0ffh
0258  FF      		db	0ffh
0259  FF      		db	0ffh
025A  FF      		db	0ffh
025B  FF      		db	0ffh
025C  FF      		db	0ffh
025D  FF      		db	0ffh
025E  FF      		db	0ffh
025F  FF      		db	0ffh
0000          	if	($ <> 0260h)
		endif
		; Legacy entry for "Horn" - beep for num 2mS ticks in A
0260  E5      	hhorn:	push	h
0261  CDE705  		call	set$horn
0264  213C20  		lxi	h,horn
0267  AF      		xra	a
0268  BE      	hhorn0:	cmp	m
0269          		jrnz	hhorn0
0269  20FD    		DB	20H,hhorn0-$-1
026B  E1      		pop	h
026C  C9      		ret
		
026D          	cmdboot:
026D  21E106  		lxi	h,bootms
0270  CD0D0A  		call	msgout	; complete (B)oot
0273  3EC3    		mvi	a,0c3h
0275  328022  		sta	bootbf	; mark "no string"
0278  AF      		xra	a
0279  325021  		sta	cport
027C  318022  		lxi	sp,bootbf
027F  0E0D    		mvi	c,CR	; end input on CR
0281          		jr	boot0
0281  1803    		DB	18H,boot0-$-1
0283          	bterr:
0283  CDD603  		call	belout
0286          	boot0:
0286  CD160A  		call	conin
0289  B9      		cmp	c
028A  CA530D  		jz	dfboot	; default boot, by phy drv...
028D  1E00    		mvi	e,0
			; boot by letter... Boot alpha-
028F  E65F    		ani	05fh ; toupper
0291  FE41    		cpi	'A'
0293          		jrc	bterr
0293  38EE    		DB	38H,bterr-$-1
0295  FE5B    		cpi	'Z'+1
0297          		jrnc	bterr
0297  30EA    		DB	30H,bterr-$-1
0299  FE41    		cpi	'A'
029B          		jrc	bterr
029B  38E6    		DB	38H,bterr-$-1
029D  CDD803  		call	conout
02A0  CDD803  		call	conout
02A3  FE42    		cpi	'B'
02A5  DA200D  		jc	A$boot	; 'A' is synonym for default
02A8  C5      	gotit1:	push	b
02A9  4F      		mov	c,a
02AA  06FF    		mvi	b,-1	; boot modules only
02AC  21EE0B  		lxi	h,bfchr
02AF  CD940C  		call	bfind
02B2  C1      		pop	b
02B3  DABE01  		jc	error
02B6  CDC802  		call	vfport
02B9  DA1C02  		jc	s501er
02BC          		ldx	d,mdbase	; base phy drv num
02BC  DD5602  		DB	0DDH,d*8+46H,mdbase
02BF          	gotit:
02BF  1E00    		mvi	e,0
02C1  3E2D    		mvi	a,'-'	; next is optional unit number...
02C3  CDD803  		call	conout
02C6          		jr	luboot0
02C6  1815    		DB	18H,luboot0-$-1
		
		; verify port is set
		; IX=boot module (in memory)
02C8          	vfport:	ldx	a,mdport
02C8  DD7E0C  		DB	0DDH,a*8+46H,mdport
02CB  B7      		ora	a
02CC          		jrnz	vfp0
02CC  2007    		DB	20H,vfp0-$-1
02CE  3A5021  		lda	cport	; if btinit did not set, we can't go on
02D1  B7      		ora	a
02D2  C0      		rnz
02D3  37      		stc
02D4  C9      		ret
02D5  325021  	vfp0:	sta	cport
02D8  AF      		xra	a
02D9  C9      		ret
		
02DA          	lunerr:
02DA  CDD603  		call	belout
02DD          	luboot0:
02DD  CD3B04  		call	hexin
02E0          		jrnc	luboot2	; valid HEX digit...
02E0  300D    		DB	30H,luboot2-$-1
02E2  B9      		cmp	c
02E3          		jrz	goboot
02E3  2826    		DB	28H,goboot-$-1
02E5  FE3A    		cpi	':'
02E7          		jrz	colon
02E7  2815    		DB	28H,colon-$-1
02E9  FE20    		cpi	' '
02EB          		jrz	space
02EB  280C    		DB	28H,space-$-1
02ED          		jr	lunerr
02ED  18EB    		DB	18H,lunerr-$-1
02EF          	luboot2:
02EF  CD430E  		call	E$x16$A
02F2          		jrc	lunerr
02F2  38E6    		DB	38H,lunerr-$-1
02F4  CDD803  		call	conout
02F7          		jr	luboot0
02F7  18E4    		DB	18H,luboot0-$-1
02F9          	space:
02F9  CDD803  		call	conout
02FC          		jr	luboot0	; TODO: this gets dodgy if spaces between digits.
02FC  18DF    		DB	18H,luboot0-$-1
		
02FE          	colon:	; get arbitrary string as last boot param
02FE  CDD803  		call	conout	; echo ':'
0301  218122  		lxi	h,bootbf+1
0304  CD030E  		call	linin
0307  78      		mov	a,b	; excludes TRM
0308  328022  		sta	bootbf	; bootbf: <len> <string...> as in CP/M cmd buf
		; D=Phys Drive base number, E=Unit number
		; (or, D=Phys Drive unit, E=0)
		; module must have already been loaded
		; NOTE: string might have been placed at bootbf...
		; SP was set to 'bootbf'...
030B          	goboot:
030B          		lxiy	error
030B  FD21    		DB	0FDH,21H
030D  BE01    		DW	error
030F  CD030A  		call	crlf
		; IY=error routine
		; Move string to stack, if present.
		; Stack space is 292 bytes, be certain not to overrun.
		; Since len value is 127 max + TRM, should be OK.
		; Can't use stack until copy is done... can't destroy DE...
0312          	gbooty:
0312  218022  		lxi	h,bootbf
0315  7E      		mov	a,m
0316  FEC3    		cpi	0c3h
0318          		jrz	gboot0
0318  280C    		DB	28H,gboot0-$-1
031A  4F      		mov	c,a	; length
031B  0600    		mvi	b,0
031D  23      		inx	h	; first byte of string...
031E  09      		dad	b	; point to end (TRM)
031F          	btstr1:
031F  7E      		mov	a,m
0320  F5      		push	psw
0321  33      		inx	sp	; undo half of push
0322  2B      		dcx	h
0323  0D      		dcr	c
0324          		jrnz	btstr1
0324  20F9    		DB	20H,btstr1-$-1
0326          	gboot0:
0326          		pushiy	; error routine
0326  FDE5    		DB	0FDH,0E5H
		; IX=boot module (in memory)
		; D=phy drv base, E=unit
0328          	doboot:	; common boot path for console and keypad
0328  CDC609  		call	h17init	; leaves interrupts disabled
032B  7B      		mov	a,e
032C  323121  		sta	AIO$UNI	; relative unit num
032F  7A      		mov	a,d
0330  323420  		sta	l2034h	; boot phys drv base
0333  C3EF0C  		jmp	btboot
			; btboot effectively returns here on success
			; (in most cases)
0336  AF      	hwboot:	xra	a
0337  320820  		sta	MFlag
033A  21191C  	hxboot:	lxi	h,CLOCK
033D  222020  		shld	vrst1+1
0340  C38022  		jmp	bootbf
		
		; ROM start point - initialize everything
		; We know we have at least 64K RAM...
		; But, right now, ROM is in 0000-7FFF so must copy
		; core code and switch to RAM...
0343          	init:
FFFF          	if z180
		; Might arrive here from a TRAP...
0343          		in0	a,itc
0343  ED3834  		DB	0EDH, a*8+00H, itc
0346          		bit	7,a
0346  CB7F    		DB	0CBH,7*8+a+40H
0348  C2B90D  		jnz	trap
034B  21FFFF  	init0:	lxi	h,0ffffh
034E  F9      		sphl
034F  E5      		push	h	; save top on stack
0350  CDF30D  		call	savram
			; map in 8K of ROM from 0xf8000 into 0x4000
0353  3EC4    		mvi	a,1100$0100b	; ca at 0xc000, ba at 0x4000
0355          		out0	a,mmu$cbar
0355  ED393A  		DB	0EDH, a*8+01H, mmu$cbar
			; both CBR and BBR are "0" - if got here via RESET
FFFF          	if use$dma
			; DMA F8000-FA000 into 00000-02000
0358  CD1A06  		call	dmarom
		else
		endif
		else
		endif
			; save config data
035B  210010  		lxi	h,suadr
035E  1100F8  		lxi	d,susave
0361  010F01  		lxi	b,sumax
0364          		ldir
0364  EDB0    		DB	0EDH,0B0H
0366  219F00  		lxi	h,re$entry
0369  E5      		push	h
036A  CDF905  		call	hwinit
036D  CD7504  		call	coninit
0370  CD8506  		call	meminit
0373  CF      		rst	1	; kick-start clock and EI
0374  21960F  		lxi	h,signon
0377  CD0D0A  		call	msgout
			; save registers on stack, for debugger access...
037A  C37000  		jmp	intsetup
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Substitute command
037D          	cmdsub:
037D  21E906  		lxi	h,subms
0380  CD0D0A  		call	msgout
0383  211420  		lxi	h,ABUSS
0386  B7      		ora	a	; NC
0387  160D    		mvi	d,CR
0389  CDFE03  		call	adrin
038C  EB      		xchg
038D          	cmdsub0:
038D  CD5104  		call	adrnl
0390  7E      		mov	a,m
0391  CD6104  		call	hexout
0394  CD5C04  		call	spout
0397          	cmdsub1:
0397  CD3B04  		call	hexin
039A          		jrnc	cmdsub4
039A  3019    		DB	30H,cmdsub4-$-1
039C  FE0D    		cpi	CR
039E          		jrz	cmdsub2
039E  280C    		DB	28H,cmdsub2-$-1
03A0  FE2D    		cpi	'-'
03A2          		jrz	cmdsub3
03A2  280B    		DB	28H,cmdsub3-$-1
03A4  FE2E    		cpi	'.'
03A6  C8      		rz
03A7  CDD603  		call	belout
03AA          		jr	cmdsub1
03AA  18EB    		DB	18H,cmdsub1-$-1
03AC          	cmdsub2:
03AC  23      		inx	h
03AD          		jr	cmdsub0
03AD  18DE    		DB	18H,cmdsub0-$-1
03AF          	cmdsub3:
03AF  CDD803  		call	conout
03B2  2B      		dcx	h
03B3          		jr	cmdsub0
03B3  18D8    		DB	18H,cmdsub0-$-1
03B5          	cmdsub4:
03B5  3600    		mvi	m,000h
03B7          	cmdsub5:
03B7  CDD803  		call	conout
03BA  CD3204  		call	hexbin
03BD          		rld
03BD  ED6F    		DB	0EDH, 6FH
03BF  CDC603  		call	inhexcr
03C2          		jrnc	cmdsub2
03C2  30E8    		DB	30H,cmdsub2-$-1
03C4          		jr	cmdsub5
03C4  18F1    		DB	18H,cmdsub5-$-1
		
03C6          	inhexcr:
03C6  CD160A  		call	conin
03C9  FE0D    		cpi	CR
03CB  C8      		rz
03CC  CD3E04  		call	hexchk
03CF  3F      		cmc
03D0  D8      		rc
03D1  CDD603  		call	belout
03D4          		jr	inhexcr
03D4  18F0    		DB	18H,inhexcr-$-1
		
03D6          	belout:
03D6  3E07    		mvi	a,BEL
03D8          	conout:
03D8  F5      		push	psw
03D9          	conot1:
03D9  DBED    		in	0edh
03DB  E620    		ani	00100000b
03DD          		jrz	conot1
03DD  28FA    		DB	28H,conot1-$-1
03DF  F1      		pop	psw
03E0  D3E8    		out	0e8h
03E2  C9      		ret
		
FFFF          	if not nofp
			rept	03eeh-$
03E3  FF      		db	0ffh
03E4  FF      		db	0ffh
03E5  FF      		db	0ffh
03E6  FF      		db	0ffh
03E7  FF      		db	0ffh
03E8  FF      		db	0ffh
03E9  FF      		db	0ffh
03EA  FF      		db	0ffh
03EB  FF      		db	0ffh
03EC  FF      		db	0ffh
03ED  FF      		db	0ffh
0000          	if	($ <> 03eeh)
		endif
		
		; octal (base 8) 7-seg translation
03EE  01      	doddig:	db	00000001b	; "0."
03EF  73      		db	01110011b	; "1."
03F0  48      		db	01001000b	; "2."
03F1  60      		db	01100000b	; "3."
03F2  32      		db	00110010b	; "4."
03F3  24      		db	00100100b	; "5."
03F4  04      		db	00000100b	; "6."
03F5  71      		db	01110001b	; "7."
03F6  00      		db	00000000b	; "8."
03F7  20      		db	00100000b	; "9."
03F8  10      		db	00010000b	; "A."
03F9  06      		db	00000110b	; "b."
03FA  0D      		db	00001101b	; "C."
03FB  42      		db	01000010b	; "d."
03FC  0C      		db	00001100b	; "E."
03FD  1C      		db	00011100b	; "F."
		endif
		
		; D=term char (e.g. '.' for Substitute)
		; HL=location to store address
		; CY=first digit in A
03FE          	adrin:
03FE  E5      		push	h	; adr to store value
03FF  D4160A  		cnc	conin
0402  BA      		cmp	d	; no input?
0403  CA4E06  		jz	adrin3
0406  210000  		lxi	h,0
0409  37      		stc
040A  D4160A  	adrin0:	cnc	conin
040D  CD3E04  		call	hexchk
0410          		jrc	adrin1
0410  380E    		DB	38H,adrin1-$-1
0412  CDD803  		call	conout
0415  CD3204  		call	hexbin
0418  29      		dad	h
0419  29      		dad	h
041A  29      		dad	h
041B  29      		dad	h
041C  B5      		ora	l
041D  6F      		mov	l,a
041E          		jr	adrin0
041E  18EA    		DB	18H,adrin0-$-1
0420          	adrin1:
0420  BA      		cmp	d
0421          		jrz	adrin2
0421  2806    		DB	28H,adrin2-$-1
0423  CDD603  		call	belout
0426  B7      		ora	a
0427          		jr	adrin0
0427  18E1    		DB	18H,adrin0-$-1
0429          	adrin2:
0429  CDD803  		call	conout
042C  EB      		xchg
042D  E1      		pop	h
042E  73      		mov	m,e
042F  23      		inx	h
0430  72      		mov	m,d
0431  C9      		ret
		
0432          	hexbin:
0432  D63A    		sui	'9'+1
0434          		jrnc	hexbi0
0434  3002    		DB	30H,hexbi0-$-1
0436  C607    		adi	7
0438          	hexbi0:
0438  C603    		adi	3
043A  C9      		ret
		
043B          	hexin:
043B  CD160A  		call	conin
043E          	hexchk:
043E  FE30    		cpi	'0'
0440  D8      		rc
0441  FE3A    		cpi	'9'+1
0443  3F      		cmc
0444  D0      		rnc
0445  FE41    		cpi	'A'
0447  D8      		rc
0448  E65F    		ani	05fh	; toupper
044A  FE41    		cpi	'A'
044C  D8      		rc
044D  FE47    		cpi	'F'+1
044F  3F      		cmc
0450  C9      		ret
		
		; HL = adr to print
0451          	adrnl:
0451  CD030A  		call	crlf
0454          	adrout:
0454  7C      		mov	a,h
0455  CD6104  		call	hexout
0458  7D      		mov	a,l
0459  CD6104  		call	hexout
045C          	spout:
045C  3E20    		mvi	a,' '
045E  C3D803  		jmp	conout
		
0461          	hexout:
0461  F5      		push	psw
0462  07      		rlc
0463  07      		rlc
0464  07      		rlc
0465  07      		rlc
0466  CD6A04  		call	hexdig
0469  F1      		pop	psw
046A          	hexdig:
046A  E60F    		ani	00fh
046C  C690    		adi	090h
046E  27      		daa
046F  CE40    		aci	040h
0471  27      		daa
0472  C3D803  		jmp	conout
		
0475          	coninit:
0475  0E0C    		mvi	c,12	; 9600 baud
0477  DBF2    		in	0f2h
0479  E680    		ani	10000000b	; 9600/19.2K?
047B          		jrz	ci0
047B  2802    		DB	28H,ci0-$-1
047D  0E06    		mvi	c,6	; 19.2K baud
047F  3E83    	ci0:	mvi	a,083h
0481  D3EB    		out	0ebh
0483  AF      		xra	a
0484  D3E9    		out	0e9h
0486  79      		mov	a,c
0487  D3E8    		out	0e8h
0489  3E03    		mvi	a,003h
048B  D3EB    		out	0ebh
048D  AF      		xra	a
048E  D3E9    		out	0e9h
0490  3E0F    		mvi	a,00001111b	; OUT2=1 hides 16C2550 intr enable diff
0492  D3EC    		out	0ech
0494  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Memory Test command
		
0495          	cserr:
0495  21C006  		lxi	h,cserms
0498  C30D0A  		jmp	msgout
		
049B          	cmdmt:
049B  210107  		lxi	h,mtms
049E  CD0D0A  		call	msgout
04A1  CDFC09  		call	waitcr
04A4  21CD06  		lxi	h,topms
04A7  CD0D0A  		call	msgout
04AA  210000  		lxi	h,0
04AD  39      		dad	sp
04AE  7C      		mov	a,h
04AF  3C      		inr	a
04B0          		jrz	cmdmt0
04B0  2802    		DB	28H,cmdmt0-$-1
04B2  D620    		sui	020h
04B4          	cmdmt0:
04B4  67      		mov	h,a
04B5  2E00    		mvi	l,0
04B7  2B      		dcx	h
04B8  D630    		sui	'0'
04BA  5F      		mov	e,a
04BB  CD5404  		call	adrout
04BE  CD030A  		call	crlf
04C1  1600    		mvi	d,000h
04C3  0E30    		mvi	c,030h
04C5  0600    		mvi	b,000h
04C7          		exx
04C7  D9      		DB	0D9H
04C8  21F904  		lxi	h,mtest0
04CB  11FE2F  		lxi	d,memtest - (mtest1-mtest0)
04CE  01EE00  		lxi	b,mtestZ-mtest0
04D1          		ldir
04D1  EDB0    		DB	0EDH,0B0H
04D3  110030  		lxi	d,memtest
04D6  21FB04  		lxi	h,mtest1
04D9  0EEC    		mvi	c,mtestZ-mtest1
04DB  AF      		xra	a
04DC          		exaf
04DC  08      		DB	08H
04DD  AF      		xra	a
04DE          	cmdmt1:
04DE  86      		add	m
04DF          		exaf
04DF  08      		DB	08H
04E0  EB      		xchg
04E1  86      		add	m
04E2          		exaf
04E2  08      		DB	08H
04E3  EB      		xchg
04E4  23      		inx	h
04E5  13      		inx	d
04E6  0D      		dcr	c
04E7          		jrnz	cmdmt1
04E7  20F5    		DB	20H,cmdmt1-$-1
04E9  4F      		mov	c,a
04EA          		exaf
04EA  08      		DB	08H
04EB  B9      		cmp	c
04EC          		jrnz	cserr
04EC  20A7    		DB	20H,cserr-$-1
04EE  F3      		di
04EF  3A3620  		lda	ctl$F2
04F2  E614    		ani	ctl$SPD	; all but speed bits OFF
04F4  F620    		ori	ctl$ORG0	; set ORG0 only
			; pass ctl$F2 in A...
04F6  C3FE2F  		jmp	memtest - (mtest1-mtest)
		
		;------------------------------------------------
		; Start of relocated code...
		; Memory Test routine, position-independent
		;
04F9          	mtest0:
04F9          	mtest:
			; A reg contains desired ctl$F2 image
04F9  D3F2    		out	0f2h
04FB          	mtest1:		; lands at 03000h - retained relocated code
04FB          		exx
04FB  D9      		DB	0D9H
04FC  62      		mov	h,d
04FD  2E00    		mvi	l,0
04FF  78      		mov	a,b
0500          		exx
0500  D9      		DB	0D9H
0501  4F      		mov	c,a
0502  0602    		mvi	b,2
0504          	mtest2:
0504  79      		mov	a,c
0505  07      		rlc
0506  07      		rlc
0507  07      		rlc
0508  07      		rlc
0509  4F      		mov	c,a
050A  E60F    		ani	00fh
050C  C690    		adi	090h
050E  27      		daa
050F  CE40    		aci	040h
0511  27      		daa
0512  D3E8    		out	0e8h
0514          	mtest3:
0514  DBED    		in	0edh
0516  E620    		ani	020h
0518          		jrz	mtest3
0518  28FA    		DB	28H,mtest3-$-1
051A  05      		dcr	b
051B          		jrnz	mtest2
051B  20E7    		DB	20H,mtest2-$-1
051D  3E0D    		mvi	a,CR
051F  D3E8    		out	0e8h
0521          		exx
0521  D9      		DB	0D9H
0522  78      		mov	a,b
0523          	mtest4:
0523  77      		mov	m,a
0524  C601    		adi	1
0526  27      		daa
0527  2C      		inr	l
0528          		jrnz	mtest4
0528  20F9    		DB	20H,mtest4-$-1
052A  24      		inr	h
052B  0D      		dcr	c
052C          		jrnz	mtest4
052C  20F5    		DB	20H,mtest4-$-1
052E  7C      		mov	a,h
052F  92      		sub	d
0530  4F      		mov	c,a
0531  62      		mov	h,d
0532  2E00    		mvi	l,0
0534  78      		mov	a,b
0535          	mtest5:
0535  BE      		cmp	m
0536          		jrnz	mtest9
0536  2046    		DB	20H,mtest9-$-1
0538  C601    		adi	1
053A  27      		daa
053B  2C      		inr	l
053C          		jrnz	mtest5
053C  20F7    		DB	20H,mtest5-$-1
053E  24      		inr	h
053F  0D      		dcr	c
0540          		jrnz	mtest5
0540  20F3    		DB	20H,mtest5-$-1
0542          		exx
0542  D9      		DB	0D9H
0543  210030  		lxi	h,memtest
0546  110000  		lxi	d,0
0549  01EC00  		lxi	b,mtestZ-mtest1
054C          		exx
054C  D9      		DB	0D9H
054D  7A      		mov	a,d
054E  EE30    		xri	030h
0550  57      		mov	d,a
0551          		jrz	mtest6
0551  2803    		DB	28H,mtest6-$-1
0553  4B      		mov	c,e
0554          		jr	mtest7
0554  180A    		DB	18H,mtest7-$-1
0556          	mtest6:
0556  0E30    		mvi	c,030h
0558  3E01    		mvi	a,001h
055A  80      		add	b
055B  27      		daa
055C  47      		mov	b,a
055D          		exx
055D  D9      		DB	0D9H
055E  EB      		xchg
055F          		exx
055F  D9      		DB	0D9H
0560          	mtest7:
0560          		exx
0560  D9      		DB	0D9H
0561          		ldir
0561  EDB0    		DB	0EDH,0B0H
0563  7A      		mov	a,d
0564  E6F0    		ani	0f0h
0566  67      		mov	h,a
0567  2E00    		mvi	l,0
0569  0EEC    		mvi	c,mtestZ-mtest1
056B  AF      		xra	a
056C          	mtest8:
056C  86      		add	m
056D  23      		inx	h
056E  0D      		dcr	c
056F          		jrnz	mtest8
056F  20FB    		DB	20H,mtest8-$-1
0571  4F      		mov	c,a
0572          		exaf
0572  08      		DB	08H
0573  B9      		cmp	c
0574          		jrnz	mtestE
0574  2049    		DB	20H,mtestE-$-1
0576          		exaf
0576  08      		DB	08H
0577  7A      		mov	a,d
0578  E6F0    		ani	0f0h
057A  67      		mov	h,a
057B  2E00    		mvi	l,0
057D  E9      		pchl
057E          	mtest9:
057E  AE      		xra	m
057F  57      		mov	d,a
0580  3E0A    		mvi	a,LF
0582  D3E8    		out	0e8h
0584          	mtestA:
0584  DBED    		in	0edh
0586  E620    		ani	020h
0588          		jrz	mtestA
0588  28FA    		DB	28H,mtestA-$-1
058A  0E02    		mvi	c,2
058C  0604    		mvi	b,4
058E          	mtestB:
058E  7C      		mov	a,h
058F  07      		rlc
0590  07      		rlc
0591  07      		rlc
0592  07      		rlc
0593  E60F    		ani	00fh
0595  C690    		adi	090h
0597  27      		daa
0598  CE40    		aci	040h
059A  27      		daa
059B  D3E8    		out	0e8h
059D          	mtestC:
059D  DBED    		in	0edh
059F  E620    		ani	020h
05A1          		jrz	mtestC
05A1  28FA    		DB	28H,mtestC-$-1
05A3  29      		dad	h
05A4  29      		dad	h
05A5  29      		dad	h
05A6  29      		dad	h
05A7          		djnz	mtestB
05A7  10E5    		DB	10H,mtestB-$-1
05A9  3E20    		mvi	a,' '
05AB  D3E8    		out	0e8h
05AD          	mtestD:
05AD  DBED    		in	0edh
05AF  E620    		ani	020h
05B1          		jrz	mtestD
05B1  28FA    		DB	28H,mtestD-$-1
05B3  0D      		dcr	c
05B4  EB      		xchg
05B5  0602    		mvi	b,002h
05B7          		jrnz	mtestB
05B7  20D5    		DB	20H,mtestB-$-1
05B9  3E2A    		mvi	a,'*'
05BB  D3E8    		out	0e8h
05BD          		jr	mtestG
05BD  1814    		DB	18H,mtestG-$-1
05BF          	mtestE:
05BF  DBED    		in	0edh
05C1  E620    		ani	020h
05C3          		jrz	mtestE
05C3  28FA    		DB	28H,mtestE-$-1
05C5  3E0A    		mvi	a,LF
05C7  D3E8    		out	0e8h
05C9          	mtestF:
05C9  DBED    		in	0edh
05CB  E620    		ani	020h
05CD          		jrz	mtestF
05CD  28FA    		DB	28H,mtestF-$-1
05CF  3E21    		mvi	a,'!'
05D1  D3E8    		out	0e8h
05D3          	mtestG:
05D3  DBED    		in	0edh
05D5  E620    		ani	020h
05D7          		jrz	mtestG
05D7  28FA    		DB	28H,mtestG-$-1
05D9  AF      		xra	a
05DA  06FA    		mvi	b,0fah
05DC          	mtestH:
05DC  3D      		dcr	a
05DD          		jrnz	mtestH
05DD  20FD    		DB	20H,mtestH-$-1
05DF          		djnz	mtestH
05DF  10FB    		DB	10H,mtestH-$-1
05E1  3E07    		mvi	a,BEL
05E3  D3E8    		out	0e8h
05E5          		jr	mtestG
05E5  18EC    		DB	18H,mtestG-$-1
		; End of relocated code
05E7          	mtestZ	equ	$
		;------------------------------------------------
		
		; must be called with interrupts off
		; A = horn delay, in 2mS ticks
		; A,HL used
05E7          	set$horn:
05E7  323C20  		sta	horn
05EA  210920  		lxi	h,ctl$F0
05ED          		res	7,m	; beep on
05ED  CBBE    		DB	0CBH,7*8+m+80H
05EF  7E      		mov	a,m
05F0  D3F0    		out	0f0h
05F2  C9      		ret
		
		; must be called with interrupts enabled
		; A = horn delay, in 2mS ticks
		; A,HL used
05F3          	set$horn0:
05F3  F3      		di
05F4  CDE705  		call	set$horn
05F7  FB      		ei
05F8  C9      		ret
		
		; If this gets much bigger, needs to move
05F9          	hwinit:
			; The RTC 72421 will be in an unknown state.
			; If STD.P has been connected to /INTx,
			; we must ensure interrupts are off.
05F9  3E01    		mvi	a,00000001b ; mask pulse/intr, reset rest
05FB  D3AE    		out	rtc+14
05FD  AF      		xra	a
05FE  D3AD    		out	rtc+13	; clear pending intr, HOLD
			; TODO: any other hardware needs init?
0600  C9      		ret
		
		; Special entry points expected by HDOS, or maybe Heath CP/M boot.
			rept	0613h-$
0601  FF      		db	0ffh
0602  FF      		db	0ffh
0603  FF      		db	0ffh
0604  FF      		db	0ffh
0605  FF      		db	0ffh
0606  FF      		db	0ffh
0607  FF      		db	0ffh
0608  FF      		db	0ffh
0609  FF      		db	0ffh
060A  FF      		db	0ffh
060B  FF      		db	0ffh
060C  FF      		db	0ffh
060D  FF      		db	0ffh
060E  FF      		db	0ffh
060F  FF      		db	0ffh
0610  FF      		db	0ffh
0611  FF      		db	0ffh
0612  FF      		db	0ffh
0000          	if	($ <> 0613h)
		endif
0613  C30000  		jmp	0	; initialized by H47 boot module
0616  00      		db	0
0617  C30000  		jmp	0	; initialized by H47 boot module
		
FFFF          	if z180
FFFF          	if use$dma
		; DMA F8000-FA000 into 00000-02000
		; copy core ROM (8K) into 0000 using DMAC
061A          	dmarom:
061A  21800F  		lxi	h,0f80h	; page addr (256B)
061D  110000  		lxi	d,0000h	; page addr (256B)
0620  010020  		lxi	b,2000h	; bytes
		; Generic memcpy using DMAC.
		; HL=src, DE=dst, all units 256B "pages".
		; BC=count, units are bytes
0623          	dmacpy:
0623  AF      		xra	a
0624          		out0	a,dar0l	; (256B page boundary)
0624  ED3923  		DB	0EDH, a*8+01H, dar0l
0627          		out0	e,dar0h ;
0627  ED1924  		DB	0EDH, e*8+01H, dar0h
062A          		out0	d,dar0b	; dest addr
062A  ED1125  		DB	0EDH, d*8+01H, dar0b
062D          		out0	a,sar0l	; (256B page boundary)
062D  ED3920  		DB	0EDH, a*8+01H, sar0l
0630          		out0	l,sar0h ;
0630  ED2921  		DB	0EDH, l*8+01H, sar0h
0633          		out0	h,sar0b	; source addr
0633  ED2122  		DB	0EDH, h*8+01H, sar0b
0636          		out0	c,bcr0l	;
0636  ED0926  		DB	0EDH, c*8+01H, bcr0l
0639          		out0	b,bcr0h	; byte count
0639  ED0127  		DB	0EDH, b*8+01H, bcr0h
063C  3E02    		mvi	a,00000010b	; mem2mem, burst mode
063E          		out0	a,dmode
063E  ED3931  		DB	0EDH, a*8+01H, dmode
0641  3E60    		mvi	a,01100000b	; DE0,/DWE0(!/DWE1) - start ch 0
0643          		out0	a,dstat
0643  ED3930  		DB	0EDH, a*8+01H, dstat
0646  0E30    		mvi	c,dstat
0648          	init1:	tstio	01000000b	; wait for DMAC to idle
0648  ED7440  		DB	0EDH, 74H, 01000000b
064B          		jrnz	init1
064B  20FB    		DB	20H,init1-$-1
064D  C9      		ret
		endif
		endif
		
064E  E1      	adrin3:	pop	h
064F  5E      		mov	e,m
0650  23      		inx	h
0651  56      		mov	d,m
0652  C9      		ret
		
FFFF          	if not nofp
0653          	kpgo:
0653  3ED0    		mvi	a,11010000b	; MON off
0655  320920  		sta	ctl$F0
0658  E1      		pop	h	; discard ret adr
0659  C34D00  		jmp	intret	; execute
		
		; ABUSS L=port, H=value
065C  2A1420  	kpin:	lhld	ABUSS
065F  4D      		mov	c,l	; port
0660          		inp	h	; get value
0660  ED60    		DB	0EDH,h*8+40H
0662  221420  		shld	ABUSS
0665  C9      		ret
		
		; ABUSS L=port, H=value
0666  2A1420  	kpout:	lhld	ABUSS
0669  4D      		mov	c,l	; port
066A          		outp	h	; output value
066A  ED61    		DB	0EDH,h*8+41H
066C  C9      	kpabt:	ret
		
066D          	kprw:	; switch between display/modify
066D  3A0720  		lda	DspMod
0670  EE01    		xri	1
0672  320720  		sta	DspMod
0675  C9      		ret
		
0676          	kpsst:	; single-step one instruction
0676  F3      		di
0677  3A0920  		lda	ctl$F0
067A  EE10    		xri	00010000b	; disable SS inhibit
067C  D3F0    		out	0f0h
067E  320920  	sst1:	sta	ctl$F0
0681  E1      		pop	h	; discard ret adr
0682  C34D00  		jmp	intret	; execute
		endif
		
		; initialize monitor memory at 2000h
0685          	meminit:
0685  AF      		xra	a
0686  325321  		sta	l2153h
0689  323B20  		sta	lstcmd
068C  320520  		sta	RegI
068F  320620  		sta	DsProt
0692  320720  		sta	DspMod
0695  323920  		sta	Radix
0698  323A20  		sta	kpchar
069B  323C20  		sta	horn
069E  3C      		inr	a	; 1
069F  320A20  		sta	Refind
0000          	if nofp
		else
06A2  3E20    		mvi	a,ctl$ORG0	; ORG0 on, 2mS off...
		endif
06A4  323620  		sta	ctl$F2	; 2mS off, ORG0 on
06A7  D3F2    		out	0f2h	; enable RAM now...
06A9  3EC9    		mvi	a,0c9h	; RET
06AB  320420  		sta	PrsRAM
06AE  210050  		lxi	h,05000h	; 0, (beep, 2mS, !MON, !SI)
06B1  220820  		shld	MFlag	; MFlag, CtlFlg
06B4  21FFFF  		lxi	h,0ffffh	; top of memory
06B7  221420  		shld	ABUSS
06BA  3E01    		mvi	a,debounce
06BC  321720  		sta	kpcnt
06BF  C9      		ret
		
		; for cmdmt...
06C0  07436B73	cserms:	db	BEL,'Cksum error',TRM
      756D2065
      72726F72
      00
06CD  546F7020	topms:	db	'Top of Mem: ',TRM
      6F66204D
      656D3A20
      00
		
06DA  0D0A4838	prompt:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
06DE  3A2000  		db	': ',TRM
06E1  6F6F7420	bootms:	db	'oot ',TRM
      00
06E6  6F2000  	goms:	db	'o ',TRM
06E9  75627374	subms:	db	'ubstitute ',TRM
      69747574
      652000
06F4  726F6720	pcms:	db	'rog Counter ',TRM
      436F756E
      74657220
      00
0701  656D2074	mtms:	db	'em test',TRM
      65737400
0709  756D7020	dmpms:	db	'ump ',TRM
      00
		
		; command not built-in, check modules.
		; should only be called for console commands.
		; A=cmd key/chr (also in 'lstcmd')
070E          	nocmd0:
070E  323B20  		sta	lstcmd
0711          	nocmd:
0711  4F      		mov	c,a
0712  0600    		mvi	b,0	; no boot modules
0714  21EE0B  		lxi	h,bfchr
0717  CD940C  		call	bfind
071A          		jrc	cmerr
071A  3809    		DB	38H,cmerr-$-1
071C  3A3B20  		lda	lstcmd
071F  CDD803  		call	conout
0722  C3EF0C  		jmp	cmexec
		
0725  CDD603  	cmerr:	call	belout
0728  C3C300  		jmp	prloop
		
FFFF          	if not nofp
		; get "alternate" (secondary) boot device...
072B          	galtbt:
072B  110000  		lxi	d,0
072E  DBF2    		in	0f2h
0730  E670    		ani	01110000b	; default boot selection
0732  FE20    		cpi	00100000b	; if default at 07CH,
0734  CAF001  		jz	gtdev2		; get 078H device...
		; if device was not 07CH, then use 07CH... ???
		;;	cpi	00110000b	; if device at 078H
		;;	jz	gtdev1		; get 07CH device...
0737  C3DC01  		jmp	gtdev1		; get 07CH device...
		
073A          	kpubt:
073A  3A0820  		lda	MFlag
073D  F602    		ori	mfl$DDU	; disable disp updates
073F  320820  		sta	MFlag
0742  CD9D0B  		call	clrdisp	; clean slate
0745  01560B  		lxi	b,dDev
0748  110B20  		lxi	d,Aleds
074B  CD930B  		call	mov3dsp
074E  CD400A  		call	keyin	; get device
0751  E67F    		ani	01111111b
0753  FE0C    		cpi	0ch	; cancel
0755  CAB307  		jz	kperr
0758  325121  		sta	BDF
075B  4F      		mov	c,a
075C  06FF    		mvi	b,-1	; boot modules only
075E  21FC0B  		lxi	h,bfkey
0761  CD940C  		call	bfind
0764          		jrc	deverr
0764  384D    		DB	38H,deverr-$-1
0766          		pushix
0766  DDE5    		DB	0DDH,0E5H
0768  C1      		pop	b	; b = IXh
0769  0E0D    		mvi	c,mddisp
076B  110B20  		lxi	d,Aleds
076E  CD930B  		call	mov3dsp
0771  D5      		push	d	; save LEDs pointer
			; determine if fixed port...
0772          		ldx	a,mdport
0772  DD7E0C  		DB	0DDH,a*8+46H,mdport
0775  B7      		ora	a
0776          		jrnz	gotprt
0776  2018    		DB	20H,gotprt-$-1
0778  01590B  		lxi	b,dPor
077B  CD930B  		call	mov3dsp
077E  CD400A  		call	keyin	; get port
0781  E67F    		ani	01111111b
0783  FE04    		cpi	04h	; 0..3 allowed
0785  D2B307  		jnc	deverr
0788  5F      		mov	e,a
0789  1600    		mvi	d,0
078B  21F707  		lxi	h,ports
078E  19      		dad	d
078F  7E      		mov	a,m
0790  E1      	gotprt:	pop	h	; LEDs pointer
0791  325021  		sta	cport
0794  CDDA0A  		call	dod	; decode number to HL
0797  54      		mov	d,h
0798  5D      		mov	e,l
0799  015C0B  		lxi	b,dUni
079C  CD930B  		call	mov3dsp
079F  CD400A  		call	keyin	; get unit
07A2  E67F    		ani	01111111b
07A4  5F      		mov	e,a
07A5          		ldx	d,mdbase
07A5  DD5602  		DB	0DDH,d*8+46H,mdbase
07A8  3EC3    		mvi	a,0c3h
07AA  328022  		sta	bootbf	; mark "no string"
07AD  318022  		lxi	sp,bootbf
07B0  CD2803  		call	doboot	; only returns if error...
07B3          	kperr:
07B3          	deverr:
07B3  FB      		ei	; TODO: more required before this?
07B4  210820  		lxi	h,MFlag
07B7  7E      		mov	a,m
07B8  E6FE    		ani	not mfl$CLK	; disable "private" clock intr
07BA  F602    		ori	mfl$DDU		; disable disp updates
07BC  77      		mov	m,a
07BD  015F0B  		lxi	b,dErr
07C0  110B20  		lxi	d,Aleds
07C3  2E06    		mvi	l,6
07C5  CD950B  		call	movLdsp
07C8  0E80    		mvi	c,10000000b	; beep on/off bit
07CA  211B20  		lxi	h,ticcnt
07CD  110920  		lxi	d,ctl$F0
07D0          	bterr0:
07D0  1A      		ldax	d
07D1  A9      		xra	c	; beep on
07D2  12      		stax	d
07D3  7E      		mov	a,m
07D4  C619    		adi	25	; 50mS
07D6          	bterr2:
07D6  BE      		cmp	m
07D7          		jrnz	bterr2
07D7  20FD    		DB	20H,bterr2-$-1
07D9  1A      		ldax	d
07DA  A9      		xra	c	; beep off
07DB  12      		stax	d
07DC  7E      		mov	a,m
07DD  C6FF    		adi	-1
07DF  BE      	bterr1:	cmp	m
07E0          		jrz	bterr0
07E0  28EE    		DB	28H,bterr0-$-1
07E2  3A3A20  		lda	kpchar
07E5  FE6F    		cpi	01101111b	; raw pattern for '*' or CANCEL
07E7          		jrnz	bterr1
07E7  20F6    		DB	20H,bterr1-$-1
07E9  AF      		xra	a
07EA  323A20  		sta	kpchar
07ED  210820  		lxi	h,MFlag
07F0  7E      		mov	a,m
07F1  E6BD    		ani	not (mfl$NRF+mfl$DDU)	; MFlag normal mode...
07F3  77      		mov	m,a
			; should return to 'start' but avoid extra prompts...
07F4  C39F00  		jmp	re$entry
		
		; port options for keys 0-3
07F7  787CB8BC	ports:	db	078h,07ch,0b8h,0bch
		
07FB          	kppbt:	; primary boot (default boot)
07FB  3EC3    		mvi	a,0c3h
07FD  328022  		sta	bootbf	; mark "no string"
0800  01680B  		lxi	b,dPri
0803  CD6E08  		call	btdsp
0806  CDF801  		call	gtdfbt
0809  7A      		mov	a,d
080A  FEFF    		cpi	0ffh
080C  CAB307  		jz	kperr
080F  FEFE    		cpi	0feh
0811          		jrz	kppbt0
0811  2841    		DB	28H,kppbt0-$-1
0813          	kpbt0:
0813  AF      		xra	a
0814  325021  		sta	cport
0817  D5      		push	d	; phy drv, unit
0818  4A      		mov	c,d
0819  06FF    		mvi	b,-1	; boot modules only
081B  210A0C  		lxi	h,bfnum
081E  CD940C  		call	bfind	; might have already been loaded...
0821  DAB307  		jc	kperr
0824  CDC802  		call	vfport
0827  DAB307  		jc	kperr	; TODO: specific error? SW1 Error?
082A  CD8408  		call	btdsp2	; show device name
082D  D1      		pop	d	; phy drv, unit
082E  318022  		lxi	sp,bootbf
0831  21B307  		lxi	h,kperr
0834  E5      		push	h
0835  C32803  		jmp	doboot
		
0838          	kpsbt:	; secondary boot
0838  3EC3    		mvi	a,0c3h
083A  328022  		sta	bootbf	; mark "no string"
083D  016B0B  		lxi	b,dSec
0840  CD6E08  		call	btdsp
0843  2186F8  		lxi	h,susave+dsdev
0846  CD710D  		call	dfboot0
0849  DAB307  		jc	kperr
084C  B7      		ora	a
084D          		jrz	kpbt1
084D  2812    		DB	28H,kpbt1-$-1
084F  CD2B07  		call	galtbt
0852          		jr	kpbt0
0852  18BF    		DB	18H,kpbt0-$-1
		
0854  2104F8  	kppbt0:	lxi	h,susave+dpdev
0857  CD710D  		call	dfboot0
085A  DAB307  		jc	kperr
085D  B7      		ora	a
085E  C2B307  		jnz	kperr
0861          	kpbt1:
0861  CD8408  		call	btdsp2	; show device name
0864          		lxiy	kperr
0864  FD21    		DB	0FDH,21H
0866  B307    		DW	kperr
0868  318022  		lxi	sp,bootbf
086B  C31203  		jmp	gbooty
		
086E          	btdsp:
086E  3A0820  		lda	MFlag
0871  F602    		ori	mfl$DDU	; disable disp updates
0873  320820  		sta	MFlag
0876  D5      		push	d
0877  C5      		push	b
0878  CD9D0B  		call	clrdisp
087B  C1      		pop	b	; display string
087C  110B20  		lxi	d,Aleds
087F  CD930B  		call	mov3dsp
0882  D1      		pop	d
0883  C9      		ret
		; IX=boot module
		; show device name in FP display
0884          	btdsp2:
0884  D5      		push	d	; device/unit
0885          		pushix
0885  DDE5    		DB	0DDH,0E5H
0887  E1      		pop	h
0888  110D00  		lxi	d,13	; FP display name
088B  19      		dad	d
088C  4D      		mov	c,l
088D  44      		mov	b,h
088E  111120  		lxi	d,Dleds
0891  CD930B  		call	mov3dsp
			; TODO: fix this - is there a better way?
0894  3EFA    		mvi	a,250	;; make it briefly visible
0896  CD3002  		call	delay	;;
0899  D1      		pop	d	; device/unit
089A  C9      		ret
		
089B          	kptap:	; cassette load (read) or store (write, save)
089B  0600    		mvi	b,0	; command only
089D  0E88    		mvi	c,88h	; cassette module key
089F  21FC0B  		lxi	h,bfkey
08A2  CD940C  		call	bfind
08A5  DAB307  		jc	kperr
08A8  CDEF0C  		call	cmexec
08AB  C9      		ret
		
08AC          	kprdx:	; choose radix for display
08AC  3A0820  		lda	MFlag
08AF  F602    		ori	mfl$DDU	; disable disp updates
08B1  320820  		sta	MFlag
08B4  CD9D0B  		call	clrdisp
08B7  01650B  		lxi	b,dRad
08BA  110B20  		lxi	d,Aleds
08BD  CD930B  		call	mov3dsp
08C0  3A3920  		lda	Radix
08C3  B7      		ora	a
08C4  2F      		cma		; 00->ff
08C5          		jrz	rdx0
08C5  2801    		DB	28H,rdx0-$-1
08C7  AF      		xra	a	; else 00
08C8  323920  	rdx0:	sta	Radix		; 00       ff
08CB  E613    		ani	00010011b	; 00->00,  ff->13
08CD  EE81    		xri	10000001b	; 00->81,  ff->92
08CF  321020  		sta	Aleds+5		; 00->'O', ff->'H'
			; wait 1S to allow user to see...
08D2  3EFA    		mvi	a,250		; 500mS
08D4  CD3002  		call	delay
08D7  3EFA    		mvi	a,250		; 500mS
08D9  CD3002  		call	delay
08DC  3A0820  		lda	MFlag
08DF  E6FD    		ani	not mfl$DDU	; enable disp updates
08E1  320820  		sta	MFlag
			; TODO: beep?
08E4  C9      		ret
		
08E5          	kpnxt:	; next register/memory addr
08E5  3A0720  		lda	DspMod
08E8  E602    		ani	00000010b	; Z if memory mode
08EA  2A1420  		lhld	ABUSS
08ED  110520  		lxi	d,RegI
08F0  23      		inx	h
08F1          		jrz	sae
08F1  2821    		DB	28H,sae-$-1
08F3  1A      		ldax	d
08F4  C602    		adi	2
08F6  12      		stax	d
08F7  FE1A    		cpi	nReg
08F9  D8      		rc
08FA  AF      		xra	a
08FB  12      		stax	d
08FC  C9      		ret
		
08FD          	kpprv:	; previous register/memory addr
08FD  3A0720  		lda	DspMod
0900  E602    		ani	00000010b	; Z if memory mode
0902  2A1420  		lhld	ABUSS
0905  110520  		lxi	d,RegI
0908  2B      		dcx	h
0909          		jrz	sae
0909  2809    		DB	28H,sae-$-1
090B  1A      		ldax	d
090C  D602    		sui	2
090E  12      		stax	d
090F  D0      		rnc
0910  3E18    		mvi	a,nReg-2
0912  12      		stax	d
0913  C9      		ret
		
0914  221420  	sae:	shld	ABUSS
0917  C9      		ret
		
0918          	kpmem:	; switch to memory mode - enter address
0918  AF      		xra	a	; also NC
0919  320720  		sta	DspMod	; display memory...
091C  320620  		sta	DsProt	; periods all on...
091F  211520  		lxi	h,ABUSS+1	; little-endian, enter hi byte first
0922  CD8209  		call	iob
0925  2B      		dcx	h	; HL=low byte of address
0926  0600    		mvi	b,0
0928  B7      		ora	a	; CY=0
0929  CD8209  		call	iob
092C  C9      		ret		; back to start... TODO: prevent re-prompt
		
092D          	kprgm:	; switch to register mode
092D  3E02    		mvi	a,2
092F  320720  		sta	DspMod	; display registers...
0932  AF      		xra	a
0933  320620  		sta	DsProt	; periods all on...
0936  CD400A  		call	keyin
0939  E67F    		ani	01111111b
093B  FE0C    		cpi	(nReg-1)/2	; PC requires spcl
093D          		jrc	reg0
093D  3807    		DB	38H,reg0-$-1
093F  D603    		sub	3		; gap in codes?
0941  FE0C    		cpi	12		; was 15...
0943  C2B307  		jnz	kperr	; TODO: proper handling
0946  07      	reg0:	rlc	; times 2
0947  320520  		sta	RegI
094A  C9      		ret		; back to start... TODO: prevent re-prompt
		
094B          	kpcmd:	; A=keypad command, +80h
			; keypad pressed...
094B  FE8A    		cpi	8ah	; non-digit (hex req first be '0')
094D  D2D300  		jnc	cmchr
0950  47      		mov	b,a
0951  3A0720  		lda	DspMod
0954  0F      		rrc	; CY=alter mode
0955          		jrc	kpalter	; alter mode - numeric values only
0955  3804    		DB	38H,kpalter-$-1
0957  78      		mov	a,b
0958  C3D300  		jmp	cmchr
		; A=DspMod >> 1, B=key
095B          	kpalter:
095B  2A1420  		lhld	ABUSS
095E  0F      		rrc	; register (else memory)
095F          		jrc	kpreg
095F  3809    		DB	38H,kpreg-$-1
0961  37      		stc
0962  CD8209  		call	iob
0965  23      		inx	h
0966  221420  		shld	ABUSS
0969  C9      		ret
		
		; B=key
096A          	kpreg:
096A  3A0520  		lda	RegI
096D  B7      		ora	a
096E  CAB307  		jz	kperr	; RegI == 0 (SP) not allowed
0971  5F      		mov	e,a
0972  1600    		mvi	d,0
0974  2A1D20  		lhld	RegPtr
0977  19      		dad	d
0978  23      		inx	h	; HL=high byte of address
0979  37      		stc
097A  CD8209  		call	iob
097D  2B      		dcx	h	; HL=low byte of address
097E  CD8209  		call	iob
0981  C9      		ret
		
		; Input Octal(or Hex) byte
		; B=key, CY=first digit
0982          	iob:	rarr	c	; save CY => C bit 7
0982  CB19    		DB	0CBH, 18H + c
0984  3A3920  		lda	Radix
0987  B7      		ora	a
0988  78      		mov	a,b
0989          		jrz	ioboct
0989  2820    		DB	28H,ioboct-$-1
		; iobhex - to avoid conflict with cmd keys A-F, first input must be [0]
		; So, hex input requires 3 or 5 + 1 keys.
098B          		ralr	c	; restore CY
098B  CB11    		DB	0CBH, 10H+c
098D  D4400A  		cnc	keyin
0990  E67F    		ani	01111111b
0992  C2B307  		jnz	kperr
0995  1602    		mvi	d,2
0997  CD400A  	iobh0:	call	keyin
099A  E67F    		ani	01111111b
099C  5F      		mov	e,a
099D  7E      		mov	a,m
099E  07      		rlc
099F  07      		rlc
09A0  07      		rlc
09A1  07      		rlc
09A2  E6F0    		ani	11110000b
09A4  B3      		ora	e	; also ensure NC for loop
09A5  77      		mov	m,a
09A6  15      		dcr	d
09A7          		jrnz	iobh0
09A7  20EE    		DB	20H,iobh0-$-1
09A9          		jr	iob0
09A9  181A    		DB	18H,iob0-$-1
09AB          	ioboct:
09AB          		ralr	c	; restore CY
09AB  CB11    		DB	0CBH, 10H+c
09AD  1603    		mvi	d,3
09AF  D4400A  	iobo0:	cnc	keyin
09B2  E67F    		ani	01111111b
09B4  FE08    		cpi	8
09B6  D2B307  		jnc	kperr
09B9  5F      		mov	e,a
09BA  7E      		mov	a,m
09BB  07      		rlc
09BC  07      		rlc
09BD  07      		rlc
09BE  E6F8    		ani	11111000b
09C0  B3      		ora	e	; also ensure NC for loop
09C1  77      		mov	m,a
09C2  15      		dcr	d
09C3          		jrnz	iobo0
09C3  20EA    		DB	20H,iobo0-$-1
09C5          	iob0:
			; TODO: blip to ack entry?
09C5  C9      		ret
		endif
		
		; returns with interrupts disabled
		; preserves DE
09C6          	h17init:
09C6  F3      		di
09C7  DBF2    		in	0f2h
09C9  E603    		ani	00000011b	; port 7C - only one for H17
09CB          		jrnz	h17in0
09CB  2003    		DB	20H,h17in0-$-1
09CD  AF      		xra	a
09CE  D37F    		out	07fh	; avoid this if H17 not configured
09D0  D5      	h17in0:	push	d
09D1  210920  		lxi	h,ctl$F0
09D4  36D0    		mvi	m,11010000b	; !beep, 2mS, !mon, !SI
09D6  215A1F  		lxi	h,R$CONST
09D9  114820  		lxi	d,D$CONST
09DC  015800  		lxi	b,88
09DF          		ldir
09DF  EDB0    		DB	0EDH,0B0H
09E1  6B      		mov	l,e
09E2  62      		mov	h,d
09E3  13      		inx	d
09E4  0E1E    		mvi	c,30
09E6  77      		mov	m,a
09E7          		ldir	; fill l20a0h...
09E7  EDB0    		DB	0EDH,0B0H
09E9  3E07    		mvi	a,7
09EB  211F20  		lxi	h,intvec	; vector area
09EE          	h17ini0:
09EE  36C3    		mvi	m,0c3h
09F0  23      		inx	h
09F1  3662    		mvi	m,LOW (nulint-rst0)
09F3  23      		inx	h
09F4  3600    		mvi	m,HIGH (nulint-rst0)
09F6  23      		inx	h
09F7  3D      		dcr	a
09F8          		jrnz	h17ini0
09F8  20F4    		DB	20H,h17ini0-$-1
09FA  D1      		pop	d
09FB  C9      		ret
		
09FC          	waitcr:
09FC  CD160A  		call	conin
09FF  FE0D    		cpi	CR
0A01          		jrnz	waitcr
0A01  20F9    		DB	20H,waitcr-$-1
0A03          	crlf:
0A03  3E0D    		mvi	a,CR
0A05  CDD803  		call	conout
0A08  3E0A    		mvi	a,LF
0A0A  C3D803  		jmp	conout
		
0A0D          	msgout:
0A0D  7E      		mov	a,m
0A0E  B7      		ora	a
0A0F  C8      		rz
0A10  CDD803  		call	conout
0A13  23      		inx	h
0A14          		jr	msgout
0A14  18F7    		DB	18H,msgout-$-1
		
		; called in the context of a command on console
0A16  DBED    	conin:	in	0edh
0A18  0F      		rrc
0A19          		jrc	conin0
0A19  3811    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A1B  DBDA    		in	0dah	; VDIP1/FT245R status
0A1D  E608    		ani	00001000b	; VDIP1 RxR
0000          	if nofp
		else
0A1F          		jrz	novdip2
0A1F  2802    		DB	28H,novdip2-$-1
0A21  DBD9    		in	0d9h	; flush char
0A23          	novdip2:
0A23  3A3A20  		lda	kpchar
0A26  B7      		ora	a
0A27          		jrz	conin
0A27  28ED    		DB	28H,conin-$-1
			; cancel console cmd, leave keypad char for cmdin
0A29  C3AB00  		jmp	start
		endif
		
0A2C  DBE8    	conin0:	in	0e8h
0A2E  E67F    		ani	07fh
0A30  FE7F    		cpi	DEL	; DEL key restarts from anywhere?
0A32  CA9F00  		jz	re$entry
0A35  C9      		ret
		
		; Pure console input, no tricks
0A36  DBED    	conin1:	in	0edh
0A38  0F      		rrc
0A39          		jrnc	conin1
0A39  30FB    		DB	30H,conin1-$-1
0A3B  DBE8    		in	0e8h
0A3D  E67F    		ani	07fh
0A3F  C9      		ret
		
FFFF          	if not nofp
		; called in the context of command on front-panel
0A40  3A3A20  	keyin:	lda	kpchar
0A43  B7      		ora	a
0A44          		jrnz	getkey
0A44  201B    		DB	20H,getkey-$-1
0A46  DBED    		in	0edh
0A48  0F      		rrc
0A49          		jrnc	keyin
0A49  30F5    		DB	30H,keyin-$-1
			; cancel kaypad cmd, leave console char for cmdin
			; TODO: what modes need reset?
0A4B  C3AB00  		jmp	start
		endif
		
		; wait for command - console or keypad
0A4E          	cmdin:
0A4E  DBED    		in	0edh
0A50  0F      		rrc
0A51          		jrc	conin0
0A51  38D9    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A53  DBDA    		in	0dah	; VDIP1/FT245R status
0A55  E608    		ani	00001000b	; VDIP1 RxR
			; INS8250 IIR always 0
			; 16550 IIR is RxD timeout (?)
			; 16C2550 ISR is RxD timeout (?)
0000          	if nofp
		else
0A57          		jrz	novdip1
0A57  2802    		DB	28H,novdip1-$-1
0A59  DBD9    		in	0d9h	; flush char
0A5B          	novdip1:
0A5B  3A3A20  		lda	kpchar
0A5E  B7      		ora	a
0A5F          		jrz	cmdin
0A5F  28ED    		DB	28H,cmdin-$-1
0A61  F5      	getkey:	push	psw	; A=scan code
0A62  AF      		xra	a
0A63  323A20  		sta	kpchar
0A66  F1      		pop	psw
0A67  EEFE    		xri	11111110b
0A69  0F      		rrc
0A6A          		jrnc	gotkey
0A6A  3004    		DB	30H,gotkey-$-1
0A6C  0F      		rrc
0A6D  0F      		rrc
0A6E  0F      		rrc
0A6F  0F      		rrc
0A70  E60F    	gotkey:	ani	00001111b
0A72  F680    		ori	10000000b	; distinguish from console input
			; TODO: check for CANCEL key?
0A74  C9      		ret
		endif
		
FFFF          	if not nofp
		; keypad check at 32mS
0A75  211620  	kpchk:	lxi	h,RckA
0A78  DBF0    		in	0f0h
0A7A  BE      		cmp	m	; RckA
0A7B          		jrnz	kpchk0
0A7B  2014    		DB	20H,kpchk0-$-1
0A7D  E611    		ani	00010001b
0A7F  FE11    		cpi	00010001b
0A81  C8      		rz	; nothing pressed
0A82  7E      		mov	a,m
			; need to count auto-repeat/debounce
0A83  23      		inx	h	; kpcnt
0A84  35      		dcr	m
0A85  C0      		rnz
			; got a key press...
0A86  323A20  		sta	kpchar
0A89  3610    		mvi	m,rptcnt
0A8B  3E02    		mvi	a,4/2	; 4mS click
0A8D  CDE705  		call	set$horn
0A90  C9      		ret
0A91  77      	kpchk0:	mov	m,a	; RckA
0A92  23      		inx	h	; kpcnt
0A93  3601    		mvi	m,debounce
0A95  C9      		ret
		
		; Update Front-panel Display
		; B=MFlag, destroyed
0A96  3E02    	ufd:	mvi	a,mfl$DDU
0A98  A0      		ana	b
0A99  C0      		rnz		; updates disabled
0A9A  210620  		lxi	h,DsProt
0A9D          		rlcr	m
0A9D  CB06    		DB	0CBH, 00H + m
0A9F  46      		mov	b,m
0AA0  23      		inx	h	; DspMod
0AA1  7E      		mov	a,m
0AA2  E602    		ani	00000010b
0AA4  2A1420  		lhld	ABUSS
0AA7          		jrz	ufd1	; displaying memory
0AA7  2812    		DB	28H,ufd1-$-1
			; displaying registers
0AA9  CD880B  		call	lra	; locate register address offset (DE)
0AAC  E5      		push	h
0AAD  216E0B  		lxi	h,LedRegTbl
0AB0  19      		dad	d
0AB1  7E      		mov	a,m
0AB2  23      		inx	h
0AB3  66      		mov	h,m
0AB4  6F      		mov	l,a
0AB5  E3      		xthl
0AB6  B4      		ora	h
0AB7  7E      		mov	a,m
0AB8  23      		inx	h
0AB9  66      		mov	h,m
0ABA  6F      		mov	l,a
0ABB  F5      	ufd1:	push	psw
0ABC  EB      		xchg
0ABD  210B20  		lxi	h,Aleds
0AC0  7A      		mov	a,d
0AC1  CDDA0A  		call	dod
0AC4  7B      		mov	a,e
0AC5  CDDA0A  		call	dod
0AC8  F1      		pop	psw
0AC9  1A      		ldax	d
0ACA          		jrz	dod	; if displaying memory
0ACA  280E    		DB	28H,dod-$-1
			; displaying register name
0ACC  C1      		pop	b
0ACD  111120  		lxi	d,Dleds
0AD0  2E03    	mv3byt:	mvi	l,3
0AD2  0A      	mvb:	ldax	b
0AD3  12      		stax	d
0AD4  03      		inx	b
0AD5  13      		inx	d
0AD6  2D      		dcr	l
0AD7          		jrnz	mvb
0AD7  20F9    		DB	20H,mvb-$-1
0AD9  C9      		ret
		
		; B=dot flag
0ADA  4F      	dod:	mov	c,a	; value to display
0ADB  3A3920  		lda	Radix
0ADE  B7      		ora	a	; Z if octal (also CY=0)
0ADF  79      		mov	a,c
0AE0          		jrnz	dodhex
0AE0  2021    		DB	20H,dodhex-$-1
0AE2  D5      		push	d
0AE3  0E03    		mvi	c,3
0AE5  17      	dodr5:	ral
0AE6  17      		ral
0AE7  17      		ral
0AE8  F5      		push	psw
0AE9  E607    		ani	07h
0AEB  C6EE    		adi	LOW doddig
0AED  5F      		mov	e,a
0AEE  3E03    		mvi	a,HIGH doddig
0AF0  CE00    		aci	0
0AF2  57      		mov	d,a
0AF3  1A      		ldax	d
0AF4  A8      		xra	b	; DP on/off
0AF5  E67F    		and	01111111b	; why???
0AF7  A8      		xra	b
0AF8  77      		mov	m,a
0AF9  23      		inx	h
0AFA  78      		mov	a,b	; rlcr b
0AFB  07      		rlc
0AFC  47      		mov	b,a
0AFD  F1      		pop	psw
0AFE  0D      		dcr	c
0AFF          		jrnz	dodr5
0AFF  20E4    		DB	20H,dodr5-$-1
0B01  D1      		pop	d
0B02  C9      		ret
		
0B03  D5      	dodhex:	push	d
0B04  0E02    		mvi	c,2
0B06  07      	deh55:	rlc
0B07  07      		rlc
0B08  07      		rlc
0B09  07      		rlc
0B0A  F5      		push	psw
0B0B  E60F    		ani	0fh
0B0D  C6EE    		adi	LOW doddig
0B0F  5F      		mov	e,a
0B10  3E03    		mvi	a,HIGH doddig
0B12  CE00    		aci	0
0B14  57      		mov	d,a
0B15  1A      		ldax	d
0B16  A8      		xra	b		; DP on/off
0B17  E67F    		ani	01111111b	; why???
0B19  A8      		xra	b		; ???
0B1A  77      		mov	m,a
0B1B  23      		inx	h
0B1C          		rlcr	b
0B1C  CB00    		DB	0CBH, 00H + b
0B1E  F1      		pop	psw
0B1F  0D      		dcr	c
0B20          		jrnz	deh55
0B20  20E4    		DB	20H,deh55-$-1
0B22  D1      		pop	d
0B23  3E6F    		mvi	a,01101111b	; "_"
0B25  A8      		xra	b		; DP on/off
0B26  E67F    		ani	01111111b	; why???
0B28  A8      		xra	b		; ???
0B29  77      		mov	m,a
0B2A  23      		inx	h
0B2B  78      		mov	a,b	; rlcr b
0B2C  07      		rlc
0B2D  47      		mov	b,a
0B2E  C9      		ret
		
0B2F  FFA498  	dSP:	db	11111111b,10100100b,10011000b	; " SP"
0B32  FF909C  	dPSW:	db	11111111b,10010000b,10011100b	; " AF"
0B35  FF868D  	dBC:	db	11111111b,10000110b,10001101b	; " BC"
0B38  FFC28C  	dDE:	db	11111111b,11000010b,10001100b	; " DE"
0B3B  FF928F  	dHL:	db	11111111b,10010010b,10001111b	; " HL"
0B3E  FFF3B6  	dIX:	db	11111111b,11110011b,10110110b	; " IX"
0B41  FFF3DE  	dIY:	db	11111111b,11110011b,11011110b	; " IY"
0B44  FFF3D3  	dIR:	db	11111111b,11110011b,11010011b	; " IR"
0B47  909CBF  	dPSWp:	db	10010000b,10011100b,10111111b	; "AF'"
0B4A  868DBF  	dBCp:	db	10000110b,10001101b,10111111b	; "BC'"
0B4D  C28CBF  	dDEp:	db	11000010b,10001100b,10111111b	; "DE'"
0B50  928FBF  	dHLp:	db	10010010b,10001111b,10111111b	; "HL'"
0B53  FF98CE  	dPC:	db	11111111b,10011000b,11001110b	; " PC"
		
0B56  C28C83  	dDev:	db	11000010b,10001100b,10000011b	; "dEU" (dev)
0B59  98C6DE  	dPor:	db	10011000b,11000110b,11011110b	; "Por"
0B5C  83D6F7  	dUni:	db	10000011b,11010110b,11110111b	; "Uni"
0B5F  8CDEDE  	dErr:	db	10001100b,11011110b,11011110b	; "Error "
0B62  C6DEFF  		db	11000110b,11011110b,11111111b
0B65  DE90C2  	dRad:	db	11011110b,10010000b,11000010b	; "rAd"
0B68  98DEDF  	dPri:	db	10011000b,11011110b,11011111b	; "Pri"
0B6B  A48C8D  	dSec:	db	10100100b,10001100b,10001101b	; "SEC"
		
0B6E          	LedRegTbl:
0B6E  2F0B    		dw	dSP	; 0
0B70  320B    		dw	dPSW	; 1
0B72  350B    		dw	dBC	; 2
0B74  380B    		dw	dDE	; 3
0B76  3B0B    		dw	dHL	; 4
0B78  3E0B    		dw	dIX	; 5	- TODO
0B7A  410B    		dw	dIY	; 6	- TODO
0B7C  440B    		dw	dIR	; 7	- TODO
0B7E  470B    		dw	dPSWp	; 8	- TODO
0B80  4A0B    		dw	dBCp	; 9	- TODO
0B82  4D0B    		dw	dDEp	; 10	- TODO
0B84  500B    		dw	dHLp	; 11	- TODO
0B86  530B    		dw	dPC	; 12	- 5
001A          	nReg	equ	$-LedRegTbl	; 2x num registers...
		
0B88  3A0520  	lra:	lda	RegI
0B8B  5F      	lrax:	mov	e,a
0B8C  1600    		mvi	d,0
0B8E  2A1D20  		lhld	RegPtr
0B91  19      		dad	d
0B92  C9      		ret
		
0B93          	mov3dsp:
0B93  2E03    		mvi	l,3
0B95          	movLdsp:
0B95  0A      	md0:	ldax	b
0B96  12      		stax	d
0B97  03      		inx	b
0B98  13      		inx	d
0B99  2D      		dcr	l
0B9A          		jrnz	md0
0B9A  20F9    		DB	20H,md0-$-1
0B9C  C9      		ret
		
0B9D          	clrdisp:
0B9D  210B20  		lxi	h,fpLeds
0BA0  5D      		mov	e,l
0BA1  54      		mov	d,h
0BA2  010800  		lxi	b,9-1
0BA5  36FF    		mvi	m,11111111b
0BA7  13      		inx	d
0BA8          		ldir
0BA8  EDB0    		DB	0EDH,0B0H
0BAA  C9      		ret
		
		; Front panel display refresh and keypad check
0BAB          	int1$fp:
0BAB  0E00    		mvi	c,0
0BAD  213C20  		lxi	h,horn
0BB0  7E      		mov	a,m
0BB1  B7      		ora	a
0BB2          		jrz	fp1
0BB2  2805    		DB	28H,fp1-$-1
0BB4  35      		dcr	m
0BB5          		jrnz	fp1
0BB5  2002    		DB	20H,fp1-$-1
0BB7  0E80    		mvi	c,10000000b	; beep off
0BB9          	fp1:
0BB9  210820  		lxi	h,MFlag
0BBC  46      		mov	b,m
0BBD  23      		inx	h	; ctl$F0
0BBE  7E      		mov	a,m
0BBF  B1      		ora	c	; beep off bit
0BC0  77      		mov	m,a
0BC1          		bit	6,b	; refresh display?
0BC1  CB70    		DB	0CBH,6*8+b+40H
0BC3          		jrnz	fp3
0BC3  200B    		DB	20H,fp3-$-1
0BC5  23      		inx	h	; Refind
0BC6  35      		dcr	m
0BC7          		jrnz	fp2
0BC7  2002    		DB	20H,fp2-$-1
0BC9  3609    		mvi	m,9
0BCB  5E      	fp2:	mov	e,m	; 1-9
0BCC  1600    		mvi	d,0
0BCE  19      		dad	d	; HL = &fpLeds[E-1]
0BCF  B3      		ora	e	; merge digit select
0BD0          	fp3:
0BD0  D3F0    		out	0f0h
0BD2  7E      		mov	a,m	; FP segments (fpLeds[E-1])
0BD3  D3F1    		out	0f1h
			; See if time to update display values or check keypad
0BD5  2E1B    		mvi	l,LOW ticcnt
0BD7  7E      		mov	a,m
0BD8  F5      		push	psw
0BD9  E61F    		ani	31	; 64mS
0BDB  CC960A  		cz	ufd	; B=MFlag, destroyed
0BDE  F1      		pop	psw
0BDF  E60F    		ani	15	; 32mS
0BE1  CC750A  		cz	kpchk
		endif
0BE4          	int1$xx:
			; not really FP related, but no space in low ROM...
0BE4  3A0820  		lda	MFlag
0BE7  0F      		rrc		; mfl$CLK private int1?
0BE8  DC1F20  		cc	vrst1
0BEB  C34D00  		jmp	intret
		
		; match module by character (letter)
		; C=letter, B=00:cmd,ff:boot
0BEE          	bfchr:	ldx	a,+2	; phy drv or type
0BEE  DD7E02  		DB	0DDH,a*8+46H,+2
0BF1  D6C8    		sui	200	; boot modules < 200
0BF3  9F      		sbb	a	; ff=boot, 00=cmd
0BF4  B8      		cmp	b	; ZR=match
0BF5          		jrnz	bfn0
0BF5  2023    		DB	20H,bfn0-$-1
0BF7          		ldx	a,mdchr
0BF7  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0BFA  B9      		cmp	c
0BFB  C9      		ret
		
		; match module by FP key
		; C=FP key, B=00:cmd,ff:boot
0BFC          	bfkey:	ldx	a,+2	; phy drv or type
0BFC  DD7E02  		DB	0DDH,a*8+46H,+2
0BFF  D6C8    		sui	200	; boot modules < 200
0C01  9F      		sbb	a	; ff=boot, 00=cmd
0C02  B8      		cmp	b	; ZR=match
0C03          		jrnz	bfn0
0C03  2015    		DB	20H,bfn0-$-1
0C05          		ldx	a,mdkey
0C05  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C08  B9      		cmp	c
0C09  C9      		ret
		
		; match boot module by phy drv number
		; C=phy drv (base), B=type
		; Only for boot modules
0C0A          	bfnum:	ldx	a,mdbase	; phy drv or type
0C0A  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C0D  FEC8    		cpi	200	; boot modules < 200
0C0F          		jrnc	bfn0	; skip if >= 200
0C0F  3009    		DB	30H,bfn0-$-1
0C11  79      		mov	a,c
0C12          		subx	mdbase
0C12  DD9602  		DB	0DDH,96H,mdbase
0C15  B7      		ora	a
0C16          		jrnz	bfn0
0C16  2002    		DB	20H,bfn0-$-1
0C18  AF      		xra	a
0C19  C9      		ret
0C1A  AF      	bfn0:	xra	a
0C1B  3C      		inr	a
0C1C  C9      		ret
		
		; List only boot modules
		; On first module, C=0
0C1D          	bflst:	ldx	a,mdbase	; phy drv or type
0C1D  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C20  FEC8    		cpi	200	; boot modules < 200
0C22          		jrnc	bfn0
0C22  30F6    		DB	30H,bfn0-$-1
0C24  79      		mov	a,c
0C25  B7      		ora	a
0C26  3E2C    		mvi	a,','
0C28  C4D803  		cnz	conout
0C2B  0C      		inr	c
0C2C  78      		mov	a,b
0C2D          		subx	mdbase
0C2D  DD9602  		DB	0DDH,96H,mdbase
0C30  B7      		ora	a
0C31  3E2A    		mvi	a,'*'
0C33  CCD803  		cz	conout
0C36          		pushix
0C36  DDE5    		DB	0DDH,0E5H
0C38  E1      		pop	h
0C39  111000  		lxi	d,mdname
0C3C  19      		dad	d
0C3D  CD0D0A  		call	msgout
0C40  211D0C  		lxi	h,bflst
0C43          		jr	bfn0	; NZ - keep going
0C43  18D5    		DB	18H,bfn0-$-1
		
		; List only boot modules
0C45          	bfllst:	ldx	a,mdbase	; phy drv or type
0C45  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C48  FEC8    		cpi	200	; boot modules < 200
0C4A          		jrnc	bfn0
0C4A  30CE    		DB	30H,bfn0-$-1
0C4C  78      		mov	a,b
0C4D          		subx	mdbase
0C4D  DD9602  		DB	0DDH,96H,mdbase
0C50  B7      		ora	a
0C51  3E20    		mvi	a,' '
0C53          		jrnz	bfll2
0C53  2002    		DB	20H,bfll2-$-1
0C55  3E2A    		mvi	a,'*'
0C57  CDD803  	bfll2:	call	conout
0C5A          		pushix
0C5A  DDE5    		DB	0DDH,0E5H
0C5C  E1      		pop	h
0C5D  111000  		lxi	d,mdname
0C60  19      		dad	d
0C61  CD0D0A  		call	msgout
0C64  3E09    		mvi	a,TAB
0C66  CDD803  		call	conout
0C69          		ldx	a,mdchr
0C69  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C6C  CDD803  		call	conout
0C6F  3E20    		mvi	a,' '
0C71  CDD803  		call	conout
0C74          		ldx	a,mdkey
0C74  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C77  C630    		adi	'0'
0C79          		jrnc	bfll0
0C79  3002    		DB	30H,bfll0-$-1
0C7B  3E2D    		mvi	a,'-'
0C7D  CDD803  	bfll0:	call	conout
0C80  3E20    		mvi	a,' '
0C82  CDD803  		call	conout
0C85          		ldx	a,mdbase
0C85  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C88  CDF50C  		call	decout
0C8B  CD030A  		call	crlf
0C8E  21450C  		lxi	h,bfllst
0C91  AF      		xra	a	; NZ - keep going
0C92  3C      		inr	a	;
0C93  C9      		ret
		
		; Find boot module and load into 1000h if necessary.
		; HL=match function: returns Z if found, BC=target, IX=module
		; Return CY at end of modules (not found)
		; Return IX=loaded module (run location)
		; Must preserve BC during search loop.
0C94          	bfind:
			; can't check if it's loaded until we know where it's loaded...
			; first, check if already loaded
			;lxix	btovl
			;call	icall
			;rz
0C94          	bfind0:
FFFF          	if z180
			; map ROM F8000 into 4000
0C94  3EF4    		mvi	a,0f8h-04h
0C96          		out0	a,mmu$bbr
0C96  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0C99          		lxix	btmods	; start of modules...
0C99  DD21    		DB	0DDH,21H
0C9B  0060    		DW	btmods
0C9D  CD4201  	bf0:	call	icall
0CA0          		jrz	bf9
0CA0  281E    		DB	28H,bf9-$-1
0CA2          		ldx	d,mdpgs
0CA2  DD5600  		DB	0DDH,d*8+46H,mdpgs
0CA5  1E00    		mvi	e,0
0CA7          		dadx	d
0CA7  DD19    		DB	0DDH,d*8+09H
0CA9          		pushix
0CA9  DDE5    		DB	0DDH,0E5H
0CAB  F1      		pop	psw	; A=IXh
0CAC  FEC0    		cpi	HIGH bterom	; end of ROM
0CAE          		jrnc	bf1
0CAE  300A    		DB	30H,bf1-$-1
0CB0          		ldx	a,mdpgs
0CB0  DD7E00  		DB	0DDH,a*8+46H,mdpgs
0CB3  B7      		ora	a
0CB4          		jrz	bf1
0CB4  2804    		DB	28H,bf1-$-1
0CB6  FEFF    		cpi	0ffh
0CB8          		jrnz	bf0
0CB8  20E3    		DB	20H,bf0-$-1
0CBA          	bf1:
FFFF          	if z180
0CBA  AF      		xra	a
0CBB          		out0	a,mmu$bbr
0CBB  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0CBE  37      		stc	; CY = end of list (not found)
0CBF  C9      		ret
		
0CC0          	bf9:	; match found, now load into place and init
0CC0          		ldx	b,mdpgs
0CC0  DD4600  		DB	0DDH,b*8+46H,mdpgs
0CC3          		ldx	d,mdorg
0CC3  DD5601  		DB	0DDH,d*8+46H,mdorg
0CC6          		pushix		;
0CC6  DDE5    		DB	0DDH,0E5H
0CC8  E1      		pop	h	; HL=IX (module in logical addr)
0CC9  1E00    		mvi	e,0
0CCB  0E00    		mvi	c,0
0CCD  D5      		push	d
FFFF          	if z180
FFFF          	if use$dma
0CCE  7C      		mov	a,h	; L should (must) be 00... also E...
0CCF  D640    		sui	40h	; remove offset of mapping @ 4000h
0CD1  C680    		adi	80h	; low byte of 0f80h ROM page addr
0CD3  6F      		mov	l,a
0CD4  3E0F    		mvi	a,0fh	; hi byte of 0f80h ROM page addr
0CD6  CE00    		aci	0
0CD8  67      		mov	h,a	; HL=ROM phy addr
0CD9  5A      		mov	e,d	; shift dest addr into page addr
0CDA  1600    		mvi	d,0	; always in low memory?
0CDC  CD2306  		call	dmacpy
		else
		endif
		else
		endif
0CDF          		popix	; module load addr
0CDF  DDE1    		DB	0DDH,0E1H
			; now call init routine... but must restore RAM...
FFFF          	if z180
0CE1  AF      		xra	a
0CE2          		out0	a,mmu$bbr
0CE2  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
		else
		endif
0CE5  CDE90C  		call	btinit	; CY indicates error, pass along...
0CE8  C9      		ret
		
		; IX=module in real memory
0CE9          	btinit:	pushix
0CE9  DDE5    		DB	0DDH,0E5H
0CEB  E1      		pop	h
0CEC  2E04    		mvi	l,mdinit
0CEE  E9      		pchl
		
		; IX=module in real memory
0CEF          	cmexec:
0CEF          	btboot:	pushix
0CEF  DDE5    		DB	0DDH,0E5H
0CF1  E1      		pop	h
0CF2  2E07    		mvi	l,mdboot
0CF4  E9      		pchl
		
		; assume < 100
0CF5          	decout:
0CF5  1630    		mvi	d,'0'
0CF7          	decot0:
0CF7  D60A    		sui	10
0CF9  DA000D  		jc	decot1
0CFC  14      		inr	d
0CFD  C3F70C  		jmp	decot0
0D00          	decot1:
0D00  C60A    		adi	10
0D02  C630    		adi	'0'
0D04  F5      		push	psw
0D05  7A      		mov	a,d
0D06  CDD803  		call	conout
0D09  F1      		pop	psw
0D0A  C3D803  		jmp	conout
		
		; Returns NZ if found, D=phy drv
0D0D          	gtdvtb:
0D0D  DBF2    		in	0f2h
0D0F  E670    		ani	01110000b	; default boot device
0D11  07      		rlc
0D12  07      		rlc
0D13  07      		rlc
0D14  07      		rlc
0D15  21B10D  		lxi	h,defbt
0D18          	gtdvtb0:
0D18  85      		add	l
0D19  6F      		mov	l,a
0D1A  3E00    		mvi	a,0
0D1C  8C      		adc	h
0D1D  67      		mov	h,a
0D1E  56      		mov	d,m	; might be FF or FE
0D1F  C9      		ret
		
0D20          	A$boot:
0D20  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D23  7A      		mov	a,d
0D24  FEFF    		cpi	0ffh
0D26  CA1C02  		jz	s501er
0D29  FEFE    		cpi	0feh
0D2B          		jrnz	findit
0D2B  200D    		DB	20H,findit-$-1
0D2D  2104F8  		lxi	h,susave+dpdev
0D30  7E      		mov	a,m
0D31  23      		inx	h
0D32  FEFF    		cpi	0ffh
0D34  CA1C02  		jz	s501er	; not setup
0D37  C3A802  		jmp	gotit1
0D3A          	findit:
0D3A  D5      		push	d
0D3B  C5      		push	b
0D3C  4A      		mov	c,d
0D3D  06FF    		mvi	b,-1	; boot modules only
0D3F  210A0C  		lxi	h,bfnum
0D42  CD940C  		call	bfind
0D45  C1      		pop	b
0D46  D1      		pop	d
0D47  DA1C02  		jc	s501er
0D4A  CDC802  		call	vfport
0D4D  DA1C02  		jc	s501er
0D50  C3BF02  		jmp	gotit
		
		; default boot selected from console
0D53          	dfboot:
0D53  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D56  7A      		mov	a,d
0D57  FEFF    		cpi	0ffh
0D59  CABE01  		jz	error
0D5C  FEFE    		cpi	0feh
0D5E  C23A02  		jnz	gotnum
0D61  2104F8  		lxi	h,susave+dpdev
0D64  CD710D  		call	dfboot0
0D67  DABE01  		jc	error
0D6A  B7      		ora	a
0D6B  C2BE01  		jnz	error
0D6E  C30B03  		jmp	goboot
		
0D71          	dfboot0:	; HL=setup data for pri or sec
0D71  7E      		mov	a,m
0D72  23      		inx	h
0D73  FEFF    		cpi	0ffh
0D75  C8      		rz		; A <> 0: not setup
0D76  E5      		push	h
0D77  4F      		mov	c,a
0D78  06FF    		mvi	b,-1	; boot modules only
0D7A  21EE0B  		lxi	h,bfchr
0D7D  CD940C  		call	bfind
0D80  E1      		pop	h
0D81  D8      		rc		; CY: no module - error
0D82  CDC802  		call	vfport
0D85  D8      		rc		; CY: SW501 error
0D86          		ldx	d,mdbase
0D86  DD5602  		DB	0DDH,d*8+46H,mdbase
0D89  7E      		mov	a,m
0D8A  23      		inx	h
0D8B  FEFF    		cpi	0ffh
0D8D          		jrnz	dfbt0
0D8D  2001    		DB	20H,dfbt0-$-1
0D8F  AF      		xra	a
0D90          	dfbt0:	cmpx	mdluns
0D90  DDBE03  		DB	0DDH,0BEH,mdluns
0D93  3F      		cmc
0D94  D8      		rc
0D95  5F      		mov	e,a	; DE=phy drv base,unit
0D96  7E      		mov	a,m
0D97  FEFF    		cpi	0ffh	; no string?
0D99          		jrz	dfbt2
0D99  2814    		DB	28H,dfbt2-$-1
0D9B  D5      		push	d
0D9C  118122  		lxi	d,bootbf+1	; len in +0...
0D9F  0E00    		mvi	c,0
0DA1  7E      	dfbt1:	mov	a,m
0DA2  12      		stax	d
0DA3  23      		inx	h
0DA4  13      		inx	d
0DA5  0C      		inr	c
0DA6  B7      		ora	a
0DA7          		jrnz	dfbt1
0DA7  20F8    		DB	20H,dfbt1-$-1
0DA9  79      		mov	a,c
0DAA  3D      		dcr	a
0DAB  328022  		sta	bootbf
0DAE  D1      		pop	d
0DAF  AF      	dfbt2:	xra	a	; A=0: ready to boot
0DB0  C9      		ret
		
0DB1          	defbt:	; default boot table... port F2 bits 01110000b
0DB1  21      		db	33	; -000---- MMS 5" floppy 0
0DB2  1D      		db	29	; -001---- MMS 8" floppy 0
0DB3  FF      		db	0ffh	; -010---- n/a  (port 7CH)
0DB4  FF      		db	0ffh	; -011---- n/a  (port 78H)
0DB5  29      		db	41	; -100---- VDIP1
0DB6  46      		db	70	; -101---- GIDE disk part 0
0DB7  3C      		db	60	; -110---- Network
0DB8  FE      		db	0feh	; -111---- use setup primary
		
FFFF          	if z180
		; TODO: preserve CPU regs for debug/front-panel
		; (by the time we reach intsetup, everything is trashed)
0DB9          	trap:
0DB9  E1      		pop	h
0DBA  2B      		dcx	h
0DBB          		bit	6,a
0DBB  CB77    		DB	0CBH,6*8+a+40H
0DBD          		jrz	trap0
0DBD  2801    		DB	28H,trap0-$-1
0DBF  2B      		dcx	h
0DC0          	trap0:
0DC0  47      		mov	b,a
0DC1  3EFF    		mvi	a,1111$1111b
0DC3          		out0	a,mmu$cbar
0DC3  ED393A  		DB	0EDH, a*8+01H, mmu$cbar
0DC6  AF      		xra	a
0DC7          		out0	a,mmu$cbr
0DC7  ED3938  		DB	0EDH, a*8+01H, mmu$cbr
0DCA          		out0	a,mmu$bbr
0DCA  ED3939  		DB	0EDH, a*8+01H, mmu$bbr
0DCD  31FFFF  		lxi	sp,0ffffh
0DD0  E5      		push	h
0DD1  78      		mov	a,b
0DD2  E67F    		ani	01111111b	; reset TRAP
0DD4          		out0	a,itc
0DD4  ED3934  		DB	0EDH, a*8+01H, itc
0DD7  21E70D  		lxi	h,trpms
0DDA  CD0D0A  		call	msgout
0DDD  E1      		pop	h
0DDE  CD5404  		call	adrout
0DE1  CD030A  		call	crlf
0DE4  C34B03  		jmp	init0
		
0DE7  0D0A2A2A	trpms:	db	CR,LF,'*** TRAP ',TRM
      2A205452
      41502000
		endif
		
FFFF          	if z180
0DF3          	savram:	; TODO: implement this w/o DMAC?
0DF3  210000  		lxi	h,000h	; save from 00000h
0DF6  110003  		lxi	d,300h	; save into 30000h
0DF9  010040  		lxi	b,16*1024	; save all 16K
0DFC  CD2306  		call	dmacpy
0DFF  C9      		ret
		else
		endif
		
0E00  3600    	linix:	mvi	m,0	; terminate buffer
0E02  C9      		ret
		
		; input a line from console, allow backspace
		; HL=buffer (size 128)
		; returns B=num chars, 128 max (never is 0c3h)
0E03          	linin:
0E03  0600    		mvi	b,0	; count chars
0E05  CD160A  	lini0	call	conin	; handles DEL (cancel)
0E08  FE0D    		cpi	CR
0E0A          		jrz	linix
0E0A  28F4    		DB	28H,linix-$-1
0E0C  FE08    		cpi	BS
0E0E          		jrz	backup
0E0E  281C    		DB	28H,backup-$-1
0E10  FE20    		cpi	' '
0E12          		jrc	chrnak
0E12  3811    		DB	38H,chrnak-$-1
0E14  FE7F    		cpi	'~'+1
0E16          		jrnc	chrnak
0E16  300D    		DB	30H,chrnak-$-1
0E18  77      	chrok:	mov	m,a
0E19  23      		inx	h
0E1A  04      		inr	b
0E1B  FA230E  		jm	chrovf	; 128 chars max
0E1E  CDD803  		call	conout
0E21          		jr	lini0
0E21  18E2    		DB	18H,lini0-$-1
0E23  2B      	chrovf:	dcx	h
0E24  05      		dcr	b
0E25  3E07    	chrnak:	mvi	a,BEL
0E27  CDD803  		call	conout
0E2A          		jr	lini0
0E2A  18D9    		DB	18H,lini0-$-1
0E2C          	backup:
0E2C  78      		mov	a,b
0E2D  B7      		ora	a
0E2E          		jrz	lini0
0E2E  28D5    		DB	28H,lini0-$-1
0E30  05      		dcr	b
0E31  2B      		dcx	h
0E32  3E08    		mvi	a,BS
0E34  CDD803  		call	conout
0E37  3E20    		mvi	a,' '
0E39  CDD803  		call	conout
0E3C  3E08    		mvi	a,BS
0E3E  CDD803  		call	conout
0E41          		jr	lini0
0E41  18C2    		DB	18H,lini0-$-1
		
		; Used during entry of LUN in boot command.
		; multiply E by 16, check for >= (IX+mdnum) (or overflow)
		; add in A (converted to binary).
		; IX=active boot module
		; Returns CY on overflow, else E updated to new LUN value
0E43          	E$x16$A:
0E43  43      		mov	b,e
0E44          		ralr	b
0E44  CB10    		DB	0CBH, 10H+b
0E46  D8      		rc
0E47          		ralr	b
0E47  CB10    		DB	0CBH, 10H+b
0E49  D8      		rc
0E4A          		ralr	b
0E4A  CB10    		DB	0CBH, 10H+b
0E4C  D8      		rc
0E4D          		ralr	b
0E4D  CB10    		DB	0CBH, 10H+b
0E4F  D8      		rc
0E50  F5      		push	psw
0E51  D630    		sui	'0'
0E53  FE0A    		cpi	9+1
0E55          		jrc	ex16a0
0E55  3802    		DB	38H,ex16a0-$-1
0E57  D607    		sui	'A'-'0'-10
0E59  80      	ex16a0:	add	b	; never CY
0E5A          		cmpx	mdluns	; might be 0ffh
0E5A  DDBE03  		DB	0DDH,0BEH,mdluns
0E5D          		jrc	ex16a1	; value OK
0E5D  3803    		DB	38H,ex16a1-$-1
0E5F  F1      		pop	psw
0E60  37      		stc
0E61  C9      		ret
0E62  5F      	ex16a1:	mov	e,a
0E63  F1      		pop	psw
0E64  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Dump command
0E65          	cmddmp:
0E65  210907  		lxi	h,dmpms
0E68  CD0D0A  		call	msgout
0E6B  211420  		lxi	h,ABUSS
0E6E  B7      		ora	a	; NC
0E6F  160D    		mvi	d,CR
0E71  CDFE03  		call	adrin
0E74  EB      		xchg	; HL=adr
0E75  0608    		mvi	b,8	; 8 lines (one half page, 128 bytes)
0E77  C5      	dmp0:	push	b
0E78  CD5104  		call	adrnl	; CR,LF,"AAAA " (HL=AAAA)
0E7B  E5      		push	h
0E7C  0610    		mvi	b,16
0E7E  7E      	dmp1:	mov	a,m
0E7F  CD6104  		call	hexout
0E82  CD5C04  		call	spout
0E85  23      		inx	h
0E86          		djnz	dmp1
0E86  10F6    		DB	10H,dmp1-$-1
0E88  E1      		pop	h
0E89  0610    		mvi	b,16
0E8B  7E      	dmp2:	mov	a,m
0E8C  FE20    		cpi	' '
0E8E          		jrc	dmp3
0E8E  3804    		DB	38H,dmp3-$-1
0E90  FE7F    		cpi	'~'+1
0E92          		jrc	dmp4
0E92  3802    		DB	38H,dmp4-$-1
0E94  3E2E    	dmp3:	mvi	a,'.'
0E96  CDD803  	dmp4:	call	conout
0E99  23      		inx	h
0E9A          		djnz	dmp2
0E9A  10EF    		DB	10H,dmp2-$-1
0E9C  C1      		pop	b
0E9D          		djnz	dmp0
0E9D  10D8    		DB	10H,dmp0-$-1
0E9F  221420  		shld	ABUSS
0EA2  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; List available boot modules
0EA3  21B60E  	cmdlb:	lxi	h,lbmsg
0EA6  CD0D0A  		call	msgout
0EA9  CDF801  		call	gtdfbt
0EAC  42      		mov	b,d
0EAD  211D0C  		lxi	h,bflst
0EB0  0E00    		mvi	c,0
0EB2  CD940C  		call	bfind0
0EB5  C9      		ret
		
0EB6  69737420	lbmsg:	db	'ist boot modules',CR,LF,0
      626F6F74
      206D6F64
      756C6573
      0D0A00
0EC9  656C7020	hbmsg:	db	'elp boot',CR,LF,0
      626F6F74
      0D0A00
0ED4  5072693A	hbmsg2:	db	'Pri: ',0
      2000
FFFF          	if not nofp
0EDA  5365633A	hbmsg3:	db	'Sec: ',0
      2000
		endif
		
		; Help boot command
0EE0  21C90E  	cmdhb:	lxi	h,hbmsg
0EE3  CD0D0A  		call	msgout
0EE6  CDF801  		call	gtdfbt
0EE9  42      		mov	b,d
0EEA  21450C  		lxi	h,bfllst
0EED  CD940C  		call	bfind0
			; Now display primary/secondary configs
0EF0  21D40E  		lxi	h,hbmsg2
0EF3  1104F8  		lxi	d,susave+dpdev
0EF6  DBF2    		in	0f2h
0EF8  E670    		ani	01110000b	; default boot device
0EFA  FE70    		cpi	01110000b	; use setup cfg?
0EFC  3E2A    		mvi	a,'*'
0EFE          		jrz	cmdhb6
0EFE  2802    		DB	28H,cmdhb6-$-1
0F00  3E20    		mvi	a,' '
0F02  CD110F  	cmdhb6:	call	cmdhbx
FFFF          	if not nofp
0F05  21DA0E  		lxi	h,hbmsg3
0F08  1186F8  		lxi	d,susave+dsdev
0F0B  3E20    		mvi	a,' '	; never the default
0F0D  CD110F  		call	cmdhbx
		endif
0F10  C9      		ret
		
0F11  CDD803  	cmdhbx:	call	conout
0F14  CD0D0A  		call	msgout
0F17  1A      		ldax	d
0F18  13      		inx	d
0F19  FEFF    		cpi	0ffh
0F1B          		jrnz	cmdhb0
0F1B  2002    		DB	20H,cmdhb0-$-1
0F1D  3E2D    		mvi	a,'-'
0F1F  CDD803  	cmdhb0:	call	conout
0F22  3E20    		mvi	a,' '
0F24  CDD803  		call	conout
0F27  1A      		ldax	d
0F28  13      		inx	d
0F29  C630    		adi	'0'	; FF=2F,CY
0F2B          		jrnc	cmdhb1
0F2B  3002    		DB	30H,cmdhb1-$-1
0F2D  3E2D    		mvi	a,'-'
0F2F  CDD803  	cmdhb1:	call	conout
0F32  3E20    		mvi	a,' '
0F34  CDD803  		call	conout
0F37  1A      		ldax	d
0F38  FEFF    		cpi	0ffh
0F3A          		jrnz	cmdhb2
0F3A  2007    		DB	20H,cmdhb2-$-1
0F3C  3E2D    		mvi	a,'-'
0F3E  CDD803  		call	conout
0F41          		jr	cmdhb3
0F41  1804    		DB	18H,cmdhb3-$-1
0F43  EB      	cmdhb2:	xchg
0F44  CD0D0A  		call	msgout
0F47  CD030A  	cmdhb3:	call	crlf
0F4A  C9      		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; eXtended command set
0F4B          	cmdx:
0F4B  CD160A  		call	conin	; get actual command character
0F4E  F620    		ori	00100000b	; lower case
0F50  FE61    		cpi	'a'
0F52          		jrc	cmxerr
0F52  381D    		DB	38H,cmxerr-$-1
0F54  FE7B    		cpi	'z'+1
0F56          		jrnc	cmxerr
0F56  3019    		DB	30H,cmxerr-$-1
0F58  323B20  		sta	lstcmd
			; would like to re-use nocmd, but error path is wrong...
0F5B  4F      		mov	c,a
0F5C  0600    		mvi	b,0	; no boot modules
0F5E  21EE0B  		lxi	h,bfchr
0F61  CD940C  		call	bfind
0F64          		jrc	cmxerr
0F64  380B    		DB	38H,cmxerr-$-1
0F66  3A3B20  		lda	lstcmd
0F69  E65F    		ani	01011111b	; upper case echo
0F6B  CDD803  		call	conout
0F6E  C3EF0C  		jmp	cmexec
		
0F71  CDD603  	cmxerr:	call	belout
0F74          		jr	cmdx
0F74  18D5    		DB	18H,cmdx-$-1
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Print ROM version command
0F76          	prtver:
0F76  21830F  		lxi	h,versms
0F79  CD0D0A  		call	msgout
0F7C  21A90F  		lxi	h,vernum
0F7F  CD0D0A  		call	msgout
0F82  C9      		ret
		
0F83  65727369	versms:	db	'ersion ',TRM
      6F6E2000
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		; code required to return to monitor from stand-alone programs.
0F8B          	retmon:
0F8B  F3      		di
0F8C  AF      		xra	a	; reset state of ctl port
0F8D  D3F2    		out	0f2h
FFFF          	if not nofp
0F8F  3EDF    		mvi	a,0dfh	; reset state of FP port 0
0F91  D3F0    		out	0f0h
		endif
0F93  C30000  		jmp	0
		
0F96  0D0A4838	signon:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
0F9A  20      		db	' '
FFFF          	if z180
0F9B  5A313830		db	'Z180 '
      20
		endif
0FA0  4D6F6E69		db	'Monitor v'
      746F7220
      76
0FA9  322E30  	vernum:	db	(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0'
0000          	if alpha
		endif
0019          	if beta
0FAC  28626574		db	'(beta'
      61
0001          	if beta > 9
0FB1  32      		db	(beta/10)+'0'
		endif
0FB2  3529    		db	(beta MOD 10)+'0',')'
		endif
0FB4  0D0A00  		db	CR,LF,TRM
		
			rept	1000h-$-2
0FB7  FF      		db	0ffh
0FB8  FF      		db	0ffh
0FB9  FF      		db	0ffh
0FBA  FF      		db	0ffh
0FBB  FF      		db	0ffh
0FBC  FF      		db	0ffh
0FBD  FF      		db	0ffh
0FBE  FF      		db	0ffh
0FBF  FF      		db	0ffh
0FC0  FF      		db	0ffh
0FC1  FF      		db	0ffh
0FC2  FF      		db	0ffh
0FC3  FF      		db	0ffh
0FC4  FF      		db	0ffh
0FC5  FF      		db	0ffh
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC  FF      		db	0ffh
0FFD  FF      		db	0ffh
0FFE  80F1    		dw	pcode	; product code for system
0000          	if	($ <> 1000h)
		endif
		
		; module overlay area starts here...
		; ensure this does not match any...
1000  FFFF    		dw	-1
1002  0000    		db	0,0
		
			rept	1800h-$
1004  FF      		db	0ffh
1005  FF      		db	0ffh
1006  FF      		db	0ffh
1007  FF      		db	0ffh
1008  FF      		db	0ffh
1009  FF      		db	0ffh
100A  FF      		db	0ffh
100B  FF      		db	0ffh
100C  FF      		db	0ffh
100D  FF      		db	0ffh
100E  FF      		db	0ffh
100F  FF      		db	0ffh
1010  FF      		db	0ffh
1011  FF      		db	0ffh
1012  FF      		db	0ffh
1013  FF      		db	0ffh
1014  FF      		db	0ffh
1015  FF      		db	0ffh
1016  FF      		db	0ffh
1017  FF      		db	0ffh
1018  FF      		db	0ffh
1019  FF      		db	0ffh
101A  FF      		db	0ffh
101B  FF      		db	0ffh
101C  FF      		db	0ffh
101D  FF      		db	0ffh
101E  FF      		db	0ffh
101F  FF      		db	0ffh
1020  FF      		db	0ffh
1021  FF      		db	0ffh
1022  FF      		db	0ffh
1023  FF      		db	0ffh
1024  FF      		db	0ffh
1025  FF      		db	0ffh
1026  FF      		db	0ffh
1027  FF      		db	0ffh
1028  FF      		db	0ffh
1029  FF      		db	0ffh
102A  FF      		db	0ffh
102B  FF      		db	0ffh
102C  FF      		db	0ffh
102D  FF      		db	0ffh
102E  FF      		db	0ffh
102F  FF      		db	0ffh
1030  FF      		db	0ffh
1031  FF      		db	0ffh
1032  FF      		db	0ffh
1033  FF      		db	0ffh
1034  FF      		db	0ffh
1035  FF      		db	0ffh
1036  FF      		db	0ffh
1037  FF      		db	0ffh
1038  FF      		db	0ffh
1039  FF      		db	0ffh
103A  FF      		db	0ffh
103B  FF      		db	0ffh
103C  FF      		db	0ffh
103D  FF      		db	0ffh
103E  FF      		db	0ffh
103F  FF      		db	0ffh
1040  FF      		db	0ffh
1041  FF      		db	0ffh
1042  FF      		db	0ffh
1043  FF      		db	0ffh
1044  FF      		db	0ffh
1045  FF      		db	0ffh
1046  FF      		db	0ffh
1047  FF      		db	0ffh
1048  FF      		db	0ffh
1049  FF      		db	0ffh
104A  FF      		db	0ffh
104B  FF      		db	0ffh
104C  FF      		db	0ffh
104D  FF      		db	0ffh
104E  FF      		db	0ffh
104F  FF      		db	0ffh
1050  FF      		db	0ffh
1051  FF      		db	0ffh
1052  FF      		db	0ffh
1053  FF      		db	0ffh
1054  FF      		db	0ffh
1055  FF      		db	0ffh
1056  FF      		db	0ffh
1057  FF      		db	0ffh
1058  FF      		db	0ffh
1059  FF      		db	0ffh
105A  FF      		db	0ffh
105B  FF      		db	0ffh
105C  FF      		db	0ffh
105D  FF      		db	0ffh
105E  FF      		db	0ffh
105F  FF      		db	0ffh
1060  FF      		db	0ffh
1061  FF      		db	0ffh
1062  FF      		db	0ffh
1063  FF      		db	0ffh
1064  FF      		db	0ffh
1065  FF      		db	0ffh
1066  FF      		db	0ffh
1067  FF      		db	0ffh
1068  FF      		db	0ffh
1069  FF      		db	0ffh
106A  FF      		db	0ffh
106B  FF      		db	0ffh
106C  FF      		db	0ffh
106D  FF      		db	0ffh
106E  FF      		db	0ffh
106F  FF      		db	0ffh
1070  FF      		db	0ffh
1071  FF      		db	0ffh
1072  FF      		db	0ffh
1073  FF      		db	0ffh
1074  FF      		db	0ffh
1075  FF      		db	0ffh
1076  FF      		db	0ffh
1077  FF      		db	0ffh
1078  FF      		db	0ffh
1079  FF      		db	0ffh
107A  FF      		db	0ffh
107B  FF      		db	0ffh
107C  FF      		db	0ffh
107D  FF      		db	0ffh
107E  FF      		db	0ffh
107F  FF      		db	0ffh
1080  FF      		db	0ffh
1081  FF      		db	0ffh
1082  FF      		db	0ffh
1083  FF      		db	0ffh
1084  FF      		db	0ffh
1085  FF      		db	0ffh
1086  FF      		db	0ffh
1087  FF      		db	0ffh
1088  FF      		db	0ffh
1089  FF      		db	0ffh
108A  FF      		db	0ffh
108B  FF      		db	0ffh
108C  FF      		db	0ffh
108D  FF      		db	0ffh
108E  FF      		db	0ffh
108F  FF      		db	0ffh
1090  FF      		db	0ffh
1091  FF      		db	0ffh
1092  FF      		db	0ffh
1093  FF      		db	0ffh
1094  FF      		db	0ffh
1095  FF      		db	0ffh
1096  FF      		db	0ffh
1097  FF      		db	0ffh
1098  FF      		db	0ffh
1099  FF      		db	0ffh
109A  FF      		db	0ffh
109B  FF      		db	0ffh
109C  FF      		db	0ffh
109D  FF      		db	0ffh
109E  FF      		db	0ffh
109F  FF      		db	0ffh
10A0  FF      		db	0ffh
10A1  FF      		db	0ffh
10A2  FF      		db	0ffh
10A3  FF      		db	0ffh
10A4  FF      		db	0ffh
10A5  FF      		db	0ffh
10A6  FF      		db	0ffh
10A7  FF      		db	0ffh
10A8  FF      		db	0ffh
10A9  FF      		db	0ffh
10AA  FF      		db	0ffh
10AB  FF      		db	0ffh
10AC  FF      		db	0ffh
10AD  FF      		db	0ffh
10AE  FF      		db	0ffh
10AF  FF      		db	0ffh
10B0  FF      		db	0ffh
10B1  FF      		db	0ffh
10B2  FF      		db	0ffh
10B3  FF      		db	0ffh
10B4  FF      		db	0ffh
10B5  FF      		db	0ffh
10B6  FF      		db	0ffh
10B7  FF      		db	0ffh
10B8  FF      		db	0ffh
10B9  FF      		db	0ffh
10BA  FF      		db	0ffh
10BB  FF      		db	0ffh
10BC  FF      		db	0ffh
10BD  FF      		db	0ffh
10BE  FF      		db	0ffh
10BF  FF      		db	0ffh
10C0  FF      		db	0ffh
10C1  FF      		db	0ffh
10C2  FF      		db	0ffh
10C3  FF      		db	0ffh
10C4  FF      		db	0ffh
10C5  FF      		db	0ffh
10C6  FF      		db	0ffh
10C7  FF      		db	0ffh
10C8  FF      		db	0ffh
10C9  FF      		db	0ffh
10CA  FF      		db	0ffh
10CB  FF      		db	0ffh
10CC  FF      		db	0ffh
10CD  FF      		db	0ffh
10CE  FF      		db	0ffh
10CF  FF      		db	0ffh
10D0  FF      		db	0ffh
10D1  FF      		db	0ffh
10D2  FF      		db	0ffh
10D3  FF      		db	0ffh
10D4  FF      		db	0ffh
10D5  FF      		db	0ffh
10D6  FF      		db	0ffh
10D7  FF      		db	0ffh
10D8  FF      		db	0ffh
10D9  FF      		db	0ffh
10DA  FF      		db	0ffh
10DB  FF      		db	0ffh
10DC  FF      		db	0ffh
10DD  FF      		db	0ffh
10DE  FF      		db	0ffh
10DF  FF      		db	0ffh
10E0  FF      		db	0ffh
10E1  FF      		db	0ffh
10E2  FF      		db	0ffh
10E3  FF      		db	0ffh
10E4  FF      		db	0ffh
10E5  FF      		db	0ffh
10E6  FF      		db	0ffh
10E7  FF      		db	0ffh
10E8  FF      		db	0ffh
10E9  FF      		db	0ffh
10EA  FF      		db	0ffh
10EB  FF      		db	0ffh
10EC  FF      		db	0ffh
10ED  FF      		db	0ffh
10EE  FF      		db	0ffh
10EF  FF      		db	0ffh
10F0  FF      		db	0ffh
10F1  FF      		db	0ffh
10F2  FF      		db	0ffh
10F3  FF      		db	0ffh
10F4  FF      		db	0ffh
10F5  FF      		db	0ffh
10F6  FF      		db	0ffh
10F7  FF      		db	0ffh
10F8  FF      		db	0ffh
10F9  FF      		db	0ffh
10FA  FF      		db	0ffh
10FB  FF      		db	0ffh
10FC  FF      		db	0ffh
10FD  FF      		db	0ffh
10FE  FF      		db	0ffh
10FF  FF      		db	0ffh
1100  FF      		db	0ffh
1101  FF      		db	0ffh
1102  FF      		db	0ffh
1103  FF      		db	0ffh
1104  FF      		db	0ffh
1105  FF      		db	0ffh
1106  FF      		db	0ffh
1107  FF      		db	0ffh
1108  FF      		db	0ffh
1109  FF      		db	0ffh
110A  FF      		db	0ffh
110B  FF      		db	0ffh
110C  FF      		db	0ffh
110D  FF      		db	0ffh
110E  FF      		db	0ffh
110F  FF      		db	0ffh
1110  FF      		db	0ffh
1111  FF      		db	0ffh
1112  FF      		db	0ffh
1113  FF      		db	0ffh
1114  FF      		db	0ffh
1115  FF      		db	0ffh
1116  FF      		db	0ffh
1117  FF      		db	0ffh
1118  FF      		db	0ffh
1119  FF      		db	0ffh
111A  FF      		db	0ffh
111B  FF      		db	0ffh
111C  FF      		db	0ffh
111D  FF      		db	0ffh
111E  FF      		db	0ffh
111F  FF      		db	0ffh
1120  FF      		db	0ffh
1121  FF      		db	0ffh
1122  FF      		db	0ffh
1123  FF      		db	0ffh
1124  FF      		db	0ffh
1125  FF      		db	0ffh
1126  FF      		db	0ffh
1127  FF      		db	0ffh
1128  FF      		db	0ffh
1129  FF      		db	0ffh
112A  FF      		db	0ffh
112B  FF      		db	0ffh
112C  FF      		db	0ffh
112D  FF      		db	0ffh
112E  FF      		db	0ffh
112F  FF      		db	0ffh
1130  FF      		db	0ffh
1131  FF      		db	0ffh
1132  FF      		db	0ffh
1133  FF      		db	0ffh
1134  FF      		db	0ffh
1135  FF      		db	0ffh
1136  FF      		db	0ffh
1137  FF      		db	0ffh
1138  FF      		db	0ffh
1139  FF      		db	0ffh
113A  FF      		db	0ffh
113B  FF      		db	0ffh
113C  FF      		db	0ffh
113D  FF      		db	0ffh
113E  FF      		db	0ffh
113F  FF      		db	0ffh
1140  FF      		db	0ffh
1141  FF      		db	0ffh
1142  FF      		db	0ffh
1143  FF      		db	0ffh
1144  FF      		db	0ffh
1145  FF      		db	0ffh
1146  FF      		db	0ffh
1147  FF      		db	0ffh
1148  FF      		db	0ffh
1149  FF      		db	0ffh
114A  FF      		db	0ffh
114B  FF      		db	0ffh
114C  FF      		db	0ffh
114D  FF      		db	0ffh
114E  FF      		db	0ffh
114F  FF      		db	0ffh
1150  FF      		db	0ffh
1151  FF      		db	0ffh
1152  FF      		db	0ffh
1153  FF      		db	0ffh
1154  FF      		db	0ffh
1155  FF      		db	0ffh
1156  FF      		db	0ffh
1157  FF      		db	0ffh
1158  FF      		db	0ffh
1159  FF      		db	0ffh
115A  FF      		db	0ffh
115B  FF      		db	0ffh
115C  FF      		db	0ffh
115D  FF      		db	0ffh
115E  FF      		db	0ffh
115F  FF      		db	0ffh
1160  FF      		db	0ffh
1161  FF      		db	0ffh
1162  FF      		db	0ffh
1163  FF      		db	0ffh
1164  FF      		db	0ffh
1165  FF      		db	0ffh
1166  FF      		db	0ffh
1167  FF      		db	0ffh
1168  FF      		db	0ffh
1169  FF      		db	0ffh
116A  FF      		db	0ffh
116B  FF      		db	0ffh
116C  FF      		db	0ffh
116D  FF      		db	0ffh
116E  FF      		db	0ffh
116F  FF      		db	0ffh
1170  FF      		db	0ffh
1171  FF      		db	0ffh
1172  FF      		db	0ffh
1173  FF      		db	0ffh
1174  FF      		db	0ffh
1175  FF      		db	0ffh
1176  FF      		db	0ffh
1177  FF      		db	0ffh
1178  FF      		db	0ffh
1179  FF      		db	0ffh
117A  FF      		db	0ffh
117B  FF      		db	0ffh
117C  FF      		db	0ffh
117D  FF      		db	0ffh
117E  FF      		db	0ffh
117F  FF      		db	0ffh
1180  FF      		db	0ffh
1181  FF      		db	0ffh
1182  FF      		db	0ffh
1183  FF      		db	0ffh
1184  FF      		db	0ffh
1185  FF      		db	0ffh
1186  FF      		db	0ffh
1187  FF      		db	0ffh
1188  FF      		db	0ffh
1189  FF      		db	0ffh
118A  FF      		db	0ffh
118B  FF      		db	0ffh
118C  FF      		db	0ffh
118D  FF      		db	0ffh
118E  FF      		db	0ffh
118F  FF      		db	0ffh
1190  FF      		db	0ffh
1191  FF      		db	0ffh
1192  FF      		db	0ffh
1193  FF      		db	0ffh
1194  FF      		db	0ffh
1195  FF      		db	0ffh
1196  FF      		db	0ffh
1197  FF      		db	0ffh
1198  FF      		db	0ffh
1199  FF      		db	0ffh
119A  FF      		db	0ffh
119B  FF      		db	0ffh
119C  FF      		db	0ffh
119D  FF      		db	0ffh
119E  FF      		db	0ffh
119F  FF      		db	0ffh
11A0  FF      		db	0ffh
11A1  FF      		db	0ffh
11A2  FF      		db	0ffh
11A3  FF      		db	0ffh
11A4  FF      		db	0ffh
11A5  FF      		db	0ffh
11A6  FF      		db	0ffh
11A7  FF      		db	0ffh
11A8  FF      		db	0ffh
11A9  FF      		db	0ffh
11AA  FF      		db	0ffh
11AB  FF      		db	0ffh
11AC  FF      		db	0ffh
11AD  FF      		db	0ffh
11AE  FF      		db	0ffh
11AF  FF      		db	0ffh
11B0  FF      		db	0ffh
11B1  FF      		db	0ffh
11B2  FF      		db	0ffh
11B3  FF      		db	0ffh
11B4  FF      		db	0ffh
11B5  FF      		db	0ffh
11B6  FF      		db	0ffh
11B7  FF      		db	0ffh
11B8  FF      		db	0ffh
11B9  FF      		db	0ffh
11BA  FF      		db	0ffh
11BB  FF      		db	0ffh
11BC  FF      		db	0ffh
11BD  FF      		db	0ffh
11BE  FF      		db	0ffh
11BF  FF      		db	0ffh
11C0  FF      		db	0ffh
11C1  FF      		db	0ffh
11C2  FF      		db	0ffh
11C3  FF      		db	0ffh
11C4  FF      		db	0ffh
11C5  FF      		db	0ffh
11C6  FF      		db	0ffh
11C7  FF      		db	0ffh
11C8  FF      		db	0ffh
11C9  FF      		db	0ffh
11CA  FF      		db	0ffh
11CB  FF      		db	0ffh
11CC  FF      		db	0ffh
11CD  FF      		db	0ffh
11CE  FF      		db	0ffh
11CF  FF      		db	0ffh
11D0  FF      		db	0ffh
11D1  FF      		db	0ffh
11D2  FF      		db	0ffh
11D3  FF      		db	0ffh
11D4  FF      		db	0ffh
11D5  FF      		db	0ffh
11D6  FF      		db	0ffh
11D7  FF      		db	0ffh
11D8  FF      		db	0ffh
11D9  FF      		db	0ffh
11DA  FF      		db	0ffh
11DB  FF      		db	0ffh
11DC  FF      		db	0ffh
11DD  FF      		db	0ffh
11DE  FF      		db	0ffh
11DF  FF      		db	0ffh
11E0  FF      		db	0ffh
11E1  FF      		db	0ffh
11E2  FF      		db	0ffh
11E3  FF      		db	0ffh
11E4  FF      		db	0ffh
11E5  FF      		db	0ffh
11E6  FF      		db	0ffh
11E7  FF      		db	0ffh
11E8  FF      		db	0ffh
11E9  FF      		db	0ffh
11EA  FF      		db	0ffh
11EB  FF      		db	0ffh
11EC  FF      		db	0ffh
11ED  FF      		db	0ffh
11EE  FF      		db	0ffh
11EF  FF      		db	0ffh
11F0  FF      		db	0ffh
11F1  FF      		db	0ffh
11F2  FF      		db	0ffh
11F3  FF      		db	0ffh
11F4  FF      		db	0ffh
11F5  FF      		db	0ffh
11F6  FF      		db	0ffh
11F7  FF      		db	0ffh
11F8  FF      		db	0ffh
11F9  FF      		db	0ffh
11FA  FF      		db	0ffh
11FB  FF      		db	0ffh
11FC  FF      		db	0ffh
11FD  FF      		db	0ffh
11FE  FF      		db	0ffh
11FF  FF      		db	0ffh
1200  FF      		db	0ffh
1201  FF      		db	0ffh
1202  FF      		db	0ffh
1203  FF      		db	0ffh
1204  FF      		db	0ffh
1205  FF      		db	0ffh
1206  FF      		db	0ffh
1207  FF      		db	0ffh
1208  FF      		db	0ffh
1209  FF      		db	0ffh
120A  FF      		db	0ffh
120B  FF      		db	0ffh
120C  FF      		db	0ffh
120D  FF      		db	0ffh
120E  FF      		db	0ffh
120F  FF      		db	0ffh
1210  FF      		db	0ffh
1211  FF      		db	0ffh
1212  FF      		db	0ffh
1213  FF      		db	0ffh
1214  FF      		db	0ffh
1215  FF      		db	0ffh
1216  FF      		db	0ffh
1217  FF      		db	0ffh
1218  FF      		db	0ffh
1219  FF      		db	0ffh
121A  FF      		db	0ffh
121B  FF      		db	0ffh
121C  FF      		db	0ffh
121D  FF      		db	0ffh
121E  FF      		db	0ffh
121F  FF      		db	0ffh
1220  FF      		db	0ffh
1221  FF      		db	0ffh
1222  FF      		db	0ffh
1223  FF      		db	0ffh
1224  FF      		db	0ffh
1225  FF      		db	0ffh
1226  FF      		db	0ffh
1227  FF      		db	0ffh
1228  FF      		db	0ffh
1229  FF      		db	0ffh
122A  FF      		db	0ffh
122B  FF      		db	0ffh
122C  FF      		db	0ffh
122D  FF      		db	0ffh
122E  FF      		db	0ffh
122F  FF      		db	0ffh
1230  FF      		db	0ffh
1231  FF      		db	0ffh
1232  FF      		db	0ffh
1233  FF      		db	0ffh
1234  FF      		db	0ffh
1235  FF      		db	0ffh
1236  FF      		db	0ffh
1237  FF      		db	0ffh
1238  FF      		db	0ffh
1239  FF      		db	0ffh
123A  FF      		db	0ffh
123B  FF      		db	0ffh
123C  FF      		db	0ffh
123D  FF      		db	0ffh
123E  FF      		db	0ffh
123F  FF      		db	0ffh
1240  FF      		db	0ffh
1241  FF      		db	0ffh
1242  FF      		db	0ffh
1243  FF      		db	0ffh
1244  FF      		db	0ffh
1245  FF      		db	0ffh
1246  FF      		db	0ffh
1247  FF      		db	0ffh
1248  FF      		db	0ffh
1249  FF      		db	0ffh
124A  FF      		db	0ffh
124B  FF      		db	0ffh
124C  FF      		db	0ffh
124D  FF      		db	0ffh
124E  FF      		db	0ffh
124F  FF      		db	0ffh
1250  FF      		db	0ffh
1251  FF      		db	0ffh
1252  FF      		db	0ffh
1253  FF      		db	0ffh
1254  FF      		db	0ffh
1255  FF      		db	0ffh
1256  FF      		db	0ffh
1257  FF      		db	0ffh
1258  FF      		db	0ffh
1259  FF      		db	0ffh
125A  FF      		db	0ffh
125B  FF      		db	0ffh
125C  FF      		db	0ffh
125D  FF      		db	0ffh
125E  FF      		db	0ffh
125F  FF      		db	0ffh
1260  FF      		db	0ffh
1261  FF      		db	0ffh
1262  FF      		db	0ffh
1263  FF      		db	0ffh
1264  FF      		db	0ffh
1265  FF      		db	0ffh
1266  FF      		db	0ffh
1267  FF      		db	0ffh
1268  FF      		db	0ffh
1269  FF      		db	0ffh
126A  FF      		db	0ffh
126B  FF      		db	0ffh
126C  FF      		db	0ffh
126D  FF      		db	0ffh
126E  FF      		db	0ffh
126F  FF      		db	0ffh
1270  FF      		db	0ffh
1271  FF      		db	0ffh
1272  FF      		db	0ffh
1273  FF      		db	0ffh
1274  FF      		db	0ffh
1275  FF      		db	0ffh
1276  FF      		db	0ffh
1277  FF      		db	0ffh
1278  FF      		db	0ffh
1279  FF      		db	0ffh
127A  FF      		db	0ffh
127B  FF      		db	0ffh
127C  FF      		db	0ffh
127D  FF      		db	0ffh
127E  FF      		db	0ffh
127F  FF      		db	0ffh
1280  FF      		db	0ffh
1281  FF      		db	0ffh
1282  FF      		db	0ffh
1283  FF      		db	0ffh
1284  FF      		db	0ffh
1285  FF      		db	0ffh
1286  FF      		db	0ffh
1287  FF      		db	0ffh
1288  FF      		db	0ffh
1289  FF      		db	0ffh
128A  FF      		db	0ffh
128B  FF      		db	0ffh
128C  FF      		db	0ffh
128D  FF      		db	0ffh
128E  FF      		db	0ffh
128F  FF      		db	0ffh
1290  FF      		db	0ffh
1291  FF      		db	0ffh
1292  FF      		db	0ffh
1293  FF      		db	0ffh
1294  FF      		db	0ffh
1295  FF      		db	0ffh
1296  FF      		db	0ffh
1297  FF      		db	0ffh
1298  FF      		db	0ffh
1299  FF      		db	0ffh
129A  FF      		db	0ffh
129B  FF      		db	0ffh
129C  FF      		db	0ffh
129D  FF      		db	0ffh
129E  FF      		db	0ffh
129F  FF      		db	0ffh
12A0  FF      		db	0ffh
12A1  FF      		db	0ffh
12A2  FF      		db	0ffh
12A3  FF      		db	0ffh
12A4  FF      		db	0ffh
12A5  FF      		db	0ffh
12A6  FF      		db	0ffh
12A7  FF      		db	0ffh
12A8  FF      		db	0ffh
12A9  FF      		db	0ffh
12AA  FF      		db	0ffh
12AB  FF      		db	0ffh
12AC  FF      		db	0ffh
12AD  FF      		db	0ffh
12AE  FF      		db	0ffh
12AF  FF      		db	0ffh
12B0  FF      		db	0ffh
12B1  FF      		db	0ffh
12B2  FF      		db	0ffh
12B3  FF      		db	0ffh
12B4  FF      		db	0ffh
12B5  FF      		db	0ffh
12B6  FF      		db	0ffh
12B7  FF      		db	0ffh
12B8  FF      		db	0ffh
12B9  FF      		db	0ffh
12BA  FF      		db	0ffh
12BB  FF      		db	0ffh
12BC  FF      		db	0ffh
12BD  FF      		db	0ffh
12BE  FF      		db	0ffh
12BF  FF      		db	0ffh
12C0  FF      		db	0ffh
12C1  FF      		db	0ffh
12C2  FF      		db	0ffh
12C3  FF      		db	0ffh
12C4  FF      		db	0ffh
12C5  FF      		db	0ffh
12C6  FF      		db	0ffh
12C7  FF      		db	0ffh
12C8  FF      		db	0ffh
12C9  FF      		db	0ffh
12CA  FF      		db	0ffh
12CB  FF      		db	0ffh
12CC  FF      		db	0ffh
12CD  FF      		db	0ffh
12CE  FF      		db	0ffh
12CF  FF      		db	0ffh
12D0  FF      		db	0ffh
12D1  FF      		db	0ffh
12D2  FF      		db	0ffh
12D3  FF      		db	0ffh
12D4  FF      		db	0ffh
12D5  FF      		db	0ffh
12D6  FF      		db	0ffh
12D7  FF      		db	0ffh
12D8  FF      		db	0ffh
12D9  FF      		db	0ffh
12DA  FF      		db	0ffh
12DB  FF      		db	0ffh
12DC  FF      		db	0ffh
12DD  FF      		db	0ffh
12DE  FF      		db	0ffh
12DF  FF      		db	0ffh
12E0  FF      		db	0ffh
12E1  FF      		db	0ffh
12E2  FF      		db	0ffh
12E3  FF      		db	0ffh
12E4  FF      		db	0ffh
12E5  FF      		db	0ffh
12E6  FF      		db	0ffh
12E7  FF      		db	0ffh
12E8  FF      		db	0ffh
12E9  FF      		db	0ffh
12EA  FF      		db	0ffh
12EB  FF      		db	0ffh
12EC  FF      		db	0ffh
12ED  FF      		db	0ffh
12EE  FF      		db	0ffh
12EF  FF      		db	0ffh
12F0  FF      		db	0ffh
12F1  FF      		db	0ffh
12F2  FF      		db	0ffh
12F3  FF      		db	0ffh
12F4  FF      		db	0ffh
12F5  FF      		db	0ffh
12F6  FF      		db	0ffh
12F7  FF      		db	0ffh
12F8  FF      		db	0ffh
12F9  FF      		db	0ffh
12FA  FF      		db	0ffh
12FB  FF      		db	0ffh
12FC  FF      		db	0ffh
12FD  FF      		db	0ffh
12FE  FF      		db	0ffh
12FF  FF      		db	0ffh
1300  FF      		db	0ffh
1301  FF      		db	0ffh
1302  FF      		db	0ffh
1303  FF      		db	0ffh
1304  FF      		db	0ffh
1305  FF      		db	0ffh
1306  FF      		db	0ffh
1307  FF      		db	0ffh
1308  FF      		db	0ffh
1309  FF      		db	0ffh
130A  FF      		db	0ffh
130B  FF      		db	0ffh
130C  FF      		db	0ffh
130D  FF      		db	0ffh
130E  FF      		db	0ffh
130F  FF      		db	0ffh
1310  FF      		db	0ffh
1311  FF      		db	0ffh
1312  FF      		db	0ffh
1313  FF      		db	0ffh
1314  FF      		db	0ffh
1315  FF      		db	0ffh
1316  FF      		db	0ffh
1317  FF      		db	0ffh
1318  FF      		db	0ffh
1319  FF      		db	0ffh
131A  FF      		db	0ffh
131B  FF      		db	0ffh
131C  FF      		db	0ffh
131D  FF      		db	0ffh
131E  FF      		db	0ffh
131F  FF      		db	0ffh
1320  FF      		db	0ffh
1321  FF      		db	0ffh
1322  FF      		db	0ffh
1323  FF      		db	0ffh
1324  FF      		db	0ffh
1325  FF      		db	0ffh
1326  FF      		db	0ffh
1327  FF      		db	0ffh
1328  FF      		db	0ffh
1329  FF      		db	0ffh
132A  FF      		db	0ffh
132B  FF      		db	0ffh
132C  FF      		db	0ffh
132D  FF      		db	0ffh
132E  FF      		db	0ffh
132F  FF      		db	0ffh
1330  FF      		db	0ffh
1331  FF      		db	0ffh
1332  FF      		db	0ffh
1333  FF      		db	0ffh
1334  FF      		db	0ffh
1335  FF      		db	0ffh
1336  FF      		db	0ffh
1337  FF      		db	0ffh
1338  FF      		db	0ffh
1339  FF      		db	0ffh
133A  FF      		db	0ffh
133B  FF      		db	0ffh
133C  FF      		db	0ffh
133D  FF      		db	0ffh
133E  FF      		db	0ffh
133F  FF      		db	0ffh
1340  FF      		db	0ffh
1341  FF      		db	0ffh
1342  FF      		db	0ffh
1343  FF      		db	0ffh
1344  FF      		db	0ffh
1345  FF      		db	0ffh
1346  FF      		db	0ffh
1347  FF      		db	0ffh
1348  FF      		db	0ffh
1349  FF      		db	0ffh
134A  FF      		db	0ffh
134B  FF      		db	0ffh
134C  FF      		db	0ffh
134D  FF      		db	0ffh
134E  FF      		db	0ffh
134F  FF      		db	0ffh
1350  FF      		db	0ffh
1351  FF      		db	0ffh
1352  FF      		db	0ffh
1353  FF      		db	0ffh
1354  FF      		db	0ffh
1355  FF      		db	0ffh
1356  FF      		db	0ffh
1357  FF      		db	0ffh
1358  FF      		db	0ffh
1359  FF      		db	0ffh
135A  FF      		db	0ffh
135B  FF      		db	0ffh
135C  FF      		db	0ffh
135D  FF      		db	0ffh
135E  FF      		db	0ffh
135F  FF      		db	0ffh
1360  FF      		db	0ffh
1361  FF      		db	0ffh
1362  FF      		db	0ffh
1363  FF      		db	0ffh
1364  FF      		db	0ffh
1365  FF      		db	0ffh
1366  FF      		db	0ffh
1367  FF      		db	0ffh
1368  FF      		db	0ffh
1369  FF      		db	0ffh
136A  FF      		db	0ffh
136B  FF      		db	0ffh
136C  FF      		db	0ffh
136D  FF      		db	0ffh
136E  FF      		db	0ffh
136F  FF      		db	0ffh
1370  FF      		db	0ffh
1371  FF      		db	0ffh
1372  FF      		db	0ffh
1373  FF      		db	0ffh
1374  FF      		db	0ffh
1375  FF      		db	0ffh
1376  FF      		db	0ffh
1377  FF      		db	0ffh
1378  FF      		db	0ffh
1379  FF      		db	0ffh
137A  FF      		db	0ffh
137B  FF      		db	0ffh
137C  FF      		db	0ffh
137D  FF      		db	0ffh
137E  FF      		db	0ffh
137F  FF      		db	0ffh
1380  FF      		db	0ffh
1381  FF      		db	0ffh
1382  FF      		db	0ffh
1383  FF      		db	0ffh
1384  FF      		db	0ffh
1385  FF      		db	0ffh
1386  FF      		db	0ffh
1387  FF      		db	0ffh
1388  FF      		db	0ffh
1389  FF      		db	0ffh
138A  FF      		db	0ffh
138B  FF      		db	0ffh
138C  FF      		db	0ffh
138D  FF      		db	0ffh
138E  FF      		db	0ffh
138F  FF      		db	0ffh
1390  FF      		db	0ffh
1391  FF      		db	0ffh
1392  FF      		db	0ffh
1393  FF      		db	0ffh
1394  FF      		db	0ffh
1395  FF      		db	0ffh
1396  FF      		db	0ffh
1397  FF      		db	0ffh
1398  FF      		db	0ffh
1399  FF      		db	0ffh
139A  FF      		db	0ffh
139B  FF      		db	0ffh
139C  FF      		db	0ffh
139D  FF      		db	0ffh
139E  FF      		db	0ffh
139F  FF      		db	0ffh
13A0  FF      		db	0ffh
13A1  FF      		db	0ffh
13A2  FF      		db	0ffh
13A3  FF      		db	0ffh
13A4  FF      		db	0ffh
13A5  FF      		db	0ffh
13A6  FF      		db	0ffh
13A7  FF      		db	0ffh
13A8  FF      		db	0ffh
13A9  FF      		db	0ffh
13AA  FF      		db	0ffh
13AB  FF      		db	0ffh
13AC  FF      		db	0ffh
13AD  FF      		db	0ffh
13AE  FF      		db	0ffh
13AF  FF      		db	0ffh
13B0  FF      		db	0ffh
13B1  FF      		db	0ffh
13B2  FF      		db	0ffh
13B3  FF      		db	0ffh
13B4  FF      		db	0ffh
13B5  FF      		db	0ffh
13B6  FF      		db	0ffh
13B7  FF      		db	0ffh
13B8  FF      		db	0ffh
13B9  FF      		db	0ffh
13BA  FF      		db	0ffh
13BB  FF      		db	0ffh
13BC  FF      		db	0ffh
13BD  FF      		db	0ffh
13BE  FF      		db	0ffh
13BF  FF      		db	0ffh
13C0  FF      		db	0ffh
13C1  FF      		db	0ffh
13C2  FF      		db	0ffh
13C3  FF      		db	0ffh
13C4  FF      		db	0ffh
13C5  FF      		db	0ffh
13C6  FF      		db	0ffh
13C7  FF      		db	0ffh
13C8  FF      		db	0ffh
13C9  FF      		db	0ffh
13CA  FF      		db	0ffh
13CB  FF      		db	0ffh
13CC  FF      		db	0ffh
13CD  FF      		db	0ffh
13CE  FF      		db	0ffh
13CF  FF      		db	0ffh
13D0  FF      		db	0ffh
13D1  FF      		db	0ffh
13D2  FF      		db	0ffh
13D3  FF      		db	0ffh
13D4  FF      		db	0ffh
13D5  FF      		db	0ffh
13D6  FF      		db	0ffh
13D7  FF      		db	0ffh
13D8  FF      		db	0ffh
13D9  FF      		db	0ffh
13DA  FF      		db	0ffh
13DB  FF      		db	0ffh
13DC  FF      		db	0ffh
13DD  FF      		db	0ffh
13DE  FF      		db	0ffh
13DF  FF      		db	0ffh
13E0  FF      		db	0ffh
13E1  FF      		db	0ffh
13E2  FF      		db	0ffh
13E3  FF      		db	0ffh
13E4  FF      		db	0ffh
13E5  FF      		db	0ffh
13E6  FF      		db	0ffh
13E7  FF      		db	0ffh
13E8  FF      		db	0ffh
13E9  FF      		db	0ffh
13EA  FF      		db	0ffh
13EB  FF      		db	0ffh
13EC  FF      		db	0ffh
13ED  FF      		db	0ffh
13EE  FF      		db	0ffh
13EF  FF      		db	0ffh
13F0  FF      		db	0ffh
13F1  FF      		db	0ffh
13F2  FF      		db	0ffh
13F3  FF      		db	0ffh
13F4  FF      		db	0ffh
13F5  FF      		db	0ffh
13F6  FF      		db	0ffh
13F7  FF      		db	0ffh
13F8  FF      		db	0ffh
13F9  FF      		db	0ffh
13FA  FF      		db	0ffh
13FB  FF      		db	0ffh
13FC  FF      		db	0ffh
13FD  FF      		db	0ffh
13FE  FF      		db	0ffh
13FF  FF      		db	0ffh
1400  FF      		db	0ffh
1401  FF      		db	0ffh
1402  FF      		db	0ffh
1403  FF      		db	0ffh
1404  FF      		db	0ffh
1405  FF      		db	0ffh
1406  FF      		db	0ffh
1407  FF      		db	0ffh
1408  FF      		db	0ffh
1409  FF      		db	0ffh
140A  FF      		db	0ffh
140B  FF      		db	0ffh
140C  FF      		db	0ffh
140D  FF      		db	0ffh
140E  FF      		db	0ffh
140F  FF      		db	0ffh
1410  FF      		db	0ffh
1411  FF      		db	0ffh
1412  FF      		db	0ffh
1413  FF      		db	0ffh
1414  FF      		db	0ffh
1415  FF      		db	0ffh
1416  FF      		db	0ffh
1417  FF      		db	0ffh
1418  FF      		db	0ffh
1419  FF      		db	0ffh
141A  FF      		db	0ffh
141B  FF      		db	0ffh
141C  FF      		db	0ffh
141D  FF      		db	0ffh
141E  FF      		db	0ffh
141F  FF      		db	0ffh
1420  FF      		db	0ffh
1421  FF      		db	0ffh
1422  FF      		db	0ffh
1423  FF      		db	0ffh
1424  FF      		db	0ffh
1425  FF      		db	0ffh
1426  FF      		db	0ffh
1427  FF      		db	0ffh
1428  FF      		db	0ffh
1429  FF      		db	0ffh
142A  FF      		db	0ffh
142B  FF      		db	0ffh
142C  FF      		db	0ffh
142D  FF      		db	0ffh
142E  FF      		db	0ffh
142F  FF      		db	0ffh
1430  FF      		db	0ffh
1431  FF      		db	0ffh
1432  FF      		db	0ffh
1433  FF      		db	0ffh
1434  FF      		db	0ffh
1435  FF      		db	0ffh
1436  FF      		db	0ffh
1437  FF      		db	0ffh
1438  FF      		db	0ffh
1439  FF      		db	0ffh
143A  FF      		db	0ffh
143B  FF      		db	0ffh
143C  FF      		db	0ffh
143D  FF      		db	0ffh
143E  FF      		db	0ffh
143F  FF      		db	0ffh
1440  FF      		db	0ffh
1441  FF      		db	0ffh
1442  FF      		db	0ffh
1443  FF      		db	0ffh
1444  FF      		db	0ffh
1445  FF      		db	0ffh
1446  FF      		db	0ffh
1447  FF      		db	0ffh
1448  FF      		db	0ffh
1449  FF      		db	0ffh
144A  FF      		db	0ffh
144B  FF      		db	0ffh
144C  FF      		db	0ffh
144D  FF      		db	0ffh
144E  FF      		db	0ffh
144F  FF      		db	0ffh
1450  FF      		db	0ffh
1451  FF      		db	0ffh
1452  FF      		db	0ffh
1453  FF      		db	0ffh
1454  FF      		db	0ffh
1455  FF      		db	0ffh
1456  FF      		db	0ffh
1457  FF      		db	0ffh
1458  FF      		db	0ffh
1459  FF      		db	0ffh
145A  FF      		db	0ffh
145B  FF      		db	0ffh
145C  FF      		db	0ffh
145D  FF      		db	0ffh
145E  FF      		db	0ffh
145F  FF      		db	0ffh
1460  FF      		db	0ffh
1461  FF      		db	0ffh
1462  FF      		db	0ffh
1463  FF      		db	0ffh
1464  FF      		db	0ffh
1465  FF      		db	0ffh
1466  FF      		db	0ffh
1467  FF      		db	0ffh
1468  FF      		db	0ffh
1469  FF      		db	0ffh
146A  FF      		db	0ffh
146B  FF      		db	0ffh
146C  FF      		db	0ffh
146D  FF      		db	0ffh
146E  FF      		db	0ffh
146F  FF      		db	0ffh
1470  FF      		db	0ffh
1471  FF      		db	0ffh
1472  FF      		db	0ffh
1473  FF      		db	0ffh
1474  FF      		db	0ffh
1475  FF      		db	0ffh
1476  FF      		db	0ffh
1477  FF      		db	0ffh
1478  FF      		db	0ffh
1479  FF      		db	0ffh
147A  FF      		db	0ffh
147B  FF      		db	0ffh
147C  FF      		db	0ffh
147D  FF      		db	0ffh
147E  FF      		db	0ffh
147F  FF      		db	0ffh
1480  FF      		db	0ffh
1481  FF      		db	0ffh
1482  FF      		db	0ffh
1483  FF      		db	0ffh
1484  FF      		db	0ffh
1485  FF      		db	0ffh
1486  FF      		db	0ffh
1487  FF      		db	0ffh
1488  FF      		db	0ffh
1489  FF      		db	0ffh
148A  FF      		db	0ffh
148B  FF      		db	0ffh
148C  FF      		db	0ffh
148D  FF      		db	0ffh
148E  FF      		db	0ffh
148F  FF      		db	0ffh
1490  FF      		db	0ffh
1491  FF      		db	0ffh
1492  FF      		db	0ffh
1493  FF      		db	0ffh
1494  FF      		db	0ffh
1495  FF      		db	0ffh
1496  FF      		db	0ffh
1497  FF      		db	0ffh
1498  FF      		db	0ffh
1499  FF      		db	0ffh
149A  FF      		db	0ffh
149B  FF      		db	0ffh
149C  FF      		db	0ffh
149D  FF      		db	0ffh
149E  FF      		db	0ffh
149F  FF      		db	0ffh
14A0  FF      		db	0ffh
14A1  FF      		db	0ffh
14A2  FF      		db	0ffh
14A3  FF      		db	0ffh
14A4  FF      		db	0ffh
14A5  FF      		db	0ffh
14A6  FF      		db	0ffh
14A7  FF      		db	0ffh
14A8  FF      		db	0ffh
14A9  FF      		db	0ffh
14AA  FF      		db	0ffh
14AB  FF      		db	0ffh
14AC  FF      		db	0ffh
14AD  FF      		db	0ffh
14AE  FF      		db	0ffh
14AF  FF      		db	0ffh
14B0  FF      		db	0ffh
14B1  FF      		db	0ffh
14B2  FF      		db	0ffh
14B3  FF      		db	0ffh
14B4  FF      		db	0ffh
14B5  FF      		db	0ffh
14B6  FF      		db	0ffh
14B7  FF      		db	0ffh
14B8  FF      		db	0ffh
14B9  FF      		db	0ffh
14BA  FF      		db	0ffh
14BB  FF      		db	0ffh
14BC  FF      		db	0ffh
14BD  FF      		db	0ffh
14BE  FF      		db	0ffh
14BF  FF      		db	0ffh
14C0  FF      		db	0ffh
14C1  FF      		db	0ffh
14C2  FF      		db	0ffh
14C3  FF      		db	0ffh
14C4  FF      		db	0ffh
14C5  FF      		db	0ffh
14C6  FF      		db	0ffh
14C7  FF      		db	0ffh
14C8  FF      		db	0ffh
14C9  FF      		db	0ffh
14CA  FF      		db	0ffh
14CB  FF      		db	0ffh
14CC  FF      		db	0ffh
14CD  FF      		db	0ffh
14CE  FF      		db	0ffh
14CF  FF      		db	0ffh
14D0  FF      		db	0ffh
14D1  FF      		db	0ffh
14D2  FF      		db	0ffh
14D3  FF      		db	0ffh
14D4  FF      		db	0ffh
14D5  FF      		db	0ffh
14D6  FF      		db	0ffh
14D7  FF      		db	0ffh
14D8  FF      		db	0ffh
14D9  FF      		db	0ffh
14DA  FF      		db	0ffh
14DB  FF      		db	0ffh
14DC  FF      		db	0ffh
14DD  FF      		db	0ffh
14DE  FF      		db	0ffh
14DF  FF      		db	0ffh
14E0  FF      		db	0ffh
14E1  FF      		db	0ffh
14E2  FF      		db	0ffh
14E3  FF      		db	0ffh
14E4  FF      		db	0ffh
14E5  FF      		db	0ffh
14E6  FF      		db	0ffh
14E7  FF      		db	0ffh
14E8  FF      		db	0ffh
14E9  FF      		db	0ffh
14EA  FF      		db	0ffh
14EB  FF      		db	0ffh
14EC  FF      		db	0ffh
14ED  FF      		db	0ffh
14EE  FF      		db	0ffh
14EF  FF      		db	0ffh
14F0  FF      		db	0ffh
14F1  FF      		db	0ffh
14F2  FF      		db	0ffh
14F3  FF      		db	0ffh
14F4  FF      		db	0ffh
14F5  FF      		db	0ffh
14F6  FF      		db	0ffh
14F7  FF      		db	0ffh
14F8  FF      		db	0ffh
14F9  FF      		db	0ffh
14FA  FF      		db	0ffh
14FB  FF      		db	0ffh
14FC  FF      		db	0ffh
14FD  FF      		db	0ffh
14FE  FF      		db	0ffh
14FF  FF      		db	0ffh
1500  FF      		db	0ffh
1501  FF      		db	0ffh
1502  FF      		db	0ffh
1503  FF      		db	0ffh
1504  FF      		db	0ffh
1505  FF      		db	0ffh
1506  FF      		db	0ffh
1507  FF      		db	0ffh
1508  FF      		db	0ffh
1509  FF      		db	0ffh
150A  FF      		db	0ffh
150B  FF      		db	0ffh
150C  FF      		db	0ffh
150D  FF      		db	0ffh
150E  FF      		db	0ffh
150F  FF      		db	0ffh
1510  FF      		db	0ffh
1511  FF      		db	0ffh
1512  FF      		db	0ffh
1513  FF      		db	0ffh
1514  FF      		db	0ffh
1515  FF      		db	0ffh
1516  FF      		db	0ffh
1517  FF      		db	0ffh
1518  FF      		db	0ffh
1519  FF      		db	0ffh
151A  FF      		db	0ffh
151B  FF      		db	0ffh
151C  FF      		db	0ffh
151D  FF      		db	0ffh
151E  FF      		db	0ffh
151F  FF      		db	0ffh
1520  FF      		db	0ffh
1521  FF      		db	0ffh
1522  FF      		db	0ffh
1523  FF      		db	0ffh
1524  FF      		db	0ffh
1525  FF      		db	0ffh
1526  FF      		db	0ffh
1527  FF      		db	0ffh
1528  FF      		db	0ffh
1529  FF      		db	0ffh
152A  FF      		db	0ffh
152B  FF      		db	0ffh
152C  FF      		db	0ffh
152D  FF      		db	0ffh
152E  FF      		db	0ffh
152F  FF      		db	0ffh
1530  FF      		db	0ffh
1531  FF      		db	0ffh
1532  FF      		db	0ffh
1533  FF      		db	0ffh
1534  FF      		db	0ffh
1535  FF      		db	0ffh
1536  FF      		db	0ffh
1537  FF      		db	0ffh
1538  FF      		db	0ffh
1539  FF      		db	0ffh
153A  FF      		db	0ffh
153B  FF      		db	0ffh
153C  FF      		db	0ffh
153D  FF      		db	0ffh
153E  FF      		db	0ffh
153F  FF      		db	0ffh
1540  FF      		db	0ffh
1541  FF      		db	0ffh
1542  FF      		db	0ffh
1543  FF      		db	0ffh
1544  FF      		db	0ffh
1545  FF      		db	0ffh
1546  FF      		db	0ffh
1547  FF      		db	0ffh
1548  FF      		db	0ffh
1549  FF      		db	0ffh
154A  FF      		db	0ffh
154B  FF      		db	0ffh
154C  FF      		db	0ffh
154D  FF      		db	0ffh
154E  FF      		db	0ffh
154F  FF      		db	0ffh
1550  FF      		db	0ffh
1551  FF      		db	0ffh
1552  FF      		db	0ffh
1553  FF      		db	0ffh
1554  FF      		db	0ffh
1555  FF      		db	0ffh
1556  FF      		db	0ffh
1557  FF      		db	0ffh
1558  FF      		db	0ffh
1559  FF      		db	0ffh
155A  FF      		db	0ffh
155B  FF      		db	0ffh
155C  FF      		db	0ffh
155D  FF      		db	0ffh
155E  FF      		db	0ffh
155F  FF      		db	0ffh
1560  FF      		db	0ffh
1561  FF      		db	0ffh
1562  FF      		db	0ffh
1563  FF      		db	0ffh
1564  FF      		db	0ffh
1565  FF      		db	0ffh
1566  FF      		db	0ffh
1567  FF      		db	0ffh
1568  FF      		db	0ffh
1569  FF      		db	0ffh
156A  FF      		db	0ffh
156B  FF      		db	0ffh
156C  FF      		db	0ffh
156D  FF      		db	0ffh
156E  FF      		db	0ffh
156F  FF      		db	0ffh
1570  FF      		db	0ffh
1571  FF      		db	0ffh
1572  FF      		db	0ffh
1573  FF      		db	0ffh
1574  FF      		db	0ffh
1575  FF      		db	0ffh
1576  FF      		db	0ffh
1577  FF      		db	0ffh
1578  FF      		db	0ffh
1579  FF      		db	0ffh
157A  FF      		db	0ffh
157B  FF      		db	0ffh
157C  FF      		db	0ffh
157D  FF      		db	0ffh
157E  FF      		db	0ffh
157F  FF      		db	0ffh
1580  FF      		db	0ffh
1581  FF      		db	0ffh
1582  FF      		db	0ffh
1583  FF      		db	0ffh
1584  FF      		db	0ffh
1585  FF      		db	0ffh
1586  FF      		db	0ffh
1587  FF      		db	0ffh
1588  FF      		db	0ffh
1589  FF      		db	0ffh
158A  FF      		db	0ffh
158B  FF      		db	0ffh
158C  FF      		db	0ffh
158D  FF      		db	0ffh
158E  FF      		db	0ffh
158F  FF      		db	0ffh
1590  FF      		db	0ffh
1591  FF      		db	0ffh
1592  FF      		db	0ffh
1593  FF      		db	0ffh
1594  FF      		db	0ffh
1595  FF      		db	0ffh
1596  FF      		db	0ffh
1597  FF      		db	0ffh
1598  FF      		db	0ffh
1599  FF      		db	0ffh
159A  FF      		db	0ffh
159B  FF      		db	0ffh
159C  FF      		db	0ffh
159D  FF      		db	0ffh
159E  FF      		db	0ffh
159F  FF      		db	0ffh
15A0  FF      		db	0ffh
15A1  FF      		db	0ffh
15A2  FF      		db	0ffh
15A3  FF      		db	0ffh
15A4  FF      		db	0ffh
15A5  FF      		db	0ffh
15A6  FF      		db	0ffh
15A7  FF      		db	0ffh
15A8  FF      		db	0ffh
15A9  FF      		db	0ffh
15AA  FF      		db	0ffh
15AB  FF      		db	0ffh
15AC  FF      		db	0ffh
15AD  FF      		db	0ffh
15AE  FF      		db	0ffh
15AF  FF      		db	0ffh
15B0  FF      		db	0ffh
15B1  FF      		db	0ffh
15B2  FF      		db	0ffh
15B3  FF      		db	0ffh
15B4  FF      		db	0ffh
15B5  FF      		db	0ffh
15B6  FF      		db	0ffh
15B7  FF      		db	0ffh
15B8  FF      		db	0ffh
15B9  FF      		db	0ffh
15BA  FF      		db	0ffh
15BB  FF      		db	0ffh
15BC  FF      		db	0ffh
15BD  FF      		db	0ffh
15BE  FF      		db	0ffh
15BF  FF      		db	0ffh
15C0  FF      		db	0ffh
15C1  FF      		db	0ffh
15C2  FF      		db	0ffh
15C3  FF      		db	0ffh
15C4  FF      		db	0ffh
15C5  FF      		db	0ffh
15C6  FF      		db	0ffh
15C7  FF      		db	0ffh
15C8  FF      		db	0ffh
15C9  FF      		db	0ffh
15CA  FF      		db	0ffh
15CB  FF      		db	0ffh
15CC  FF      		db	0ffh
15CD  FF      		db	0ffh
15CE  FF      		db	0ffh
15CF  FF      		db	0ffh
15D0  FF      		db	0ffh
15D1  FF      		db	0ffh
15D2  FF      		db	0ffh
15D3  FF      		db	0ffh
15D4  FF      		db	0ffh
15D5  FF      		db	0ffh
15D6  FF      		db	0ffh
15D7  FF      		db	0ffh
15D8  FF      		db	0ffh
15D9  FF      		db	0ffh
15DA  FF      		db	0ffh
15DB  FF      		db	0ffh
15DC  FF      		db	0ffh
15DD  FF      		db	0ffh
15DE  FF      		db	0ffh
15DF  FF      		db	0ffh
15E0  FF      		db	0ffh
15E1  FF      		db	0ffh
15E2  FF      		db	0ffh
15E3  FF      		db	0ffh
15E4  FF      		db	0ffh
15E5  FF      		db	0ffh
15E6  FF      		db	0ffh
15E7  FF      		db	0ffh
15E8  FF      		db	0ffh
15E9  FF      		db	0ffh
15EA  FF      		db	0ffh
15EB  FF      		db	0ffh
15EC  FF      		db	0ffh
15ED  FF      		db	0ffh
15EE  FF      		db	0ffh
15EF  FF      		db	0ffh
15F0  FF      		db	0ffh
15F1  FF      		db	0ffh
15F2  FF      		db	0ffh
15F3  FF      		db	0ffh
15F4  FF      		db	0ffh
15F5  FF      		db	0ffh
15F6  FF      		db	0ffh
15F7  FF      		db	0ffh
15F8  FF      		db	0ffh
15F9  FF      		db	0ffh
15FA  FF      		db	0ffh
15FB  FF      		db	0ffh
15FC  FF      		db	0ffh
15FD  FF      		db	0ffh
15FE  FF      		db	0ffh
15FF  FF      		db	0ffh
1600  FF      		db	0ffh
1601  FF      		db	0ffh
1602  FF      		db	0ffh
1603  FF      		db	0ffh
1604  FF      		db	0ffh
1605  FF      		db	0ffh
1606  FF      		db	0ffh
1607  FF      		db	0ffh
1608  FF      		db	0ffh
1609  FF      		db	0ffh
160A  FF      		db	0ffh
160B  FF      		db	0ffh
160C  FF      		db	0ffh
160D  FF      		db	0ffh
160E  FF      		db	0ffh
160F  FF      		db	0ffh
1610  FF      		db	0ffh
1611  FF      		db	0ffh
1612  FF      		db	0ffh
1613  FF      		db	0ffh
1614  FF      		db	0ffh
1615  FF      		db	0ffh
1616  FF      		db	0ffh
1617  FF      		db	0ffh
1618  FF      		db	0ffh
1619  FF      		db	0ffh
161A  FF      		db	0ffh
161B  FF      		db	0ffh
161C  FF      		db	0ffh
161D  FF      		db	0ffh
161E  FF      		db	0ffh
161F  FF      		db	0ffh
1620  FF      		db	0ffh
1621  FF      		db	0ffh
1622  FF      		db	0ffh
1623  FF      		db	0ffh
1624  FF      		db	0ffh
1625  FF      		db	0ffh
1626  FF      		db	0ffh
1627  FF      		db	0ffh
1628  FF      		db	0ffh
1629  FF      		db	0ffh
162A  FF      		db	0ffh
162B  FF      		db	0ffh
162C  FF      		db	0ffh
162D  FF      		db	0ffh
162E  FF      		db	0ffh
162F  FF      		db	0ffh
1630  FF      		db	0ffh
1631  FF      		db	0ffh
1632  FF      		db	0ffh
1633  FF      		db	0ffh
1634  FF      		db	0ffh
1635  FF      		db	0ffh
1636  FF      		db	0ffh
1637  FF      		db	0ffh
1638  FF      		db	0ffh
1639  FF      		db	0ffh
163A  FF      		db	0ffh
163B  FF      		db	0ffh
163C  FF      		db	0ffh
163D  FF      		db	0ffh
163E  FF      		db	0ffh
163F  FF      		db	0ffh
1640  FF      		db	0ffh
1641  FF      		db	0ffh
1642  FF      		db	0ffh
1643  FF      		db	0ffh
1644  FF      		db	0ffh
1645  FF      		db	0ffh
1646  FF      		db	0ffh
1647  FF      		db	0ffh
1648  FF      		db	0ffh
1649  FF      		db	0ffh
164A  FF      		db	0ffh
164B  FF      		db	0ffh
164C  FF      		db	0ffh
164D  FF      		db	0ffh
164E  FF      		db	0ffh
164F  FF      		db	0ffh
1650  FF      		db	0ffh
1651  FF      		db	0ffh
1652  FF      		db	0ffh
1653  FF      		db	0ffh
1654  FF      		db	0ffh
1655  FF      		db	0ffh
1656  FF      		db	0ffh
1657  FF      		db	0ffh
1658  FF      		db	0ffh
1659  FF      		db	0ffh
165A  FF      		db	0ffh
165B  FF      		db	0ffh
165C  FF      		db	0ffh
165D  FF      		db	0ffh
165E  FF      		db	0ffh
165F  FF      		db	0ffh
1660  FF      		db	0ffh
1661  FF      		db	0ffh
1662  FF      		db	0ffh
1663  FF      		db	0ffh
1664  FF      		db	0ffh
1665  FF      		db	0ffh
1666  FF      		db	0ffh
1667  FF      		db	0ffh
1668  FF      		db	0ffh
1669  FF      		db	0ffh
166A  FF      		db	0ffh
166B  FF      		db	0ffh
166C  FF      		db	0ffh
166D  FF      		db	0ffh
166E  FF      		db	0ffh
166F  FF      		db	0ffh
1670  FF      		db	0ffh
1671  FF      		db	0ffh
1672  FF      		db	0ffh
1673  FF      		db	0ffh
1674  FF      		db	0ffh
1675  FF      		db	0ffh
1676  FF      		db	0ffh
1677  FF      		db	0ffh
1678  FF      		db	0ffh
1679  FF      		db	0ffh
167A  FF      		db	0ffh
167B  FF      		db	0ffh
167C  FF      		db	0ffh
167D  FF      		db	0ffh
167E  FF      		db	0ffh
167F  FF      		db	0ffh
1680  FF      		db	0ffh
1681  FF      		db	0ffh
1682  FF      		db	0ffh
1683  FF      		db	0ffh
1684  FF      		db	0ffh
1685  FF      		db	0ffh
1686  FF      		db	0ffh
1687  FF      		db	0ffh
1688  FF      		db	0ffh
1689  FF      		db	0ffh
168A  FF      		db	0ffh
168B  FF      		db	0ffh
168C  FF      		db	0ffh
168D  FF      		db	0ffh
168E  FF      		db	0ffh
168F  FF      		db	0ffh
1690  FF      		db	0ffh
1691  FF      		db	0ffh
1692  FF      		db	0ffh
1693  FF      		db	0ffh
1694  FF      		db	0ffh
1695  FF      		db	0ffh
1696  FF      		db	0ffh
1697  FF      		db	0ffh
1698  FF      		db	0ffh
1699  FF      		db	0ffh
169A  FF      		db	0ffh
169B  FF      		db	0ffh
169C  FF      		db	0ffh
169D  FF      		db	0ffh
169E  FF      		db	0ffh
169F  FF      		db	0ffh
16A0  FF      		db	0ffh
16A1  FF      		db	0ffh
16A2  FF      		db	0ffh
16A3  FF      		db	0ffh
16A4  FF      		db	0ffh
16A5  FF      		db	0ffh
16A6  FF      		db	0ffh
16A7  FF      		db	0ffh
16A8  FF      		db	0ffh
16A9  FF      		db	0ffh
16AA  FF      		db	0ffh
16AB  FF      		db	0ffh
16AC  FF      		db	0ffh
16AD  FF      		db	0ffh
16AE  FF      		db	0ffh
16AF  FF      		db	0ffh
16B0  FF      		db	0ffh
16B1  FF      		db	0ffh
16B2  FF      		db	0ffh
16B3  FF      		db	0ffh
16B4  FF      		db	0ffh
16B5  FF      		db	0ffh
16B6  FF      		db	0ffh
16B7  FF      		db	0ffh
16B8  FF      		db	0ffh
16B9  FF      		db	0ffh
16BA  FF      		db	0ffh
16BB  FF      		db	0ffh
16BC  FF      		db	0ffh
16BD  FF      		db	0ffh
16BE  FF      		db	0ffh
16BF  FF      		db	0ffh
16C0  FF      		db	0ffh
16C1  FF      		db	0ffh
16C2  FF      		db	0ffh
16C3  FF      		db	0ffh
16C4  FF      		db	0ffh
16C5  FF      		db	0ffh
16C6  FF      		db	0ffh
16C7  FF      		db	0ffh
16C8  FF      		db	0ffh
16C9  FF      		db	0ffh
16CA  FF      		db	0ffh
16CB  FF      		db	0ffh
16CC  FF      		db	0ffh
16CD  FF      		db	0ffh
16CE  FF      		db	0ffh
16CF  FF      		db	0ffh
16D0  FF      		db	0ffh
16D1  FF      		db	0ffh
16D2  FF      		db	0ffh
16D3  FF      		db	0ffh
16D4  FF      		db	0ffh
16D5  FF      		db	0ffh
16D6  FF      		db	0ffh
16D7  FF      		db	0ffh
16D8  FF      		db	0ffh
16D9  FF      		db	0ffh
16DA  FF      		db	0ffh
16DB  FF      		db	0ffh
16DC  FF      		db	0ffh
16DD  FF      		db	0ffh
16DE  FF      		db	0ffh
16DF  FF      		db	0ffh
16E0  FF      		db	0ffh
16E1  FF      		db	0ffh
16E2  FF      		db	0ffh
16E3  FF      		db	0ffh
16E4  FF      		db	0ffh
16E5  FF      		db	0ffh
16E6  FF      		db	0ffh
16E7  FF      		db	0ffh
16E8  FF      		db	0ffh
16E9  FF      		db	0ffh
16EA  FF      		db	0ffh
16EB  FF      		db	0ffh
16EC  FF      		db	0ffh
16ED  FF      		db	0ffh
16EE  FF      		db	0ffh
16EF  FF      		db	0ffh
16F0  FF      		db	0ffh
16F1  FF      		db	0ffh
16F2  FF      		db	0ffh
16F3  FF      		db	0ffh
16F4  FF      		db	0ffh
16F5  FF      		db	0ffh
16F6  FF      		db	0ffh
16F7  FF      		db	0ffh
16F8  FF      		db	0ffh
16F9  FF      		db	0ffh
16FA  FF      		db	0ffh
16FB  FF      		db	0ffh
16FC  FF      		db	0ffh
16FD  FF      		db	0ffh
16FE  FF      		db	0ffh
16FF  FF      		db	0ffh
1700  FF      		db	0ffh
1701  FF      		db	0ffh
1702  FF      		db	0ffh
1703  FF      		db	0ffh
1704  FF      		db	0ffh
1705  FF      		db	0ffh
1706  FF      		db	0ffh
1707  FF      		db	0ffh
1708  FF      		db	0ffh
1709  FF      		db	0ffh
170A  FF      		db	0ffh
170B  FF      		db	0ffh
170C  FF      		db	0ffh
170D  FF      		db	0ffh
170E  FF      		db	0ffh
170F  FF      		db	0ffh
1710  FF      		db	0ffh
1711  FF      		db	0ffh
1712  FF      		db	0ffh
1713  FF      		db	0ffh
1714  FF      		db	0ffh
1715  FF      		db	0ffh
1716  FF      		db	0ffh
1717  FF      		db	0ffh
1718  FF      		db	0ffh
1719  FF      		db	0ffh
171A  FF      		db	0ffh
171B  FF      		db	0ffh
171C  FF      		db	0ffh
171D  FF      		db	0ffh
171E  FF      		db	0ffh
171F  FF      		db	0ffh
1720  FF      		db	0ffh
1721  FF      		db	0ffh
1722  FF      		db	0ffh
1723  FF      		db	0ffh
1724  FF      		db	0ffh
1725  FF      		db	0ffh
1726  FF      		db	0ffh
1727  FF      		db	0ffh
1728  FF      		db	0ffh
1729  FF      		db	0ffh
172A  FF      		db	0ffh
172B  FF      		db	0ffh
172C  FF      		db	0ffh
172D  FF      		db	0ffh
172E  FF      		db	0ffh
172F  FF      		db	0ffh
1730  FF      		db	0ffh
1731  FF      		db	0ffh
1732  FF      		db	0ffh
1733  FF      		db	0ffh
1734  FF      		db	0ffh
1735  FF      		db	0ffh
1736  FF      		db	0ffh
1737  FF      		db	0ffh
1738  FF      		db	0ffh
1739  FF      		db	0ffh
173A  FF      		db	0ffh
173B  FF      		db	0ffh
173C  FF      		db	0ffh
173D  FF      		db	0ffh
173E  FF      		db	0ffh
173F  FF      		db	0ffh
1740  FF      		db	0ffh
1741  FF      		db	0ffh
1742  FF      		db	0ffh
1743  FF      		db	0ffh
1744  FF      		db	0ffh
1745  FF      		db	0ffh
1746  FF      		db	0ffh
1747  FF      		db	0ffh
1748  FF      		db	0ffh
1749  FF      		db	0ffh
174A  FF      		db	0ffh
174B  FF      		db	0ffh
174C  FF      		db	0ffh
174D  FF      		db	0ffh
174E  FF      		db	0ffh
174F  FF      		db	0ffh
1750  FF      		db	0ffh
1751  FF      		db	0ffh
1752  FF      		db	0ffh
1753  FF      		db	0ffh
1754  FF      		db	0ffh
1755  FF      		db	0ffh
1756  FF      		db	0ffh
1757  FF      		db	0ffh
1758  FF      		db	0ffh
1759  FF      		db	0ffh
175A  FF      		db	0ffh
175B  FF      		db	0ffh
175C  FF      		db	0ffh
175D  FF      		db	0ffh
175E  FF      		db	0ffh
175F  FF      		db	0ffh
1760  FF      		db	0ffh
1761  FF      		db	0ffh
1762  FF      		db	0ffh
1763  FF      		db	0ffh
1764  FF      		db	0ffh
1765  FF      		db	0ffh
1766  FF      		db	0ffh
1767  FF      		db	0ffh
1768  FF      		db	0ffh
1769  FF      		db	0ffh
176A  FF      		db	0ffh
176B  FF      		db	0ffh
176C  FF      		db	0ffh
176D  FF      		db	0ffh
176E  FF      		db	0ffh
176F  FF      		db	0ffh
1770  FF      		db	0ffh
1771  FF      		db	0ffh
1772  FF      		db	0ffh
1773  FF      		db	0ffh
1774  FF      		db	0ffh
1775  FF      		db	0ffh
1776  FF      		db	0ffh
1777  FF      		db	0ffh
1778  FF      		db	0ffh
1779  FF      		db	0ffh
177A  FF      		db	0ffh
177B  FF      		db	0ffh
177C  FF      		db	0ffh
177D  FF      		db	0ffh
177E  FF      		db	0ffh
177F  FF      		db	0ffh
1780  FF      		db	0ffh
1781  FF      		db	0ffh
1782  FF      		db	0ffh
1783  FF      		db	0ffh
1784  FF      		db	0ffh
1785  FF      		db	0ffh
1786  FF      		db	0ffh
1787  FF      		db	0ffh
1788  FF      		db	0ffh
1789  FF      		db	0ffh
178A  FF      		db	0ffh
178B  FF      		db	0ffh
178C  FF      		db	0ffh
178D  FF      		db	0ffh
178E  FF      		db	0ffh
178F  FF      		db	0ffh
1790  FF      		db	0ffh
1791  FF      		db	0ffh
1792  FF      		db	0ffh
1793  FF      		db	0ffh
1794  FF      		db	0ffh
1795  FF      		db	0ffh
1796  FF      		db	0ffh
1797  FF      		db	0ffh
1798  FF      		db	0ffh
1799  FF      		db	0ffh
179A  FF      		db	0ffh
179B  FF      		db	0ffh
179C  FF      		db	0ffh
179D  FF      		db	0ffh
179E  FF      		db	0ffh
179F  FF      		db	0ffh
17A0  FF      		db	0ffh
17A1  FF      		db	0ffh
17A2  FF      		db	0ffh
17A3  FF      		db	0ffh
17A4  FF      		db	0ffh
17A5  FF      		db	0ffh
17A6  FF      		db	0ffh
17A7  FF      		db	0ffh
17A8  FF      		db	0ffh
17A9  FF      		db	0ffh
17AA  FF      		db	0ffh
17AB  FF      		db	0ffh
17AC  FF      		db	0ffh
17AD  FF      		db	0ffh
17AE  FF      		db	0ffh
17AF  FF      		db	0ffh
17B0  FF      		db	0ffh
17B1  FF      		db	0ffh
17B2  FF      		db	0ffh
17B3  FF      		db	0ffh
17B4  FF      		db	0ffh
17B5  FF      		db	0ffh
17B6  FF      		db	0ffh
17B7  FF      		db	0ffh
17B8  FF      		db	0ffh
17B9  FF      		db	0ffh
17BA  FF      		db	0ffh
17BB  FF      		db	0ffh
17BC  FF      		db	0ffh
17BD  FF      		db	0ffh
17BE  FF      		db	0ffh
17BF  FF      		db	0ffh
17C0  FF      		db	0ffh
17C1  FF      		db	0ffh
17C2  FF      		db	0ffh
17C3  FF      		db	0ffh
17C4  FF      		db	0ffh
17C5  FF      		db	0ffh
17C6  FF      		db	0ffh
17C7  FF      		db	0ffh
17C8  FF      		db	0ffh
17C9  FF      		db	0ffh
17CA  FF      		db	0ffh
17CB  FF      		db	0ffh
17CC  FF      		db	0ffh
17CD  FF      		db	0ffh
17CE  FF      		db	0ffh
17CF  FF      		db	0ffh
17D0  FF      		db	0ffh
17D1  FF      		db	0ffh
17D2  FF      		db	0ffh
17D3  FF      		db	0ffh
17D4  FF      		db	0ffh
17D5  FF      		db	0ffh
17D6  FF      		db	0ffh
17D7  FF      		db	0ffh
17D8  FF      		db	0ffh
17D9  FF      		db	0ffh
17DA  FF      		db	0ffh
17DB  FF      		db	0ffh
17DC  FF      		db	0ffh
17DD  FF      		db	0ffh
17DE  FF      		db	0ffh
17DF  FF      		db	0ffh
17E0  FF      		db	0ffh
17E1  FF      		db	0ffh
17E2  FF      		db	0ffh
17E3  FF      		db	0ffh
17E4  FF      		db	0ffh
17E5  FF      		db	0ffh
17E6  FF      		db	0ffh
17E7  FF      		db	0ffh
17E8  FF      		db	0ffh
17E9  FF      		db	0ffh
17EA  FF      		db	0ffh
17EB  FF      		db	0ffh
17EC  FF      		db	0ffh
17ED  FF      		db	0ffh
17EE  FF      		db	0ffh
17EF  FF      		db	0ffh
17F0  FF      		db	0ffh
17F1  FF      		db	0ffh
17F2  FF      		db	0ffh
17F3  FF      		db	0ffh
17F4  FF      		db	0ffh
17F5  FF      		db	0ffh
17F6  FF      		db	0ffh
17F7  FF      		db	0ffh
17F8  FF      		db	0ffh
17F9  FF      		db	0ffh
17FA  FF      		db	0ffh
17FB  FF      		db	0ffh
17FC  FF      		db	0ffh
17FD  FF      		db	0ffh
17FE  FF      		db	0ffh
17FF  FF      		db	0ffh
0000          	if	($ <> 1800h)
		endif
1800          		end



Statistics:

     4	passes
     0	jr promotions
   441	symbols
  6144	bytes

  2763	macro calls
  4064	macro bytes
     0	invented symbols
