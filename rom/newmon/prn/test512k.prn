                ;****************************************************************
                ; H8-512K Banked Memory Test Program		 		*
                ; stand-alone version                		 		*
                ;****************************************************************
                	$*MACRO
 0033 =         rev	equ	'3'
                
                ; NOTE: This does not test every single bit in memory,
                ; but does confirm that 32 unique 16K pages can be mapped
                ; into block 4000H.
                
 0000 =         SEED0	equ	0	; initial pattern seed
                
                	maclib z80
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 000D =         cr	equ 13
 000A =         lf	equ 10
 0007 =         bell	equ 7
                
 0000 =         mmu	equ	000h	; H8-512K Bank Switch Board base port
 0000 =         rd00K	equ	mmu+0
 0001 =         rd16K	equ	mmu+1
 0002 =         rd32K	equ	mmu+2
 0003 =         rd48K	equ	mmu+3
 0004 =         wr00K	equ	mmu+4
 0005 =         wr16K	equ	mmu+5
 0006 =         wr32K	equ	mmu+6
 0007 =         wr48K	equ	mmu+7
                
 4000 =         buf16K	equ	4000h
                
                	cseg
                begin:
 0000 31BE04    	lxi	sp,stack
 0003 3E00      	mvi	a,mmu
 0005 213903    	lxi	h,port
 0008 CD9C02    	call	hexout
 000B 112103    	lxi	d,signon
 000E CDB002    	call	msgout
                ; TODO: scan for 'C'?
                 if 1
 0011 218022    	lxi	h,2280h
 0014 46        	mov	b,m	; len
 0015 23        	inx	h
 0016 7E        skipb:	mov	a,m
 0017 23        	inx	h
 0018 B7        	ora	a
                	jrz	skp1
 0019+2812
 001B FE20      	cpi	' '
                	jrz	skp0
 001D+2804
                	djnz	skipb
 001F+10F5
                	jr	skp1
 0021+180A
 0023 7E        skp0:	mov	a,m
 0024 E65F      	ani	01011111b
 0026 FE43      	cpi	'C'
                	jrnz	skp1
 0028+2003
 002A 323000    	sta	cont
                skp1:
                 endif
 002D C3BD00    	jmp	start
                
 0030 00        cont:	db	0	; continuous mode
                
 0031 00        seed:	db	0
 0032 00        pgnum:	db	0
 0033 00        err0:	db	0
 0034 0000      count:	dw	0
 0036 00        errflg:	db	0
                
                ; If current mapping is not the default/disabled,
                ; things will likely crash here.
                mmu$init:
 0037 F3        	di
 0038 3E00      	mvi	a,0	; page 0
 003A D300      	out	rd00K
 003C D304      	out	wr00K
 003E 3C        	inr	a
 003F D301      	out	rd16K
 0041 D305      	out	wr16K
 0043 3C        	inr	a
 0044 D302      	out	rd32K
 0046 D306      	out	wr32K
 0048 3C        	inr	a
 0049 F680      	ori	080h	; MMU enable
 004B D303      	out	rd48K
 004D D307      	out	wr48K
 004F FB        	ei
 0050 C9        	ret
                
                mmu$deinit:
 0051 F3        	di
                	; leave 080h off, disable MMU and force "pass-thru" mapping.
                	; really, only one OUT needs to be done, but just restore all.
                	; overkill, since we only ever changed rd/wr16K.
 0052 3E00      	mvi	a,0
 0054 D300      	out	rd00K
 0056 D304      	out	wr00K
 0058 3C        	inr	a
 0059 D301      	out	rd16K
 005B D305      	out	wr16K
 005D 3C        	inr	a
 005E D302      	out	rd32K
 0060 D306      	out	wr32K
 0062 3C        	inr	a
 0063 D303      	out	rd48K
 0065 D307      	out	wr48K
 0067 FB        	ei
 0068 C9        	ret
                
                ; A=page num, HL=ref buf
                minchk:
 0069 F680      	ori	080h
 006B D301      	out	rd16K	; map into 16K
 006D D305      	out	wr16K	; (not used - yet)
 006F 110040    	lxi	d,buf16K
 0072 0680      	mvi	b,128
 0074 CD7800    	call	compare
 0077 C9        	ret
                
                ; IX=current bank results
                ; HL=ref buffer
                ; DE=test buffer
                ; B=count
                compare:
 0078 1A        	ldax	d
 0079 BE        	cmp	m
                	jrz	comp0
 007A+280C
                	inrx	+1
 007C+DD3401
                	ldx	a,+2
 007F+DD7E02
 0082 3C        	inr	a
                	jrnz	comp0
 0083+2003
                	stx	e,+2
 0085+DD7302
                comp0:
 0088 23        	inx	h
 0089 13        	inx	d
                	djnz	compare
 008A+10EC
                	ldx	a,+1
 008C+DD7E01
 008F B7        	ora	a
 0090 C9        	ret
                
                ; A=seed (BCD)
                setpat:
 0091 210040    	lxi	h,buf16K
 0094 0680      	mvi	b,128
                setpat0:
 0096 77        	mov	m,a
 0097 23        	inx	h
 0098 C601      	adi	1
 009A 27        	daa
                	djnz	setpat0
 009B+10F9
 009D C9        	ret
                
                ; A=seed (BCD), IX=bank results
                chkpat:
 009E 210040    	lxi	h,buf16K
 00A1 0680      	mvi	b,128
                chkpat0:
 00A3 BE        	cmp	m
                	jrz	chkpat1
 00A4+280C
                	inrx	+1
 00A6+DD3401
                	ldx	e,+2
 00A9+DD5E02
 00AC 1C        	inr	e
                	jrnz	chkpat1
 00AD+2003
                	stx	l,+2
 00AF+DD7502
                chkpat1:
 00B2 23        	inx	h
 00B3 C601      	adi	1
 00B5 27        	daa
                	djnz	chkpat0
 00B6+10EB
                	ldx	a,+1
 00B8+DD7E01
 00BB B7        	ora	a
 00BC C9        	ret
                
                start:
                	; setup results buffer
 00BD 213E03    	lxi	h,banks
 00C0 36FF      	mvi	m,0ffh	; pattern (none)
 00C2 23        	inx	h
 00C3 3600      	mvi	m,0	; num errs
 00C5 23        	inx	h
 00C6 36FF      	mvi	m,0ffh	; 1st err
 00C8 23        	inx	h
 00C9 3600      	mvi	m,0	; not used
 00CB 2B        	dcx	h
 00CC 2B        	dcx	h
 00CD 2B        	dcx	h
 00CE 114203    	lxi	d,banks+4
 00D1 017C00    	lxi	b,lenbnks-4
                	ldir
 00D4+EDB0
                	; initialize buffer to detect errors
 00D6 3E99      	mvi	a,099h
 00D8 CD9100    	call	setpat
                
 00DB CD3700    	call	mmu$init
                
                loop0:
                	lxix	banks
 00DE+DD21
 00E0+3E03
                	; First check if low 4 pages work (3, actually)
 00E2 210000    	lxi	h,0000h
 00E5 3E00      	mvi	a,0	; page 0
 00E7 CD6900    	call	minchk
 00EA 323300    	sta	err0
 00ED 110400    	lxi	d,4
                	dadx	d
 00F0+DD19
 00F2 210040    	lxi	h,4000h
 00F5 3E01      	mvi	a,1	; page 1 - no-op
 00F7 CD6900    	call	minchk
 00FA 4F        	mov	c,a
 00FB 3A3300    	lda	err0
 00FE B1        	ora	c
 00FF 323300    	sta	err0
 0102 110400    	lxi	d,4
                	dadx	d
 0105+DD19
 0107 210080    	lxi	h,8000h
 010A 3E02      	mvi	a,2	; page 2
 010C CD6900    	call	minchk
 010F 4F        	mov	c,a
 0110 3A3300    	lda	err0
 0113 B1        	ora	c
 0114 323300    	sta	err0
 0117 110400    	lxi	d,4
                	dadx	d
 011A+DD19
 011C 2100C0    	lxi	h,0c000h
 011F 3E03      	mvi	a,3	; page 3
 0121 CD6900    	call	minchk
 0124 4F        	mov	c,a
 0125 3A3300    	lda	err0
 0128 B1        	ora	c
 0129 323300    	sta	err0
 012C C2C301    	jnz	nommu
 012F 110400    	lxi	d,4
                	dadx	d
 0132+DD19
                	; Now can do write tests...
 0134 3E00      	mvi	a,SEED0
 0136 323100    	sta	seed
 0139 3E04      	mvi	a,4	; page number
 013B 323200    	sta	pgnum
                loop1:
 013E 3A3100    	lda	seed
                	stx	a,+0
 0141+DD7700
 0144 4F        	mov	c,a
 0145 C601      	adi	1
 0147 27        	daa
 0148 323100    	sta	seed
 014B 3A3200    	lda	pgnum
 014E F680      	ori	080h
 0150 D301      	out	rd16K	; map into 16K
 0152 D305      	out	wr16K	; both RD and WR
 0154 79        	mov	a,c
 0155 CD9100    	call	setpat
 0158 110400    	lxi	d,4
                	dadx	d
 015B+DD19
 015D 3A3200    	lda	pgnum
 0160 3C        	inr	a
 0161 323200    	sta	pgnum
 0164 FE20      	cpi	32
 0166 DA3E01    	jc	loop1
                	; Now can check write...
                	lxix	banks+4*4
 0169+DD21
 016B+4E03
 016D 3E00      	mvi	a,SEED0
 016F 323100    	sta	seed
 0172 3E04      	mvi	a,4	; page number
 0174 323200    	sta	pgnum
                loop2:
 0177 3A3100    	lda	seed
                	stx	a,+0
 017A+DD7700
 017D 4F        	mov	c,a
 017E C601      	adi	1
 0180 27        	daa
 0181 323100    	sta	seed
 0184 3A3200    	lda	pgnum
 0187 F680      	ori	080h
 0189 D301      	out	rd16K	; map into 16K
 018B D305      	out	wr16K	; both RD and WR
 018D 79        	mov	a,c
 018E CD9E00    	call	chkpat
 0191 3A3600    	lda	errflg
                	orx	+1
 0194+DDB601
 0197 323600    	sta	errflg
 019A 110400    	lxi	d,4
                	dadx	d
 019D+DD19
 019F 3A3200    	lda	pgnum
 01A2 3C        	inr	a
 01A3 323200    	sta	pgnum
 01A6 FE20      	cpi	32
 01A8 DA7701    	jc	loop2
 01AB 3A3000    	lda	cont
 01AE B7        	ora	a
                	jrz	done
 01AF+2812
 01B1 CDC402    	call	conchk
                	jrc	done
 01B4+380D
 01B6 2A3400    	lhld	count
 01B9 23        	inx	h
 01BA 223400    	shld	count
 01BD CD7202    	call	wrdout
 01C0 C3DE00    	jmp	loop0
                done:
                nommu:
                	; done with MMU, report results...
 01C3 CD5100    	call	mmu$deinit
                
                	lxix	banks
 01C6+DD21
 01C8+3E03
 01CA AF        	xra	a
 01CB 323200    	sta	pgnum
 01CE 0600      	mvi	b,0
                done0:
                	ldx	a,+1	; num errs
 01D0+DD7E01
 01D3 B7        	ora	a
 01D4 CA0802    	jz	done1
 01D7 04        	inr	b
 01D8 3A3200    	lda	pgnum
 01DB 21DB02    	lxi	h,res0
 01DE CD4502    	call	decout
                	ldx	a,+0
 01E1+DD7E00
 01E4 21E402    	lxi	h,res1
 01E7 CD9C02    	call	hexout
                	ldx	a,+1
 01EA+DD7E01
 01ED 21EC02    	lxi	h,res2
 01F0 CD4502    	call	decout
                	ldx	a,+2
 01F3+DD7E02
 01F6 21F002    	lxi	h,res3
 01F9 CD9C02    	call	hexout
 01FC C5        	push	b
                	pushix
 01FD+DDE5
 01FF 11D702    	lxi	d,result
 0202 CDB002    	call	msgout
                	popix
 0205+DDE1
 0207 C1        	pop	b
 0208 110400    done1:	lxi	d,4
                	dadx	d
 020B+DD19
 020D 3A3200    	lda	pgnum
 0210 3C        	inr	a
 0211 323200    	sta	pgnum
 0214 FE04      	cpi	4
 0216 C22302    	jnz	done2
 0219 3A3300    	lda	err0
 021C B7        	ora	a
 021D C23402    	jnz	nommu0
 0220 3A3200    	lda	pgnum
                done2:
 0223 FE20      	cpi	32
 0225 DAD001    	jc	done0
 0228 78        	mov	a,b
 0229 B7        	ora	a
                	jrnz	cpm	; already reported results
 022A+200E
 022C 11F502    	lxi	d,noerr
 022F CDB002    	call	msgout
                	; TODO: restore and return to monitor
                	jr	cpm
 0232+1806
                
 0234 110803    nommu0:	lxi	d,mmuerr
 0237 CDB002    	call	msgout
                	; TODO: restore and return to monitor
                	;jr	cpm
                
                ; restore and return to monitor...
 023A F3        cpm:	di
 023B AF        	xra	a
 023C D3F2      	out	0f2h
 023E 3EDF      	mvi	a,0dfh
 0240 D3F0      	out	0f0h
 0242 C30000    	jmp	0
                
                ; leading zeroes blanked - must preserve B
                decout:
 0245 0E00      	mvi	c,0
 0247 1664      	mvi	d,100
 0249 CD5602    	call	divide
 024C 160A      	mvi	d,10
 024E CD5602    	call	divide
 0251 C630      	adi	'0'
 0253 77        	mov	m,a
 0254 23        	inx	h
 0255 C9        	ret
                
 0256 1E00      divide:	mvi	e,0
 0258 92        div0:	sub	d
 0259 1C        	inr	e
                	jrnc	div0
 025A+30FC
 025C 82        	add	d
 025D 1D        	dcr	e
                	jrnz	div1
 025E+2008
                	bit	0,c
 0260+CB41
                	jrnz	div1
 0262+2004
 0264 3620      	mvi	m,' '
 0266 23        	inx	h
 0267 C9        	ret
                div1:	setb	0,c
 0268+CBC1
 026A F5        	push	psw	; remainder
 026B 3E30      	mvi	a,'0'
 026D 83        	add	e
 026E 77        	mov	m,a
 026F 23        	inx	h
 0270 F1        	pop	psw	; remainder
 0271 C9        	ret
                
                ; print XXXX[*]<CR>
 0272 7C        wrdout:	mov	a,h
 0273 CD8902    	call	bytout
 0276 7D        	mov	a,l
 0277 CD8902    	call	bytout
 027A 3A3600    	lda	errflg
 027D B7        	ora	a
                	jrz	wrdout0
 027E+2805
 0280 3E2A      	mvi	a,'*'
 0282 CDB902    	call	conout
                wrdout0:
 0285 3E0D      	mvi	a,CR
                	jr	conout
 0287+1830
                
 0289 F5        bytout:	push	psw
 028A 07        	rlc
 028B 07        	rlc
 028C 07        	rlc
 028D 07        	rlc
 028E CD9202    	call	byt0
 0291 F1        	pop	psw
 0292 E60F      byt0:	ani	0fh
 0294 C690      	adi	90h
 0296 27        	daa
 0297 CE40      	aci	40h
 0299 27        	daa
                	jr	conout
 029A+181D
                
 029C F5        hexout:	push	psw
 029D 07        	rlc
 029E 07        	rlc
 029F 07        	rlc
 02A0 07        	rlc
 02A1 CDA502    	call	hex0
 02A4 F1        	pop	psw
 02A5 E60F      hex0:	ani	0fh
 02A7 C690      	adi	90h
 02A9 27        	daa
 02AA CE40      	aci	40h
 02AC 27        	daa
 02AD 77        	mov	m,a
 02AE 23        	inx	h
 02AF C9        	ret
                
 02B0 1A        msgout:	ldax	d
 02B1 B7        	ora	a
 02B2 C8        	rz
 02B3 13        	inx	d
 02B4 CDB902    	call	conout
                	jr	msgout
 02B7+18F7
                
 02B9 F5        conout:	push	psw
 02BA DBED      cono0:	in	0edh
 02BC E620      	ani	00100000b
                	jrz	cono0
 02BE+28FA
 02C0 F1        	pop	psw
 02C1 D3E8      	out	0e8h
 02C3 C9        	ret
                
 02C4 DBED      conchk:	in	0edh
 02C6 E601      	ani	00000001b
 02C8 C8        	rz
 02C9 DBE8      	in	0e8h
 02CB 3E0D      	mvi	a,CR
 02CD CDB902    	call	conout
 02D0 3E0A      	mvi	a,LF
 02D2 CDB902    	call	conout
 02D5 37        	stc
 02D6 C9        	ret
                
 02D7 50616765  result:	db	'Page'
 02DB 6E6E6E2070res0:	db	'nnn patn '
 02E4 6868206572res1:	db	'hh errs '
 02EC 6E6E6E20  res2:	db	'nnn '
 02F0 68680D0A00res3:	db	'hh',cr,lf,0
                
 02F5 4E6F206572noerr:	db	'No errors found.',cr,lf,0
 0308 41626F7274mmuerr:	db	'Aborting test: No MMU?',cr,lf,0
 0321 5465737420signon:	db	'Test H8-512K rev ',rev,' port '
 0339 68680D0A00port:	db	'hh',cr,lf,0
                
                banks:
 033E           	ds	32*4	; pattern seed or 0FFH, num errs, 1st err, n/u
 0080 =         lenbnks	equ	$-banks
                
 03BE           	ds	256
 04BE           stack:	ds	0
                
 04BE           	end	begin
