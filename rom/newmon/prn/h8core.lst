		; H8 Z80-CPU v3.2 Monitor (EEPROM 28C256)
0021          	VERN	equ	021h	; ROM version
		
0000          	false	equ	0
FFFF          	true	equ	not false
		
0000          	alpha	equ	0
0002          	beta	equ	2
		
0000          	z180	equ	false
0000          	h8nofp	equ	false
0000          	h89	equ	false
0000          	nofp	set	false
		
			maclib	ram
**** ram.lib ****
**** h8core.asm ****
			maclib	setup
**** setup.lib ****
**** h8core.asm ****
0000          	 if z180
		 else	; Z80 based
FF80          	pcode	set	0ff80h
			maclib	z80
**** z80.lib ****
**** h8core.asm ****
0000          	 if h8nofp
		 endif
0000          	 if h89
		 endif
		 endif	; z180 else z80
		
0000          	 if h8nofp or h89
		 endif
			$*macro
		
0000          	oled	set	false
0000          	 if h89
		 endif
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
0009          	TAB	equ	9
0008          	BS	equ	8
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
		; ctrl port F2 bit definitions
0014          	ctl$SPD		equ	00010100b	; CPU speed control bits
0002          	ctl$CLK		equ	00000010b	; enable H89 2mS clock (not used here)
0008          	ctl$MEM1	equ	00001000b	; maps full ROM (if !ORG0)
0020          	ctl$ORG0	equ	00100000b	; maps full RAM
0080          	ctl$IO1		equ	10000000b	; enables EEPROM write
		
		; MFlag bit definitions
0080          	mfl$HLT	equ	10000000b	; disable HLT processing (TODO)
0040          	mfl$NRF	equ	01000000b	; disable refresh of display
0002          	mfl$DDU	equ	00000010b	; disable disp update (debug info)
0001          	mfl$CLK	equ	00000001b	; allow 2mS clock hook (user hook)
		
0000          	 if z180
		 else
		; H8-512K MMU
0000          	mmu	equ	0	; base port
0000          	rd	equ	0
0004          	wr	equ	4
0000          	pg0k	equ	0
0001          	pg16k	equ	1
0002          	pg32k	equ	2
0003          	pg48k	equ	3
0080          	ena	equ	80h
0000          	rd00k	equ	mmu+rd+pg0k
0001          	rd16k	equ	mmu+rd+pg16k
0002          	rd32k	equ	mmu+rd+pg32k
0003          	rd48k	equ	mmu+rd+pg48k
0004          	wr00k	equ	mmu+wr+pg0k
0005          	wr16k	equ	mmu+wr+pg16k
0006          	wr32k	equ	mmu+wr+pg32k
0007          	wr48k	equ	mmu+wr+pg48k
		 endif
		
00A0          	rtc	equ	0a0h	; standard port address of RTC 72421
		
3000          	memtest	equ	03000h
C000          	ramboot	equ	0c000h
		; fudge this... H17 junk
1F5A          	R$CONST	equ	01f5ah	; 037.132 R.CONST block...
1C19          	CLOCK	equ	01c19h	; 034.031 CLOCK
		
		; offsets in a module
0000          	mdpgs	equ	0	; num pages
0001          	mdorg	equ	1	; ORG for module (run/load addr)
0002          	mdbase	equ	2	; base phy drv num
0003          	mdluns	equ	3	; num LUNs
0004          	mdinit	equ	4	; init entry point
0007          	mdboot	equ	7	; boot entry point
000A          	mdchr	equ	10	; device letter
000B          	mdkey	equ	11	; device key
000C          	mdport	equ	12	; device port, 0 if variable
000D          	mddisp	equ	13	; boot front panel mnemonic
0010          	mdname	equ	16	; boot string
		
0000          	 if z180
		 else
2000          	btmods	equ	2000h	; boot modules start in ROM
8000          	bterom	equ	8000h	; end/size of ROM
		 endif
		
0010          	rptcnt	equ	16
0001          	debounce equ	1
		
		; Start of ROM code
0000          		org	00000h
		
0000          	rombeg:
0000          	rst0:
0000          	 if nofp
		 else
0000  F3      		di	; can't be JMP or Heath CP/M thinks we're an H89
0001  C33103  		jmp	init
		 endif
		
0004  C3E301  		jmp	getport
0007  00      		db	0
		
0008  CD7000  	rst1:	call	intsetup
000B  2A1B20  		lhld	ticcnt
000E  C36400  		jmp	int1$cont
0000          	 if ((high int1$cont) <> 0)
		 endif
		
0010          	rst2	equ	$-1	; must be a nop...
0011  CD7000  		call	intsetup
0014  1A      		ldax	d
0015  C36701  		jmp	int2$cont
		
0018  C32520  	rst3:	jmp	vrst3	; 0018
		
001B  C3F209  		jmp	crlf	; 001b
001E  970F    		dw	retmon	; 001e
		
0020  C32820  	rst4:	jmp	vrst4
		
0023  000000  		db	0,0,0	; overlayed by WizNet boot, others
0026  C903    		dw	conout	; pointer, not vector; A=char
		
0028  C32B20  	rst5:	jmp	vrst5
		
002B  C30902  		jmp	delay
002E  3F00    	qmsg:	db	'?',TRM
		
0030  C32E20  	rst6:	jmp	vrst6
		
0033  00000000		db	0,0,0,0,0	; overlayed by WizNet boot, others
      00
		
0038  C33120  	rst7:	jmp	vrst7
		
		; routines made public (to modules)
003B  C32303  		jmp	hwboot	; 003b
003E  C32803  		jmp	hxboot	; 003e
0041  C37601  		jmp	take$A	; 0041
0044  C3FC09  		jmp	msgout	; 0044
0047  C30F0E  		jmp	linin	; 0047
004A  C3250A  		jmp	conin1	; 004a - without kaypad or DEL
		
004D          	intret:
004D  F1      		pop	psw
004E  F1      		pop	psw
004F  C1      		pop	b
0050  D1      		pop	d
0051  E1      		pop	h
0052          		popix
0052  DDE1    		DB	0DDH,0E1H
0054          		popiy
0054  FDE1    		DB	0FDH,0E1H
0056          		exx
0056  D9      		DB	0D9H
0057          		exaf
0057  08      		DB	08H
0058  C1      		pop	b	; I,R - R cannot be restored
0059  78      		mov	a,b
005A          		stai
005A  ED47    		DB	0EDH,47H
005C  F1      		pop	psw
005D  C1      		pop	b
005E  D1      		pop	d
005F  E1      		pop	h
0060          		exx
0060  D9      		DB	0D9H
0061          		exaf
0061  08      		DB	08H
0062          	nulint:
0062  FB      		ei
0063  C9      		ret
		
0000          	 if nofp
		 endif
		
0064          	int1$cont:
0064  23      		inx	h
0065  221B20  		shld	ticcnt
0068  3A3620  		lda	ctl$F2
006B  D3F2    		out	0f2h
0000          	 if nofp
		 else
006D  C39A0B  		jmp	int1$fp
		 endif
		
0070          	intsetup:
0070          		exx
0070  D9      		DB	0D9H
0071          		exaf
0071  08      		DB	08H
0072  E3      		xthl	; HL=PC (ret adr)
0073  D5      		push	d
0074  C5      		push	b
0075  F5      		push	psw
0076          		ldar
0076  ED5F    		DB	0EDH,5FH
0078  4F      		mov	c,a
0079          		ldai
0079  ED57    		DB	0EDH,57H
007B  47      		mov	b,a
007C  C5      		push	b
007D          		pushiy
007D  FDE5    		DB	0FDH,0E5H
007F          		pushix
007F  DDE5    		DB	0DDH,0E5H
0081  E5      		push	h	; save PC
0082          		exx
0082  D9      		DB	0D9H
0083          		exaf
0083  08      		DB	08H
0084  E3      		xthl		; HL=PC
0085  D5      		push	d
0086  C5      		push	b
0087  F5      		push	psw
0088  EB      		xchg		; DE=PC
0089  211800  		lxi	h,nReg-2
008C  39      		dad	sp
008D  E5      		push	h
008E  D5      		push	d	; save PC
008F  110920  		lxi	d,ctl$F0
0092  1A      		ldax	d
0093  2F      		cma
0094  E630    		ani	030h
0096  C8      		rz
0097  210200  		lxi	h,2
009A  39      		dad	sp
009B  221D20  		shld	monstk	; a.k.a. RegPtr
009E  C9      		ret
		
009F          	cold$entry:		; re-entry point for RESET
0000          	 if oled
		 endif
009F          	re$entry:		; re-entry point for errors, etc.
009F  210920  		lxi	h,ctl$F0
00A2  36F0    		mvi	m,0f0h	; !beep, 2mS, MON, !SI
00A4  2A1D20  		lhld	monstk
00A7  F9      		sphl
00A8  CDC703  		call	belout	; TODO: beep front panel if appropriate
			;jmp	start
00AB          	start:
00AB  21AB00  		lxi	h,start
00AE  E5      		push	h
			; reset FP display... this doesn't make a lot of sense...
00AF  3A0720  		lda	DspMod
00B2  E601    		ani	00000001b
00B4  2F      		cma
00B5  320620  		sta	DsProt
00B8  FB      		ei
			; avoid prompt if last was keypad command...
00B9  21C306  		lxi	h,prompt
00BC  3A3B20  		lda	lstcmd
00BF  B7      		ora	a
00C0  F4FC09  		cp	msgout
00C3          	prloop:
			; could take one of two paths here,
			; console or kaypad...
00C3  CD3D0A  		call	cmdin
00C6  FE3F    		cpi	'?'	; HELP command?
00C8  CAFD06  		jz	nocmd0	; handled my add-on
00CB  E6DF    		ani	11011111b ; toupper
00CD  323B20  		sta	lstcmd
FFFF          	 if not nofp
00D0  FA3A09  		jm	kpcmd	; from keypad... jumps back here...
		 endif
00D3  21E300  	cmchr:	lxi	h,cmdtab
00D6  061B    		mvi	b,numcmd
00D8          	cmloop:
00D8  BE      		cmp	m
00D9  23      		inx	h
00DA          		jrz	docmd
00DA  285E    		DB	28H,docmd-$-1
00DC  23      		inx	h
00DD  23      		inx	h
00DE          		djnz	cmloop
00DE  10F8    		DB	10H,cmloop-$-1
00E0  C30007  		jmp	nocmd
		
00E3          	cmdtab:
			; console commands
00E3  44      		db	'D' !
00E4  710E    	 dw cmddmp	; Dump memory
00E6  47      		db	'G' !
00E7  1A06    	 dw cmdgo	; Go
00E9  53      		db	'S' !
00EA  6E03    	 dw cmdsub	; Substitute in memory
00EC  50      		db	'P' !
00ED  4301    	 dw cmdpc	; Set PC
00EF  42      		db	'B' !
00F0  3002    	 dw cmdboot; Boot
00F2  4D      		db	'M' !
00F3  9B04    	 dw cmdmt	; Memory Test
00F5  56      		db	'V' !
00F6  820F    	 dw prtver	; Version of ROM
00F8  4C      		db	'L' !
00F9  AF0E    	 dw cmdlb	; List boot modules
00FB  48      		db	'H' !
00FC  EC0E    	 dw cmdhb	; long list (Help) boot modules
00FE  58      		db	'X' !
00FF  570F    	 dw cmdx	; extended command set X_
		; TODO: vflash.sys does 'U', 'A' may require more complexity.
		;	db	'A' ! dw cmdab	; Add boot module
		;	db	'U' ! dw cmdur	; Update entire ROM
0101  5A      		db	'Z' !
0102  2906    	 dw cmdsst	; Go Single-Step
FFFF          	 if not nofp
			; front-panel commands    key(old)  command/action
0104  80      		db	80h !
0105  2907    	 dw kpubt	; [0]     - Universal Boot
0107  81      		db	81h !
0108  EA07    	 dw kppbt	; [1]     - Pri Boot
010A  82      		db	82h !
010B  2708    	 dw kpsbt	; [2]     - Sec Boot
010D  83      		db	83h !
010E  9B08    	 dw kprdx	; [3]     - Radix Mode
0110  84      		db	84h !
0111  2006    	 dw kpgo	; [4]     - Go
0113  85      		db	85h !
0114  5406    	 dw kpin	; [5]     - Input
0116  86      		db	86h !
0117  5E06    	 dw kpout	; [6]     - Output
0119  87      		db	87h !
011A  2F06    	 dw kpsst	; [7]     - Single Step
011C  88      		db	88h !
011D  8A08    	 dw kptap	; [8]     - Cass Load
011F  89      		db	89h !
0120  8A08    	 dw kptap	; [9]     - Cass Store
0122  8A      		db	8ah !
0123  D408    	 dw kpnxt	; [A] [+] - Next
0125  8B      		db	8bh !
0126  EC08    	 dw kpprv	; [B] [-] - Prev
0128  8C      		db	8ch !
0129  6406    	 dw kpabt	; [C] [*] - CANCEL, usually
012B  8D      		db	8dh !
012C  6506    	 dw kprw	; [D] [/] - Display/Alter
012E  8E      		db	8eh !
012F  0709    	 dw kpmem	; [E] [#] - Memory Mode
0131  8F      		db	8fh !
0132  1C09    	 dw kprgm	; [F] [.] - Register Mode
		 endif
001B          	numcmd	equ	($-cmdtab)/3
		
0000          	 if nofp
		 endif
		
			rept	0137h-$
0134  FF      		db	0ffh
0135  FF      		db	0ffh
0136  FF      		db	0ffh
0000          	 if	($ <> 0137h)
		 endif
0137  C30000  		jmp	0	; initialized by H47 boot module
		
013A          	docmd:
013A  B7      		ora	a
013B  F4C903  		cp	conout
013E  4E      		mov	c,m
013F  23      		inx	h
0140  66      		mov	h,m
0141  69      		mov	l,c
0142  E9      	icall:	pchl
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; PC command (set PC)
0143          	cmdpc:
0143  21E306  		lxi	h,pcms
0146  CDFC09  		call	msgout
0149  2A1D20  		lhld	RegPtr
014C  111800  		lxi	d,24	; Reg[PC]
014F  19      		dad	d
0150  5E      		mov	e,m
0151  23      		inx	h
0152  56      		mov	d,m
0153  2B      		dcx	h
0154  EB      		xchg		; HL=PC, DE=adr to store
0155  CDB703  		call	inhexcr
0158          		jrc	cmdpc0	; hex digit entered
0158  3807    		DB	38H,cmdpc0-$-1
015A  CD5104  		call	adrnl	; show current PC (HL)
015D  CDB703  		call	inhexcr	; get another char
0160  D0      		rnc	; CR entered, don't update value
0161          	cmdpc0:
0161  EB      		xchg	; HL=adr to store
0162          	cmdpc1:
0162  160D    		mvi	d,CR
0164  C3FE03  		jmp	adrin
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
0167          	int2$cont:
FFFF          	 if not nofp
0167  F610    		ori	00010000b	; disable single-step
0169  D3F0    		out	0f0h
016B  12      		stax	d
		 else
		 endif
016C  E620    		ani	00100000b	; MON active?
016E  C2AB00  		jnz	start		; break to monitor code
0171  C32220  		jmp	vrst2		; else chain to (possible) user code.
		
0174          	take$5:
0174  3E05    		mvi	a,5	; 5 seconds
0176          	take$A:	; set a timeout for A seconds
0176  218601  		lxi	h,timeout
0179  222020  		shld	vrst1+1
017C  325221  		sta	SEC$CNT
017F  3E81    		mvi	a,mfl$HLT+mfl$CLK
0181  320820  		sta	MFlag
0184  FB      		ei
0185  C9      		ret
		
0186          	timeout:
0186  211B20  		lxi	h,ticcnt
0189  AF      		xra	a
018A  B6      		ora	m
018B  C0      		rnz
018C  23      		inx	h
018D  7E      		mov	a,m
018E  0F      		rrc
018F  D8      		rc
			; every 512 ticks... 1024mS
0190  215221  		lxi	h,SEC$CNT
0193  35      		dcr	m
0194  C0      		rnz
0195          	error:
0195  2A1D20  		lhld	monstk
0198  F9      		sphl
0199  212E00  		lxi	h,qmsg
019C  CDFC09  		call	msgout	; A=0 on return
019F  216200  		lxi	h,nulint
01A2  222020  		shld	vrst1+1
01A5  3E80    		mvi	a,mfl$HLT
01A7  320820  		sta	MFlag
01AA  DBF2    		in	0f2h
01AC  E603    		ani	00000011b
01AE          		jrnz	error0
01AE  2002    		DB	20H,error0-$-1
01B0  D37F    		out	07fh	; clear H17 ctrl port (A=0)
01B2          	error0:
01B2  C39F00  		jmp	re$entry
		
		; determine device for port 078H
		; return phy drv number in D.
01B5          	gtdev1:
01B5  1600    		mvi	d,0	; Z17
01B7  DBF2    		in	0f2h
01B9          	gtdev0:
01B9  E603    		ani	00000011b	; port 078H device
01BB  C8      		rz		; Z17 (or Z37)
01BC  FE01    		cpi	01b
01BE  1605    		mvi	d,5
01C0  C8      		rz		; Z47
01C1  FE02    		cpi	10b
01C3  1603    		mvi	d,3	; Z67/MMS77320
01C5  C8      		rz
01C6  16FF    		mvi	d,0ffh
01C8  C9      		ret	; NZ
		
		; determine device for port 078H
		; return phy drv number in D.
01C9          	gtdev2:
01C9  162E    		mvi	d,46	; Z37
01CB  DBF2    		in	0f2h
01CD  0F      		rrc
01CE  0F      		rrc
01CF          		jr	gtdev0	; rest are same
01CF  18E8    		DB	18H,gtdev0-$-1
		
		; determine default boot device.
01D1          	gtdfbt:
01D1  110000  		lxi	d,0
01D4  DBF2    		in	0f2h
01D6  E670    		ani	01110000b	; default boot selection
01D8  FE20    		cpi	00100000b	; device at 07CH
01DA          		jrz	gtdev1
01DA  28D9    		DB	28H,gtdev1-$-1
01DC  FE30    		cpi	00110000b	; device at 078H
01DE          		jrz	gtdev2
01DE  28E9    		DB	28H,gtdev2-$-1
01E0  C3280D  		jmp	gtdvtb		; get MMS device
		
		; Check SW501 for installed device.
		; C = desired port pattern, 00=Z17/Z37, 01=Z47, 10=Z67, 11=undefined
		; returns base I/O port adr in B.
01E3          	getport:
01E3  067C    		mvi	b,07ch
01E5  DBF2    		in	0f2h
01E7  E603    		ani	003h
01E9  B9      		cmp	c
01EA  C8      		rz
01EB  0678    		mvi	b,078h
01ED  DBF2    		in	0f2h
01EF  0F      		rrc
01F0  0F      		rrc
01F1  E603    		ani	003h
01F3  B9      		cmp	c
01F4  C9      		ret	; let caller decide error handling (NZ)
		
01F5  21FE01  	s501er:	lxi	h,s501ms
01F8  CDFC09  		call	msgout
01FB  C39F00  		jmp	re$entry
		
01FE  20535731	s501ms:	db	' SW1 wrong',TRM
      2077726F
      6E6700
		
0209          	delay:
0209  E5      		push	h
020A  211B20  		lxi	h,ticcnt
020D  86      		add	m
020E          	delay0:
020E  BE      		cmp	m
020F          		jrnz	delay0
020F  20FD    		DB	20H,delay0-$-1
0211  E1      		pop	h
0212  C9      		ret
		
0213          	gotnum:	; Boot N... "N" in D
0213  D5      		push	d	; save unit num (E)
0214  4A      		mov	c,d
0215  06FF    		mvi	b,-1	; boot modules only
0217  21210C  		lxi	h,bfnum
021A  CDAB0C  		call	bfind	; might have already been loaded...
021D  D1      		pop	d
021E  DA9501  		jc	error
0221  CDB402  		call	vfport
0224  DAF501  		jc	s501er
			; convert phy drv to phy base + unit
0227  7A      		mov	a,d
0228          		ldx	d,mdbase
0228  DD5602  		DB	0DDH,d*8+46H,mdbase
022B  92      		sub	d
022C  5F      		mov	e,a	; always zero?
022D  C3F702  		jmp	goboot
		
0230          	cmdboot:
0230  21CA06  		lxi	h,bootms
0233  CDFC09  		call	msgout	; complete (B)oot
0236  3EC3    		mvi	a,0c3h
0238  328022  		sta	bootbf	; mark "no string"
023B  AF      		xra	a
023C  325021  		sta	cport
023F  318022  		lxi	sp,bootbf
0242  0E0D    		mvi	c,CR	; end input on CR
0244          		jr	boot0
0244  182C    		DB	18H,boot0-$-1
		
0000          	 if z180
		 endif
		
			rept	0260h-$
0246  FF      		db	0ffh
0247  FF      		db	0ffh
0248  FF      		db	0ffh
0249  FF      		db	0ffh
024A  FF      		db	0ffh
024B  FF      		db	0ffh
024C  FF      		db	0ffh
024D  FF      		db	0ffh
024E  FF      		db	0ffh
024F  FF      		db	0ffh
0250  FF      		db	0ffh
0251  FF      		db	0ffh
0252  FF      		db	0ffh
0253  FF      		db	0ffh
0254  FF      		db	0ffh
0255  FF      		db	0ffh
0256  FF      		db	0ffh
0257  FF      		db	0ffh
0258  FF      		db	0ffh
0259  FF      		db	0ffh
025A  FF      		db	0ffh
025B  FF      		db	0ffh
025C  FF      		db	0ffh
025D  FF      		db	0ffh
025E  FF      		db	0ffh
025F  FF      		db	0ffh
0000          	 if	($ <> 0260h)
		 endif
		; Legacy entry for "Horn" - beep for num 2mS ticks in A
0260  E5      	hhorn:	push	h
0261  F5      		push	psw
0000          	 if nofp
		 else
0262  CDE705  		call	set$horn
0265  213C20  		lxi	h,horn
0268  AF      		xra	a
		 endif
0269  BE      	hhorn0:	cmp	m
026A          		jrnz	hhorn0
026A  20FD    		DB	20H,hhorn0-$-1
026C  F1      		pop	psw
026D  E1      		pop	h
026E  C9      		ret
026F          	bterr:
026F  CDC703  		call	belout
0272          	boot0:
0272  CD050A  		call	conin
0275  B9      		cmp	c
0276  CA6E0D  		jz	dfboot	; default boot, by phy drv...
0279  1E00    		mvi	e,0
			; boot by letter... Boot alpha-
027B  E65F    		ani	05fh ; toupper
027D  FE41    		cpi	'A'
027F          		jrc	bterr
027F  38EE    		DB	38H,bterr-$-1
0281  FE5B    		cpi	'Z'+1
0283          		jrnc	bterr
0283  30EA    		DB	30H,bterr-$-1
0285  FE41    		cpi	'A'
0287          		jrc	bterr
0287  38E6    		DB	38H,bterr-$-1
0289  CDC903  		call	conout
028C  CDC903  		call	conout
028F  FE42    		cpi	'B'
0291  DA3B0D  		jc	A$boot	; 'A' is synonym for default
0294  C5      	gotit1:	push	b
0295  4F      		mov	c,a
0296  06FF    		mvi	b,-1	; boot modules only
0298  21050C  		lxi	h,bfchr
029B  CDAB0C  		call	bfind
029E  C1      		pop	b
029F  DA9501  		jc	error
02A2  CDB402  		call	vfport
02A5  DAF501  		jc	s501er
02A8          		ldx	d,mdbase	; base phy drv num
02A8  DD5602  		DB	0DDH,d*8+46H,mdbase
02AB          	gotit:
02AB  1E00    		mvi	e,0
02AD  3E2D    		mvi	a,'-'	; next is optional unit number...
02AF  CDC903  		call	conout
02B2          		jr	luboot0
02B2  1815    		DB	18H,luboot0-$-1
		
		; verify port is set
		; IX=boot module (in memory)
02B4          	vfport:	ldx	a,mdport
02B4  DD7E0C  		DB	0DDH,a*8+46H,mdport
02B7  B7      		ora	a
02B8          		jrnz	vfp0
02B8  2007    		DB	20H,vfp0-$-1
02BA  3A5021  		lda	cport	; if btinit did not set, we can't go on
02BD  B7      		ora	a
02BE  C0      		rnz
02BF  37      		stc
02C0  C9      		ret
02C1  325021  	vfp0:	sta	cport
02C4  AF      		xra	a
02C5  C9      		ret
		
02C6          	lunerr:
02C6  CDC703  		call	belout
02C9          	luboot0:
02C9  CD3B04  		call	hexin
02CC          		jrnc	luboot2	; valid HEX digit...
02CC  300D    		DB	30H,luboot2-$-1
02CE  B9      		cmp	c
02CF          		jrz	goboot
02CF  2826    		DB	28H,goboot-$-1
02D1  FE3A    		cpi	':'
02D3          		jrz	colon
02D3  2815    		DB	28H,colon-$-1
02D5  FE20    		cpi	' '
02D7          		jrz	space
02D7  280C    		DB	28H,space-$-1
02D9          		jr	lunerr
02D9  18EB    		DB	18H,lunerr-$-1
02DB          	luboot2:
02DB  CD4F0E  		call	E$x16$A
02DE          		jrc	lunerr
02DE  38E6    		DB	38H,lunerr-$-1
02E0  CDC903  		call	conout
02E3          		jr	luboot0
02E3  18E4    		DB	18H,luboot0-$-1
02E5          	space:
02E5  CDC903  		call	conout
02E8          		jr	luboot0	; TODO: this gets dodgy if spaces between digits.
02E8  18DF    		DB	18H,luboot0-$-1
		
02EA          	colon:	; get arbitrary string as last boot param
02EA  CDC903  		call	conout	; echo ':'
02ED  218122  		lxi	h,bootbf+1
02F0  CD0F0E  		call	linin
02F3  78      		mov	a,b	; excludes TRM
02F4  328022  		sta	bootbf	; bootbf: <len> <string...> as in CP/M cmd buf
		; D=Phys Drive base number, E=Unit number
		; (or, D=Phys Drive unit, E=0)
		; module must have already been loaded
		; NOTE: string might have been placed at bootbf...
		; SP was set to 'bootbf'...
02F7          	goboot:
02F7          		lxiy	error
02F7  FD21    		DB	0FDH,21H
02F9  9501    		DW	error
02FB  CDF209  		call	crlf
		; IY=error routine
		; Move string to stack, if present.
		; Stack space is 292 bytes, be certain not to overrun.
		; Since len value is 127 max + TRM, should be OK.
		; Can't use stack until copy is done... can't destroy DE...
02FE          	gbooty:
02FE  218022  		lxi	h,bootbf
0301  7E      		mov	a,m
0302  FEC3    		cpi	0c3h
0304          		jrz	gboot0
0304  280D    		DB	28H,gboot0-$-1
0306  4F      		mov	c,a	; length
0307  0600    		mvi	b,0
0309  23      		inx	h	; first byte of string...
030A  09      		dad	b	; point to end (TRM)
030B  0C      		inr	c	; +1 for TRM
030C          	btstr1:
030C  7E      		mov	a,m
030D  F5      		push	psw
030E  33      		inx	sp	; undo half of push
030F  2B      		dcx	h
0310  0D      		dcr	c
0311          		jrnz	btstr1
0311  20F9    		DB	20H,btstr1-$-1
0313          	gboot0:
0313          		pushiy	; error routine
0313  FDE5    		DB	0FDH,0E5H
		; IX=boot module (in memory)
		; D=phy drv base, E=unit
0315          	doboot:	; common boot path for console and keypad
0315  CDB509  		call	h17init	; leaves interrupts disabled
0318  7B      		mov	a,e
0319  323121  		sta	AIO$UNI	; relative unit num
031C  7A      		mov	a,d
031D  323420  		sta	l2034h	; boot phys drv base
0320  C30A0D  		jmp	btboot
			; btboot effectively returns here on success
			; (in most cases)
0323  3E80    	hwboot:	mvi	a,mfl$HLT
0325  320820  		sta	MFlag
0328  21191C  	hxboot:	lxi	h,CLOCK
032B  222020  		shld	vrst1+1
032E  C38022  		jmp	bootbf
		
		; ROM start point - initialize everything
		; We know we have at least 64K RAM...
		; But, right now, ROM is in 0000-7FFF so must copy
		; core code and switch to RAM...
0331          	init:
0000          	 if z180
		 else
0331  21FFFF  		lxi	h,0ffffh
0334  F9      		sphl
0335  E5      		push	h	; save top on stack
0000          	 if h89	; must be NC-89
		 endif
0336  3E08    		mvi	a,ctl$MEM1	; MEM1 = full ROM
0338  D3F2    		out	0f2h	; enable full ROM
033A  3A0811  		lda	suadr+m512k
033D  B7      		ora	a
033E  CCD40D  		cz	savram	; H8-512K installed, save RAM
0341  210000  		lxi	h,0
0344  110000  		lxi	d,0
0347  010020  		lxi	b,2000h	; copy everything?
034A          		ldir
034A  EDB0    		DB	0EDH,0B0H
		 endif
			; save config data
034C  210010  		lxi	h,suadr
034F  1100F8  		lxi	d,susave
0352  011101  		lxi	b,sumax
0355          		ldir
0355  EDB0    		DB	0EDH,0B0H
0357  219F00  		lxi	h,cold$entry
035A  E5      		push	h
035B  CDF905  		call	hwinit
035E  CD7504  		call	coninit
0361  CD6E06  		call	meminit
0364  CF      		rst	1	; kick-start clock and EI
0365  21A20F  		lxi	h,signon
0368  CDFC09  		call	msgout
			; save registers on stack, for debugger access...
036B  C37000  		jmp	intsetup
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Substitute command
036E          	cmdsub:
036E  21D806  		lxi	h,subms
0371  CDFC09  		call	msgout
0374  211420  		lxi	h,ABUSS
0377  B7      		ora	a	; NC
0378  160D    		mvi	d,CR
037A  CDFE03  		call	adrin
037D  EB      		xchg
037E          	cmdsub0:
037E  CD5104  		call	adrnl
0381  7E      		mov	a,m
0382  CD6104  		call	hexout
0385  CD5C04  		call	spout
0388          	cmdsub1:
0388  CD3B04  		call	hexin
038B          		jrnc	cmdsub4
038B  3019    		DB	30H,cmdsub4-$-1
038D  FE0D    		cpi	CR
038F          		jrz	cmdsub2
038F  280C    		DB	28H,cmdsub2-$-1
0391  FE2D    		cpi	'-'
0393          		jrz	cmdsub3
0393  280B    		DB	28H,cmdsub3-$-1
0395  FE2E    		cpi	'.'
0397  C8      		rz
0398  CDC703  		call	belout
039B          		jr	cmdsub1
039B  18EB    		DB	18H,cmdsub1-$-1
039D          	cmdsub2:
039D  23      		inx	h
039E          		jr	cmdsub0
039E  18DE    		DB	18H,cmdsub0-$-1
03A0          	cmdsub3:
03A0  CDC903  		call	conout
03A3  2B      		dcx	h
03A4          		jr	cmdsub0
03A4  18D8    		DB	18H,cmdsub0-$-1
03A6          	cmdsub4:
03A6  3600    		mvi	m,000h
03A8          	cmdsub5:
03A8  CDC903  		call	conout
03AB  CD3204  		call	hexbin
03AE          		rld
03AE  ED6F    		DB	0EDH, 6FH
03B0  CDB703  		call	inhexcr
03B3          		jrnc	cmdsub2
03B3  30E8    		DB	30H,cmdsub2-$-1
03B5          		jr	cmdsub5
03B5  18F1    		DB	18H,cmdsub5-$-1
		
03B7          	inhexcr:
03B7  CD050A  		call	conin
03BA  FE0D    		cpi	CR
03BC  C8      		rz
03BD  CD3E04  		call	hexchk
03C0  3F      		cmc
03C1  D8      		rc
03C2  CDC703  		call	belout
03C5          		jr	inhexcr
03C5  18F0    		DB	18H,inhexcr-$-1
		
03C7          	belout:
03C7  3E07    		mvi	a,BEL
03C9          	conout:
03C9  F5      		push	psw
03CA          	conot1:
03CA  DBED    		in	0edh
03CC  E620    		ani	00100000b
03CE          		jrz	conot1
03CE  28FA    		DB	28H,conot1-$-1
03D0  F1      		pop	psw
03D1  D3E8    		out	0e8h
03D3  C9      		ret
		
FFFF          	 if not nofp
			rept	03eeh-$
03D4  FF      		db	0ffh
03D5  FF      		db	0ffh
03D6  FF      		db	0ffh
03D7  FF      		db	0ffh
03D8  FF      		db	0ffh
03D9  FF      		db	0ffh
03DA  FF      		db	0ffh
03DB  FF      		db	0ffh
03DC  FF      		db	0ffh
03DD  FF      		db	0ffh
03DE  FF      		db	0ffh
03DF  FF      		db	0ffh
03E0  FF      		db	0ffh
03E1  FF      		db	0ffh
03E2  FF      		db	0ffh
03E3  FF      		db	0ffh
03E4  FF      		db	0ffh
03E5  FF      		db	0ffh
03E6  FF      		db	0ffh
03E7  FF      		db	0ffh
03E8  FF      		db	0ffh
03E9  FF      		db	0ffh
03EA  FF      		db	0ffh
03EB  FF      		db	0ffh
03EC  FF      		db	0ffh
03ED  FF      		db	0ffh
0000          	 if	($ <> 03eeh)
		 endif
		
		; octal (base 8) 7-seg translation
03EE  01      	doddig:	db	00000001b	; "0."
03EF  73      		db	01110011b	; "1."
03F0  48      		db	01001000b	; "2."
03F1  60      		db	01100000b	; "3."
03F2  32      		db	00110010b	; "4."
03F3  24      		db	00100100b	; "5."
03F4  04      		db	00000100b	; "6."
03F5  71      		db	01110001b	; "7."
03F6  00      		db	00000000b	; "8."
03F7  20      		db	00100000b	; "9."
03F8  10      		db	00010000b	; "A."
03F9  06      		db	00000110b	; "b."
03FA  0D      		db	00001101b	; "C."
03FB  42      		db	01000010b	; "d."
03FC  0C      		db	00001100b	; "E."
03FD  1C      		db	00011100b	; "F."
		 endif
		
		; D=term char (e.g. '.' for Substitute)
		; HL=location to store address
		; CY=first digit in A
03FE          	adrin:
03FE  E5      		push	h	; adr to store value
03FF  D4050A  		cnc	conin
0402  BA      		cmp	d	; no input?
0403  CA4F06  		jz	adrin3
0406  210000  		lxi	h,0
0409  37      		stc
040A  D4050A  	adrin0:	cnc	conin
040D  CD3E04  		call	hexchk
0410          		jrc	adrin1
0410  380E    		DB	38H,adrin1-$-1
0412  CDC903  		call	conout
0415  CD3204  		call	hexbin
0418  29      		dad	h
0419  29      		dad	h
041A  29      		dad	h
041B  29      		dad	h
041C  B5      		ora	l
041D  6F      		mov	l,a
041E          		jr	adrin0
041E  18EA    		DB	18H,adrin0-$-1
0420          	adrin1:
0420  BA      		cmp	d
0421          		jrz	adrin2
0421  2806    		DB	28H,adrin2-$-1
0423  CDC703  		call	belout
0426  B7      		ora	a
0427          		jr	adrin0
0427  18E1    		DB	18H,adrin0-$-1
0429          	adrin2:
0429  CDC903  		call	conout
042C  EB      		xchg
042D  E1      		pop	h
042E  73      		mov	m,e
042F  23      		inx	h
0430  72      		mov	m,d
0431  C9      		ret
		
0432          	hexbin:
0432  D63A    		sui	'9'+1
0434          		jrnc	hexbi0
0434  3002    		DB	30H,hexbi0-$-1
0436  C607    		adi	7
0438          	hexbi0:
0438  C603    		adi	3
043A  C9      		ret
		
043B          	hexin:
043B  CD050A  		call	conin
043E          	hexchk:
043E  FE30    		cpi	'0'
0440  D8      		rc
0441  FE3A    		cpi	'9'+1
0443  3F      		cmc
0444  D0      		rnc
0445  FE41    		cpi	'A'
0447  D8      		rc
0448  E65F    		ani	05fh	; toupper
044A  FE41    		cpi	'A'
044C  D8      		rc
044D  FE47    		cpi	'F'+1
044F  3F      		cmc
0450  C9      		ret
		
		; HL = adr to print
0451          	adrnl:
0451  CDF209  		call	crlf
0454          	adrout:
0454  7C      		mov	a,h
0455  CD6104  		call	hexout
0458  7D      		mov	a,l
0459  CD6104  		call	hexout
045C          	spout:
045C  3E20    		mvi	a,' '
045E  C3C903  		jmp	conout
		
0461          	hexout:
0461  F5      		push	psw
0462  07      		rlc
0463  07      		rlc
0464  07      		rlc
0465  07      		rlc
0466  CD6A04  		call	hexdig
0469  F1      		pop	psw
046A          	hexdig:
046A  E60F    		ani	00fh
046C  C690    		adi	090h
046E  27      		daa
046F  CE40    		aci	040h
0471  27      		daa
0472  C3C903  		jmp	conout
		
0475          	coninit:
0475  0E0C    		mvi	c,12	; 9600 baud
0477  DBF2    		in	0f2h
0479  E680    		ani	10000000b	; 9600/19.2K?
047B          		jrz	ci0
047B  2802    		DB	28H,ci0-$-1
047D  0E06    		mvi	c,6	; 19.2K baud
047F  3E83    	ci0:	mvi	a,083h
0481  D3EB    		out	0ebh
0483  AF      		xra	a
0484  D3E9    		out	0e9h
0486  79      		mov	a,c
0487  D3E8    		out	0e8h
0489  3E03    		mvi	a,003h
048B  D3EB    		out	0ebh
048D  AF      		xra	a
048E  D3E9    		out	0e9h
0490  3E0F    		mvi	a,00001111b	; OUT2=1 hides 16C2550 intr enable diff
0492  D3EC    		out	0ech
0494  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Memory Test command
		
0495          	cserr:
0495  21A906  		lxi	h,cserms
0498  C3FC09  		jmp	msgout
		
049B          	cmdmt:
049B  21F006  		lxi	h,mtms
049E  CDFC09  		call	msgout
04A1  CDEB09  		call	waitcr
04A4  21B606  		lxi	h,topms
04A7  CDFC09  		call	msgout
04AA  210000  		lxi	h,0
04AD  39      		dad	sp
04AE  7C      		mov	a,h
04AF  3C      		inr	a
04B0          		jrz	cmdmt0
04B0  2802    		DB	28H,cmdmt0-$-1
04B2  D620    		sui	020h
04B4          	cmdmt0:
04B4  67      		mov	h,a
04B5  2E00    		mvi	l,0
04B7  2B      		dcx	h
04B8  D630    		sui	'0'
04BA  5F      		mov	e,a
04BB  CD5404  		call	adrout
04BE  CDF209  		call	crlf
04C1  1600    		mvi	d,000h
04C3  0E30    		mvi	c,030h
04C5  0600    		mvi	b,000h
04C7          		exx
04C7  D9      		DB	0D9H
04C8  21F904  		lxi	h,mtest0
04CB  11FE2F  		lxi	d,memtest - (mtest1-mtest0)
04CE  01EE00  		lxi	b,mtestZ-mtest0
04D1          		ldir
04D1  EDB0    		DB	0EDH,0B0H
04D3  110030  		lxi	d,memtest
04D6  21FB04  		lxi	h,mtest1
04D9  0EEC    		mvi	c,mtestZ-mtest1
04DB  AF      		xra	a
04DC          		exaf
04DC  08      		DB	08H
04DD  AF      		xra	a
04DE          	cmdmt1:
04DE  86      		add	m
04DF          		exaf
04DF  08      		DB	08H
04E0  EB      		xchg
04E1  86      		add	m
04E2          		exaf
04E2  08      		DB	08H
04E3  EB      		xchg
04E4  23      		inx	h
04E5  13      		inx	d
04E6  0D      		dcr	c
04E7          		jrnz	cmdmt1
04E7  20F5    		DB	20H,cmdmt1-$-1
04E9  4F      		mov	c,a
04EA          		exaf
04EA  08      		DB	08H
04EB  B9      		cmp	c
04EC          		jrnz	cserr
04EC  20A7    		DB	20H,cserr-$-1
04EE  F3      		di
04EF  3A3620  		lda	ctl$F2
04F2  E614    		ani	ctl$SPD	; all but speed bits OFF
04F4  F620    		ori	ctl$ORG0	; set ORG0 only
			; pass ctl$F2 in A...
04F6  C3FE2F  		jmp	memtest - (mtest1-mtest)
		
		;------------------------------------------------
		; Start of relocated code...
		; Memory Test routine, position-independent
		;
04F9          	mtest0:
04F9          	mtest:
			; A reg contains desired ctl$F2 image
04F9  D3F2    		out	0f2h
04FB          	mtest1:		; lands at 03000h - retained relocated code
04FB          		exx
04FB  D9      		DB	0D9H
04FC  62      		mov	h,d
04FD  2E00    		mvi	l,0
04FF  78      		mov	a,b
0500          		exx
0500  D9      		DB	0D9H
0501  4F      		mov	c,a
0502  0602    		mvi	b,2
0504          	mtest2:
0504  79      		mov	a,c
0505  07      		rlc
0506  07      		rlc
0507  07      		rlc
0508  07      		rlc
0509  4F      		mov	c,a
050A  E60F    		ani	00fh
050C  C690    		adi	090h
050E  27      		daa
050F  CE40    		aci	040h
0511  27      		daa
0512  D3E8    		out	0e8h
0514          	mtest3:
0514  DBED    		in	0edh
0516  E620    		ani	020h
0518          		jrz	mtest3
0518  28FA    		DB	28H,mtest3-$-1
051A  05      		dcr	b
051B          		jrnz	mtest2
051B  20E7    		DB	20H,mtest2-$-1
051D  3E0D    		mvi	a,CR
051F  D3E8    		out	0e8h
0521          		exx
0521  D9      		DB	0D9H
0522  78      		mov	a,b
0523          	mtest4:
0523  77      		mov	m,a
0524  C601    		adi	1
0526  27      		daa
0527  2C      		inr	l
0528          		jrnz	mtest4
0528  20F9    		DB	20H,mtest4-$-1
052A  24      		inr	h
052B  0D      		dcr	c
052C          		jrnz	mtest4
052C  20F5    		DB	20H,mtest4-$-1
052E  7C      		mov	a,h
052F  92      		sub	d
0530  4F      		mov	c,a
0531  62      		mov	h,d
0532  2E00    		mvi	l,0
0534  78      		mov	a,b
0535          	mtest5:
0535  BE      		cmp	m
0536          		jrnz	mtest9
0536  2046    		DB	20H,mtest9-$-1
0538  C601    		adi	1
053A  27      		daa
053B  2C      		inr	l
053C          		jrnz	mtest5
053C  20F7    		DB	20H,mtest5-$-1
053E  24      		inr	h
053F  0D      		dcr	c
0540          		jrnz	mtest5
0540  20F3    		DB	20H,mtest5-$-1
0542          		exx
0542  D9      		DB	0D9H
0543  210030  		lxi	h,memtest
0546  110000  		lxi	d,0
0549  01EC00  		lxi	b,mtestZ-mtest1
054C          		exx
054C  D9      		DB	0D9H
054D  7A      		mov	a,d
054E  EE30    		xri	030h
0550  57      		mov	d,a
0551          		jrz	mtest6
0551  2803    		DB	28H,mtest6-$-1
0553  4B      		mov	c,e
0554          		jr	mtest7
0554  180A    		DB	18H,mtest7-$-1
0556          	mtest6:
0556  0E30    		mvi	c,030h
0558  3E01    		mvi	a,001h
055A  80      		add	b
055B  27      		daa
055C  47      		mov	b,a
055D          		exx
055D  D9      		DB	0D9H
055E  EB      		xchg
055F          		exx
055F  D9      		DB	0D9H
0560          	mtest7:
0560          		exx
0560  D9      		DB	0D9H
0561          		ldir
0561  EDB0    		DB	0EDH,0B0H
0563  7A      		mov	a,d
0564  E6F0    		ani	0f0h
0566  67      		mov	h,a
0567  2E00    		mvi	l,0
0569  0EEC    		mvi	c,mtestZ-mtest1
056B  AF      		xra	a
056C          	mtest8:
056C  86      		add	m
056D  23      		inx	h
056E  0D      		dcr	c
056F          		jrnz	mtest8
056F  20FB    		DB	20H,mtest8-$-1
0571  4F      		mov	c,a
0572          		exaf
0572  08      		DB	08H
0573  B9      		cmp	c
0574          		jrnz	mtestE
0574  2049    		DB	20H,mtestE-$-1
0576          		exaf
0576  08      		DB	08H
0577  7A      		mov	a,d
0578  E6F0    		ani	0f0h
057A  67      		mov	h,a
057B  2E00    		mvi	l,0
057D  E9      		pchl
057E          	mtest9:
057E  AE      		xra	m
057F  57      		mov	d,a
0580  3E0A    		mvi	a,LF
0582  D3E8    		out	0e8h
0584          	mtestA:
0584  DBED    		in	0edh
0586  E620    		ani	020h
0588          		jrz	mtestA
0588  28FA    		DB	28H,mtestA-$-1
058A  0E02    		mvi	c,2
058C  0604    		mvi	b,4
058E          	mtestB:
058E  7C      		mov	a,h
058F  07      		rlc
0590  07      		rlc
0591  07      		rlc
0592  07      		rlc
0593  E60F    		ani	00fh
0595  C690    		adi	090h
0597  27      		daa
0598  CE40    		aci	040h
059A  27      		daa
059B  D3E8    		out	0e8h
059D          	mtestC:
059D  DBED    		in	0edh
059F  E620    		ani	020h
05A1          		jrz	mtestC
05A1  28FA    		DB	28H,mtestC-$-1
05A3  29      		dad	h
05A4  29      		dad	h
05A5  29      		dad	h
05A6  29      		dad	h
05A7          		djnz	mtestB
05A7  10E5    		DB	10H,mtestB-$-1
05A9  3E20    		mvi	a,' '
05AB  D3E8    		out	0e8h
05AD          	mtestD:
05AD  DBED    		in	0edh
05AF  E620    		ani	020h
05B1          		jrz	mtestD
05B1  28FA    		DB	28H,mtestD-$-1
05B3  0D      		dcr	c
05B4  EB      		xchg
05B5  0602    		mvi	b,002h
05B7          		jrnz	mtestB
05B7  20D5    		DB	20H,mtestB-$-1
05B9  3E2A    		mvi	a,'*'
05BB  D3E8    		out	0e8h
05BD          		jr	mtestG
05BD  1814    		DB	18H,mtestG-$-1
05BF          	mtestE:
05BF  DBED    		in	0edh
05C1  E620    		ani	020h
05C3          		jrz	mtestE
05C3  28FA    		DB	28H,mtestE-$-1
05C5  3E0A    		mvi	a,LF
05C7  D3E8    		out	0e8h
05C9          	mtestF:
05C9  DBED    		in	0edh
05CB  E620    		ani	020h
05CD          		jrz	mtestF
05CD  28FA    		DB	28H,mtestF-$-1
05CF  3E21    		mvi	a,'!'
05D1  D3E8    		out	0e8h
05D3          	mtestG:
05D3  DBED    		in	0edh
05D5  E620    		ani	020h
05D7          		jrz	mtestG
05D7  28FA    		DB	28H,mtestG-$-1
05D9  AF      		xra	a
05DA  06FA    		mvi	b,0fah
05DC          	mtestH:
05DC  3D      		dcr	a
05DD          		jrnz	mtestH
05DD  20FD    		DB	20H,mtestH-$-1
05DF          		djnz	mtestH
05DF  10FB    		DB	10H,mtestH-$-1
05E1  3E07    		mvi	a,BEL
05E3  D3E8    		out	0e8h
05E5          		jr	mtestG
05E5  18EC    		DB	18H,mtestG-$-1
		; End of relocated code
05E7          	mtestZ	equ	$
		;------------------------------------------------
		
FFFF          	 if not nofp
		; must be called with interrupts off
		; A = horn delay, in 2mS ticks
		; A,HL used
05E7          	set$horn:
05E7  323C20  		sta	horn
05EA  210920  		lxi	h,ctl$F0
05ED          		res	7,m	; beep on
05ED  CBBE    		DB	0CBH,7*8+m+80H
05EF  7E      		mov	a,m
05F0  D3F0    		out	0f0h
05F2  C9      		ret
		
		; must be called with interrupts enabled
		; A = horn delay, in 2mS ticks
		; A,HL used
05F3          	set$horn0:
05F3  F3      		di
05F4  CDE705  		call	set$horn
05F7  FB      		ei
05F8  C9      		ret
		 endif
		
		; If this gets much bigger, needs to move
05F9          	hwinit:
			; The RTC 72421 will be in an unknown state.
			; If STD.P has been connected to /INTx,
			; we must ensure interrupts are off.
05F9  3E01    		mvi	a,00000001b ; mask pulse/intr, reset rest
05FB  D3AE    		out	rtc+14
05FD  AF      		xra	a
05FE  D3AD    		out	rtc+13	; clear pending intr, HOLD
			; TODO: any other hardware needs init?
0000          	 if z180
		 endif
0600  C9      		ret
		
		; Special entry points expected by HDOS, or maybe Heath CP/M boot.
			rept	0613h-$
0601  FF      		db	0ffh
0602  FF      		db	0ffh
0603  FF      		db	0ffh
0604  FF      		db	0ffh
0605  FF      		db	0ffh
0606  FF      		db	0ffh
0607  FF      		db	0ffh
0608  FF      		db	0ffh
0609  FF      		db	0ffh
060A  FF      		db	0ffh
060B  FF      		db	0ffh
060C  FF      		db	0ffh
060D  FF      		db	0ffh
060E  FF      		db	0ffh
060F  FF      		db	0ffh
0610  FF      		db	0ffh
0611  FF      		db	0ffh
0612  FF      		db	0ffh
0000          	 if	($ <> 0613h)
		 endif
0613  C30000  		jmp	0	; initialized by H47 boot module
0616  00      		db	0
0617  C30000  		jmp	0	; initialized by H47 boot module
		
0000          	 if nofp
		 endif
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Go command
061A          	cmdgo:
061A  21CF06  		lxi	h,goms
061D  CD3C06  		call	getpc
			; Both H89 and H8-FP maintain MON flag internally
0620          	kpgo:	; entry point for keypad GO command...
0620  3ED0    		mvi	a,11010000b	; no-beep, 2mS, !MON, !single-step
0622  320920  		sta	ctl$F0
0625          	cmdgo1:
0625  E1      		pop	h
0626  C34D00  		jmp	intret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Go Single-Step command
0629          	cmdsst:
0629  21D206  		lxi	h,sstms
062C  CDFC09  		call	msgout
062F          	kpsst:	; entry point for keypad SI command
062F  F3      		di
FFFF          	 if not nofp
0630  3A0920  		lda	ctl$F0
0633  EE10    		xri	00010000b	; toggle single-step = enable
0635  D3F0    		out	0f0h
0637  320920  		sta	ctl$F0
		 else
		 endif
063A          		jr	cmdgo1
063A  18E9    		DB	18H,cmdgo1-$-1
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		; HL=prompt message, ends with CRLF
063C          	getpc:
063C  CDFC09  		call	msgout
063F  2A1D20  		lhld	RegPtr
0642  111800  		lxi	d,24	; Reg[PC]
0645  19      		dad	d	; HL=adr to store
0646  CDB703  		call	inhexcr
0649  DC6201  		cc	cmdpc1	; read HEX until CR, store in HL
064C  C3F209  		jmp	crlf
		
0000          	 if z180
		 endif
		
064F  E1      	adrin3:	pop	h
0650  5E      		mov	e,m
0651  23      		inx	h
0652  56      		mov	d,m
0653  C9      		ret
		
FFFF          	 if not nofp
		; ABUSS L=port, H=value
0654  2A1420  	kpin:	lhld	ABUSS
0657  4D      		mov	c,l	; port
0658          		inp	h	; get value
0658  ED60    		DB	0EDH,h*8+40H
065A  221420  		shld	ABUSS
065D  C9      		ret
		
		; ABUSS L=port, H=value
065E  2A1420  	kpout:	lhld	ABUSS
0661  4D      		mov	c,l	; port
0662          		outp	h	; output value
0662  ED61    		DB	0EDH,h*8+41H
0664  C9      	kpabt:	ret
		
0665          	kprw:	; switch between display/modify
0665  3A0720  		lda	DspMod
0668  EE01    		xri	1
066A  320720  		sta	DspMod
066D  C9      		ret
		 endif
		
		; initialize monitor memory at 2000h
066E          	meminit:
066E  AF      		xra	a
066F  325321  		sta	l2153h
0672  323B20  		sta	lstcmd
0675  320520  		sta	RegI
0678  320620  		sta	DsProt
067B  320720  		sta	DspMod
067E  323920  		sta	Radix
0681  323A20  		sta	kpchar
0684  323C20  		sta	horn
0687  3C      		inr	a	; 1
0688  320A20  		sta	Refind
0000          	 if nofp
		 else
068B  3E20    		mvi	a,ctl$ORG0	; ORG0 on, 2mS off...
		 endif
068D  323620  		sta	ctl$F2	; 2mS off, ORG0 on
0690  D3F2    		out	0f2h	; enable RAM now...
0692  3EC9    		mvi	a,0c9h	; RET
0694  320420  		sta	PrsRAM
0697  218050  		lxi	h,(50h SHL 8)+(mfl$HLT) ; 50h = (beep, 2mS, !MON, !SI)
069A  220820  		shld	MFlag	; MFlag, CtlFlg
069D  21FFFF  		lxi	h,0ffffh	; top of memory
06A0  221420  		shld	ABUSS
06A3  3E01    		mvi	a,debounce
06A5  321720  		sta	kpcnt
06A8  C9      		ret
		
		; for cmdmt...
06A9  07436B73	cserms:	db	BEL,'Cksum error',TRM
      756D2065
      72726F72
      00
06B6  546F7020	topms:	db	'Top of Mem: ',TRM
      6F66204D
      656D3A20
      00
		
06C3  0D0A4838	prompt:	db	CR,LF,'H8'
0000          	 if h8nofp
		 endif
0000          	 if h89
		 endif
06C7  3A2000  		db	': ',TRM
06CA  6F6F7420	bootms:	db	'oot ',TRM
      00
06CF  6F2000  	goms:	db	'o ',TRM
06D2  2D537465	sstms:	db	'-Step',TRM
      7000
06D8  75627374	subms:	db	'ubstitute ',TRM
      69747574
      652000
06E3  726F6720	pcms:	db	'rog Counter ',TRM
      436F756E
      74657220
      00
06F0  656D2074	mtms:	db	'em test',TRM
      65737400
06F8  756D7020	dmpms:	db	'ump ',TRM
      00
		
		; command not built-in, check modules.
		; should only be called for console commands.
		; A=cmd key/chr (also in 'lstcmd')
06FD          	nocmd0:
06FD  323B20  		sta	lstcmd
0700          	nocmd:
0700  4F      		mov	c,a
0701  0600    		mvi	b,0	; no boot modules
0703  21050C  		lxi	h,bfchr
0706  CDAB0C  		call	bfind
0709          		jrc	cmerr
0709  3809    		DB	38H,cmerr-$-1
070B  3A3B20  		lda	lstcmd
070E  CDC903  		call	conout
0711  C30A0D  		jmp	cmexec
		
0714  CDC703  	cmerr:	call	belout
0717  C3C300  		jmp	prloop
		
0000          	 if oled	; for now, only this
		 endif
		
FFFF          	 if not nofp
		; get "alternate" (secondary) boot device...
071A          	galtbt:
071A  110000  		lxi	d,0
071D  DBF2    		in	0f2h
071F  E670    		ani	01110000b	; default boot selection
0721  FE20    		cpi	00100000b	; if default at 07CH,
0723  CAC901  		jz	gtdev2		; get 078H device...
		; if device was not 07CH, then use 07CH... ???
		;;	cpi	00110000b	; if device at 078H
		;;	jz	gtdev1		; get 07CH device...
0726  C3B501  		jmp	gtdev1		; get 07CH device...
		
0729          	kpubt:
0729  3A0820  		lda	MFlag
072C  F602    		ori	mfl$DDU	; disable disp updates
072E  320820  		sta	MFlag
0731  CD8C0B  		call	clrdisp	; clean slate
0734  01450B  		lxi	b,dDev
0737  110B20  		lxi	d,Aleds
073A  CD820B  		call	mov3dsp
073D  CD2F0A  		call	keyin	; get device
0740  E67F    		ani	01111111b
0742  FE0C    		cpi	0ch	; cancel
0744  CAA207  		jz	kperr
0747  325121  		sta	BDF
074A  4F      		mov	c,a
074B  06FF    		mvi	b,-1	; boot modules only
074D  21130C  		lxi	h,bfkey
0750  CDAB0C  		call	bfind
0753          		jrc	deverr
0753  384D    		DB	38H,deverr-$-1
0755          		pushix
0755  DDE5    		DB	0DDH,0E5H
0757  C1      		pop	b	; b = IXh
0758  0E0D    		mvi	c,mddisp
075A  110B20  		lxi	d,Aleds
075D  CD820B  		call	mov3dsp
0760  D5      		push	d	; save LEDs pointer
			; determine if fixed port...
0761          		ldx	a,mdport
0761  DD7E0C  		DB	0DDH,a*8+46H,mdport
0764  B7      		ora	a
0765          		jrnz	gotprt
0765  2018    		DB	20H,gotprt-$-1
0767  01480B  		lxi	b,dPor
076A  CD820B  		call	mov3dsp
076D  CD2F0A  		call	keyin	; get port
0770  E67F    		ani	01111111b
0772  FE04    		cpi	04h	; 0..3 allowed
0774  D2A207  		jnc	deverr
0777  5F      		mov	e,a
0778  1600    		mvi	d,0
077A  21E607  		lxi	h,ports
077D  19      		dad	d
077E  7E      		mov	a,m
077F  E1      	gotprt:	pop	h	; LEDs pointer
0780  325021  		sta	cport
0783  CDC90A  		call	dod	; decode number to HL
0786  54      		mov	d,h
0787  5D      		mov	e,l
0788  014B0B  		lxi	b,dUni
078B  CD820B  		call	mov3dsp
078E  CD2F0A  		call	keyin	; get unit
0791  E67F    		ani	01111111b
0793  5F      		mov	e,a
0794          		ldx	d,mdbase
0794  DD5602  		DB	0DDH,d*8+46H,mdbase
0797  3EC3    		mvi	a,0c3h
0799  328022  		sta	bootbf	; mark "no string"
079C  318022  		lxi	sp,bootbf
079F  CD1503  		call	doboot	; only returns if error...
07A2          	kperr:
07A2          	deverr:
07A2  FB      		ei	; TODO: more required before this?
07A3  210820  		lxi	h,MFlag
07A6  7E      		mov	a,m
07A7  E6FE    		ani	not mfl$CLK	; disable "private" clock intr
07A9  F602    		ori	mfl$DDU		; disable disp updates
07AB  77      		mov	m,a
07AC  014E0B  		lxi	b,dErr
07AF  110B20  		lxi	d,Aleds
07B2  2E06    		mvi	l,6
07B4  CD840B  		call	movLdsp
07B7  0E80    		mvi	c,10000000b	; beep on/off bit
07B9  211B20  		lxi	h,ticcnt
07BC  110920  		lxi	d,ctl$F0
07BF          	bterr0:
07BF  1A      		ldax	d
07C0  A9      		xra	c	; beep on
07C1  12      		stax	d
07C2  7E      		mov	a,m
07C3  C619    		adi	25	; 50mS
07C5          	bterr2:
07C5  BE      		cmp	m
07C6          		jrnz	bterr2
07C6  20FD    		DB	20H,bterr2-$-1
07C8  1A      		ldax	d
07C9  A9      		xra	c	; beep off
07CA  12      		stax	d
07CB  7E      		mov	a,m
07CC  C6FF    		adi	-1
07CE  BE      	bterr1:	cmp	m
07CF          		jrz	bterr0
07CF  28EE    		DB	28H,bterr0-$-1
07D1  3A3A20  		lda	kpchar
07D4  FE6F    		cpi	01101111b	; raw pattern for '*' or CANCEL
07D6          		jrnz	bterr1
07D6  20F6    		DB	20H,bterr1-$-1
07D8  AF      		xra	a
07D9  323A20  		sta	kpchar
07DC  210820  		lxi	h,MFlag
07DF  7E      		mov	a,m
07E0  E6BD    		ani	not (mfl$NRF+mfl$DDU)	; MFlag normal mode...
07E2  77      		mov	m,a
			; should return to 'start' but avoid extra prompts...
07E3  C39F00  		jmp	re$entry
		
		; port options for keys 0-3
07E6  787CB8BC	ports:	db	078h,07ch,0b8h,0bch
		
07EA          	kppbt:	; primary boot (default boot)
07EA  3EC3    		mvi	a,0c3h
07EC  328022  		sta	bootbf	; mark "no string"
07EF  01570B  		lxi	b,dPri
07F2  CD5D08  		call	btdsp
07F5  CDD101  		call	gtdfbt
07F8  7A      		mov	a,d
07F9  FEFF    		cpi	0ffh
07FB  CAA207  		jz	kperr
07FE  FEFE    		cpi	0feh
0800          		jrz	kppbt0
0800  2841    		DB	28H,kppbt0-$-1
0802          	kpbt0:
0802  AF      		xra	a
0803  325021  		sta	cport
0806  D5      		push	d	; phy drv, unit
0807  4A      		mov	c,d
0808  06FF    		mvi	b,-1	; boot modules only
080A  21210C  		lxi	h,bfnum
080D  CDAB0C  		call	bfind	; might have already been loaded...
0810  DAA207  		jc	kperr
0813  CDB402  		call	vfport
0816  DAA207  		jc	kperr	; TODO: specific error? SW1 Error?
0819  CD7308  		call	btdsp2	; show device name
081C  D1      		pop	d	; phy drv, unit
081D  318022  		lxi	sp,bootbf
0820  21A207  		lxi	h,kperr
0823  E5      		push	h
0824  C31503  		jmp	doboot
		
0827          	kpsbt:	; secondary boot
0827  3EC3    		mvi	a,0c3h
0829  328022  		sta	bootbf	; mark "no string"
082C  015A0B  		lxi	b,dSec
082F  CD5D08  		call	btdsp
0832  2186F8  		lxi	h,susave+dsdev
0835  CD8C0D  		call	dfboot0
0838  DAA207  		jc	kperr
083B  B7      		ora	a
083C          		jrz	kpbt1
083C  2812    		DB	28H,kpbt1-$-1
083E  CD1A07  		call	galtbt
0841          		jr	kpbt0
0841  18BF    		DB	18H,kpbt0-$-1
		
0843  2104F8  	kppbt0:	lxi	h,susave+dpdev
0846  CD8C0D  		call	dfboot0
0849  DAA207  		jc	kperr
084C  B7      		ora	a
084D  C2A207  		jnz	kperr
0850          	kpbt1:
0850  CD7308  		call	btdsp2	; show device name
0853          		lxiy	kperr
0853  FD21    		DB	0FDH,21H
0855  A207    		DW	kperr
0857  318022  		lxi	sp,bootbf
085A  C3FE02  		jmp	gbooty
		
085D          	btdsp:
085D  3A0820  		lda	MFlag
0860  F602    		ori	mfl$DDU	; disable disp updates
0862  320820  		sta	MFlag
0865  D5      		push	d
0866  C5      		push	b
0867  CD8C0B  		call	clrdisp
086A  C1      		pop	b	; display string
086B  110B20  		lxi	d,Aleds
086E  CD820B  		call	mov3dsp
0871  D1      		pop	d
0872  C9      		ret
		; IX=boot module
		; show device name in FP display
0873          	btdsp2:
0873  D5      		push	d	; device/unit
0874          		pushix
0874  DDE5    		DB	0DDH,0E5H
0876  E1      		pop	h
0877  110D00  		lxi	d,13	; FP display name
087A  19      		dad	d
087B  4D      		mov	c,l
087C  44      		mov	b,h
087D  111120  		lxi	d,Dleds
0880  CD820B  		call	mov3dsp
			; TODO: fix this - is there a better way?
0883  3EFA    		mvi	a,250	;; make it briefly visible
0885  CD0902  		call	delay	;;
0888  D1      		pop	d	; device/unit
0889  C9      		ret
		
088A          	kptap:	; cassette load (read) or store (write, save)
088A  0600    		mvi	b,0	; command only
088C  0E88    		mvi	c,88h	; cassette module key
088E  21130C  		lxi	h,bfkey
0891  CDAB0C  		call	bfind
0894  DAA207  		jc	kperr
0897  CD0A0D  		call	cmexec
089A  C9      		ret
		
089B          	kprdx:	; choose radix for display
089B  3A0820  		lda	MFlag
089E  F602    		ori	mfl$DDU	; disable disp updates
08A0  320820  		sta	MFlag
08A3  CD8C0B  		call	clrdisp
08A6  01540B  		lxi	b,dRad
08A9  110B20  		lxi	d,Aleds
08AC  CD820B  		call	mov3dsp
08AF  3A3920  		lda	Radix
08B2  B7      		ora	a
08B3  2F      		cma		; 00->ff
08B4          		jrz	rdx0
08B4  2801    		DB	28H,rdx0-$-1
08B6  AF      		xra	a	; else 00
08B7  323920  	rdx0:	sta	Radix		; 00       ff
08BA  E613    		ani	00010011b	; 00->00,  ff->13
08BC  EE81    		xri	10000001b	; 00->81,  ff->92
08BE  321020  		sta	Aleds+5		; 00->'O', ff->'H'
			; wait 1S to allow user to see...
08C1  3EFA    		mvi	a,250		; 500mS
08C3  CD0902  		call	delay
08C6  3EFA    		mvi	a,250		; 500mS
08C8  CD0902  		call	delay
08CB  3A0820  		lda	MFlag
08CE  E6FD    		ani	not mfl$DDU	; enable disp updates
08D0  320820  		sta	MFlag
			; TODO: beep?
08D3  C9      		ret
		
08D4          	kpnxt:	; next register/memory addr
08D4  3A0720  		lda	DspMod
08D7  E602    		ani	00000010b	; Z if memory mode
08D9  2A1420  		lhld	ABUSS
08DC  110520  		lxi	d,RegI
08DF  23      		inx	h
08E0          		jrz	sae
08E0  2821    		DB	28H,sae-$-1
08E2  1A      		ldax	d
08E3  C602    		adi	2
08E5  12      		stax	d
08E6  FE1A    		cpi	nReg
08E8  D8      		rc
08E9  AF      		xra	a
08EA  12      		stax	d
08EB  C9      		ret
		
08EC          	kpprv:	; previous register/memory addr
08EC  3A0720  		lda	DspMod
08EF  E602    		ani	00000010b	; Z if memory mode
08F1  2A1420  		lhld	ABUSS
08F4  110520  		lxi	d,RegI
08F7  2B      		dcx	h
08F8          		jrz	sae
08F8  2809    		DB	28H,sae-$-1
08FA  1A      		ldax	d
08FB  D602    		sui	2
08FD  12      		stax	d
08FE  D0      		rnc
08FF  3E18    		mvi	a,nReg-2
0901  12      		stax	d
0902  C9      		ret
		
0903  221420  	sae:	shld	ABUSS
0906  C9      		ret
		
0907          	kpmem:	; switch to memory mode - enter address
0907  AF      		xra	a	; also NC
0908  320720  		sta	DspMod	; display memory...
090B  320620  		sta	DsProt	; periods all on...
090E  211520  		lxi	h,ABUSS+1	; little-endian, enter hi byte first
0911  CD7109  		call	iob
0914  2B      		dcx	h	; HL=low byte of address
0915  0600    		mvi	b,0
0917  B7      		ora	a	; CY=0
0918  CD7109  		call	iob
091B  C9      		ret		; back to start... TODO: prevent re-prompt
		
091C          	kprgm:	; switch to register mode
091C  3E02    		mvi	a,2
091E  320720  		sta	DspMod	; display registers...
0921  AF      		xra	a
0922  320620  		sta	DsProt	; periods all on...
0925  CD2F0A  		call	keyin
0928  E67F    		ani	01111111b
092A  FE0C    		cpi	(nReg-1)/2	; PC requires spcl
092C          		jrc	reg0
092C  3807    		DB	38H,reg0-$-1
092E  D603    		sub	3		; gap in codes?
0930  FE0C    		cpi	12		; was 15...
0932  C2A207  		jnz	kperr	; TODO: proper handling
0935  07      	reg0:	rlc	; times 2
0936  320520  		sta	RegI
0939  C9      		ret		; back to start... TODO: prevent re-prompt
		
093A          	kpcmd:	; A=keypad command, +80h
			; keypad pressed...
093A  FE8A    		cpi	8ah	; non-digit (hex req first be '0')
093C  D2D300  		jnc	cmchr
093F  47      		mov	b,a
0940  3A0720  		lda	DspMod
0943  0F      		rrc	; CY=alter mode
0944          		jrc	kpalter	; alter mode - numeric values only
0944  3804    		DB	38H,kpalter-$-1
0946  78      		mov	a,b
0947  C3D300  		jmp	cmchr
		; A=DspMod >> 1, B=key
094A          	kpalter:
094A  2A1420  		lhld	ABUSS
094D  0F      		rrc	; register (else memory)
094E          		jrc	kpreg
094E  3809    		DB	38H,kpreg-$-1
0950  37      		stc
0951  CD7109  		call	iob
0954  23      		inx	h
0955  221420  		shld	ABUSS
0958  C9      		ret
		
		; B=key
0959          	kpreg:
0959  3A0520  		lda	RegI
095C  B7      		ora	a
095D  CAA207  		jz	kperr	; RegI == 0 (SP) not allowed
0960  5F      		mov	e,a
0961  1600    		mvi	d,0
0963  2A1D20  		lhld	RegPtr
0966  19      		dad	d
0967  23      		inx	h	; HL=high byte of address
0968  37      		stc
0969  CD7109  		call	iob
096C  2B      		dcx	h	; HL=low byte of address
096D  CD7109  		call	iob
0970  C9      		ret
		
		; Input Octal(or Hex) byte
		; B=key, CY=first digit
0971          	iob:	rarr	c	; save CY => C bit 7
0971  CB19    		DB	0CBH, 18H + c
0973  3A3920  		lda	Radix
0976  B7      		ora	a
0977  78      		mov	a,b
0978          		jrz	ioboct
0978  2820    		DB	28H,ioboct-$-1
		; iobhex - to avoid conflict with cmd keys A-F, first input must be [0]
		; So, hex input requires 3 or 5 + 1 keys.
097A          		ralr	c	; restore CY
097A  CB11    		DB	0CBH, 10H+c
097C  D42F0A  		cnc	keyin
097F  E67F    		ani	01111111b
0981  C2A207  		jnz	kperr
0984  1602    		mvi	d,2
0986  CD2F0A  	iobh0:	call	keyin
0989  E67F    		ani	01111111b
098B  5F      		mov	e,a
098C  7E      		mov	a,m
098D  07      		rlc
098E  07      		rlc
098F  07      		rlc
0990  07      		rlc
0991  E6F0    		ani	11110000b
0993  B3      		ora	e	; also ensure NC for loop
0994  77      		mov	m,a
0995  15      		dcr	d
0996          		jrnz	iobh0
0996  20EE    		DB	20H,iobh0-$-1
0998          		jr	iob0
0998  181A    		DB	18H,iob0-$-1
099A          	ioboct:
099A          		ralr	c	; restore CY
099A  CB11    		DB	0CBH, 10H+c
099C  1603    		mvi	d,3
099E  D42F0A  	iobo0:	cnc	keyin
09A1  E67F    		ani	01111111b
09A3  FE08    		cpi	8
09A5  D2A207  		jnc	kperr
09A8  5F      		mov	e,a
09A9  7E      		mov	a,m
09AA  07      		rlc
09AB  07      		rlc
09AC  07      		rlc
09AD  E6F8    		ani	11111000b
09AF  B3      		ora	e	; also ensure NC for loop
09B0  77      		mov	m,a
09B1  15      		dcr	d
09B2          		jrnz	iobo0
09B2  20EA    		DB	20H,iobo0-$-1
09B4          	iob0:
			; TODO: blip to ack entry?
09B4  C9      		ret
		 endif
		
		; returns with interrupts disabled
		; preserves DE
09B5          	h17init:
09B5  F3      		di
09B6  DBF2    		in	0f2h
09B8  E603    		ani	00000011b	; port 7C - only one for H17
09BA          		jrnz	h17in0
09BA  2003    		DB	20H,h17in0-$-1
09BC  AF      		xra	a
09BD  D37F    		out	07fh	; avoid this if H17 not configured
09BF  D5      	h17in0:	push	d
09C0  210920  		lxi	h,ctl$F0
09C3  36D0    		mvi	m,11010000b	; !beep, 2mS, !mon, !SI
09C5  215A1F  		lxi	h,R$CONST
09C8  114820  		lxi	d,D$CONST
09CB  015800  		lxi	b,88
09CE          		ldir
09CE  EDB0    		DB	0EDH,0B0H
09D0  6B      		mov	l,e
09D1  62      		mov	h,d
09D2  13      		inx	d
09D3  0E1E    		mvi	c,30
09D5  77      		mov	m,a
09D6          		ldir	; fill l20a0h...
09D6  EDB0    		DB	0EDH,0B0H
09D8  3E07    		mvi	a,7
09DA  211F20  		lxi	h,intvec	; vector area
09DD          	h17ini0:
09DD  36C3    		mvi	m,0c3h
09DF  23      		inx	h
09E0  3662    		mvi	m,LOW (nulint-rst0)
09E2  23      		inx	h
09E3  3600    		mvi	m,HIGH (nulint-rst0)
09E5  23      		inx	h
09E6  3D      		dcr	a
09E7          		jrnz	h17ini0
09E7  20F4    		DB	20H,h17ini0-$-1
09E9  D1      		pop	d
09EA  C9      		ret
		
09EB          	waitcr:
09EB  CD050A  		call	conin
09EE  FE0D    		cpi	CR
09F0          		jrnz	waitcr
09F0  20F9    		DB	20H,waitcr-$-1
09F2          	crlf:
09F2  3E0D    		mvi	a,CR
09F4  CDC903  		call	conout
09F7  3E0A    		mvi	a,LF
09F9  C3C903  		jmp	conout
		
09FC          	msgout:
09FC  7E      		mov	a,m
09FD  B7      		ora	a
09FE  C8      		rz
09FF  CDC903  		call	conout
0A02  23      		inx	h
0A03          		jr	msgout
0A03  18F7    		DB	18H,msgout-$-1
		
		; called in the context of a command on console
0A05  DBED    	conin:	in	0edh
0A07  0F      		rrc
0A08          		jrc	conin0
0A08  3811    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A0A  DBDA    		in	0dah	; VDIP1/FT245R status
0A0C  E608    		ani	00001000b	; VDIP1 RxR
0000          	 if nofp
		 else
0A0E          		jrz	novdip2
0A0E  2802    		DB	28H,novdip2-$-1
0A10  DBD9    		in	0d9h	; flush char
0A12          	novdip2:
0A12  3A3A20  		lda	kpchar
0A15  B7      		ora	a
0A16          		jrz	conin
0A16  28ED    		DB	28H,conin-$-1
			; cancel console cmd, leave keypad char for cmdin
0A18  C3AB00  		jmp	start
		 endif
		
0A1B  DBE8    	conin0:	in	0e8h
0A1D  E67F    		ani	07fh
0A1F  FE7F    		cpi	DEL	; DEL key restarts from anywhere?
0A21  CA9F00  		jz	re$entry
0A24  C9      		ret
		
		; Pure console input, no tricks
0A25  DBED    	conin1:	in	0edh
0A27  0F      		rrc
0A28          		jrnc	conin1
0A28  30FB    		DB	30H,conin1-$-1
0A2A  DBE8    		in	0e8h
0A2C  E67F    		ani	07fh
0A2E  C9      		ret
		
FFFF          	 if not nofp
		; called in the context of command on front-panel
0A2F  3A3A20  	keyin:	lda	kpchar
0A32  B7      		ora	a
0A33          		jrnz	getkey
0A33  201B    		DB	20H,getkey-$-1
0A35  DBED    		in	0edh
0A37  0F      		rrc
0A38          		jrnc	keyin
0A38  30F5    		DB	30H,keyin-$-1
			; cancel kaypad cmd, leave console char for cmdin
			; TODO: what modes need reset?
0A3A  C3AB00  		jmp	start
		 endif
		
		; wait for command - console or keypad
0A3D          	cmdin:
0A3D  DBED    		in	0edh
0A3F  0F      		rrc
0A40          		jrc	conin0
0A40  38D9    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A42  DBDA    		in	0dah	; VDIP1/FT245R status
0A44  E608    		ani	00001000b	; VDIP1 RxR
			; INS8250 IIR always 0
			; 16550 IIR is RxD timeout (?)
			; 16C2550 ISR is RxD timeout (?)
0000          	 if nofp
		 else
0A46          		jrz	novdip1
0A46  2802    		DB	28H,novdip1-$-1
0A48  DBD9    		in	0d9h	; flush char
0A4A          	novdip1:
0A4A  3A3A20  		lda	kpchar
0A4D  B7      		ora	a
0A4E          		jrz	cmdin
0A4E  28ED    		DB	28H,cmdin-$-1
0A50  F5      	getkey:	push	psw	; A=scan code
0A51  AF      		xra	a
0A52  323A20  		sta	kpchar
0A55  F1      		pop	psw
0A56  EEFE    		xri	11111110b
0A58  0F      		rrc
0A59          		jrnc	gotkey
0A59  3004    		DB	30H,gotkey-$-1
0A5B  0F      		rrc
0A5C  0F      		rrc
0A5D  0F      		rrc
0A5E  0F      		rrc
0A5F  E60F    	gotkey:	ani	00001111b
0A61  F680    		ori	10000000b	; distinguish from console input
			; TODO: check for CANCEL key?
0A63  C9      		ret
		 endif
		
FFFF          	 if not nofp
		; keypad check at 32mS
0A64  211620  	kpchk:	lxi	h,RckA
0A67  DBF0    		in	0f0h
0A69  BE      		cmp	m	; RckA
0A6A          		jrnz	kpchk0
0A6A  2014    		DB	20H,kpchk0-$-1
0A6C  E611    		ani	00010001b
0A6E  FE11    		cpi	00010001b
0A70  C8      		rz	; nothing pressed
0A71  7E      		mov	a,m
			; need to count auto-repeat/debounce
0A72  23      		inx	h	; kpcnt
0A73  35      		dcr	m
0A74  C0      		rnz
			; got a key press...
0A75  323A20  		sta	kpchar
0A78  3610    		mvi	m,rptcnt
0A7A  3E02    		mvi	a,4/2	; 4mS click
0A7C  CDE705  		call	set$horn
0A7F  C9      		ret
0A80  77      	kpchk0:	mov	m,a	; RckA
0A81  23      		inx	h	; kpcnt
0A82  3601    		mvi	m,debounce
0A84  C9      		ret
		
		; Update Front-panel Display
		; B=MFlag, destroyed
0A85  3E02    	ufd:	mvi	a,mfl$DDU
0A87  A0      		ana	b
0A88  C0      		rnz		; updates disabled
0A89  210620  		lxi	h,DsProt
0A8C          		rlcr	m
0A8C  CB06    		DB	0CBH, 00H + m
0A8E  46      		mov	b,m
0A8F  23      		inx	h	; DspMod
0A90  7E      		mov	a,m
0A91  E602    		ani	00000010b
0A93  2A1420  		lhld	ABUSS
0A96          		jrz	ufd1	; displaying memory
0A96  2812    		DB	28H,ufd1-$-1
			; displaying registers
0A98  CD770B  		call	lra	; locate register address offset (DE)
0A9B  E5      		push	h
0A9C  215D0B  		lxi	h,LedRegTbl
0A9F  19      		dad	d
0AA0  7E      		mov	a,m
0AA1  23      		inx	h
0AA2  66      		mov	h,m
0AA3  6F      		mov	l,a
0AA4  E3      		xthl
0AA5  B4      		ora	h
0AA6  7E      		mov	a,m
0AA7  23      		inx	h
0AA8  66      		mov	h,m
0AA9  6F      		mov	l,a
0AAA  F5      	ufd1:	push	psw
0AAB  EB      		xchg
0AAC  210B20  		lxi	h,Aleds
0AAF  7A      		mov	a,d
0AB0  CDC90A  		call	dod
0AB3  7B      		mov	a,e
0AB4  CDC90A  		call	dod
0AB7  F1      		pop	psw
0AB8  1A      		ldax	d
0AB9          		jrz	dod	; if displaying memory
0AB9  280E    		DB	28H,dod-$-1
			; displaying register name
0ABB  C1      		pop	b
0ABC  111120  		lxi	d,Dleds
0ABF  2E03    	mv3byt:	mvi	l,3
0AC1  0A      	mvb:	ldax	b
0AC2  12      		stax	d
0AC3  03      		inx	b
0AC4  13      		inx	d
0AC5  2D      		dcr	l
0AC6          		jrnz	mvb
0AC6  20F9    		DB	20H,mvb-$-1
0AC8  C9      		ret
		
		; B=dot flag
0AC9  4F      	dod:	mov	c,a	; value to display
0ACA  3A3920  		lda	Radix
0ACD  B7      		ora	a	; Z if octal (also CY=0)
0ACE  79      		mov	a,c
0ACF          		jrnz	dodhex
0ACF  2021    		DB	20H,dodhex-$-1
0AD1  D5      		push	d
0AD2  0E03    		mvi	c,3
0AD4  17      	dodr5:	ral
0AD5  17      		ral
0AD6  17      		ral
0AD7  F5      		push	psw
0AD8  E607    		ani	07h
0ADA  C6EE    		adi	LOW doddig
0ADC  5F      		mov	e,a
0ADD  3E03    		mvi	a,HIGH doddig
0ADF  CE00    		aci	0
0AE1  57      		mov	d,a
0AE2  1A      		ldax	d
0AE3  A8      		xra	b	; DP on/off
0AE4  E67F    		and	01111111b	; why???
0AE6  A8      		xra	b
0AE7  77      		mov	m,a
0AE8  23      		inx	h
0AE9  78      		mov	a,b	; rlcr b
0AEA  07      		rlc
0AEB  47      		mov	b,a
0AEC  F1      		pop	psw
0AED  0D      		dcr	c
0AEE          		jrnz	dodr5
0AEE  20E4    		DB	20H,dodr5-$-1
0AF0  D1      		pop	d
0AF1  C9      		ret
		
0AF2  D5      	dodhex:	push	d
0AF3  0E02    		mvi	c,2
0AF5  07      	deh55:	rlc
0AF6  07      		rlc
0AF7  07      		rlc
0AF8  07      		rlc
0AF9  F5      		push	psw
0AFA  E60F    		ani	0fh
0AFC  C6EE    		adi	LOW doddig
0AFE  5F      		mov	e,a
0AFF  3E03    		mvi	a,HIGH doddig
0B01  CE00    		aci	0
0B03  57      		mov	d,a
0B04  1A      		ldax	d
0B05  A8      		xra	b		; DP on/off
0B06  E67F    		ani	01111111b	; why???
0B08  A8      		xra	b		; ???
0B09  77      		mov	m,a
0B0A  23      		inx	h
0B0B          		rlcr	b
0B0B  CB00    		DB	0CBH, 00H + b
0B0D  F1      		pop	psw
0B0E  0D      		dcr	c
0B0F          		jrnz	deh55
0B0F  20E4    		DB	20H,deh55-$-1
0B11  D1      		pop	d
0B12  3E6F    		mvi	a,01101111b	; "_"
0B14  A8      		xra	b		; DP on/off
0B15  E67F    		ani	01111111b	; why???
0B17  A8      		xra	b		; ???
0B18  77      		mov	m,a
0B19  23      		inx	h
0B1A  78      		mov	a,b	; rlcr b
0B1B  07      		rlc
0B1C  47      		mov	b,a
0B1D  C9      		ret
		
0B1E  FFA498  	dSP:	db	11111111b,10100100b,10011000b	; " SP"
0B21  FF909C  	dPSW:	db	11111111b,10010000b,10011100b	; " AF"
0B24  FF868D  	dBC:	db	11111111b,10000110b,10001101b	; " BC"
0B27  FFC28C  	dDE:	db	11111111b,11000010b,10001100b	; " DE"
0B2A  FF928F  	dHL:	db	11111111b,10010010b,10001111b	; " HL"
0B2D  FFF3B6  	dIX:	db	11111111b,11110011b,10110110b	; " IX"
0B30  FFF3DE  	dIY:	db	11111111b,11110011b,11011110b	; " IY"
0B33  FFF3D3  	dIR:	db	11111111b,11110011b,11010011b	; " IR"
0B36  909CBF  	dPSWp:	db	10010000b,10011100b,10111111b	; "AF'"
0B39  868DBF  	dBCp:	db	10000110b,10001101b,10111111b	; "BC'"
0B3C  C28CBF  	dDEp:	db	11000010b,10001100b,10111111b	; "DE'"
0B3F  928FBF  	dHLp:	db	10010010b,10001111b,10111111b	; "HL'"
0B42  FF98CE  	dPC:	db	11111111b,10011000b,11001110b	; " PC"
		
0B45  C28C83  	dDev:	db	11000010b,10001100b,10000011b	; "dEU" (dev)
0B48  98C6DE  	dPor:	db	10011000b,11000110b,11011110b	; "Por"
0B4B  83D6F7  	dUni:	db	10000011b,11010110b,11110111b	; "Uni"
0B4E  8CDEDE  	dErr:	db	10001100b,11011110b,11011110b	; "Error "
0B51  C6DEFF  		db	11000110b,11011110b,11111111b
0B54  DE90C2  	dRad:	db	11011110b,10010000b,11000010b	; "rAd"
0B57  98DEDF  	dPri:	db	10011000b,11011110b,11011111b	; "Pri"
0B5A  A48C8D  	dSec:	db	10100100b,10001100b,10001101b	; "SEC"
		
0B5D          	LedRegTbl:
0B5D  1E0B    		dw	dSP	; 0
0B5F  210B    		dw	dPSW	; 1
0B61  240B    		dw	dBC	; 2
0B63  270B    		dw	dDE	; 3
0B65  2A0B    		dw	dHL	; 4
0B67  2D0B    		dw	dIX	; 5	- TODO
0B69  300B    		dw	dIY	; 6	- TODO
0B6B  330B    		dw	dIR	; 7	- TODO
0B6D  360B    		dw	dPSWp	; 8	- TODO
0B6F  390B    		dw	dBCp	; 9	- TODO
0B71  3C0B    		dw	dDEp	; 10	- TODO
0B73  3F0B    		dw	dHLp	; 11	- TODO
0B75  420B    		dw	dPC	; 12	- 5
001A          	nReg	equ	$-LedRegTbl	; 2x num registers...
		
0B77  3A0520  	lra:	lda	RegI
0B7A  5F      	lrax:	mov	e,a
0B7B  1600    		mvi	d,0
0B7D  2A1D20  		lhld	RegPtr
0B80  19      		dad	d
0B81  C9      		ret
		
0B82          	mov3dsp:
0B82  2E03    		mvi	l,3
0B84          	movLdsp:
0B84  0A      	md0:	ldax	b
0B85  12      		stax	d
0B86  03      		inx	b
0B87  13      		inx	d
0B88  2D      		dcr	l
0B89          		jrnz	md0
0B89  20F9    		DB	20H,md0-$-1
0B8B  C9      		ret
		
0B8C          	clrdisp:
0B8C  210B20  		lxi	h,fpLeds
0B8F  5D      		mov	e,l
0B90  54      		mov	d,h
0B91  010800  		lxi	b,9-1
0B94  36FF    		mvi	m,11111111b
0B96  13      		inx	d
0B97          		ldir
0B97  EDB0    		DB	0EDH,0B0H
0B99  C9      		ret
		
		; Front panel display refresh and keypad check
0B9A          	int1$fp:
			; if /INT1 caused by keypad (RTM), skip the rest (?)
			; Should probably loop here until key released?
			; De-bounce?
0B9A  DBF0    		in	0f0h
0B9C  FE2E    		cpi	2eh		; RTM: [0]+[#] a.k.a. [0]+[E]
0B9E  CA9F00  		jz	re$entry	; Return To Monitor...
			;
0BA1  0E00    		mvi	c,0
0BA3  213C20  		lxi	h,horn
0BA6  7E      		mov	a,m
0BA7  B7      		ora	a
0BA8          		jrz	fp1
0BA8  2805    		DB	28H,fp1-$-1
0BAA  35      		dcr	m
0BAB          		jrnz	fp1
0BAB  2002    		DB	20H,fp1-$-1
0BAD  0E80    		mvi	c,10000000b	; beep off
0BAF          	fp1:
0BAF  210820  		lxi	h,MFlag
0BB2  46      		mov	b,m
0BB3  23      		inx	h	; ctl$F0
0BB4  7E      		mov	a,m
0BB5  B1      		ora	c	; beep off bit
0BB6  77      		mov	m,a
0BB7          		bit	6,b	; refresh display?
0BB7  CB70    		DB	0CBH,6*8+b+40H
0BB9          		jrnz	fp3
0BB9  200B    		DB	20H,fp3-$-1
0BBB  23      		inx	h	; Refind
0BBC  35      		dcr	m
0BBD          		jrnz	fp2
0BBD  2002    		DB	20H,fp2-$-1
0BBF  3609    		mvi	m,9
0BC1  5E      	fp2:	mov	e,m	; 1-9
0BC2  1600    		mvi	d,0
0BC4  19      		dad	d	; HL = &fpLeds[E-1]
0BC5  B3      		ora	e	; merge digit select
0BC6          	fp3:
0BC6  D3F0    		out	0f0h
0BC8  7E      		mov	a,m	; FP segments (fpLeds[E-1])
0BC9  D3F1    		out	0f1h
			; See if time to update display values or check keypad
0BCB  2E1B    		mvi	l,LOW ticcnt
0BCD  7E      		mov	a,m
0BCE  F5      		push	psw
0BCF  E61F    		ani	31	; 64mS
0BD1  CC850A  		cz	ufd	; B=MFlag, destroyed
0BD4  F1      		pop	psw
0BD5  E60F    		ani	15	; 32mS
0BD7  CC640A  		cz	kpchk
		 endif
0BDA          	int1$xx:
			; not really FP related, but no space in low ROM...
0BDA  3A0920  		lda	ctl$F0
0BDD          		bit	5,a	; MON mode?
0BDD  CB6F    		DB	0CBH,5*8+a+40H
0BDF  C24D00  		jnz	intret	; skip if running monitor...
0BE2  3A0820  		lda	MFlag
0BE5          		bit	7,a	; HLT processing enabled
0BE5  CB7F    		DB	0CBH,7*8+a+40H
0BE7  CCF10B  		cz	chkhlt
0BEA  0F      		rrc		; mfl$CLK private int1?
0BEB  DC1F20  		cc	vrst1
0BEE  C34D00  		jmp	intret
		
		; NOTE: HLT processing is inherently unreliable.
		; It presumes that the current instruction was single-byte,
		; however it will mis-fire on things like JMP 76xxH
		; (any instr with a last byte of 76H)
0BF1          	chkhlt:
0BF1  F5      		push	psw
0BF2  2A1D20  		lhld	RegPtr
0BF5  111800  		lxi	d,24	; Reg[PC]
0BF8  19      		dad	d
0BF9  5E      		mov	e,m
0BFA  23      		inx	h
0BFB  56      		mov	d,m
0BFC  1B      		dcx	d	; current instr, not next
0BFD  1A      		ldax	d
0BFE  FE76    		cpi	76h	; HLT
0C00  CA9F00  		jz	re$entry
0C03  F1      		pop	psw
0C04  C9      		ret
		
		; match module by character (letter)
		; C=letter, B=00:cmd,ff:boot
0C05          	bfchr:	ldx	a,+2	; phy drv or type
0C05  DD7E02  		DB	0DDH,a*8+46H,+2
0C08  D6C8    		sui	200	; boot modules < 200
0C0A  9F      		sbb	a	; ff=boot, 00=cmd
0C0B  B8      		cmp	b	; ZR=match
0C0C          		jrnz	bfn0
0C0C  2023    		DB	20H,bfn0-$-1
0C0E          		ldx	a,mdchr
0C0E  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C11  B9      		cmp	c
0C12  C9      		ret
		
		; match module by FP key
		; C=FP key, B=00:cmd,ff:boot
0C13          	bfkey:	ldx	a,+2	; phy drv or type
0C13  DD7E02  		DB	0DDH,a*8+46H,+2
0C16  D6C8    		sui	200	; boot modules < 200
0C18  9F      		sbb	a	; ff=boot, 00=cmd
0C19  B8      		cmp	b	; ZR=match
0C1A          		jrnz	bfn0
0C1A  2015    		DB	20H,bfn0-$-1
0C1C          		ldx	a,mdkey
0C1C  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C1F  B9      		cmp	c
0C20  C9      		ret
		
		; match boot module by phy drv number
		; C=phy drv (base), B=type
		; Only for boot modules
0C21          	bfnum:	ldx	a,mdbase	; phy drv or type
0C21  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C24  FEC8    		cpi	200	; boot modules < 200
0C26          		jrnc	bfn0	; skip if >= 200
0C26  3009    		DB	30H,bfn0-$-1
0C28  79      		mov	a,c
0C29          		subx	mdbase
0C29  DD9602  		DB	0DDH,96H,mdbase
0C2C  B7      		ora	a
0C2D          		jrnz	bfn0
0C2D  2002    		DB	20H,bfn0-$-1
0C2F  AF      		xra	a
0C30  C9      		ret
0C31  AF      	bfn0:	xra	a
0C32  3C      		inr	a
0C33  C9      		ret
		
		; List only boot modules
		; On first module, C=0
0C34          	bflst:	ldx	a,mdbase	; phy drv or type
0C34  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C37  FEC8    		cpi	200	; boot modules < 200
0C39          		jrnc	bfn0
0C39  30F6    		DB	30H,bfn0-$-1
0C3B  79      		mov	a,c
0C3C  B7      		ora	a
0C3D  3E2C    		mvi	a,','
0C3F  C4C903  		cnz	conout
0C42  0C      		inr	c
0C43  78      		mov	a,b
0C44          		subx	mdbase
0C44  DD9602  		DB	0DDH,96H,mdbase
0C47  B7      		ora	a
0C48  3E2A    		mvi	a,'*'
0C4A  CCC903  		cz	conout
0C4D          		pushix
0C4D  DDE5    		DB	0DDH,0E5H
0C4F  E1      		pop	h
0C50  111000  		lxi	d,mdname
0C53  19      		dad	d
0C54  CDFC09  		call	msgout
0C57  21340C  		lxi	h,bflst
0C5A          		jr	bfn0	; NZ - keep going
0C5A  18D5    		DB	18H,bfn0-$-1
		
		; List only boot modules
0C5C          	bfllst:	ldx	a,mdbase	; phy drv or type
0C5C  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C5F  FEC8    		cpi	200	; boot modules < 200
0C61          		jrnc	bfn0
0C61  30CE    		DB	30H,bfn0-$-1
0C63  78      		mov	a,b
0C64          		subx	mdbase
0C64  DD9602  		DB	0DDH,96H,mdbase
0C67  B7      		ora	a
0C68  3E20    		mvi	a,' '
0C6A          		jrnz	bfll2
0C6A  2002    		DB	20H,bfll2-$-1
0C6C  3E2A    		mvi	a,'*'
0C6E  CDC903  	bfll2:	call	conout
0C71          		pushix
0C71  DDE5    		DB	0DDH,0E5H
0C73  E1      		pop	h
0C74  111000  		lxi	d,mdname
0C77  19      		dad	d
0C78  CDFC09  		call	msgout
0C7B  3E09    		mvi	a,TAB
0C7D  CDC903  		call	conout
0C80          		ldx	a,mdchr
0C80  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C83  CDC903  		call	conout
0C86  3E20    		mvi	a,' '
0C88  CDC903  		call	conout
0C8B          		ldx	a,mdkey
0C8B  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C8E  C630    		adi	'0'
0C90          		jrnc	bfll0
0C90  3002    		DB	30H,bfll0-$-1
0C92  3E2D    		mvi	a,'-'
0C94  CDC903  	bfll0:	call	conout
0C97  3E20    		mvi	a,' '
0C99  CDC903  		call	conout
0C9C          		ldx	a,mdbase
0C9C  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C9F  CD100D  		call	decout
0CA2  CDF209  		call	crlf
0CA5  215C0C  		lxi	h,bfllst
0CA8  AF      		xra	a	; NZ - keep going
0CA9  3C      		inr	a	;
0CAA  C9      		ret
		
		; Find boot module and load into 1000h if necessary.
		; HL=match function: returns Z if found, BC=target, IX=module
		; Return CY at end of modules (not found)
		; Return IX=loaded module (run location)
		; Must preserve BC during search loop.
0CAB          	bfind:
			; can't check if it's loaded until we know where it's loaded...
			; first, check if already loaded
			;lxix	btovl
			;call	icall
			;rz
0CAB          	bfind0:
0000          	 if z180
		 else
			; must map ROM back in, so prevent interruptions...
			; also, we loose memory at SP...
0CAB  F3      		di
0CAC          		lxiy	0
0CAC  FD21    		DB	0FDH,21H
0CAE  0000    		DW	0
0CB0          		dady	sp
0CB0  FD39    		DB	0FDH,sp*8+09H
0CB2  3100E0  		lxi	sp,0e000h	; a safe SP?
0CB5  3A3620  		lda	ctl$F2
0CB8  F5      		push	psw
0CB9  E6DF    		ani	not ctl$ORG0	; ORG0 off
0CBB  F608    		ori	ctl$MEM1	; MEM1 on
0CBD  D3F2    		out	0f2h
		 endif
0CBF          		lxix	btmods	; start of modules...
0CBF  DD21    		DB	0DDH,21H
0CC1  0020    		DW	btmods
0CC3  CD4201  	bf0:	call	icall
0CC6          		jrz	bf9
0CC6  2820    		DB	28H,bf9-$-1
0CC8          		ldx	d,mdpgs
0CC8  DD5600  		DB	0DDH,d*8+46H,mdpgs
0CCB  1E00    		mvi	e,0
0CCD          		dadx	d
0CCD  DD19    		DB	0DDH,d*8+09H
0CCF          		pushix
0CCF  DDE5    		DB	0DDH,0E5H
0CD1  F1      		pop	psw	; A=IXh
0CD2  FE80    		cpi	HIGH bterom	; end of ROM
0CD4          		jrnc	bf1
0CD4  300A    		DB	30H,bf1-$-1
0CD6          		ldx	a,mdpgs
0CD6  DD7E00  		DB	0DDH,a*8+46H,mdpgs
0CD9  B7      		ora	a
0CDA          		jrz	bf1
0CDA  2804    		DB	28H,bf1-$-1
0CDC  FEFF    		cpi	0ffh
0CDE          		jrnz	bf0
0CDE  20E3    		DB	20H,bf0-$-1
0CE0          	bf1:
0000          	 if z180
		 else
0CE0  F1      		pop	psw
0CE1  D3F2    		out	0f2h
0CE3          		spiy
0CE3  FDF9    		DB	0FDH,0F9H
0CE5  FB      		ei
		 endif
0CE6  37      		stc	; CY = end of list (not found)
0CE7  C9      		ret
		
0CE8          	bf9:	; match found, now load into place and init
0CE8          		ldx	b,mdpgs
0CE8  DD4600  		DB	0DDH,b*8+46H,mdpgs
0CEB          		ldx	d,mdorg
0CEB  DD5601  		DB	0DDH,d*8+46H,mdorg
0CEE          		pushix		;
0CEE  DDE5    		DB	0DDH,0E5H
0CF0  E1      		pop	h	; HL=IX (module in logical addr)
0CF1  1E00    		mvi	e,0
0CF3  0E00    		mvi	c,0
0CF5  D5      		push	d
0000          	 if z180
		 else
			; TODO: avoid redundant load... and init?
0CF6          		ldir
0CF6  EDB0    		DB	0EDH,0B0H
		 endif
0CF8          		popix	; module load addr
0CF8  DDE1    		DB	0DDH,0E1H
			; now call init routine... but must restore RAM...
0000          	 if z180
		 else
0CFA  F1      		pop	psw
0CFB  D3F2    		out	0f2h
0CFD          		spiy
0CFD  FDF9    		DB	0FDH,0F9H
0CFF  FB      		ei
		 endif
0D00  CD040D  		call	btinit	; CY indicates error, pass along...
0D03  C9      		ret
		
		; IX=module in real memory
0D04          	btinit:	pushix
0D04  DDE5    		DB	0DDH,0E5H
0D06  E1      		pop	h
0D07  2E04    		mvi	l,mdinit
0D09  E9      		pchl
		
		; IX=module in real memory
0D0A          	cmexec:
0D0A          	btboot:	pushix
0D0A  DDE5    		DB	0DDH,0E5H
0D0C  E1      		pop	h
0D0D  2E07    		mvi	l,mdboot
0D0F  E9      		pchl
		
		; assume < 100
0D10          	decout:
0D10  1630    		mvi	d,'0'
0D12          	decot0:
0D12  D60A    		sui	10
0D14  DA1B0D  		jc	decot1
0D17  14      		inr	d
0D18  C3120D  		jmp	decot0
0D1B          	decot1:
0D1B  C60A    		adi	10
0D1D  C630    		adi	'0'
0D1F  F5      		push	psw
0D20  7A      		mov	a,d
0D21  CDC903  		call	conout
0D24  F1      		pop	psw
0D25  C3C903  		jmp	conout
		
		; Returns NZ if found, D=phy drv
0D28          	gtdvtb:
0D28  DBF2    		in	0f2h
0D2A  E670    		ani	01110000b	; default boot device
0D2C  07      		rlc
0D2D  07      		rlc
0D2E  07      		rlc
0D2F  07      		rlc
0D30  21CC0D  		lxi	h,defbt
0D33          	gtdvtb0:
0D33  85      		add	l
0D34  6F      		mov	l,a
0D35  3E00    		mvi	a,0
0D37  8C      		adc	h
0D38  67      		mov	h,a
0D39  56      		mov	d,m	; might be FF or FE
0D3A  C9      		ret
		
0D3B          	A$boot:
0D3B  CDD101  		call	gtdfbt	; DE=phy drv/unit
0D3E  7A      		mov	a,d
0D3F  FEFF    		cpi	0ffh
0D41  CAF501  		jz	s501er
0D44  FEFE    		cpi	0feh
0D46          		jrnz	findit
0D46  200D    		DB	20H,findit-$-1
0D48  2104F8  		lxi	h,susave+dpdev
0D4B  7E      		mov	a,m
0D4C  23      		inx	h
0D4D  FEFF    		cpi	0ffh
0D4F  CAF501  		jz	s501er	; not setup
0D52  C39402  		jmp	gotit1
0D55          	findit:
0D55  D5      		push	d
0D56  C5      		push	b
0D57  4A      		mov	c,d
0D58  06FF    		mvi	b,-1	; boot modules only
0D5A  21210C  		lxi	h,bfnum
0D5D  CDAB0C  		call	bfind
0D60  C1      		pop	b
0D61  D1      		pop	d
0D62  DAF501  		jc	s501er
0D65  CDB402  		call	vfport
0D68  DAF501  		jc	s501er
0D6B  C3AB02  		jmp	gotit
		
		; default boot selected from console
0D6E          	dfboot:
0D6E  CDD101  		call	gtdfbt	; DE=phy drv/unit
0D71  7A      		mov	a,d
0D72  FEFF    		cpi	0ffh
0D74  CA9501  		jz	error
0D77  FEFE    		cpi	0feh
0D79  C21302  		jnz	gotnum
0D7C  2104F8  		lxi	h,susave+dpdev
0D7F  CD8C0D  		call	dfboot0
0D82  DA9501  		jc	error
0D85  B7      		ora	a
0D86  C29501  		jnz	error
0D89  C3F702  		jmp	goboot
		
0D8C          	dfboot0:	; HL=setup data for pri or sec
0D8C  7E      		mov	a,m
0D8D  23      		inx	h
0D8E  FEFF    		cpi	0ffh
0D90  C8      		rz		; A <> 0: not setup
0D91  E5      		push	h
0D92  4F      		mov	c,a
0D93  06FF    		mvi	b,-1	; boot modules only
0D95  21050C  		lxi	h,bfchr
0D98  CDAB0C  		call	bfind
0D9B  E1      		pop	h
0D9C  D8      		rc		; CY: no module - error
0D9D  CDB402  		call	vfport
0DA0  D8      		rc		; CY: SW501 error
0DA1          		ldx	d,mdbase
0DA1  DD5602  		DB	0DDH,d*8+46H,mdbase
0DA4  7E      		mov	a,m
0DA5  23      		inx	h
0DA6  FEFF    		cpi	0ffh
0DA8          		jrnz	dfbt0
0DA8  2001    		DB	20H,dfbt0-$-1
0DAA  AF      		xra	a
0DAB          	dfbt0:	cmpx	mdluns
0DAB  DDBE03  		DB	0DDH,0BEH,mdluns
0DAE  3F      		cmc
0DAF  D8      		rc
0DB0  5F      		mov	e,a	; DE=phy drv base,unit
0DB1  7E      		mov	a,m
0DB2  FEFF    		cpi	0ffh	; no string?
0DB4          		jrz	dfbt2
0DB4  2814    		DB	28H,dfbt2-$-1
0DB6  D5      		push	d
0DB7  118122  		lxi	d,bootbf+1	; len in +0...
0DBA  0E00    		mvi	c,0
0DBC  7E      	dfbt1:	mov	a,m
0DBD  12      		stax	d
0DBE  23      		inx	h
0DBF  13      		inx	d
0DC0  0C      		inr	c
0DC1  B7      		ora	a
0DC2          		jrnz	dfbt1
0DC2  20F8    		DB	20H,dfbt1-$-1
0DC4  79      		mov	a,c
0DC5  3D      		dcr	a
0DC6  328022  		sta	bootbf
0DC9  D1      		pop	d
0DCA  AF      	dfbt2:	xra	a	; A=0: ready to boot
0DCB  C9      		ret
		
0DCC          	defbt:	; default boot table... port F2 bits 01110000b
0DCC  21      		db	33	; -000---- MMS 5" floppy 0
0DCD  1D      		db	29	; -001---- MMS 8" floppy 0
0DCE  FF      		db	0ffh	; -010---- n/a  (port 7CH)
0DCF  FF      		db	0ffh	; -011---- n/a  (port 78H)
0DD0  29      		db	41	; -100---- VDIP1
0DD1  46      		db	70	; -101---- GIDE disk part 0
0DD2  3C      		db	60	; -110---- Network
0DD3  FE      		db	0feh	; -111---- use setup primary
		
0000          	 if z180
		 endif
		
0000          	 if z180
		 else
0DD4          	savram:	; interrupts are disabled
			; init H8-512K mmu.
			; WARNING: The H8-512K MAP FF has a R-C delay on its CLR
			; pin, triggered by RESET. This means the MAP enable bit is held
			; off for a period of time after RESET is released. Currently,
			; components are expected to cause a 5mS delay. This places
			; an upper limit of 10mS on the CLR release, with lots of margin
			; for component variation. That equates to 853 iterations of this
			; delay loop at 2.048MHz.
			; This also requires a change to older H8-512K boards to reduce
			; the delay time, which was previously 220mS.
0DD4  015503  		lxi	b,853
0DD7          	savram0:		; total: 24 cy
0DD7  0B      		dcx	b	;  6 cy
0DD8  78      		mov	a,b	;  4 cy
0DD9  B1      		ora	c	;  4 cy
0DDA  C2D70D  		jnz	savram0	; 10 cy
			; H8-512K MMU (MAP) should be usable now.
0DDD  3E00    		mvi	a,0	; page 0
0DDF  D300    		out	rd00k
0DE1  D304    		out	wr00k
0DE3  3C      		inr	a
0DE4  D301    		out	rd16k
0DE6  D305    		out	wr16k
0DE8  3C      		inr	a
0DE9  D302    		out	rd32k
0DEB  D306    		out	wr32k
0DED  3C      		inr	a
0DEE  F680    		ori	ena
0DF0  D303    		out	rd48k
0DF2  D307    		out	wr48k
			; setup pages (RD)8000->00000, (WR)8000->30000
0DF4  3E80    		mvi	a,00h+ena
0DF6  D302    		out	rd32k
0DF8  3E8C    		mvi	a,0ch+ena
0DFA  D306    		out	wr32k
0DFC  210080  		lxi	h,08000h
0DFF  110080  		lxi	d,08000h
0E02  010040  		lxi	b,16*1024
0E05          		ldir
0E05  EDB0    		DB	0EDH,0B0H
			; de-init mmu
0E07  3E00    		mvi	a,0
0E09  D300    		out	rd00k	; turn off MAP bit, back to normal
0E0B  C9      		ret
		 endif
		
0E0C  3600    	linix:	mvi	m,0	; terminate buffer
0E0E  C9      		ret
		
		; input a line from console, allow backspace
		; HL=buffer (size 128)
		; returns B=num chars, 128 max (never is 0c3h)
0E0F          	linin:
0E0F  0600    		mvi	b,0	; count chars
0E11  CD050A  	lini0	call	conin	; handles DEL (cancel)
0E14  FE0D    		cpi	CR
0E16          		jrz	linix
0E16  28F4    		DB	28H,linix-$-1
0E18  FE08    		cpi	BS
0E1A          		jrz	backup
0E1A  281C    		DB	28H,backup-$-1
0E1C  FE20    		cpi	' '
0E1E          		jrc	chrnak
0E1E  3811    		DB	38H,chrnak-$-1
0E20  FE7F    		cpi	'~'+1
0E22          		jrnc	chrnak
0E22  300D    		DB	30H,chrnak-$-1
0E24  77      	chrok:	mov	m,a
0E25  23      		inx	h
0E26  04      		inr	b
0E27  FA2F0E  		jm	chrovf	; 128 chars max
0E2A  CDC903  		call	conout
0E2D          		jr	lini0
0E2D  18E2    		DB	18H,lini0-$-1
0E2F  2B      	chrovf:	dcx	h
0E30  05      		dcr	b
0E31  3E07    	chrnak:	mvi	a,BEL
0E33  CDC903  		call	conout
0E36          		jr	lini0
0E36  18D9    		DB	18H,lini0-$-1
0E38          	backup:
0E38  78      		mov	a,b
0E39  B7      		ora	a
0E3A          		jrz	lini0
0E3A  28D5    		DB	28H,lini0-$-1
0E3C  05      		dcr	b
0E3D  2B      		dcx	h
0E3E  3E08    		mvi	a,BS
0E40  CDC903  		call	conout
0E43  3E20    		mvi	a,' '
0E45  CDC903  		call	conout
0E48  3E08    		mvi	a,BS
0E4A  CDC903  		call	conout
0E4D          		jr	lini0
0E4D  18C2    		DB	18H,lini0-$-1
		
		; Used during entry of LUN in boot command.
		; multiply E by 16, check for >= (IX+mdnum) (or overflow)
		; add in A (converted to binary).
		; IX=active boot module
		; Returns CY on overflow, else E updated to new LUN value
0E4F          	E$x16$A:
0E4F  43      		mov	b,e
0E50          		ralr	b
0E50  CB10    		DB	0CBH, 10H+b
0E52  D8      		rc
0E53          		ralr	b
0E53  CB10    		DB	0CBH, 10H+b
0E55  D8      		rc
0E56          		ralr	b
0E56  CB10    		DB	0CBH, 10H+b
0E58  D8      		rc
0E59          		ralr	b
0E59  CB10    		DB	0CBH, 10H+b
0E5B  D8      		rc
0E5C  F5      		push	psw
0E5D  D630    		sui	'0'
0E5F  FE0A    		cpi	9+1
0E61          		jrc	ex16a0
0E61  3802    		DB	38H,ex16a0-$-1
0E63  D607    		sui	'A'-'0'-10
0E65  80      	ex16a0:	add	b	; never CY
0E66          		cmpx	mdluns	; might be 0ffh
0E66  DDBE03  		DB	0DDH,0BEH,mdluns
0E69          		jrc	ex16a1	; value OK
0E69  3803    		DB	38H,ex16a1-$-1
0E6B  F1      		pop	psw
0E6C  37      		stc
0E6D  C9      		ret
0E6E  5F      	ex16a1:	mov	e,a
0E6F  F1      		pop	psw
0E70  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Dump command
0E71          	cmddmp:
0E71  21F806  		lxi	h,dmpms
0E74  CDFC09  		call	msgout
0E77  211420  		lxi	h,ABUSS
0E7A  B7      		ora	a	; NC
0E7B  160D    		mvi	d,CR
0E7D  CDFE03  		call	adrin
0E80  EB      		xchg	; HL=adr
0E81  0608    		mvi	b,8	; 8 lines (one half page, 128 bytes)
0E83  C5      	dmp0:	push	b
0E84  CD5104  		call	adrnl	; CR,LF,"AAAA " (HL=AAAA)
0E87  E5      		push	h
0E88  0610    		mvi	b,16
0E8A  7E      	dmp1:	mov	a,m
0E8B  CD6104  		call	hexout
0E8E  CD5C04  		call	spout
0E91  23      		inx	h
0E92          		djnz	dmp1
0E92  10F6    		DB	10H,dmp1-$-1
0E94  E1      		pop	h
0E95  0610    		mvi	b,16
0E97  7E      	dmp2:	mov	a,m
0E98  FE20    		cpi	' '
0E9A          		jrc	dmp3
0E9A  3804    		DB	38H,dmp3-$-1
0E9C  FE7F    		cpi	'~'+1
0E9E          		jrc	dmp4
0E9E  3802    		DB	38H,dmp4-$-1
0EA0  3E2E    	dmp3:	mvi	a,'.'
0EA2  CDC903  	dmp4:	call	conout
0EA5  23      		inx	h
0EA6          		djnz	dmp2
0EA6  10EF    		DB	10H,dmp2-$-1
0EA8  C1      		pop	b
0EA9          		djnz	dmp0
0EA9  10D8    		DB	10H,dmp0-$-1
0EAB  221420  		shld	ABUSS
0EAE  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; List available boot modules
0EAF  21C20E  	cmdlb:	lxi	h,lbmsg
0EB2  CDFC09  		call	msgout
0EB5  CDD101  		call	gtdfbt
0EB8  42      		mov	b,d
0EB9  21340C  		lxi	h,bflst
0EBC  0E00    		mvi	c,0
0EBE  CDAB0C  		call	bfind0
0EC1  C9      		ret
		
0EC2  69737420	lbmsg:	db	'ist boot modules',CR,LF,0
      626F6F74
      206D6F64
      756C6573
      0D0A00
0ED5  656C7020	hbmsg:	db	'elp boot',CR,LF,0
      626F6F74
      0D0A00
0EE0  5072693A	hbmsg2:	db	'Pri: ',0
      2000
FFFF          	 if not nofp
0EE6  5365633A	hbmsg3:	db	'Sec: ',0
      2000
		 endif
		
		; Help boot command
0EEC  21D50E  	cmdhb:	lxi	h,hbmsg
0EEF  CDFC09  		call	msgout
0EF2  CDD101  		call	gtdfbt
0EF5  42      		mov	b,d
0EF6  215C0C  		lxi	h,bfllst
0EF9  CDAB0C  		call	bfind0
			; Now display primary/secondary configs
0EFC  21E00E  		lxi	h,hbmsg2
0EFF  1104F8  		lxi	d,susave+dpdev
0F02  DBF2    		in	0f2h
0F04  E670    		ani	01110000b	; default boot device
0F06  FE70    		cpi	01110000b	; use setup cfg?
0F08  3E2A    		mvi	a,'*'
0F0A          		jrz	cmdhb6
0F0A  2802    		DB	28H,cmdhb6-$-1
0F0C  3E20    		mvi	a,' '
0F0E  CD1D0F  	cmdhb6:	call	cmdhbx
FFFF          	 if not nofp
0F11  21E60E  		lxi	h,hbmsg3
0F14  1186F8  		lxi	d,susave+dsdev
0F17  3E20    		mvi	a,' '	; never the default
0F19  CD1D0F  		call	cmdhbx
		 endif
0F1C  C9      		ret
		
0F1D  CDC903  	cmdhbx:	call	conout
0F20  CDFC09  		call	msgout
0F23  1A      		ldax	d
0F24  13      		inx	d
0F25  FEFF    		cpi	0ffh
0F27          		jrnz	cmdhb0
0F27  2002    		DB	20H,cmdhb0-$-1
0F29  3E2D    		mvi	a,'-'
0F2B  CDC903  	cmdhb0:	call	conout
0F2E  3E20    		mvi	a,' '
0F30  CDC903  		call	conout
0F33  1A      		ldax	d
0F34  13      		inx	d
0F35  C630    		adi	'0'	; FF=2F,CY
0F37          		jrnc	cmdhb1
0F37  3002    		DB	30H,cmdhb1-$-1
0F39  3E2D    		mvi	a,'-'
0F3B  CDC903  	cmdhb1:	call	conout
0F3E  3E20    		mvi	a,' '
0F40  CDC903  		call	conout
0F43  1A      		ldax	d
0F44  FEFF    		cpi	0ffh
0F46          		jrnz	cmdhb2
0F46  2007    		DB	20H,cmdhb2-$-1
0F48  3E2D    		mvi	a,'-'
0F4A  CDC903  		call	conout
0F4D          		jr	cmdhb3
0F4D  1804    		DB	18H,cmdhb3-$-1
0F4F  EB      	cmdhb2:	xchg
0F50  CDFC09  		call	msgout
0F53  CDF209  	cmdhb3:	call	crlf
0F56  C9      		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; eXtended command set
0F57          	cmdx:
0F57  CD050A  		call	conin	; get actual command character
0F5A  F620    		ori	00100000b	; lower case
0F5C  FE61    		cpi	'a'
0F5E          		jrc	cmxerr
0F5E  381D    		DB	38H,cmxerr-$-1
0F60  FE7B    		cpi	'z'+1
0F62          		jrnc	cmxerr
0F62  3019    		DB	30H,cmxerr-$-1
0F64  323B20  		sta	lstcmd
			; would like to re-use nocmd, but error path is wrong...
0F67  4F      		mov	c,a
0F68  0600    		mvi	b,0	; no boot modules
0F6A  21050C  		lxi	h,bfchr
0F6D  CDAB0C  		call	bfind
0F70          		jrc	cmxerr
0F70  380B    		DB	38H,cmxerr-$-1
0F72  3A3B20  		lda	lstcmd
0F75  E65F    		ani	01011111b	; upper case echo
0F77  CDC903  		call	conout
0F7A  C30A0D  		jmp	cmexec
		
0F7D  CDC703  	cmxerr:	call	belout
0F80          		jr	cmdx
0F80  18D5    		DB	18H,cmdx-$-1
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Print ROM version command
0F82          	prtver:
0F82  218F0F  		lxi	h,versms
0F85  CDFC09  		call	msgout
0F88  21B00F  		lxi	h,vernum
0F8B  CDFC09  		call	msgout
0F8E  C9      		ret
		
0F8F  65727369	versms:	db	'ersion ',TRM
      6F6E2000
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		; code required to return to monitor from stand-alone programs.
0F97          	retmon:
0F97  F3      		di
0F98  AF      		xra	a	; reset state of ctl port
0F99  D3F2    		out	0f2h
FFFF          	 if not nofp
0F9B  3EDF    		mvi	a,0dfh	; reset state of FP port 0
0F9D  D3F0    		out	0f0h
		 endif
0F9F  C30000  		jmp	0
		
0FA2  0D0A4838	signon:	db	CR,LF,'H8'
0000          	 if h8nofp
		 endif
0000          	 if h89
		 endif
0FA6  20      		db	' '
0000          	 if z180
		 endif
0FA7  4D6F6E69		db	'Monitor v'
      746F7220
      76
0FB0  322E31  	vernum:	db	(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0'
0000          	 if alpha
		 endif
0002          	 if beta
0FB3  28626574		db	'(beta'
      61
0000          	 if oled
		 endif
0000          	 if beta > 9
		 endif
0FB8  3229    		db	(beta MOD 10)+'0',')'
		 endif
0FBA  0D0A00  		db	CR,LF,TRM
		
			rept	1000h-$-2
0FBD  FF      		db	0ffh
0FBE  FF      		db	0ffh
0FBF  FF      		db	0ffh
0FC0  FF      		db	0ffh
0FC1  FF      		db	0ffh
0FC2  FF      		db	0ffh
0FC3  FF      		db	0ffh
0FC4  FF      		db	0ffh
0FC5  FF      		db	0ffh
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC  FF      		db	0ffh
0FFD  FF      		db	0ffh
0FFE  80FF    		dw	pcode	; product code for system
0000          	 if	($ <> 1000h)
		 endif
		
		; module overlay area starts here...
		; ensure this does not match any...
1000  FFFF    		dw	-1
1002  0000    		db	0,0
		
			rept	1800h-$
1004  FF      		db	0ffh
1005  FF      		db	0ffh
1006  FF      		db	0ffh
1007  FF      		db	0ffh
1008  FF      		db	0ffh
1009  FF      		db	0ffh
100A  FF      		db	0ffh
100B  FF      		db	0ffh
100C  FF      		db	0ffh
100D  FF      		db	0ffh
100E  FF      		db	0ffh
100F  FF      		db	0ffh
1010  FF      		db	0ffh
1011  FF      		db	0ffh
1012  FF      		db	0ffh
1013  FF      		db	0ffh
1014  FF      		db	0ffh
1015  FF      		db	0ffh
1016  FF      		db	0ffh
1017  FF      		db	0ffh
1018  FF      		db	0ffh
1019  FF      		db	0ffh
101A  FF      		db	0ffh
101B  FF      		db	0ffh
101C  FF      		db	0ffh
101D  FF      		db	0ffh
101E  FF      		db	0ffh
101F  FF      		db	0ffh
1020  FF      		db	0ffh
1021  FF      		db	0ffh
1022  FF      		db	0ffh
1023  FF      		db	0ffh
1024  FF      		db	0ffh
1025  FF      		db	0ffh
1026  FF      		db	0ffh
1027  FF      		db	0ffh
1028  FF      		db	0ffh
1029  FF      		db	0ffh
102A  FF      		db	0ffh
102B  FF      		db	0ffh
102C  FF      		db	0ffh
102D  FF      		db	0ffh
102E  FF      		db	0ffh
102F  FF      		db	0ffh
1030  FF      		db	0ffh
1031  FF      		db	0ffh
1032  FF      		db	0ffh
1033  FF      		db	0ffh
1034  FF      		db	0ffh
1035  FF      		db	0ffh
1036  FF      		db	0ffh
1037  FF      		db	0ffh
1038  FF      		db	0ffh
1039  FF      		db	0ffh
103A  FF      		db	0ffh
103B  FF      		db	0ffh
103C  FF      		db	0ffh
103D  FF      		db	0ffh
103E  FF      		db	0ffh
103F  FF      		db	0ffh
1040  FF      		db	0ffh
1041  FF      		db	0ffh
1042  FF      		db	0ffh
1043  FF      		db	0ffh
1044  FF      		db	0ffh
1045  FF      		db	0ffh
1046  FF      		db	0ffh
1047  FF      		db	0ffh
1048  FF      		db	0ffh
1049  FF      		db	0ffh
104A  FF      		db	0ffh
104B  FF      		db	0ffh
104C  FF      		db	0ffh
104D  FF      		db	0ffh
104E  FF      		db	0ffh
104F  FF      		db	0ffh
1050  FF      		db	0ffh
1051  FF      		db	0ffh
1052  FF      		db	0ffh
1053  FF      		db	0ffh
1054  FF      		db	0ffh
1055  FF      		db	0ffh
1056  FF      		db	0ffh
1057  FF      		db	0ffh
1058  FF      		db	0ffh
1059  FF      		db	0ffh
105A  FF      		db	0ffh
105B  FF      		db	0ffh
105C  FF      		db	0ffh
105D  FF      		db	0ffh
105E  FF      		db	0ffh
105F  FF      		db	0ffh
1060  FF      		db	0ffh
1061  FF      		db	0ffh
1062  FF      		db	0ffh
1063  FF      		db	0ffh
1064  FF      		db	0ffh
1065  FF      		db	0ffh
1066  FF      		db	0ffh
1067  FF      		db	0ffh
1068  FF      		db	0ffh
1069  FF      		db	0ffh
106A  FF      		db	0ffh
106B  FF      		db	0ffh
106C  FF      		db	0ffh
106D  FF      		db	0ffh
106E  FF      		db	0ffh
106F  FF      		db	0ffh
1070  FF      		db	0ffh
1071  FF      		db	0ffh
1072  FF      		db	0ffh
1073  FF      		db	0ffh
1074  FF      		db	0ffh
1075  FF      		db	0ffh
1076  FF      		db	0ffh
1077  FF      		db	0ffh
1078  FF      		db	0ffh
1079  FF      		db	0ffh
107A  FF      		db	0ffh
107B  FF      		db	0ffh
107C  FF      		db	0ffh
107D  FF      		db	0ffh
107E  FF      		db	0ffh
107F  FF      		db	0ffh
1080  FF      		db	0ffh
1081  FF      		db	0ffh
1082  FF      		db	0ffh
1083  FF      		db	0ffh
1084  FF      		db	0ffh
1085  FF      		db	0ffh
1086  FF      		db	0ffh
1087  FF      		db	0ffh
1088  FF      		db	0ffh
1089  FF      		db	0ffh
108A  FF      		db	0ffh
108B  FF      		db	0ffh
108C  FF      		db	0ffh
108D  FF      		db	0ffh
108E  FF      		db	0ffh
108F  FF      		db	0ffh
1090  FF      		db	0ffh
1091  FF      		db	0ffh
1092  FF      		db	0ffh
1093  FF      		db	0ffh
1094  FF      		db	0ffh
1095  FF      		db	0ffh
1096  FF      		db	0ffh
1097  FF      		db	0ffh
1098  FF      		db	0ffh
1099  FF      		db	0ffh
109A  FF      		db	0ffh
109B  FF      		db	0ffh
109C  FF      		db	0ffh
109D  FF      		db	0ffh
109E  FF      		db	0ffh
109F  FF      		db	0ffh
10A0  FF      		db	0ffh
10A1  FF      		db	0ffh
10A2  FF      		db	0ffh
10A3  FF      		db	0ffh
10A4  FF      		db	0ffh
10A5  FF      		db	0ffh
10A6  FF      		db	0ffh
10A7  FF      		db	0ffh
10A8  FF      		db	0ffh
10A9  FF      		db	0ffh
10AA  FF      		db	0ffh
10AB  FF      		db	0ffh
10AC  FF      		db	0ffh
10AD  FF      		db	0ffh
10AE  FF      		db	0ffh
10AF  FF      		db	0ffh
10B0  FF      		db	0ffh
10B1  FF      		db	0ffh
10B2  FF      		db	0ffh
10B3  FF      		db	0ffh
10B4  FF      		db	0ffh
10B5  FF      		db	0ffh
10B6  FF      		db	0ffh
10B7  FF      		db	0ffh
10B8  FF      		db	0ffh
10B9  FF      		db	0ffh
10BA  FF      		db	0ffh
10BB  FF      		db	0ffh
10BC  FF      		db	0ffh
10BD  FF      		db	0ffh
10BE  FF      		db	0ffh
10BF  FF      		db	0ffh
10C0  FF      		db	0ffh
10C1  FF      		db	0ffh
10C2  FF      		db	0ffh
10C3  FF      		db	0ffh
10C4  FF      		db	0ffh
10C5  FF      		db	0ffh
10C6  FF      		db	0ffh
10C7  FF      		db	0ffh
10C8  FF      		db	0ffh
10C9  FF      		db	0ffh
10CA  FF      		db	0ffh
10CB  FF      		db	0ffh
10CC  FF      		db	0ffh
10CD  FF      		db	0ffh
10CE  FF      		db	0ffh
10CF  FF      		db	0ffh
10D0  FF      		db	0ffh
10D1  FF      		db	0ffh
10D2  FF      		db	0ffh
10D3  FF      		db	0ffh
10D4  FF      		db	0ffh
10D5  FF      		db	0ffh
10D6  FF      		db	0ffh
10D7  FF      		db	0ffh
10D8  FF      		db	0ffh
10D9  FF      		db	0ffh
10DA  FF      		db	0ffh
10DB  FF      		db	0ffh
10DC  FF      		db	0ffh
10DD  FF      		db	0ffh
10DE  FF      		db	0ffh
10DF  FF      		db	0ffh
10E0  FF      		db	0ffh
10E1  FF      		db	0ffh
10E2  FF      		db	0ffh
10E3  FF      		db	0ffh
10E4  FF      		db	0ffh
10E5  FF      		db	0ffh
10E6  FF      		db	0ffh
10E7  FF      		db	0ffh
10E8  FF      		db	0ffh
10E9  FF      		db	0ffh
10EA  FF      		db	0ffh
10EB  FF      		db	0ffh
10EC  FF      		db	0ffh
10ED  FF      		db	0ffh
10EE  FF      		db	0ffh
10EF  FF      		db	0ffh
10F0  FF      		db	0ffh
10F1  FF      		db	0ffh
10F2  FF      		db	0ffh
10F3  FF      		db	0ffh
10F4  FF      		db	0ffh
10F5  FF      		db	0ffh
10F6  FF      		db	0ffh
10F7  FF      		db	0ffh
10F8  FF      		db	0ffh
10F9  FF      		db	0ffh
10FA  FF      		db	0ffh
10FB  FF      		db	0ffh
10FC  FF      		db	0ffh
10FD  FF      		db	0ffh
10FE  FF      		db	0ffh
10FF  FF      		db	0ffh
1100  FF      		db	0ffh
1101  FF      		db	0ffh
1102  FF      		db	0ffh
1103  FF      		db	0ffh
1104  FF      		db	0ffh
1105  FF      		db	0ffh
1106  FF      		db	0ffh
1107  FF      		db	0ffh
1108  FF      		db	0ffh
1109  FF      		db	0ffh
110A  FF      		db	0ffh
110B  FF      		db	0ffh
110C  FF      		db	0ffh
110D  FF      		db	0ffh
110E  FF      		db	0ffh
110F  FF      		db	0ffh
1110  FF      		db	0ffh
1111  FF      		db	0ffh
1112  FF      		db	0ffh
1113  FF      		db	0ffh
1114  FF      		db	0ffh
1115  FF      		db	0ffh
1116  FF      		db	0ffh
1117  FF      		db	0ffh
1118  FF      		db	0ffh
1119  FF      		db	0ffh
111A  FF      		db	0ffh
111B  FF      		db	0ffh
111C  FF      		db	0ffh
111D  FF      		db	0ffh
111E  FF      		db	0ffh
111F  FF      		db	0ffh
1120  FF      		db	0ffh
1121  FF      		db	0ffh
1122  FF      		db	0ffh
1123  FF      		db	0ffh
1124  FF      		db	0ffh
1125  FF      		db	0ffh
1126  FF      		db	0ffh
1127  FF      		db	0ffh
1128  FF      		db	0ffh
1129  FF      		db	0ffh
112A  FF      		db	0ffh
112B  FF      		db	0ffh
112C  FF      		db	0ffh
112D  FF      		db	0ffh
112E  FF      		db	0ffh
112F  FF      		db	0ffh
1130  FF      		db	0ffh
1131  FF      		db	0ffh
1132  FF      		db	0ffh
1133  FF      		db	0ffh
1134  FF      		db	0ffh
1135  FF      		db	0ffh
1136  FF      		db	0ffh
1137  FF      		db	0ffh
1138  FF      		db	0ffh
1139  FF      		db	0ffh
113A  FF      		db	0ffh
113B  FF      		db	0ffh
113C  FF      		db	0ffh
113D  FF      		db	0ffh
113E  FF      		db	0ffh
113F  FF      		db	0ffh
1140  FF      		db	0ffh
1141  FF      		db	0ffh
1142  FF      		db	0ffh
1143  FF      		db	0ffh
1144  FF      		db	0ffh
1145  FF      		db	0ffh
1146  FF      		db	0ffh
1147  FF      		db	0ffh
1148  FF      		db	0ffh
1149  FF      		db	0ffh
114A  FF      		db	0ffh
114B  FF      		db	0ffh
114C  FF      		db	0ffh
114D  FF      		db	0ffh
114E  FF      		db	0ffh
114F  FF      		db	0ffh
1150  FF      		db	0ffh
1151  FF      		db	0ffh
1152  FF      		db	0ffh
1153  FF      		db	0ffh
1154  FF      		db	0ffh
1155  FF      		db	0ffh
1156  FF      		db	0ffh
1157  FF      		db	0ffh
1158  FF      		db	0ffh
1159  FF      		db	0ffh
115A  FF      		db	0ffh
115B  FF      		db	0ffh
115C  FF      		db	0ffh
115D  FF      		db	0ffh
115E  FF      		db	0ffh
115F  FF      		db	0ffh
1160  FF      		db	0ffh
1161  FF      		db	0ffh
1162  FF      		db	0ffh
1163  FF      		db	0ffh
1164  FF      		db	0ffh
1165  FF      		db	0ffh
1166  FF      		db	0ffh
1167  FF      		db	0ffh
1168  FF      		db	0ffh
1169  FF      		db	0ffh
116A  FF      		db	0ffh
116B  FF      		db	0ffh
116C  FF      		db	0ffh
116D  FF      		db	0ffh
116E  FF      		db	0ffh
116F  FF      		db	0ffh
1170  FF      		db	0ffh
1171  FF      		db	0ffh
1172  FF      		db	0ffh
1173  FF      		db	0ffh
1174  FF      		db	0ffh
1175  FF      		db	0ffh
1176  FF      		db	0ffh
1177  FF      		db	0ffh
1178  FF      		db	0ffh
1179  FF      		db	0ffh
117A  FF      		db	0ffh
117B  FF      		db	0ffh
117C  FF      		db	0ffh
117D  FF      		db	0ffh
117E  FF      		db	0ffh
117F  FF      		db	0ffh
1180  FF      		db	0ffh
1181  FF      		db	0ffh
1182  FF      		db	0ffh
1183  FF      		db	0ffh
1184  FF      		db	0ffh
1185  FF      		db	0ffh
1186  FF      		db	0ffh
1187  FF      		db	0ffh
1188  FF      		db	0ffh
1189  FF      		db	0ffh
118A  FF      		db	0ffh
118B  FF      		db	0ffh
118C  FF      		db	0ffh
118D  FF      		db	0ffh
118E  FF      		db	0ffh
118F  FF      		db	0ffh
1190  FF      		db	0ffh
1191  FF      		db	0ffh
1192  FF      		db	0ffh
1193  FF      		db	0ffh
1194  FF      		db	0ffh
1195  FF      		db	0ffh
1196  FF      		db	0ffh
1197  FF      		db	0ffh
1198  FF      		db	0ffh
1199  FF      		db	0ffh
119A  FF      		db	0ffh
119B  FF      		db	0ffh
119C  FF      		db	0ffh
119D  FF      		db	0ffh
119E  FF      		db	0ffh
119F  FF      		db	0ffh
11A0  FF      		db	0ffh
11A1  FF      		db	0ffh
11A2  FF      		db	0ffh
11A3  FF      		db	0ffh
11A4  FF      		db	0ffh
11A5  FF      		db	0ffh
11A6  FF      		db	0ffh
11A7  FF      		db	0ffh
11A8  FF      		db	0ffh
11A9  FF      		db	0ffh
11AA  FF      		db	0ffh
11AB  FF      		db	0ffh
11AC  FF      		db	0ffh
11AD  FF      		db	0ffh
11AE  FF      		db	0ffh
11AF  FF      		db	0ffh
11B0  FF      		db	0ffh
11B1  FF      		db	0ffh
11B2  FF      		db	0ffh
11B3  FF      		db	0ffh
11B4  FF      		db	0ffh
11B5  FF      		db	0ffh
11B6  FF      		db	0ffh
11B7  FF      		db	0ffh
11B8  FF      		db	0ffh
11B9  FF      		db	0ffh
11BA  FF      		db	0ffh
11BB  FF      		db	0ffh
11BC  FF      		db	0ffh
11BD  FF      		db	0ffh
11BE  FF      		db	0ffh
11BF  FF      		db	0ffh
11C0  FF      		db	0ffh
11C1  FF      		db	0ffh
11C2  FF      		db	0ffh
11C3  FF      		db	0ffh
11C4  FF      		db	0ffh
11C5  FF      		db	0ffh
11C6  FF      		db	0ffh
11C7  FF      		db	0ffh
11C8  FF      		db	0ffh
11C9  FF      		db	0ffh
11CA  FF      		db	0ffh
11CB  FF      		db	0ffh
11CC  FF      		db	0ffh
11CD  FF      		db	0ffh
11CE  FF      		db	0ffh
11CF  FF      		db	0ffh
11D0  FF      		db	0ffh
11D1  FF      		db	0ffh
11D2  FF      		db	0ffh
11D3  FF      		db	0ffh
11D4  FF      		db	0ffh
11D5  FF      		db	0ffh
11D6  FF      		db	0ffh
11D7  FF      		db	0ffh
11D8  FF      		db	0ffh
11D9  FF      		db	0ffh
11DA  FF      		db	0ffh
11DB  FF      		db	0ffh
11DC  FF      		db	0ffh
11DD  FF      		db	0ffh
11DE  FF      		db	0ffh
11DF  FF      		db	0ffh
11E0  FF      		db	0ffh
11E1  FF      		db	0ffh
11E2  FF      		db	0ffh
11E3  FF      		db	0ffh
11E4  FF      		db	0ffh
11E5  FF      		db	0ffh
11E6  FF      		db	0ffh
11E7  FF      		db	0ffh
11E8  FF      		db	0ffh
11E9  FF      		db	0ffh
11EA  FF      		db	0ffh
11EB  FF      		db	0ffh
11EC  FF      		db	0ffh
11ED  FF      		db	0ffh
11EE  FF      		db	0ffh
11EF  FF      		db	0ffh
11F0  FF      		db	0ffh
11F1  FF      		db	0ffh
11F2  FF      		db	0ffh
11F3  FF      		db	0ffh
11F4  FF      		db	0ffh
11F5  FF      		db	0ffh
11F6  FF      		db	0ffh
11F7  FF      		db	0ffh
11F8  FF      		db	0ffh
11F9  FF      		db	0ffh
11FA  FF      		db	0ffh
11FB  FF      		db	0ffh
11FC  FF      		db	0ffh
11FD  FF      		db	0ffh
11FE  FF      		db	0ffh
11FF  FF      		db	0ffh
1200  FF      		db	0ffh
1201  FF      		db	0ffh
1202  FF      		db	0ffh
1203  FF      		db	0ffh
1204  FF      		db	0ffh
1205  FF      		db	0ffh
1206  FF      		db	0ffh
1207  FF      		db	0ffh
1208  FF      		db	0ffh
1209  FF      		db	0ffh
120A  FF      		db	0ffh
120B  FF      		db	0ffh
120C  FF      		db	0ffh
120D  FF      		db	0ffh
120E  FF      		db	0ffh
120F  FF      		db	0ffh
1210  FF      		db	0ffh
1211  FF      		db	0ffh
1212  FF      		db	0ffh
1213  FF      		db	0ffh
1214  FF      		db	0ffh
1215  FF      		db	0ffh
1216  FF      		db	0ffh
1217  FF      		db	0ffh
1218  FF      		db	0ffh
1219  FF      		db	0ffh
121A  FF      		db	0ffh
121B  FF      		db	0ffh
121C  FF      		db	0ffh
121D  FF      		db	0ffh
121E  FF      		db	0ffh
121F  FF      		db	0ffh
1220  FF      		db	0ffh
1221  FF      		db	0ffh
1222  FF      		db	0ffh
1223  FF      		db	0ffh
1224  FF      		db	0ffh
1225  FF      		db	0ffh
1226  FF      		db	0ffh
1227  FF      		db	0ffh
1228  FF      		db	0ffh
1229  FF      		db	0ffh
122A  FF      		db	0ffh
122B  FF      		db	0ffh
122C  FF      		db	0ffh
122D  FF      		db	0ffh
122E  FF      		db	0ffh
122F  FF      		db	0ffh
1230  FF      		db	0ffh
1231  FF      		db	0ffh
1232  FF      		db	0ffh
1233  FF      		db	0ffh
1234  FF      		db	0ffh
1235  FF      		db	0ffh
1236  FF      		db	0ffh
1237  FF      		db	0ffh
1238  FF      		db	0ffh
1239  FF      		db	0ffh
123A  FF      		db	0ffh
123B  FF      		db	0ffh
123C  FF      		db	0ffh
123D  FF      		db	0ffh
123E  FF      		db	0ffh
123F  FF      		db	0ffh
1240  FF      		db	0ffh
1241  FF      		db	0ffh
1242  FF      		db	0ffh
1243  FF      		db	0ffh
1244  FF      		db	0ffh
1245  FF      		db	0ffh
1246  FF      		db	0ffh
1247  FF      		db	0ffh
1248  FF      		db	0ffh
1249  FF      		db	0ffh
124A  FF      		db	0ffh
124B  FF      		db	0ffh
124C  FF      		db	0ffh
124D  FF      		db	0ffh
124E  FF      		db	0ffh
124F  FF      		db	0ffh
1250  FF      		db	0ffh
1251  FF      		db	0ffh
1252  FF      		db	0ffh
1253  FF      		db	0ffh
1254  FF      		db	0ffh
1255  FF      		db	0ffh
1256  FF      		db	0ffh
1257  FF      		db	0ffh
1258  FF      		db	0ffh
1259  FF      		db	0ffh
125A  FF      		db	0ffh
125B  FF      		db	0ffh
125C  FF      		db	0ffh
125D  FF      		db	0ffh
125E  FF      		db	0ffh
125F  FF      		db	0ffh
1260  FF      		db	0ffh
1261  FF      		db	0ffh
1262  FF      		db	0ffh
1263  FF      		db	0ffh
1264  FF      		db	0ffh
1265  FF      		db	0ffh
1266  FF      		db	0ffh
1267  FF      		db	0ffh
1268  FF      		db	0ffh
1269  FF      		db	0ffh
126A  FF      		db	0ffh
126B  FF      		db	0ffh
126C  FF      		db	0ffh
126D  FF      		db	0ffh
126E  FF      		db	0ffh
126F  FF      		db	0ffh
1270  FF      		db	0ffh
1271  FF      		db	0ffh
1272  FF      		db	0ffh
1273  FF      		db	0ffh
1274  FF      		db	0ffh
1275  FF      		db	0ffh
1276  FF      		db	0ffh
1277  FF      		db	0ffh
1278  FF      		db	0ffh
1279  FF      		db	0ffh
127A  FF      		db	0ffh
127B  FF      		db	0ffh
127C  FF      		db	0ffh
127D  FF      		db	0ffh
127E  FF      		db	0ffh
127F  FF      		db	0ffh
1280  FF      		db	0ffh
1281  FF      		db	0ffh
1282  FF      		db	0ffh
1283  FF      		db	0ffh
1284  FF      		db	0ffh
1285  FF      		db	0ffh
1286  FF      		db	0ffh
1287  FF      		db	0ffh
1288  FF      		db	0ffh
1289  FF      		db	0ffh
128A  FF      		db	0ffh
128B  FF      		db	0ffh
128C  FF      		db	0ffh
128D  FF      		db	0ffh
128E  FF      		db	0ffh
128F  FF      		db	0ffh
1290  FF      		db	0ffh
1291  FF      		db	0ffh
1292  FF      		db	0ffh
1293  FF      		db	0ffh
1294  FF      		db	0ffh
1295  FF      		db	0ffh
1296  FF      		db	0ffh
1297  FF      		db	0ffh
1298  FF      		db	0ffh
1299  FF      		db	0ffh
129A  FF      		db	0ffh
129B  FF      		db	0ffh
129C  FF      		db	0ffh
129D  FF      		db	0ffh
129E  FF      		db	0ffh
129F  FF      		db	0ffh
12A0  FF      		db	0ffh
12A1  FF      		db	0ffh
12A2  FF      		db	0ffh
12A3  FF      		db	0ffh
12A4  FF      		db	0ffh
12A5  FF      		db	0ffh
12A6  FF      		db	0ffh
12A7  FF      		db	0ffh
12A8  FF      		db	0ffh
12A9  FF      		db	0ffh
12AA  FF      		db	0ffh
12AB  FF      		db	0ffh
12AC  FF      		db	0ffh
12AD  FF      		db	0ffh
12AE  FF      		db	0ffh
12AF  FF      		db	0ffh
12B0  FF      		db	0ffh
12B1  FF      		db	0ffh
12B2  FF      		db	0ffh
12B3  FF      		db	0ffh
12B4  FF      		db	0ffh
12B5  FF      		db	0ffh
12B6  FF      		db	0ffh
12B7  FF      		db	0ffh
12B8  FF      		db	0ffh
12B9  FF      		db	0ffh
12BA  FF      		db	0ffh
12BB  FF      		db	0ffh
12BC  FF      		db	0ffh
12BD  FF      		db	0ffh
12BE  FF      		db	0ffh
12BF  FF      		db	0ffh
12C0  FF      		db	0ffh
12C1  FF      		db	0ffh
12C2  FF      		db	0ffh
12C3  FF      		db	0ffh
12C4  FF      		db	0ffh
12C5  FF      		db	0ffh
12C6  FF      		db	0ffh
12C7  FF      		db	0ffh
12C8  FF      		db	0ffh
12C9  FF      		db	0ffh
12CA  FF      		db	0ffh
12CB  FF      		db	0ffh
12CC  FF      		db	0ffh
12CD  FF      		db	0ffh
12CE  FF      		db	0ffh
12CF  FF      		db	0ffh
12D0  FF      		db	0ffh
12D1  FF      		db	0ffh
12D2  FF      		db	0ffh
12D3  FF      		db	0ffh
12D4  FF      		db	0ffh
12D5  FF      		db	0ffh
12D6  FF      		db	0ffh
12D7  FF      		db	0ffh
12D8  FF      		db	0ffh
12D9  FF      		db	0ffh
12DA  FF      		db	0ffh
12DB  FF      		db	0ffh
12DC  FF      		db	0ffh
12DD  FF      		db	0ffh
12DE  FF      		db	0ffh
12DF  FF      		db	0ffh
12E0  FF      		db	0ffh
12E1  FF      		db	0ffh
12E2  FF      		db	0ffh
12E3  FF      		db	0ffh
12E4  FF      		db	0ffh
12E5  FF      		db	0ffh
12E6  FF      		db	0ffh
12E7  FF      		db	0ffh
12E8  FF      		db	0ffh
12E9  FF      		db	0ffh
12EA  FF      		db	0ffh
12EB  FF      		db	0ffh
12EC  FF      		db	0ffh
12ED  FF      		db	0ffh
12EE  FF      		db	0ffh
12EF  FF      		db	0ffh
12F0  FF      		db	0ffh
12F1  FF      		db	0ffh
12F2  FF      		db	0ffh
12F3  FF      		db	0ffh
12F4  FF      		db	0ffh
12F5  FF      		db	0ffh
12F6  FF      		db	0ffh
12F7  FF      		db	0ffh
12F8  FF      		db	0ffh
12F9  FF      		db	0ffh
12FA  FF      		db	0ffh
12FB  FF      		db	0ffh
12FC  FF      		db	0ffh
12FD  FF      		db	0ffh
12FE  FF      		db	0ffh
12FF  FF      		db	0ffh
1300  FF      		db	0ffh
1301  FF      		db	0ffh
1302  FF      		db	0ffh
1303  FF      		db	0ffh
1304  FF      		db	0ffh
1305  FF      		db	0ffh
1306  FF      		db	0ffh
1307  FF      		db	0ffh
1308  FF      		db	0ffh
1309  FF      		db	0ffh
130A  FF      		db	0ffh
130B  FF      		db	0ffh
130C  FF      		db	0ffh
130D  FF      		db	0ffh
130E  FF      		db	0ffh
130F  FF      		db	0ffh
1310  FF      		db	0ffh
1311  FF      		db	0ffh
1312  FF      		db	0ffh
1313  FF      		db	0ffh
1314  FF      		db	0ffh
1315  FF      		db	0ffh
1316  FF      		db	0ffh
1317  FF      		db	0ffh
1318  FF      		db	0ffh
1319  FF      		db	0ffh
131A  FF      		db	0ffh
131B  FF      		db	0ffh
131C  FF      		db	0ffh
131D  FF      		db	0ffh
131E  FF      		db	0ffh
131F  FF      		db	0ffh
1320  FF      		db	0ffh
1321  FF      		db	0ffh
1322  FF      		db	0ffh
1323  FF      		db	0ffh
1324  FF      		db	0ffh
1325  FF      		db	0ffh
1326  FF      		db	0ffh
1327  FF      		db	0ffh
1328  FF      		db	0ffh
1329  FF      		db	0ffh
132A  FF      		db	0ffh
132B  FF      		db	0ffh
132C  FF      		db	0ffh
132D  FF      		db	0ffh
132E  FF      		db	0ffh
132F  FF      		db	0ffh
1330  FF      		db	0ffh
1331  FF      		db	0ffh
1332  FF      		db	0ffh
1333  FF      		db	0ffh
1334  FF      		db	0ffh
1335  FF      		db	0ffh
1336  FF      		db	0ffh
1337  FF      		db	0ffh
1338  FF      		db	0ffh
1339  FF      		db	0ffh
133A  FF      		db	0ffh
133B  FF      		db	0ffh
133C  FF      		db	0ffh
133D  FF      		db	0ffh
133E  FF      		db	0ffh
133F  FF      		db	0ffh
1340  FF      		db	0ffh
1341  FF      		db	0ffh
1342  FF      		db	0ffh
1343  FF      		db	0ffh
1344  FF      		db	0ffh
1345  FF      		db	0ffh
1346  FF      		db	0ffh
1347  FF      		db	0ffh
1348  FF      		db	0ffh
1349  FF      		db	0ffh
134A  FF      		db	0ffh
134B  FF      		db	0ffh
134C  FF      		db	0ffh
134D  FF      		db	0ffh
134E  FF      		db	0ffh
134F  FF      		db	0ffh
1350  FF      		db	0ffh
1351  FF      		db	0ffh
1352  FF      		db	0ffh
1353  FF      		db	0ffh
1354  FF      		db	0ffh
1355  FF      		db	0ffh
1356  FF      		db	0ffh
1357  FF      		db	0ffh
1358  FF      		db	0ffh
1359  FF      		db	0ffh
135A  FF      		db	0ffh
135B  FF      		db	0ffh
135C  FF      		db	0ffh
135D  FF      		db	0ffh
135E  FF      		db	0ffh
135F  FF      		db	0ffh
1360  FF      		db	0ffh
1361  FF      		db	0ffh
1362  FF      		db	0ffh
1363  FF      		db	0ffh
1364  FF      		db	0ffh
1365  FF      		db	0ffh
1366  FF      		db	0ffh
1367  FF      		db	0ffh
1368  FF      		db	0ffh
1369  FF      		db	0ffh
136A  FF      		db	0ffh
136B  FF      		db	0ffh
136C  FF      		db	0ffh
136D  FF      		db	0ffh
136E  FF      		db	0ffh
136F  FF      		db	0ffh
1370  FF      		db	0ffh
1371  FF      		db	0ffh
1372  FF      		db	0ffh
1373  FF      		db	0ffh
1374  FF      		db	0ffh
1375  FF      		db	0ffh
1376  FF      		db	0ffh
1377  FF      		db	0ffh
1378  FF      		db	0ffh
1379  FF      		db	0ffh
137A  FF      		db	0ffh
137B  FF      		db	0ffh
137C  FF      		db	0ffh
137D  FF      		db	0ffh
137E  FF      		db	0ffh
137F  FF      		db	0ffh
1380  FF      		db	0ffh
1381  FF      		db	0ffh
1382  FF      		db	0ffh
1383  FF      		db	0ffh
1384  FF      		db	0ffh
1385  FF      		db	0ffh
1386  FF      		db	0ffh
1387  FF      		db	0ffh
1388  FF      		db	0ffh
1389  FF      		db	0ffh
138A  FF      		db	0ffh
138B  FF      		db	0ffh
138C  FF      		db	0ffh
138D  FF      		db	0ffh
138E  FF      		db	0ffh
138F  FF      		db	0ffh
1390  FF      		db	0ffh
1391  FF      		db	0ffh
1392  FF      		db	0ffh
1393  FF      		db	0ffh
1394  FF      		db	0ffh
1395  FF      		db	0ffh
1396  FF      		db	0ffh
1397  FF      		db	0ffh
1398  FF      		db	0ffh
1399  FF      		db	0ffh
139A  FF      		db	0ffh
139B  FF      		db	0ffh
139C  FF      		db	0ffh
139D  FF      		db	0ffh
139E  FF      		db	0ffh
139F  FF      		db	0ffh
13A0  FF      		db	0ffh
13A1  FF      		db	0ffh
13A2  FF      		db	0ffh
13A3  FF      		db	0ffh
13A4  FF      		db	0ffh
13A5  FF      		db	0ffh
13A6  FF      		db	0ffh
13A7  FF      		db	0ffh
13A8  FF      		db	0ffh
13A9  FF      		db	0ffh
13AA  FF      		db	0ffh
13AB  FF      		db	0ffh
13AC  FF      		db	0ffh
13AD  FF      		db	0ffh
13AE  FF      		db	0ffh
13AF  FF      		db	0ffh
13B0  FF      		db	0ffh
13B1  FF      		db	0ffh
13B2  FF      		db	0ffh
13B3  FF      		db	0ffh
13B4  FF      		db	0ffh
13B5  FF      		db	0ffh
13B6  FF      		db	0ffh
13B7  FF      		db	0ffh
13B8  FF      		db	0ffh
13B9  FF      		db	0ffh
13BA  FF      		db	0ffh
13BB  FF      		db	0ffh
13BC  FF      		db	0ffh
13BD  FF      		db	0ffh
13BE  FF      		db	0ffh
13BF  FF      		db	0ffh
13C0  FF      		db	0ffh
13C1  FF      		db	0ffh
13C2  FF      		db	0ffh
13C3  FF      		db	0ffh
13C4  FF      		db	0ffh
13C5  FF      		db	0ffh
13C6  FF      		db	0ffh
13C7  FF      		db	0ffh
13C8  FF      		db	0ffh
13C9  FF      		db	0ffh
13CA  FF      		db	0ffh
13CB  FF      		db	0ffh
13CC  FF      		db	0ffh
13CD  FF      		db	0ffh
13CE  FF      		db	0ffh
13CF  FF      		db	0ffh
13D0  FF      		db	0ffh
13D1  FF      		db	0ffh
13D2  FF      		db	0ffh
13D3  FF      		db	0ffh
13D4  FF      		db	0ffh
13D5  FF      		db	0ffh
13D6  FF      		db	0ffh
13D7  FF      		db	0ffh
13D8  FF      		db	0ffh
13D9  FF      		db	0ffh
13DA  FF      		db	0ffh
13DB  FF      		db	0ffh
13DC  FF      		db	0ffh
13DD  FF      		db	0ffh
13DE  FF      		db	0ffh
13DF  FF      		db	0ffh
13E0  FF      		db	0ffh
13E1  FF      		db	0ffh
13E2  FF      		db	0ffh
13E3  FF      		db	0ffh
13E4  FF      		db	0ffh
13E5  FF      		db	0ffh
13E6  FF      		db	0ffh
13E7  FF      		db	0ffh
13E8  FF      		db	0ffh
13E9  FF      		db	0ffh
13EA  FF      		db	0ffh
13EB  FF      		db	0ffh
13EC  FF      		db	0ffh
13ED  FF      		db	0ffh
13EE  FF      		db	0ffh
13EF  FF      		db	0ffh
13F0  FF      		db	0ffh
13F1  FF      		db	0ffh
13F2  FF      		db	0ffh
13F3  FF      		db	0ffh
13F4  FF      		db	0ffh
13F5  FF      		db	0ffh
13F6  FF      		db	0ffh
13F7  FF      		db	0ffh
13F8  FF      		db	0ffh
13F9  FF      		db	0ffh
13FA  FF      		db	0ffh
13FB  FF      		db	0ffh
13FC  FF      		db	0ffh
13FD  FF      		db	0ffh
13FE  FF      		db	0ffh
13FF  FF      		db	0ffh
1400  FF      		db	0ffh
1401  FF      		db	0ffh
1402  FF      		db	0ffh
1403  FF      		db	0ffh
1404  FF      		db	0ffh
1405  FF      		db	0ffh
1406  FF      		db	0ffh
1407  FF      		db	0ffh
1408  FF      		db	0ffh
1409  FF      		db	0ffh
140A  FF      		db	0ffh
140B  FF      		db	0ffh
140C  FF      		db	0ffh
140D  FF      		db	0ffh
140E  FF      		db	0ffh
140F  FF      		db	0ffh
1410  FF      		db	0ffh
1411  FF      		db	0ffh
1412  FF      		db	0ffh
1413  FF      		db	0ffh
1414  FF      		db	0ffh
1415  FF      		db	0ffh
1416  FF      		db	0ffh
1417  FF      		db	0ffh
1418  FF      		db	0ffh
1419  FF      		db	0ffh
141A  FF      		db	0ffh
141B  FF      		db	0ffh
141C  FF      		db	0ffh
141D  FF      		db	0ffh
141E  FF      		db	0ffh
141F  FF      		db	0ffh
1420  FF      		db	0ffh
1421  FF      		db	0ffh
1422  FF      		db	0ffh
1423  FF      		db	0ffh
1424  FF      		db	0ffh
1425  FF      		db	0ffh
1426  FF      		db	0ffh
1427  FF      		db	0ffh
1428  FF      		db	0ffh
1429  FF      		db	0ffh
142A  FF      		db	0ffh
142B  FF      		db	0ffh
142C  FF      		db	0ffh
142D  FF      		db	0ffh
142E  FF      		db	0ffh
142F  FF      		db	0ffh
1430  FF      		db	0ffh
1431  FF      		db	0ffh
1432  FF      		db	0ffh
1433  FF      		db	0ffh
1434  FF      		db	0ffh
1435  FF      		db	0ffh
1436  FF      		db	0ffh
1437  FF      		db	0ffh
1438  FF      		db	0ffh
1439  FF      		db	0ffh
143A  FF      		db	0ffh
143B  FF      		db	0ffh
143C  FF      		db	0ffh
143D  FF      		db	0ffh
143E  FF      		db	0ffh
143F  FF      		db	0ffh
1440  FF      		db	0ffh
1441  FF      		db	0ffh
1442  FF      		db	0ffh
1443  FF      		db	0ffh
1444  FF      		db	0ffh
1445  FF      		db	0ffh
1446  FF      		db	0ffh
1447  FF      		db	0ffh
1448  FF      		db	0ffh
1449  FF      		db	0ffh
144A  FF      		db	0ffh
144B  FF      		db	0ffh
144C  FF      		db	0ffh
144D  FF      		db	0ffh
144E  FF      		db	0ffh
144F  FF      		db	0ffh
1450  FF      		db	0ffh
1451  FF      		db	0ffh
1452  FF      		db	0ffh
1453  FF      		db	0ffh
1454  FF      		db	0ffh
1455  FF      		db	0ffh
1456  FF      		db	0ffh
1457  FF      		db	0ffh
1458  FF      		db	0ffh
1459  FF      		db	0ffh
145A  FF      		db	0ffh
145B  FF      		db	0ffh
145C  FF      		db	0ffh
145D  FF      		db	0ffh
145E  FF      		db	0ffh
145F  FF      		db	0ffh
1460  FF      		db	0ffh
1461  FF      		db	0ffh
1462  FF      		db	0ffh
1463  FF      		db	0ffh
1464  FF      		db	0ffh
1465  FF      		db	0ffh
1466  FF      		db	0ffh
1467  FF      		db	0ffh
1468  FF      		db	0ffh
1469  FF      		db	0ffh
146A  FF      		db	0ffh
146B  FF      		db	0ffh
146C  FF      		db	0ffh
146D  FF      		db	0ffh
146E  FF      		db	0ffh
146F  FF      		db	0ffh
1470  FF      		db	0ffh
1471  FF      		db	0ffh
1472  FF      		db	0ffh
1473  FF      		db	0ffh
1474  FF      		db	0ffh
1475  FF      		db	0ffh
1476  FF      		db	0ffh
1477  FF      		db	0ffh
1478  FF      		db	0ffh
1479  FF      		db	0ffh
147A  FF      		db	0ffh
147B  FF      		db	0ffh
147C  FF      		db	0ffh
147D  FF      		db	0ffh
147E  FF      		db	0ffh
147F  FF      		db	0ffh
1480  FF      		db	0ffh
1481  FF      		db	0ffh
1482  FF      		db	0ffh
1483  FF      		db	0ffh
1484  FF      		db	0ffh
1485  FF      		db	0ffh
1486  FF      		db	0ffh
1487  FF      		db	0ffh
1488  FF      		db	0ffh
1489  FF      		db	0ffh
148A  FF      		db	0ffh
148B  FF      		db	0ffh
148C  FF      		db	0ffh
148D  FF      		db	0ffh
148E  FF      		db	0ffh
148F  FF      		db	0ffh
1490  FF      		db	0ffh
1491  FF      		db	0ffh
1492  FF      		db	0ffh
1493  FF      		db	0ffh
1494  FF      		db	0ffh
1495  FF      		db	0ffh
1496  FF      		db	0ffh
1497  FF      		db	0ffh
1498  FF      		db	0ffh
1499  FF      		db	0ffh
149A  FF      		db	0ffh
149B  FF      		db	0ffh
149C  FF      		db	0ffh
149D  FF      		db	0ffh
149E  FF      		db	0ffh
149F  FF      		db	0ffh
14A0  FF      		db	0ffh
14A1  FF      		db	0ffh
14A2  FF      		db	0ffh
14A3  FF      		db	0ffh
14A4  FF      		db	0ffh
14A5  FF      		db	0ffh
14A6  FF      		db	0ffh
14A7  FF      		db	0ffh
14A8  FF      		db	0ffh
14A9  FF      		db	0ffh
14AA  FF      		db	0ffh
14AB  FF      		db	0ffh
14AC  FF      		db	0ffh
14AD  FF      		db	0ffh
14AE  FF      		db	0ffh
14AF  FF      		db	0ffh
14B0  FF      		db	0ffh
14B1  FF      		db	0ffh
14B2  FF      		db	0ffh
14B3  FF      		db	0ffh
14B4  FF      		db	0ffh
14B5  FF      		db	0ffh
14B6  FF      		db	0ffh
14B7  FF      		db	0ffh
14B8  FF      		db	0ffh
14B9  FF      		db	0ffh
14BA  FF      		db	0ffh
14BB  FF      		db	0ffh
14BC  FF      		db	0ffh
14BD  FF      		db	0ffh
14BE  FF      		db	0ffh
14BF  FF      		db	0ffh
14C0  FF      		db	0ffh
14C1  FF      		db	0ffh
14C2  FF      		db	0ffh
14C3  FF      		db	0ffh
14C4  FF      		db	0ffh
14C5  FF      		db	0ffh
14C6  FF      		db	0ffh
14C7  FF      		db	0ffh
14C8  FF      		db	0ffh
14C9  FF      		db	0ffh
14CA  FF      		db	0ffh
14CB  FF      		db	0ffh
14CC  FF      		db	0ffh
14CD  FF      		db	0ffh
14CE  FF      		db	0ffh
14CF  FF      		db	0ffh
14D0  FF      		db	0ffh
14D1  FF      		db	0ffh
14D2  FF      		db	0ffh
14D3  FF      		db	0ffh
14D4  FF      		db	0ffh
14D5  FF      		db	0ffh
14D6  FF      		db	0ffh
14D7  FF      		db	0ffh
14D8  FF      		db	0ffh
14D9  FF      		db	0ffh
14DA  FF      		db	0ffh
14DB  FF      		db	0ffh
14DC  FF      		db	0ffh
14DD  FF      		db	0ffh
14DE  FF      		db	0ffh
14DF  FF      		db	0ffh
14E0  FF      		db	0ffh
14E1  FF      		db	0ffh
14E2  FF      		db	0ffh
14E3  FF      		db	0ffh
14E4  FF      		db	0ffh
14E5  FF      		db	0ffh
14E6  FF      		db	0ffh
14E7  FF      		db	0ffh
14E8  FF      		db	0ffh
14E9  FF      		db	0ffh
14EA  FF      		db	0ffh
14EB  FF      		db	0ffh
14EC  FF      		db	0ffh
14ED  FF      		db	0ffh
14EE  FF      		db	0ffh
14EF  FF      		db	0ffh
14F0  FF      		db	0ffh
14F1  FF      		db	0ffh
14F2  FF      		db	0ffh
14F3  FF      		db	0ffh
14F4  FF      		db	0ffh
14F5  FF      		db	0ffh
14F6  FF      		db	0ffh
14F7  FF      		db	0ffh
14F8  FF      		db	0ffh
14F9  FF      		db	0ffh
14FA  FF      		db	0ffh
14FB  FF      		db	0ffh
14FC  FF      		db	0ffh
14FD  FF      		db	0ffh
14FE  FF      		db	0ffh
14FF  FF      		db	0ffh
1500  FF      		db	0ffh
1501  FF      		db	0ffh
1502  FF      		db	0ffh
1503  FF      		db	0ffh
1504  FF      		db	0ffh
1505  FF      		db	0ffh
1506  FF      		db	0ffh
1507  FF      		db	0ffh
1508  FF      		db	0ffh
1509  FF      		db	0ffh
150A  FF      		db	0ffh
150B  FF      		db	0ffh
150C  FF      		db	0ffh
150D  FF      		db	0ffh
150E  FF      		db	0ffh
150F  FF      		db	0ffh
1510  FF      		db	0ffh
1511  FF      		db	0ffh
1512  FF      		db	0ffh
1513  FF      		db	0ffh
1514  FF      		db	0ffh
1515  FF      		db	0ffh
1516  FF      		db	0ffh
1517  FF      		db	0ffh
1518  FF      		db	0ffh
1519  FF      		db	0ffh
151A  FF      		db	0ffh
151B  FF      		db	0ffh
151C  FF      		db	0ffh
151D  FF      		db	0ffh
151E  FF      		db	0ffh
151F  FF      		db	0ffh
1520  FF      		db	0ffh
1521  FF      		db	0ffh
1522  FF      		db	0ffh
1523  FF      		db	0ffh
1524  FF      		db	0ffh
1525  FF      		db	0ffh
1526  FF      		db	0ffh
1527  FF      		db	0ffh
1528  FF      		db	0ffh
1529  FF      		db	0ffh
152A  FF      		db	0ffh
152B  FF      		db	0ffh
152C  FF      		db	0ffh
152D  FF      		db	0ffh
152E  FF      		db	0ffh
152F  FF      		db	0ffh
1530  FF      		db	0ffh
1531  FF      		db	0ffh
1532  FF      		db	0ffh
1533  FF      		db	0ffh
1534  FF      		db	0ffh
1535  FF      		db	0ffh
1536  FF      		db	0ffh
1537  FF      		db	0ffh
1538  FF      		db	0ffh
1539  FF      		db	0ffh
153A  FF      		db	0ffh
153B  FF      		db	0ffh
153C  FF      		db	0ffh
153D  FF      		db	0ffh
153E  FF      		db	0ffh
153F  FF      		db	0ffh
1540  FF      		db	0ffh
1541  FF      		db	0ffh
1542  FF      		db	0ffh
1543  FF      		db	0ffh
1544  FF      		db	0ffh
1545  FF      		db	0ffh
1546  FF      		db	0ffh
1547  FF      		db	0ffh
1548  FF      		db	0ffh
1549  FF      		db	0ffh
154A  FF      		db	0ffh
154B  FF      		db	0ffh
154C  FF      		db	0ffh
154D  FF      		db	0ffh
154E  FF      		db	0ffh
154F  FF      		db	0ffh
1550  FF      		db	0ffh
1551  FF      		db	0ffh
1552  FF      		db	0ffh
1553  FF      		db	0ffh
1554  FF      		db	0ffh
1555  FF      		db	0ffh
1556  FF      		db	0ffh
1557  FF      		db	0ffh
1558  FF      		db	0ffh
1559  FF      		db	0ffh
155A  FF      		db	0ffh
155B  FF      		db	0ffh
155C  FF      		db	0ffh
155D  FF      		db	0ffh
155E  FF      		db	0ffh
155F  FF      		db	0ffh
1560  FF      		db	0ffh
1561  FF      		db	0ffh
1562  FF      		db	0ffh
1563  FF      		db	0ffh
1564  FF      		db	0ffh
1565  FF      		db	0ffh
1566  FF      		db	0ffh
1567  FF      		db	0ffh
1568  FF      		db	0ffh
1569  FF      		db	0ffh
156A  FF      		db	0ffh
156B  FF      		db	0ffh
156C  FF      		db	0ffh
156D  FF      		db	0ffh
156E  FF      		db	0ffh
156F  FF      		db	0ffh
1570  FF      		db	0ffh
1571  FF      		db	0ffh
1572  FF      		db	0ffh
1573  FF      		db	0ffh
1574  FF      		db	0ffh
1575  FF      		db	0ffh
1576  FF      		db	0ffh
1577  FF      		db	0ffh
1578  FF      		db	0ffh
1579  FF      		db	0ffh
157A  FF      		db	0ffh
157B  FF      		db	0ffh
157C  FF      		db	0ffh
157D  FF      		db	0ffh
157E  FF      		db	0ffh
157F  FF      		db	0ffh
1580  FF      		db	0ffh
1581  FF      		db	0ffh
1582  FF      		db	0ffh
1583  FF      		db	0ffh
1584  FF      		db	0ffh
1585  FF      		db	0ffh
1586  FF      		db	0ffh
1587  FF      		db	0ffh
1588  FF      		db	0ffh
1589  FF      		db	0ffh
158A  FF      		db	0ffh
158B  FF      		db	0ffh
158C  FF      		db	0ffh
158D  FF      		db	0ffh
158E  FF      		db	0ffh
158F  FF      		db	0ffh
1590  FF      		db	0ffh
1591  FF      		db	0ffh
1592  FF      		db	0ffh
1593  FF      		db	0ffh
1594  FF      		db	0ffh
1595  FF      		db	0ffh
1596  FF      		db	0ffh
1597  FF      		db	0ffh
1598  FF      		db	0ffh
1599  FF      		db	0ffh
159A  FF      		db	0ffh
159B  FF      		db	0ffh
159C  FF      		db	0ffh
159D  FF      		db	0ffh
159E  FF      		db	0ffh
159F  FF      		db	0ffh
15A0  FF      		db	0ffh
15A1  FF      		db	0ffh
15A2  FF      		db	0ffh
15A3  FF      		db	0ffh
15A4  FF      		db	0ffh
15A5  FF      		db	0ffh
15A6  FF      		db	0ffh
15A7  FF      		db	0ffh
15A8  FF      		db	0ffh
15A9  FF      		db	0ffh
15AA  FF      		db	0ffh
15AB  FF      		db	0ffh
15AC  FF      		db	0ffh
15AD  FF      		db	0ffh
15AE  FF      		db	0ffh
15AF  FF      		db	0ffh
15B0  FF      		db	0ffh
15B1  FF      		db	0ffh
15B2  FF      		db	0ffh
15B3  FF      		db	0ffh
15B4  FF      		db	0ffh
15B5  FF      		db	0ffh
15B6  FF      		db	0ffh
15B7  FF      		db	0ffh
15B8  FF      		db	0ffh
15B9  FF      		db	0ffh
15BA  FF      		db	0ffh
15BB  FF      		db	0ffh
15BC  FF      		db	0ffh
15BD  FF      		db	0ffh
15BE  FF      		db	0ffh
15BF  FF      		db	0ffh
15C0  FF      		db	0ffh
15C1  FF      		db	0ffh
15C2  FF      		db	0ffh
15C3  FF      		db	0ffh
15C4  FF      		db	0ffh
15C5  FF      		db	0ffh
15C6  FF      		db	0ffh
15C7  FF      		db	0ffh
15C8  FF      		db	0ffh
15C9  FF      		db	0ffh
15CA  FF      		db	0ffh
15CB  FF      		db	0ffh
15CC  FF      		db	0ffh
15CD  FF      		db	0ffh
15CE  FF      		db	0ffh
15CF  FF      		db	0ffh
15D0  FF      		db	0ffh
15D1  FF      		db	0ffh
15D2  FF      		db	0ffh
15D3  FF      		db	0ffh
15D4  FF      		db	0ffh
15D5  FF      		db	0ffh
15D6  FF      		db	0ffh
15D7  FF      		db	0ffh
15D8  FF      		db	0ffh
15D9  FF      		db	0ffh
15DA  FF      		db	0ffh
15DB  FF      		db	0ffh
15DC  FF      		db	0ffh
15DD  FF      		db	0ffh
15DE  FF      		db	0ffh
15DF  FF      		db	0ffh
15E0  FF      		db	0ffh
15E1  FF      		db	0ffh
15E2  FF      		db	0ffh
15E3  FF      		db	0ffh
15E4  FF      		db	0ffh
15E5  FF      		db	0ffh
15E6  FF      		db	0ffh
15E7  FF      		db	0ffh
15E8  FF      		db	0ffh
15E9  FF      		db	0ffh
15EA  FF      		db	0ffh
15EB  FF      		db	0ffh
15EC  FF      		db	0ffh
15ED  FF      		db	0ffh
15EE  FF      		db	0ffh
15EF  FF      		db	0ffh
15F0  FF      		db	0ffh
15F1  FF      		db	0ffh
15F2  FF      		db	0ffh
15F3  FF      		db	0ffh
15F4  FF      		db	0ffh
15F5  FF      		db	0ffh
15F6  FF      		db	0ffh
15F7  FF      		db	0ffh
15F8  FF      		db	0ffh
15F9  FF      		db	0ffh
15FA  FF      		db	0ffh
15FB  FF      		db	0ffh
15FC  FF      		db	0ffh
15FD  FF      		db	0ffh
15FE  FF      		db	0ffh
15FF  FF      		db	0ffh
1600  FF      		db	0ffh
1601  FF      		db	0ffh
1602  FF      		db	0ffh
1603  FF      		db	0ffh
1604  FF      		db	0ffh
1605  FF      		db	0ffh
1606  FF      		db	0ffh
1607  FF      		db	0ffh
1608  FF      		db	0ffh
1609  FF      		db	0ffh
160A  FF      		db	0ffh
160B  FF      		db	0ffh
160C  FF      		db	0ffh
160D  FF      		db	0ffh
160E  FF      		db	0ffh
160F  FF      		db	0ffh
1610  FF      		db	0ffh
1611  FF      		db	0ffh
1612  FF      		db	0ffh
1613  FF      		db	0ffh
1614  FF      		db	0ffh
1615  FF      		db	0ffh
1616  FF      		db	0ffh
1617  FF      		db	0ffh
1618  FF      		db	0ffh
1619  FF      		db	0ffh
161A  FF      		db	0ffh
161B  FF      		db	0ffh
161C  FF      		db	0ffh
161D  FF      		db	0ffh
161E  FF      		db	0ffh
161F  FF      		db	0ffh
1620  FF      		db	0ffh
1621  FF      		db	0ffh
1622  FF      		db	0ffh
1623  FF      		db	0ffh
1624  FF      		db	0ffh
1625  FF      		db	0ffh
1626  FF      		db	0ffh
1627  FF      		db	0ffh
1628  FF      		db	0ffh
1629  FF      		db	0ffh
162A  FF      		db	0ffh
162B  FF      		db	0ffh
162C  FF      		db	0ffh
162D  FF      		db	0ffh
162E  FF      		db	0ffh
162F  FF      		db	0ffh
1630  FF      		db	0ffh
1631  FF      		db	0ffh
1632  FF      		db	0ffh
1633  FF      		db	0ffh
1634  FF      		db	0ffh
1635  FF      		db	0ffh
1636  FF      		db	0ffh
1637  FF      		db	0ffh
1638  FF      		db	0ffh
1639  FF      		db	0ffh
163A  FF      		db	0ffh
163B  FF      		db	0ffh
163C  FF      		db	0ffh
163D  FF      		db	0ffh
163E  FF      		db	0ffh
163F  FF      		db	0ffh
1640  FF      		db	0ffh
1641  FF      		db	0ffh
1642  FF      		db	0ffh
1643  FF      		db	0ffh
1644  FF      		db	0ffh
1645  FF      		db	0ffh
1646  FF      		db	0ffh
1647  FF      		db	0ffh
1648  FF      		db	0ffh
1649  FF      		db	0ffh
164A  FF      		db	0ffh
164B  FF      		db	0ffh
164C  FF      		db	0ffh
164D  FF      		db	0ffh
164E  FF      		db	0ffh
164F  FF      		db	0ffh
1650  FF      		db	0ffh
1651  FF      		db	0ffh
1652  FF      		db	0ffh
1653  FF      		db	0ffh
1654  FF      		db	0ffh
1655  FF      		db	0ffh
1656  FF      		db	0ffh
1657  FF      		db	0ffh
1658  FF      		db	0ffh
1659  FF      		db	0ffh
165A  FF      		db	0ffh
165B  FF      		db	0ffh
165C  FF      		db	0ffh
165D  FF      		db	0ffh
165E  FF      		db	0ffh
165F  FF      		db	0ffh
1660  FF      		db	0ffh
1661  FF      		db	0ffh
1662  FF      		db	0ffh
1663  FF      		db	0ffh
1664  FF      		db	0ffh
1665  FF      		db	0ffh
1666  FF      		db	0ffh
1667  FF      		db	0ffh
1668  FF      		db	0ffh
1669  FF      		db	0ffh
166A  FF      		db	0ffh
166B  FF      		db	0ffh
166C  FF      		db	0ffh
166D  FF      		db	0ffh
166E  FF      		db	0ffh
166F  FF      		db	0ffh
1670  FF      		db	0ffh
1671  FF      		db	0ffh
1672  FF      		db	0ffh
1673  FF      		db	0ffh
1674  FF      		db	0ffh
1675  FF      		db	0ffh
1676  FF      		db	0ffh
1677  FF      		db	0ffh
1678  FF      		db	0ffh
1679  FF      		db	0ffh
167A  FF      		db	0ffh
167B  FF      		db	0ffh
167C  FF      		db	0ffh
167D  FF      		db	0ffh
167E  FF      		db	0ffh
167F  FF      		db	0ffh
1680  FF      		db	0ffh
1681  FF      		db	0ffh
1682  FF      		db	0ffh
1683  FF      		db	0ffh
1684  FF      		db	0ffh
1685  FF      		db	0ffh
1686  FF      		db	0ffh
1687  FF      		db	0ffh
1688  FF      		db	0ffh
1689  FF      		db	0ffh
168A  FF      		db	0ffh
168B  FF      		db	0ffh
168C  FF      		db	0ffh
168D  FF      		db	0ffh
168E  FF      		db	0ffh
168F  FF      		db	0ffh
1690  FF      		db	0ffh
1691  FF      		db	0ffh
1692  FF      		db	0ffh
1693  FF      		db	0ffh
1694  FF      		db	0ffh
1695  FF      		db	0ffh
1696  FF      		db	0ffh
1697  FF      		db	0ffh
1698  FF      		db	0ffh
1699  FF      		db	0ffh
169A  FF      		db	0ffh
169B  FF      		db	0ffh
169C  FF      		db	0ffh
169D  FF      		db	0ffh
169E  FF      		db	0ffh
169F  FF      		db	0ffh
16A0  FF      		db	0ffh
16A1  FF      		db	0ffh
16A2  FF      		db	0ffh
16A3  FF      		db	0ffh
16A4  FF      		db	0ffh
16A5  FF      		db	0ffh
16A6  FF      		db	0ffh
16A7  FF      		db	0ffh
16A8  FF      		db	0ffh
16A9  FF      		db	0ffh
16AA  FF      		db	0ffh
16AB  FF      		db	0ffh
16AC  FF      		db	0ffh
16AD  FF      		db	0ffh
16AE  FF      		db	0ffh
16AF  FF      		db	0ffh
16B0  FF      		db	0ffh
16B1  FF      		db	0ffh
16B2  FF      		db	0ffh
16B3  FF      		db	0ffh
16B4  FF      		db	0ffh
16B5  FF      		db	0ffh
16B6  FF      		db	0ffh
16B7  FF      		db	0ffh
16B8  FF      		db	0ffh
16B9  FF      		db	0ffh
16BA  FF      		db	0ffh
16BB  FF      		db	0ffh
16BC  FF      		db	0ffh
16BD  FF      		db	0ffh
16BE  FF      		db	0ffh
16BF  FF      		db	0ffh
16C0  FF      		db	0ffh
16C1  FF      		db	0ffh
16C2  FF      		db	0ffh
16C3  FF      		db	0ffh
16C4  FF      		db	0ffh
16C5  FF      		db	0ffh
16C6  FF      		db	0ffh
16C7  FF      		db	0ffh
16C8  FF      		db	0ffh
16C9  FF      		db	0ffh
16CA  FF      		db	0ffh
16CB  FF      		db	0ffh
16CC  FF      		db	0ffh
16CD  FF      		db	0ffh
16CE  FF      		db	0ffh
16CF  FF      		db	0ffh
16D0  FF      		db	0ffh
16D1  FF      		db	0ffh
16D2  FF      		db	0ffh
16D3  FF      		db	0ffh
16D4  FF      		db	0ffh
16D5  FF      		db	0ffh
16D6  FF      		db	0ffh
16D7  FF      		db	0ffh
16D8  FF      		db	0ffh
16D9  FF      		db	0ffh
16DA  FF      		db	0ffh
16DB  FF      		db	0ffh
16DC  FF      		db	0ffh
16DD  FF      		db	0ffh
16DE  FF      		db	0ffh
16DF  FF      		db	0ffh
16E0  FF      		db	0ffh
16E1  FF      		db	0ffh
16E2  FF      		db	0ffh
16E3  FF      		db	0ffh
16E4  FF      		db	0ffh
16E5  FF      		db	0ffh
16E6  FF      		db	0ffh
16E7  FF      		db	0ffh
16E8  FF      		db	0ffh
16E9  FF      		db	0ffh
16EA  FF      		db	0ffh
16EB  FF      		db	0ffh
16EC  FF      		db	0ffh
16ED  FF      		db	0ffh
16EE  FF      		db	0ffh
16EF  FF      		db	0ffh
16F0  FF      		db	0ffh
16F1  FF      		db	0ffh
16F2  FF      		db	0ffh
16F3  FF      		db	0ffh
16F4  FF      		db	0ffh
16F5  FF      		db	0ffh
16F6  FF      		db	0ffh
16F7  FF      		db	0ffh
16F8  FF      		db	0ffh
16F9  FF      		db	0ffh
16FA  FF      		db	0ffh
16FB  FF      		db	0ffh
16FC  FF      		db	0ffh
16FD  FF      		db	0ffh
16FE  FF      		db	0ffh
16FF  FF      		db	0ffh
1700  FF      		db	0ffh
1701  FF      		db	0ffh
1702  FF      		db	0ffh
1703  FF      		db	0ffh
1704  FF      		db	0ffh
1705  FF      		db	0ffh
1706  FF      		db	0ffh
1707  FF      		db	0ffh
1708  FF      		db	0ffh
1709  FF      		db	0ffh
170A  FF      		db	0ffh
170B  FF      		db	0ffh
170C  FF      		db	0ffh
170D  FF      		db	0ffh
170E  FF      		db	0ffh
170F  FF      		db	0ffh
1710  FF      		db	0ffh
1711  FF      		db	0ffh
1712  FF      		db	0ffh
1713  FF      		db	0ffh
1714  FF      		db	0ffh
1715  FF      		db	0ffh
1716  FF      		db	0ffh
1717  FF      		db	0ffh
1718  FF      		db	0ffh
1719  FF      		db	0ffh
171A  FF      		db	0ffh
171B  FF      		db	0ffh
171C  FF      		db	0ffh
171D  FF      		db	0ffh
171E  FF      		db	0ffh
171F  FF      		db	0ffh
1720  FF      		db	0ffh
1721  FF      		db	0ffh
1722  FF      		db	0ffh
1723  FF      		db	0ffh
1724  FF      		db	0ffh
1725  FF      		db	0ffh
1726  FF      		db	0ffh
1727  FF      		db	0ffh
1728  FF      		db	0ffh
1729  FF      		db	0ffh
172A  FF      		db	0ffh
172B  FF      		db	0ffh
172C  FF      		db	0ffh
172D  FF      		db	0ffh
172E  FF      		db	0ffh
172F  FF      		db	0ffh
1730  FF      		db	0ffh
1731  FF      		db	0ffh
1732  FF      		db	0ffh
1733  FF      		db	0ffh
1734  FF      		db	0ffh
1735  FF      		db	0ffh
1736  FF      		db	0ffh
1737  FF      		db	0ffh
1738  FF      		db	0ffh
1739  FF      		db	0ffh
173A  FF      		db	0ffh
173B  FF      		db	0ffh
173C  FF      		db	0ffh
173D  FF      		db	0ffh
173E  FF      		db	0ffh
173F  FF      		db	0ffh
1740  FF      		db	0ffh
1741  FF      		db	0ffh
1742  FF      		db	0ffh
1743  FF      		db	0ffh
1744  FF      		db	0ffh
1745  FF      		db	0ffh
1746  FF      		db	0ffh
1747  FF      		db	0ffh
1748  FF      		db	0ffh
1749  FF      		db	0ffh
174A  FF      		db	0ffh
174B  FF      		db	0ffh
174C  FF      		db	0ffh
174D  FF      		db	0ffh
174E  FF      		db	0ffh
174F  FF      		db	0ffh
1750  FF      		db	0ffh
1751  FF      		db	0ffh
1752  FF      		db	0ffh
1753  FF      		db	0ffh
1754  FF      		db	0ffh
1755  FF      		db	0ffh
1756  FF      		db	0ffh
1757  FF      		db	0ffh
1758  FF      		db	0ffh
1759  FF      		db	0ffh
175A  FF      		db	0ffh
175B  FF      		db	0ffh
175C  FF      		db	0ffh
175D  FF      		db	0ffh
175E  FF      		db	0ffh
175F  FF      		db	0ffh
1760  FF      		db	0ffh
1761  FF      		db	0ffh
1762  FF      		db	0ffh
1763  FF      		db	0ffh
1764  FF      		db	0ffh
1765  FF      		db	0ffh
1766  FF      		db	0ffh
1767  FF      		db	0ffh
1768  FF      		db	0ffh
1769  FF      		db	0ffh
176A  FF      		db	0ffh
176B  FF      		db	0ffh
176C  FF      		db	0ffh
176D  FF      		db	0ffh
176E  FF      		db	0ffh
176F  FF      		db	0ffh
1770  FF      		db	0ffh
1771  FF      		db	0ffh
1772  FF      		db	0ffh
1773  FF      		db	0ffh
1774  FF      		db	0ffh
1775  FF      		db	0ffh
1776  FF      		db	0ffh
1777  FF      		db	0ffh
1778  FF      		db	0ffh
1779  FF      		db	0ffh
177A  FF      		db	0ffh
177B  FF      		db	0ffh
177C  FF      		db	0ffh
177D  FF      		db	0ffh
177E  FF      		db	0ffh
177F  FF      		db	0ffh
1780  FF      		db	0ffh
1781  FF      		db	0ffh
1782  FF      		db	0ffh
1783  FF      		db	0ffh
1784  FF      		db	0ffh
1785  FF      		db	0ffh
1786  FF      		db	0ffh
1787  FF      		db	0ffh
1788  FF      		db	0ffh
1789  FF      		db	0ffh
178A  FF      		db	0ffh
178B  FF      		db	0ffh
178C  FF      		db	0ffh
178D  FF      		db	0ffh
178E  FF      		db	0ffh
178F  FF      		db	0ffh
1790  FF      		db	0ffh
1791  FF      		db	0ffh
1792  FF      		db	0ffh
1793  FF      		db	0ffh
1794  FF      		db	0ffh
1795  FF      		db	0ffh
1796  FF      		db	0ffh
1797  FF      		db	0ffh
1798  FF      		db	0ffh
1799  FF      		db	0ffh
179A  FF      		db	0ffh
179B  FF      		db	0ffh
179C  FF      		db	0ffh
179D  FF      		db	0ffh
179E  FF      		db	0ffh
179F  FF      		db	0ffh
17A0  FF      		db	0ffh
17A1  FF      		db	0ffh
17A2  FF      		db	0ffh
17A3  FF      		db	0ffh
17A4  FF      		db	0ffh
17A5  FF      		db	0ffh
17A6  FF      		db	0ffh
17A7  FF      		db	0ffh
17A8  FF      		db	0ffh
17A9  FF      		db	0ffh
17AA  FF      		db	0ffh
17AB  FF      		db	0ffh
17AC  FF      		db	0ffh
17AD  FF      		db	0ffh
17AE  FF      		db	0ffh
17AF  FF      		db	0ffh
17B0  FF      		db	0ffh
17B1  FF      		db	0ffh
17B2  FF      		db	0ffh
17B3  FF      		db	0ffh
17B4  FF      		db	0ffh
17B5  FF      		db	0ffh
17B6  FF      		db	0ffh
17B7  FF      		db	0ffh
17B8  FF      		db	0ffh
17B9  FF      		db	0ffh
17BA  FF      		db	0ffh
17BB  FF      		db	0ffh
17BC  FF      		db	0ffh
17BD  FF      		db	0ffh
17BE  FF      		db	0ffh
17BF  FF      		db	0ffh
17C0  FF      		db	0ffh
17C1  FF      		db	0ffh
17C2  FF      		db	0ffh
17C3  FF      		db	0ffh
17C4  FF      		db	0ffh
17C5  FF      		db	0ffh
17C6  FF      		db	0ffh
17C7  FF      		db	0ffh
17C8  FF      		db	0ffh
17C9  FF      		db	0ffh
17CA  FF      		db	0ffh
17CB  FF      		db	0ffh
17CC  FF      		db	0ffh
17CD  FF      		db	0ffh
17CE  FF      		db	0ffh
17CF  FF      		db	0ffh
17D0  FF      		db	0ffh
17D1  FF      		db	0ffh
17D2  FF      		db	0ffh
17D3  FF      		db	0ffh
17D4  FF      		db	0ffh
17D5  FF      		db	0ffh
17D6  FF      		db	0ffh
17D7  FF      		db	0ffh
17D8  FF      		db	0ffh
17D9  FF      		db	0ffh
17DA  FF      		db	0ffh
17DB  FF      		db	0ffh
17DC  FF      		db	0ffh
17DD  FF      		db	0ffh
17DE  FF      		db	0ffh
17DF  FF      		db	0ffh
17E0  FF      		db	0ffh
17E1  FF      		db	0ffh
17E2  FF      		db	0ffh
17E3  FF      		db	0ffh
17E4  FF      		db	0ffh
17E5  FF      		db	0ffh
17E6  FF      		db	0ffh
17E7  FF      		db	0ffh
17E8  FF      		db	0ffh
17E9  FF      		db	0ffh
17EA  FF      		db	0ffh
17EB  FF      		db	0ffh
17EC  FF      		db	0ffh
17ED  FF      		db	0ffh
17EE  FF      		db	0ffh
17EF  FF      		db	0ffh
17F0  FF      		db	0ffh
17F1  FF      		db	0ffh
17F2  FF      		db	0ffh
17F3  FF      		db	0ffh
17F4  FF      		db	0ffh
17F5  FF      		db	0ffh
17F6  FF      		db	0ffh
17F7  FF      		db	0ffh
17F8  FF      		db	0ffh
17F9  FF      		db	0ffh
17FA  FF      		db	0ffh
17FB  FF      		db	0ffh
17FC  FF      		db	0ffh
17FD  FF      		db	0ffh
17FE  FF      		db	0ffh
17FF  FF      		db	0ffh
0000          	 if	($ <> 1800h)
		 endif
1800          		end



Statistics:

     4	passes
     0	jr promotions
   441	symbols
  6144	bytes

  2767	macro calls
  3839	macro bytes
     0	invented symbols
