		; H8 Z80-CPU v3.2 Monitor (EEPROM 28C256)
0020          	VERN	equ	020h	; ROM version
		
0000          	false	equ	0
FFFF          	true	equ	not false
		
0000          	alpha	equ	0
0010          	beta	equ	16
		
0000          	z180	equ	false
0000          	h8nofp	equ	false
0000          	h89	equ	false
0000          	nofp	set	false
		
			maclib	ram
**** ram.lib ****
**** h8core.asm ****
			maclib	setup
**** setup.lib ****
**** h8core.asm ****
0000          	if z180
		else	; Z80 based
FF80          	pcode	set	0ff80h
			maclib	z80
**** z80.lib ****
**** h8core.asm ****
0000          	if h8nofp
		endif
0000          	if h89
		endif
		endif	; z180 else z80
		
0000          	if h8nofp or h89
		endif
			$*macro
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
0009          	TAB	equ	9
0008          	BS	equ	8
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
		; ctrl port F2 bit definitions
0014          	ctl$SPD		equ	00010100b	; CPU speed control bits
0002          	ctl$CLK		equ	00000010b	; enable H89 2mS clock (not used here)
0008          	ctl$MEM1	equ	00001000b	; maps full ROM (if !ORG0)
0020          	ctl$ORG0	equ	00100000b	; maps full RAM
0080          	ctl$IO1		equ	10000000b	; enables EEPROM write
		
0000          	if z180
		else
		; H8-512K MMU
0000          	mmu	equ	0	; base port
0000          	rd	equ	0
0004          	wr	equ	4
0000          	pg0k	equ	0
0001          	pg16k	equ	1
0002          	pg32k	equ	2
0003          	pg48k	equ	3
0080          	ena	equ	80h
0000          	rd00k	equ	mmu+rd+pg0k
0001          	rd16k	equ	mmu+rd+pg16k
0002          	rd32k	equ	mmu+rd+pg32k
0003          	rd48k	equ	mmu+rd+pg48k
0004          	wr00k	equ	mmu+wr+pg0k
0005          	wr16k	equ	mmu+wr+pg16k
0006          	wr32k	equ	mmu+wr+pg32k
0007          	wr48k	equ	mmu+wr+pg48k
		endif
		
3000          	memtest	equ	03000h
C000          	ramboot	equ	0c000h
		; fudge this... H17 junk
1F5A          	R$CONST	equ	01f5ah	; 037.132 R.CONST block...
1C19          	CLOCK	equ	01c19h	; 034.031 CLOCK
		
		; offsets in a module
0000          	mdpgs	equ	0	; num pages
0001          	mdorg	equ	1	; ORG for module (run/load addr)
0002          	mdbase	equ	2	; base phy drv num
0003          	mdluns	equ	3	; num LUNs
0004          	mdinit	equ	4	; init entry point
0007          	mdboot	equ	7	; boot entry point
000A          	mdchr	equ	10	; device letter
000B          	mdkey	equ	11	; device key
000C          	mdport	equ	12	; device port, 0 if variable
000D          	mddisp	equ	13	; boot front panel mnemonic
0010          	mdname	equ	16	; boot string
		
0000          	if z180
		else
2000          	btmods	equ	2000h	; boot modules start in ROM
8000          	bterom	equ	8000h	; end/size of ROM
		endif
		
0010          	rptcnt	equ	16
0001          	debounce equ	1
		
		; Start of ROM code
0000          		org	00000h
		
0000          	rombeg:
0000          	rst0:
0000          	if nofp
		else
0000  F3      		di	; can't be JMP or Heath CP/M thinks we're an H89
0001  C34303  		jmp	init
		endif
		
0004  C30A02  		jmp	getport
0007  00      		db	0
		
0008  CD7000  	rst1:	call	intsetup
000B  2A1B20  		lhld	ticcnt
000E  C36400  		jmp	int1$cont
0000          	if ((high int1$cont) <> 0)
		endif
		
0010          	rst2	equ	$-1	; must be a nop...
0011  CD7000  		call	intsetup
0014  1A      		ldax	d
0015  C39001  		jmp	int2$cont
		
0018  C32520  	rst3:	jmp	vrst3	; 0018
		
001B  C3CE09  		jmp	crlf	; 001b
001E  520F    		dw	retmon	; 001e
		
0020  C32820  	rst4:	jmp	vrst4
		
0023  000000  		db	0,0,0	; overlayed by WizNet boot, others
0026  D803    		dw	conout	; pointer, not vector; A=char
		
0028  C32B20  	rst5:	jmp	vrst5
		
002B  C33002  		jmp	delay
002E  3F00    	qmsg:	db	'?',TRM
		
0030  C32E20  	rst6:	jmp	vrst6
		
0033  00000000		db	0,0,0,0,0	; overlayed by WizNet boot, others
      00
		
0038  C33120  	rst7:	jmp	vrst7
		
		; routines made public (to modules)
003B  C33603  		jmp	hwboot	; 003b
003E  C33A03  		jmp	hxboot	; 003e
0041  C39F01  		jmp	take$A	; 0041
0044  C3D809  		jmp	msgout	; 0044
0047  C3CA0D  		jmp	linin	; 0047
004A  C3010A  		jmp	conin1	; 004a - without kaypad or DEL
		
004D          	intret:
004D  F1      		pop	psw
004E  F1      		pop	psw
004F  C1      		pop	b
0050  D1      		pop	d
0051  E1      		pop	h
0052          		popix
0052  DDE1    		DB	0DDH,0E1H
0054          		popiy
0054  FDE1    		DB	0FDH,0E1H
0056          		exx
0056  D9      		DB	0D9H
0057          		exaf
0057  08      		DB	08H
0058  C1      		pop	b	; I,R - R cannot be restored
0059  78      		mov	a,b
005A          		stai
005A  ED47    		DB	0EDH,47H
005C  F1      		pop	psw
005D  C1      		pop	b
005E  D1      		pop	d
005F  E1      		pop	h
0060          		exx
0060  D9      		DB	0D9H
0061          		exaf
0061  08      		DB	08H
0062          	nulint:
0062  FB      		ei
0063  C9      		ret
		
0000          	if nofp
		endif
		
0064          	int1$cont:
0064  23      		inx	h
0065  221B20  		shld	ticcnt
0068  3A3620  		lda	ctl$F2
006B  D3F2    		out	0f2h
0000          	if nofp
		else
006D  C3860B  		jmp	int1$fp
		endif
		
0070          	intsetup:
0070          		exx
0070  D9      		DB	0D9H
0071          		exaf
0071  08      		DB	08H
0072  E3      		xthl	; HL=PC (ret adr)
0073  D5      		push	d
0074  C5      		push	b
0075  F5      		push	psw
0076          		ldar
0076  ED5F    		DB	0EDH,5FH
0078  4F      		mov	c,a
0079          		ldai
0079  ED57    		DB	0EDH,57H
007B  47      		mov	b,a
007C  C5      		push	b
007D          		pushiy
007D  FDE5    		DB	0FDH,0E5H
007F          		pushix
007F  DDE5    		DB	0DDH,0E5H
0081  E5      		push	h	; save PC
0082          		exx
0082  D9      		DB	0D9H
0083          		exaf
0083  08      		DB	08H
0084  E3      		xthl		; HL=PC
0085  D5      		push	d
0086  C5      		push	b
0087  F5      		push	psw
0088  EB      		xchg		; DE=PC
0089  211800  		lxi	h,nReg-2
008C  39      		dad	sp
008D  E5      		push	h
008E  D5      		push	d	; save PC
008F  110920  		lxi	d,ctl$F0
0092  1A      		ldax	d
0093  2F      		cma
0094  E630    		ani	030h
0096  C8      		rz
0097  210200  		lxi	h,2
009A  39      		dad	sp
009B  221D20  		shld	monstk	; a.k.a. RegPtr
009E  C9      		ret
		
009F          	re$entry:		; re-entry point for errors, etc.
009F  210920  		lxi	h,ctl$F0
00A2  36F0    		mvi	m,0f0h	; !beep, 2mS, MON, !SI
00A4  2A1D20  		lhld	monstk
00A7  F9      		sphl
00A8  CDD603  		call	belout	; TODO: beep front panel if appropriate
			;jmp	start
00AB          	start:
00AB  21AB00  		lxi	h,start
00AE  E5      		push	h
			; reset FP display... this doesn't make a lot of sense...
00AF  3A0720  		lda	DspMod
00B2  E601    		ani	00000001b
00B4  2F      		cma
00B5  320620  		sta	DsProt
00B8  FB      		ei
			; avoid prompt if last was keypad command...
00B9  21A606  		lxi	h,prompt
00BC  3A3B20  		lda	lstcmd
00BF  B7      		ora	a
00C0  F4D809  		cp	msgout
00C3          	prloop:
			; could take one of two paths here,
			; console or kaypad...
00C3  CD190A  		call	cmdin
00C6  FE3F    		cpi	'?'	; HELP command?
00C8  CADA06  		jz	nocmd0	; handled my add-on
00CB  E6DF    		ani	11011111b ; toupper
00CD  323B20  		sta	lstcmd
FFFF          	if not nofp
00D0  FA1609  		jm	kpcmd	; from keypad... jumps back here...
		endif
00D3  21E300  	cmchr:	lxi	h,cmdtab
00D6  061A    		mvi	b,numcmd
00D8          	cmloop:
00D8  BE      		cmp	m
00D9  23      		inx	h
00DA          		jrz	docmd
00DA  285E    		DB	28H,docmd-$-1
00DC  23      		inx	h
00DD  23      		inx	h
00DE          		djnz	cmloop
00DE  10F8    		DB	10H,cmloop-$-1
00E0  C3DD06  		jmp	nocmd
		
00E3          	cmdtab:
			; console commands
00E3  44      		db	'D' !
00E4  2C0E    	 dw cmddmp	; Dump memory
00E6  47      		db	'G' !
00E7  6701    	 dw cmdgo	; Go
00E9  53      		db	'S' !
00EA  7D03    	 dw cmdsub	; Substitute in memory
00EC  50      		db	'P' !
00ED  4301    	 dw cmdpc	; Set PC
00EF  42      		db	'B' !
00F0  6D02    	 dw cmdboot; Boot
00F2  4D      		db	'M' !
00F3  7E04    	 dw cmdmt	; Memory Test
00F5  56      		db	'V' !
00F6  3D0F    	 dw prtver	; Version of ROM
00F8  4C      		db	'L' !
00F9  6A0E    	 dw cmdlb	; List boot modules
00FB  48      		db	'H' !
00FC  A70E    	 dw cmdhb	; long list (Help) boot modules
00FE  58      		db	'X' !
00FF  120F    	 dw cmdx	; extended command set X_
		; TODO: vflash.sys does 'U', 'A' may require more complexity.
		;	db	'A' ! dw cmdab	; Add boot module
		;	db	'U' ! dw cmdur	; Update entire ROM
FFFF          	if not nofp
			; front-panel commands    key(old)  command/action
0101  80      		db	80h !
0102  0607    	 dw kpubt	; [0]     - Universal Boot
0104  81      		db	81h !
0105  C607    	 dw kppbt	; [1]     - Pri Boot
0107  82      		db	82h !
0108  0308    	 dw kpsbt	; [2]     - Sec Boot
010A  83      		db	83h !
010B  7708    	 dw kprdx	; [3]     - Radix Mode
010D  84      		db	84h !
010E  1F06    	 dw kpgo	; [4]     - Go
0110  85      		db	85h !
0111  2806    	 dw kpin	; [5]     - Input
0113  86      		db	86h !
0114  3206    	 dw kpout	; [6]     - Output
0116  87      		db	87h !
0117  4206    	 dw kpsst	; [7]     - Single Step
0119  88      		db	88h !
011A  6608    	 dw kptap	; [8]     - Cass Load
011C  89      		db	89h !
011D  6608    	 dw kptap	; [9]     - Cass Store
011F  8A      		db	8ah !
0120  B008    	 dw kpnxt	; [A] [+] - Next
0122  8B      		db	8bh !
0123  C808    	 dw kpprv	; [B] [-] - Prev
0125  8C      		db	8ch !
0126  3806    	 dw kpabt	; [C] [*] - CANCEL, usually
0128  8D      		db	8dh !
0129  3906    	 dw kprw	; [D] [/] - Display/Alter
012B  8E      		db	8eh !
012C  E308    	 dw kpmem	; [E] [#] - Memory Mode
012E  8F      		db	8fh !
012F  F808    	 dw kprgm	; [F] [.] - Register Mode
		endif
001A          	numcmd	equ	($-cmdtab)/3
		
0000          	if nofp
		endif
		
			rept	0137h-$
0131  FF      		db	0ffh
0132  FF      		db	0ffh
0133  FF      		db	0ffh
0134  FF      		db	0ffh
0135  FF      		db	0ffh
0136  FF      		db	0ffh
0000          	if	($ <> 0137h)
		endif
0137  C30000  		jmp	0	; initialized by H47 boot module
		
0000          	if nofp
		endif
		
013A          	docmd:
013A  B7      		ora	a
013B  F4D803  		cp	conout
013E  4E      		mov	c,m
013F  23      		inx	h
0140  66      		mov	h,m
0141  69      		mov	l,c
0142  E9      	icall:	pchl
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; PC command (set PC)
0143          	cmdpc:
0143  21C006  		lxi	h,pcms
0146  CDD809  		call	msgout
0149  2A1D20  		lhld	RegPtr
014C  111800  		lxi	d,24	; Reg[PC]
014F  19      		dad	d
0150  5E      		mov	e,m
0151  23      		inx	h
0152  56      		mov	d,m
0153  2B      		dcx	h
0154  EB      		xchg		; HL=PC, DE=adr to store
0155  CDC603  		call	inhexcr
0158          		jrc	cmdpc0	; hex digit entered
0158  3807    		DB	38H,cmdpc0-$-1
015A  CD3604  		call	adrnl	; show current PC (HL)
015D  CDC603  		call	inhexcr	; get another char
0160  D0      		rnc	; CR entered, don't update value
0161          	cmdpc0:
0161  EB      		xchg	; HL=adr to store
0162          	cmdpc1:
0162  160D    		mvi	d,CR
0164  C3E303  		jmp	adrin
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Go command
0167          	cmdgo:
0167  21B206  		lxi	h,goms
016A  CDD809  		call	msgout
016D  2A1D20  		lhld	RegPtr
0170  111800  		lxi	d,24	; Reg[PC]
0173  19      		dad	d	; HL=adr to store
0174  CDC603  		call	inhexcr
0177  DC6201  		cc	cmdpc1	; read HEX until CR, store in HL
017A  CDCE09  		call	crlf
FFFF          	if not nofp
			; TODO: make single-step work on H8
017D  3ED0    		mvi	a,0d0h	; no-beep, 2mS, !MON, !single-step
017F          		jr	cmdgo0
017F  1808    		DB	18H,cmdgo0-$-1
0181  F3      		di	; TODO: dead code? single-step...
0182  3A0920  		lda	ctl$F0
0185  EE10    		xri	010h	; toggle single-step
0187  D3F0    		out	0f0h
		else
		endif
0189          	cmdgo0:
0189  320920  		sta	ctl$F0
018C  E1      		pop	h
018D  C34D00  		jmp	intret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
0190          	int2$cont:
FFFF          	if not nofp
0190  F610    		ori	010h	; disable single-step
0192  D3F0    		out	0f0h
0194  12      		stax	d
0195  E620    		ani	020h	; MON active?
		else
		endif
0197  C2AB00  		jnz	start	; break to monitor code
019A  C32220  		jmp	vrst2	; else chain to (possible) user code.
		
019D          	take$5:
019D  3E05    		mvi	a,5	; 5 seconds
019F          	take$A:	; set a timeout for A seconds
019F  21AF01  		lxi	h,timeout
01A2  222020  		shld	vrst1+1
01A5  325221  		sta	SEC$CNT
01A8  3E01    		mvi	a,1
01AA  320820  		sta	MFlag
01AD  FB      		ei
01AE  C9      		ret
		
01AF          	timeout:
01AF  211B20  		lxi	h,ticcnt
01B2  AF      		xra	a
01B3  B6      		ora	m
01B4  C0      		rnz
01B5  23      		inx	h
01B6  7E      		mov	a,m
01B7  0F      		rrc
01B8  D8      		rc
			; every 512 ticks... 1024mS
01B9  215221  		lxi	h,SEC$CNT
01BC  35      		dcr	m
01BD  C0      		rnz
01BE          	error:
01BE  2A1D20  		lhld	monstk
01C1  F9      		sphl
01C2  212E00  		lxi	h,qmsg
01C5  CDD809  		call	msgout	; A=0 on return
01C8  216200  		lxi	h,nulint
01CB  222020  		shld	vrst1+1
01CE  320820  		sta	MFlag	; A=0 from msgout
01D1  DBF2    		in	0f2h
01D3  E603    		ani	00000011b
01D5          		jrnz	error0
01D5  2002    		DB	20H,error0-$-1
01D7  D37F    		out	07fh	; clear H17 ctrl port (A=0)
01D9          	error0:
01D9  C39F00  		jmp	re$entry
		
		; determine device for port 078H
		; return phy drv number in D.
01DC          	gtdev1:
01DC  1600    		mvi	d,0	; Z17
01DE  DBF2    		in	0f2h
01E0          	gtdev0:
01E0  E603    		ani	00000011b	; port 078H device
01E2  C8      		rz		; Z17 (or Z37)
01E3  FE01    		cpi	01b
01E5  1605    		mvi	d,5
01E7  C8      		rz		; Z47
01E8  FE02    		cpi	10b
01EA  1603    		mvi	d,3	; Z67/MMS77320
01EC  C8      		rz
01ED  16FF    		mvi	d,0ffh
01EF  C9      		ret	; NZ
		
		; determine device for port 078H
		; return phy drv number in D.
01F0          	gtdev2:
01F0  162E    		mvi	d,46	; Z37
01F2  DBF2    		in	0f2h
01F4  0F      		rrc
01F5  0F      		rrc
01F6          		jr	gtdev0	; rest are same
01F6  18E8    		DB	18H,gtdev0-$-1
		
		; determine default boot device.
01F8          	gtdfbt:
01F8  110000  		lxi	d,0
01FB  DBF2    		in	0f2h
01FD  E670    		ani	01110000b	; default boot selection
01FF  FE20    		cpi	00100000b	; device at 07CH
0201          		jrz	gtdev1
0201  28D9    		DB	28H,gtdev1-$-1
0203  FE30    		cpi	00110000b	; device at 078H
0205          		jrz	gtdev2
0205  28E9    		DB	28H,gtdev2-$-1
0207  C3EC0C  		jmp	gtdvtb		; get MMS device
		
		; Check SW501 for installed device.
		; C = desired port pattern, 00=Z17/Z37, 01=Z47, 10=Z67, 11=undefined
		; returns base I/O port adr in B.
020A          	getport:
020A  067C    		mvi	b,07ch
020C  DBF2    		in	0f2h
020E  E603    		ani	003h
0210  B9      		cmp	c
0211  C8      		rz
0212  0678    		mvi	b,078h
0214  DBF2    		in	0f2h
0216  0F      		rrc
0217  0F      		rrc
0218  E603    		ani	003h
021A  B9      		cmp	c
021B  C9      		ret	; let caller decide error handling (NZ)
		
021C  212502  	s501er:	lxi	h,s501ms
021F  CDD809  		call	msgout
0222  C39F00  		jmp	re$entry
		
0225  20535731	s501ms:	db	' SW1 wrong',TRM
      2077726F
      6E6700
		
0230          	delay:
0230  E5      		push	h
0231  211B20  		lxi	h,ticcnt
0234  86      		add	m
0235          	delay0:
0235  BE      		cmp	m
0236          		jrnz	delay0
0236  20FD    		DB	20H,delay0-$-1
0238  E1      		pop	h
0239  C9      		ret
		
023A          	gotnum:	; Boot N... "N" in D
023A  D5      		push	d	; save unit num (E)
023B  4A      		mov	c,d
023C  06FF    		mvi	b,-1	; boot modules only
023E  21E50B  		lxi	h,bfnum
0241  CD6F0C  		call	bfind	; might have already been loaded...
0244  D1      		pop	d
0245  DABE01  		jc	error
0248  CDC802  		call	vfport
024B  DA1C02  		jc	s501er
			; convert phy drv to phy base + unit
024E  7A      		mov	a,d
024F          		ldx	d,mdbase
024F  DD5602  		DB	0DDH,d*8+46H,mdbase
0252  92      		sub	d
0253  5F      		mov	e,a	; always zero?
0254  C30B03  		jmp	goboot
		
			rept	0260h-$
0257  FF      		db	0ffh
0258  FF      		db	0ffh
0259  FF      		db	0ffh
025A  FF      		db	0ffh
025B  FF      		db	0ffh
025C  FF      		db	0ffh
025D  FF      		db	0ffh
025E  FF      		db	0ffh
025F  FF      		db	0ffh
0000          	if	($ <> 0260h)
		endif
		; Legacy entry for "Horn" - beep for num 2mS ticks in A
0260  E5      	hhorn:	push	h
0261  CDCA05  		call	set$horn
0264  213C20  		lxi	h,horn
0267  AF      		xra	a
0268  BE      	hhorn0:	cmp	m
0269          		jrnz	hhorn0
0269  20FD    		DB	20H,hhorn0-$-1
026B  E1      		pop	h
026C  C9      		ret
		
026D          	cmdboot:
026D  21AD06  		lxi	h,bootms
0270  CDD809  		call	msgout	; complete (B)oot
0273  3EC3    		mvi	a,0c3h
0275  328022  		sta	bootbf	; mark "no string"
0278  AF      		xra	a
0279  325021  		sta	cport
027C  318022  		lxi	sp,bootbf
027F  0E0D    		mvi	c,CR	; end input on CR
0281          		jr	boot0
0281  1803    		DB	18H,boot0-$-1
0283          	bterr:
0283  CDD603  		call	belout
0286          	boot0:
0286  CDE109  		call	conin
0289  B9      		cmp	c
028A  CA320D  		jz	dfboot	; default boot, by phy drv...
028D  1E00    		mvi	e,0
			; boot by letter... Boot alpha-
028F  E65F    		ani	05fh ; toupper
0291  FE41    		cpi	'A'
0293          		jrc	bterr
0293  38EE    		DB	38H,bterr-$-1
0295  FE5B    		cpi	'Z'+1
0297          		jrnc	bterr
0297  30EA    		DB	30H,bterr-$-1
0299  FE41    		cpi	'A'
029B          		jrc	bterr
029B  38E6    		DB	38H,bterr-$-1
029D  CDD803  		call	conout
02A0  CDD803  		call	conout
02A3  FE42    		cpi	'B'
02A5  DAFF0C  		jc	A$boot	; 'A' is synonym for default
02A8  C5      	gotit1:	push	b
02A9  4F      		mov	c,a
02AA  06FF    		mvi	b,-1	; boot modules only
02AC  21C90B  		lxi	h,bfchr
02AF  CD6F0C  		call	bfind
02B2  C1      		pop	b
02B3  DABE01  		jc	error
02B6  CDC802  		call	vfport
02B9  DA1C02  		jc	s501er
02BC          		ldx	d,mdbase	; base phy drv num
02BC  DD5602  		DB	0DDH,d*8+46H,mdbase
02BF          	gotit:
02BF  1E00    		mvi	e,0
02C1  3E2D    		mvi	a,'-'	; next is optional unit number...
02C3  CDD803  		call	conout
02C6          		jr	luboot0
02C6  1815    		DB	18H,luboot0-$-1
		
		; verify port is set
		; IX=boot module (in memory)
02C8          	vfport:	ldx	a,mdport
02C8  DD7E0C  		DB	0DDH,a*8+46H,mdport
02CB  B7      		ora	a
02CC          		jrnz	vfp0
02CC  2007    		DB	20H,vfp0-$-1
02CE  3A5021  		lda	cport	; if btinit did not set, we can't go on
02D1  B7      		ora	a
02D2  C0      		rnz
02D3  37      		stc
02D4  C9      		ret
02D5  325021  	vfp0:	sta	cport
02D8  AF      		xra	a
02D9  C9      		ret
		
02DA          	lunerr:
02DA  CDD603  		call	belout
02DD          	luboot0:
02DD  CD2004  		call	hexin
02E0          		jrnc	luboot2	; valid HEX digit...
02E0  300D    		DB	30H,luboot2-$-1
02E2  B9      		cmp	c
02E3          		jrz	goboot
02E3  2826    		DB	28H,goboot-$-1
02E5  FE3A    		cpi	':'
02E7          		jrz	colon
02E7  2815    		DB	28H,colon-$-1
02E9  FE20    		cpi	' '
02EB          		jrz	space
02EB  280C    		DB	28H,space-$-1
02ED          		jr	lunerr
02ED  18EB    		DB	18H,lunerr-$-1
02EF          	luboot2:
02EF  CD0A0E  		call	E$x16$A
02F2          		jrc	lunerr
02F2  38E6    		DB	38H,lunerr-$-1
02F4  CDD803  		call	conout
02F7          		jr	luboot0
02F7  18E4    		DB	18H,luboot0-$-1
02F9          	space:
02F9  CDD803  		call	conout
02FC          		jr	luboot0	; TODO: this gets dodgy if spaces between digits.
02FC  18DF    		DB	18H,luboot0-$-1
		
02FE          	colon:	; get arbitrary string as last boot param
02FE  CDD803  		call	conout	; echo ':'
0301  218122  		lxi	h,bootbf+1
0304  CDCA0D  		call	linin
0307  78      		mov	a,b	; excludes TRM
0308  328022  		sta	bootbf	; bootbf: <len> <string...> as in CP/M cmd buf
		; D=Phys Drive base number, E=Unit number
		; (or, D=Phys Drive unit, E=0)
		; module must have already been loaded
		; NOTE: string might have been placed at bootbf...
		; SP was set to 'bootbf'...
030B          	goboot:
030B          		lxiy	error
030B  FD21    		DB	0FDH,21H
030D  BE01    		DW	error
030F  CDCE09  		call	crlf
		; IY=error routine
		; Move string to stack, if present.
		; Stack space is 292 bytes, be certain not to overrun.
		; Since len value is 127 max + TRM, should be OK.
		; Can't use stack until copy is done... can't destroy DE...
0312          	gbooty:
0312  218022  		lxi	h,bootbf
0315  7E      		mov	a,m
0316  FEC3    		cpi	0c3h
0318          		jrz	gboot0
0318  280C    		DB	28H,gboot0-$-1
031A  4F      		mov	c,a	; length
031B  0600    		mvi	b,0
031D  23      		inx	h	; first byte of string...
031E  09      		dad	b	; point to end (TRM)
031F          	btstr1:
031F  7E      		mov	a,m
0320  F5      		push	psw
0321  33      		inx	sp	; undo half of push
0322  2B      		dcx	h
0323  0D      		dcr	c
0324          		jrnz	btstr1
0324  20F9    		DB	20H,btstr1-$-1
0326          	gboot0:
0326          		pushiy	; error routine
0326  FDE5    		DB	0FDH,0E5H
		; IX=boot module (in memory)
		; D=phy drv base, E=unit
0328          	doboot:	; common boot path for console and keypad
0328  CD9109  		call	h17init	; leaves interrupts disabled
032B  7B      		mov	a,e
032C  323121  		sta	AIO$UNI	; relative unit num
032F  7A      		mov	a,d
0330  323420  		sta	l2034h	; boot phys drv base
0333  C3CE0C  		jmp	btboot
			; btboot effectively returns here on success
			; (in most cases)
0336  AF      	hwboot:	xra	a
0337  320820  		sta	MFlag
033A  21191C  	hxboot:	lxi	h,CLOCK
033D  222020  		shld	vrst1+1
0340  C38022  		jmp	bootbf
		
		; ROM start point - initialize everything
		; We know we have at least 64K RAM...
		; But, right now, ROM is in 0000-7FFF so must copy
		; core code and switch to RAM...
0343          	init:
0000          	if z180
		else
0343  21FFFF  		lxi	h,0ffffh
0346  F9      		sphl
0347  E5      		push	h	; save top on stack
0348  3E08    		mvi	a,ctl$MEM1	; MEM1 = full ROM
034A  D3F2    		out	0f2h	; enable full ROM
034C  3A0811  		lda	suadr+m512k
034F  B7      		ora	a
0350  CC980D  		cz	savram	; H8-512K installed, save RAM
0353  210000  		lxi	h,0
0356  110000  		lxi	d,0
0359  010020  		lxi	b,2000h	; copy everything?
035C          		ldir
035C  EDB0    		DB	0EDH,0B0H
		endif
			; save config data
035E  210010  		lxi	h,suadr
0361  1100F8  		lxi	d,susave
0364  010F01  		lxi	b,sumax
0367          		ldir
0367  EDB0    		DB	0EDH,0B0H
0369  219F00  		lxi	h,re$entry
036C  E5      		push	h
036D  CD5804  		call	coninit
0370  CD5106  		call	meminit
0373  CF      		rst	1	; kick-start clock
0374  215D0F  		lxi	h,signon
0377  CDD809  		call	msgout
			; save registers on stack, for debugger access...
037A  C37000  		jmp	intsetup
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Substitute command
037D          	cmdsub:
037D  21B506  		lxi	h,subms
0380  CDD809  		call	msgout
0383  211420  		lxi	h,ABUSS
0386  B7      		ora	a	; NC
0387  160D    		mvi	d,CR
0389  CDE303  		call	adrin
038C  EB      		xchg
038D          	cmdsub0:
038D  CD3604  		call	adrnl
0390  7E      		mov	a,m
0391  CD4504  		call	hexout
0394  CD4104  		call	spout
0397          	cmdsub1:
0397  CD2004  		call	hexin
039A          		jrnc	cmdsub4
039A  3019    		DB	30H,cmdsub4-$-1
039C  FE0D    		cpi	CR
039E          		jrz	cmdsub2
039E  280C    		DB	28H,cmdsub2-$-1
03A0  FE2D    		cpi	'-'
03A2          		jrz	cmdsub3
03A2  280B    		DB	28H,cmdsub3-$-1
03A4  FE2E    		cpi	'.'
03A6  C8      		rz
03A7  CDD603  		call	belout
03AA          		jr	cmdsub1
03AA  18EB    		DB	18H,cmdsub1-$-1
03AC          	cmdsub2:
03AC  23      		inx	h
03AD          		jr	cmdsub0
03AD  18DE    		DB	18H,cmdsub0-$-1
03AF          	cmdsub3:
03AF  CDD803  		call	conout
03B2  2B      		dcx	h
03B3          		jr	cmdsub0
03B3  18D8    		DB	18H,cmdsub0-$-1
03B5          	cmdsub4:
03B5  3600    		mvi	m,000h
03B7          	cmdsub5:
03B7  CDD803  		call	conout
03BA  CD1704  		call	hexbin
03BD          		rld
03BD  ED6F    		DB	0EDH, 6FH
03BF  CDC603  		call	inhexcr
03C2          		jrnc	cmdsub2
03C2  30E8    		DB	30H,cmdsub2-$-1
03C4          		jr	cmdsub5
03C4  18F1    		DB	18H,cmdsub5-$-1
		
03C6          	inhexcr:
03C6  CDE109  		call	conin
03C9  FE0D    		cpi	CR
03CB  C8      		rz
03CC  CD2304  		call	hexchk
03CF  3F      		cmc
03D0  D8      		rc
03D1  CDD603  		call	belout
03D4          		jr	inhexcr
03D4  18F0    		DB	18H,inhexcr-$-1
		
03D6          	belout:
03D6  3E07    		mvi	a,BEL
03D8          	conout:
03D8  F5      		push	psw
03D9          	conot1:
03D9  DBED    		in	0edh
03DB  E620    		ani	00100000b
03DD          		jrz	conot1
03DD  28FA    		DB	28H,conot1-$-1
03DF  F1      		pop	psw
03E0  D3E8    		out	0e8h
03E2  C9      		ret
		
		; D=term char (e.g. '.' for Substitute)
		; HL=location to store address
		; CY=first digit in A
03E3          	adrin:
03E3  E5      		push	h	; adr to store value
03E4  D4E109  		cnc	conin
03E7  BA      		cmp	d	; no input?
03E8  CA1A06  		jz	adrin3
03EB  210000  		lxi	h,0
03EE  37      		stc
03EF  D4E109  	adrin0:	cnc	conin
03F2  CD2304  		call	hexchk
03F5          		jrc	adrin1
03F5  380E    		DB	38H,adrin1-$-1
03F7  CDD803  		call	conout
03FA  CD1704  		call	hexbin
03FD  29      		dad	h
03FE  29      		dad	h
03FF  29      		dad	h
0400  29      		dad	h
0401  B5      		ora	l
0402  6F      		mov	l,a
0403          		jr	adrin0
0403  18EA    		DB	18H,adrin0-$-1
0405          	adrin1:
0405  BA      		cmp	d
0406          		jrz	adrin2
0406  2806    		DB	28H,adrin2-$-1
0408  CDD603  		call	belout
040B  B7      		ora	a
040C          		jr	adrin0
040C  18E1    		DB	18H,adrin0-$-1
040E          	adrin2:
040E  CDD803  		call	conout
0411  EB      		xchg
0412  E1      		pop	h
0413  73      		mov	m,e
0414  23      		inx	h
0415  72      		mov	m,d
0416  C9      		ret
		
0417          	hexbin:
0417  D63A    		sui	'9'+1
0419          		jrnc	hexbi0
0419  3002    		DB	30H,hexbi0-$-1
041B  C607    		adi	7
041D          	hexbi0:
041D  C603    		adi	3
041F  C9      		ret
		
0420          	hexin:
0420  CDE109  		call	conin
0423          	hexchk:
0423  FE30    		cpi	'0'
0425  D8      		rc
0426  FE3A    		cpi	'9'+1
0428  3F      		cmc
0429  D0      		rnc
042A  FE41    		cpi	'A'
042C  D8      		rc
042D  E65F    		ani	05fh	; toupper
042F  FE41    		cpi	'A'
0431  D8      		rc
0432  FE47    		cpi	'F'+1
0434  3F      		cmc
0435  C9      		ret
		
		; HL = adr to print
0436          	adrnl:
0436  CDCE09  		call	crlf
0439          	adrout:
0439  7C      		mov	a,h
043A  CD4504  		call	hexout
043D  7D      		mov	a,l
043E  CD4504  		call	hexout
0441          	spout:
0441  3E20    		mvi	a,' '
0443          		jr	conout
0443  1893    		DB	18H,conout-$-1
		
0445          	hexout:
0445  F5      		push	psw
0446  07      		rlc
0447  07      		rlc
0448  07      		rlc
0449  07      		rlc
044A  CD4E04  		call	hexdig
044D  F1      		pop	psw
044E          	hexdig:
044E  E60F    		ani	00fh
0450  C690    		adi	090h
0452  27      		daa
0453  CE40    		aci	040h
0455  27      		daa
0456          		jr	conout
0456  1880    		DB	18H,conout-$-1
		
0458          	coninit:
0458  0E0C    		mvi	c,12	; 9600 baud
045A  DBF2    		in	0f2h
045C  E680    		ani	10000000b	; 9600/19.2K?
045E          		jrz	ci0
045E  2802    		DB	28H,ci0-$-1
0460  0E06    		mvi	c,6	; 19.2K baud
0462  3E83    	ci0:	mvi	a,083h
0464  D3EB    		out	0ebh
0466  AF      		xra	a
0467  D3E9    		out	0e9h
0469  79      		mov	a,c
046A  D3E8    		out	0e8h
046C  3E03    		mvi	a,003h
046E  D3EB    		out	0ebh
0470  AF      		xra	a
0471  D3E9    		out	0e9h
0473  3E0F    		mvi	a,00001111b	; OUT2=1 hides 16C2550 intr enable diff
0475  D3EC    		out	0ech
0477  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Memory Test command
		
0478          	cserr:
0478  218C06  		lxi	h,cserms
047B  C3D809  		jmp	msgout
		
047E          	cmdmt:
047E  21CD06  		lxi	h,mtms
0481  CDD809  		call	msgout
0484  CDC709  		call	waitcr
0487  219906  		lxi	h,topms
048A  CDD809  		call	msgout
048D  210000  		lxi	h,0
0490  39      		dad	sp
0491  7C      		mov	a,h
0492  3C      		inr	a
0493          		jrz	cmdmt0
0493  2802    		DB	28H,cmdmt0-$-1
0495  D620    		sui	020h
0497          	cmdmt0:
0497  67      		mov	h,a
0498  2E00    		mvi	l,0
049A  2B      		dcx	h
049B  D630    		sui	'0'
049D  5F      		mov	e,a
049E  CD3904  		call	adrout
04A1  CDCE09  		call	crlf
04A4  1600    		mvi	d,000h
04A6  0E30    		mvi	c,030h
04A8  0600    		mvi	b,000h
04AA          		exx
04AA  D9      		DB	0D9H
04AB  21DC04  		lxi	h,mtest0
04AE  11FE2F  		lxi	d,memtest - (mtest1-mtest0)
04B1  01EE00  		lxi	b,mtestZ-mtest0
04B4          		ldir
04B4  EDB0    		DB	0EDH,0B0H
04B6  110030  		lxi	d,memtest
04B9  21DE04  		lxi	h,mtest1
04BC  0EEC    		mvi	c,mtestZ-mtest1
04BE  AF      		xra	a
04BF          		exaf
04BF  08      		DB	08H
04C0  AF      		xra	a
04C1          	cmdmt1:
04C1  86      		add	m
04C2          		exaf
04C2  08      		DB	08H
04C3  EB      		xchg
04C4  86      		add	m
04C5          		exaf
04C5  08      		DB	08H
04C6  EB      		xchg
04C7  23      		inx	h
04C8  13      		inx	d
04C9  0D      		dcr	c
04CA          		jrnz	cmdmt1
04CA  20F5    		DB	20H,cmdmt1-$-1
04CC  4F      		mov	c,a
04CD          		exaf
04CD  08      		DB	08H
04CE  B9      		cmp	c
04CF          		jrnz	cserr
04CF  20A7    		DB	20H,cserr-$-1
04D1  F3      		di
04D2  3A3620  		lda	ctl$F2
04D5  E614    		ani	ctl$SPD	; all but speed bits OFF
04D7  F620    		ori	ctl$ORG0	; set ORG0 only
			; pass ctl$F2 in A...
04D9  C3FE2F  		jmp	memtest - (mtest1-mtest)
		
		;------------------------------------------------
		; Start of relocated code...
		; Memory Test routine, position-independent
		;
04DC          	mtest0:
04DC          	mtest:
			; A reg contains desired ctl$F2 image
04DC  D3F2    		out	0f2h
04DE          	mtest1:		; lands at 03000h - retained relocated code
04DE          		exx
04DE  D9      		DB	0D9H
04DF  62      		mov	h,d
04E0  2E00    		mvi	l,0
04E2  78      		mov	a,b
04E3          		exx
04E3  D9      		DB	0D9H
04E4  4F      		mov	c,a
04E5  0602    		mvi	b,2
04E7          	mtest2:
04E7  79      		mov	a,c
04E8  07      		rlc
04E9  07      		rlc
04EA  07      		rlc
04EB  07      		rlc
04EC  4F      		mov	c,a
04ED  E60F    		ani	00fh
04EF  C690    		adi	090h
04F1  27      		daa
04F2  CE40    		aci	040h
04F4  27      		daa
04F5  D3E8    		out	0e8h
04F7          	mtest3:
04F7  DBED    		in	0edh
04F9  E620    		ani	020h
04FB          		jrz	mtest3
04FB  28FA    		DB	28H,mtest3-$-1
04FD  05      		dcr	b
04FE          		jrnz	mtest2
04FE  20E7    		DB	20H,mtest2-$-1
0500  3E0D    		mvi	a,CR
0502  D3E8    		out	0e8h
0504          		exx
0504  D9      		DB	0D9H
0505  78      		mov	a,b
0506          	mtest4:
0506  77      		mov	m,a
0507  C601    		adi	1
0509  27      		daa
050A  2C      		inr	l
050B          		jrnz	mtest4
050B  20F9    		DB	20H,mtest4-$-1
050D  24      		inr	h
050E  0D      		dcr	c
050F          		jrnz	mtest4
050F  20F5    		DB	20H,mtest4-$-1
0511  7C      		mov	a,h
0512  92      		sub	d
0513  4F      		mov	c,a
0514  62      		mov	h,d
0515  2E00    		mvi	l,0
0517  78      		mov	a,b
0518          	mtest5:
0518  BE      		cmp	m
0519          		jrnz	mtest9
0519  2046    		DB	20H,mtest9-$-1
051B  C601    		adi	1
051D  27      		daa
051E  2C      		inr	l
051F          		jrnz	mtest5
051F  20F7    		DB	20H,mtest5-$-1
0521  24      		inr	h
0522  0D      		dcr	c
0523          		jrnz	mtest5
0523  20F3    		DB	20H,mtest5-$-1
0525          		exx
0525  D9      		DB	0D9H
0526  210030  		lxi	h,memtest
0529  110000  		lxi	d,0
052C  01EC00  		lxi	b,mtestZ-mtest1
052F          		exx
052F  D9      		DB	0D9H
0530  7A      		mov	a,d
0531  EE30    		xri	030h
0533  57      		mov	d,a
0534          		jrz	mtest6
0534  2803    		DB	28H,mtest6-$-1
0536  4B      		mov	c,e
0537          		jr	mtest7
0537  180A    		DB	18H,mtest7-$-1
0539          	mtest6:
0539  0E30    		mvi	c,030h
053B  3E01    		mvi	a,001h
053D  80      		add	b
053E  27      		daa
053F  47      		mov	b,a
0540          		exx
0540  D9      		DB	0D9H
0541  EB      		xchg
0542          		exx
0542  D9      		DB	0D9H
0543          	mtest7:
0543          		exx
0543  D9      		DB	0D9H
0544          		ldir
0544  EDB0    		DB	0EDH,0B0H
0546  7A      		mov	a,d
0547  E6F0    		ani	0f0h
0549  67      		mov	h,a
054A  2E00    		mvi	l,0
054C  0EEC    		mvi	c,mtestZ-mtest1
054E  AF      		xra	a
054F          	mtest8:
054F  86      		add	m
0550  23      		inx	h
0551  0D      		dcr	c
0552          		jrnz	mtest8
0552  20FB    		DB	20H,mtest8-$-1
0554  4F      		mov	c,a
0555          		exaf
0555  08      		DB	08H
0556  B9      		cmp	c
0557          		jrnz	mtestE
0557  2049    		DB	20H,mtestE-$-1
0559          		exaf
0559  08      		DB	08H
055A  7A      		mov	a,d
055B  E6F0    		ani	0f0h
055D  67      		mov	h,a
055E  2E00    		mvi	l,0
0560  E9      		pchl
0561          	mtest9:
0561  AE      		xra	m
0562  57      		mov	d,a
0563  3E0A    		mvi	a,LF
0565  D3E8    		out	0e8h
0567          	mtestA:
0567  DBED    		in	0edh
0569  E620    		ani	020h
056B          		jrz	mtestA
056B  28FA    		DB	28H,mtestA-$-1
056D  0E02    		mvi	c,2
056F  0604    		mvi	b,4
0571          	mtestB:
0571  7C      		mov	a,h
0572  07      		rlc
0573  07      		rlc
0574  07      		rlc
0575  07      		rlc
0576  E60F    		ani	00fh
0578  C690    		adi	090h
057A  27      		daa
057B  CE40    		aci	040h
057D  27      		daa
057E  D3E8    		out	0e8h
0580          	mtestC:
0580  DBED    		in	0edh
0582  E620    		ani	020h
0584          		jrz	mtestC
0584  28FA    		DB	28H,mtestC-$-1
0586  29      		dad	h
0587  29      		dad	h
0588  29      		dad	h
0589  29      		dad	h
058A          		djnz	mtestB
058A  10E5    		DB	10H,mtestB-$-1
058C  3E20    		mvi	a,' '
058E  D3E8    		out	0e8h
0590          	mtestD:
0590  DBED    		in	0edh
0592  E620    		ani	020h
0594          		jrz	mtestD
0594  28FA    		DB	28H,mtestD-$-1
0596  0D      		dcr	c
0597  EB      		xchg
0598  0602    		mvi	b,002h
059A          		jrnz	mtestB
059A  20D5    		DB	20H,mtestB-$-1
059C  3E2A    		mvi	a,'*'
059E  D3E8    		out	0e8h
05A0          		jr	mtestG
05A0  1814    		DB	18H,mtestG-$-1
05A2          	mtestE:
05A2  DBED    		in	0edh
05A4  E620    		ani	020h
05A6          		jrz	mtestE
05A6  28FA    		DB	28H,mtestE-$-1
05A8  3E0A    		mvi	a,LF
05AA  D3E8    		out	0e8h
05AC          	mtestF:
05AC  DBED    		in	0edh
05AE  E620    		ani	020h
05B0          		jrz	mtestF
05B0  28FA    		DB	28H,mtestF-$-1
05B2  3E21    		mvi	a,'!'
05B4  D3E8    		out	0e8h
05B6          	mtestG:
05B6  DBED    		in	0edh
05B8  E620    		ani	020h
05BA          		jrz	mtestG
05BA  28FA    		DB	28H,mtestG-$-1
05BC  AF      		xra	a
05BD  06FA    		mvi	b,0fah
05BF          	mtestH:
05BF  3D      		dcr	a
05C0          		jrnz	mtestH
05C0  20FD    		DB	20H,mtestH-$-1
05C2          		djnz	mtestH
05C2  10FB    		DB	10H,mtestH-$-1
05C4  3E07    		mvi	a,BEL
05C6  D3E8    		out	0e8h
05C8          		jr	mtestG
05C8  18EC    		DB	18H,mtestG-$-1
		; End of relocated code
05CA          	mtestZ	equ	$
		;------------------------------------------------
		
		; must be called with interrupts off
		; A = horn delay, in 2mS ticks
		; A,HL used
05CA          	set$horn:
05CA  323C20  		sta	horn
05CD  210920  		lxi	h,ctl$F0
05D0          		res	7,m	; beep on
05D0  CBBE    		DB	0CBH,7*8+m+80H
05D2  7E      		mov	a,m
05D3  D3F0    		out	0f0h
05D5  C9      		ret
		
		; must be called with interrupts enabled
		; A = horn delay, in 2mS ticks
		; A,HL used
05D6          	set$horn0:
05D6  F3      		di
05D7  CDCA05  		call	set$horn
05DA  FB      		ei
05DB  C9      		ret
		
		; Special entry points expected by HDOS, or maybe Heath CP/M boot.
			rept	0613h-$
05DC  FF      		db	0ffh
05DD  FF      		db	0ffh
05DE  FF      		db	0ffh
05DF  FF      		db	0ffh
05E0  FF      		db	0ffh
05E1  FF      		db	0ffh
05E2  FF      		db	0ffh
05E3  FF      		db	0ffh
05E4  FF      		db	0ffh
05E5  FF      		db	0ffh
05E6  FF      		db	0ffh
05E7  FF      		db	0ffh
05E8  FF      		db	0ffh
05E9  FF      		db	0ffh
05EA  FF      		db	0ffh
05EB  FF      		db	0ffh
05EC  FF      		db	0ffh
05ED  FF      		db	0ffh
05EE  FF      		db	0ffh
05EF  FF      		db	0ffh
05F0  FF      		db	0ffh
05F1  FF      		db	0ffh
05F2  FF      		db	0ffh
05F3  FF      		db	0ffh
05F4  FF      		db	0ffh
05F5  FF      		db	0ffh
05F6  FF      		db	0ffh
05F7  FF      		db	0ffh
05F8  FF      		db	0ffh
05F9  FF      		db	0ffh
05FA  FF      		db	0ffh
05FB  FF      		db	0ffh
05FC  FF      		db	0ffh
05FD  FF      		db	0ffh
05FE  FF      		db	0ffh
05FF  FF      		db	0ffh
0600  FF      		db	0ffh
0601  FF      		db	0ffh
0602  FF      		db	0ffh
0603  FF      		db	0ffh
0604  FF      		db	0ffh
0605  FF      		db	0ffh
0606  FF      		db	0ffh
0607  FF      		db	0ffh
0608  FF      		db	0ffh
0609  FF      		db	0ffh
060A  FF      		db	0ffh
060B  FF      		db	0ffh
060C  FF      		db	0ffh
060D  FF      		db	0ffh
060E  FF      		db	0ffh
060F  FF      		db	0ffh
0610  FF      		db	0ffh
0611  FF      		db	0ffh
0612  FF      		db	0ffh
0000          	if	($ <> 0613h)
		endif
0613  C30000  		jmp	0	; initialized by H47 boot module
0616  00      		db	0
0617  C30000  		jmp	0	; initialized by H47 boot module
		
0000          	if z180
		endif
		
061A  E1      	adrin3:	pop	h
061B  5E      		mov	e,m
061C  23      		inx	h
061D  56      		mov	d,m
061E  C9      		ret
		
FFFF          	if not nofp
061F          	kpgo:
061F  3ED0    		mvi	a,11010000b	; MON off
0621  320920  		sta	ctl$F0
0624  E1      		pop	h	; discard ret adr
0625  C34D00  		jmp	intret	; execute
		
0628  2A1420  	kpin:	lhld	ABUSS
062B  4C      		mov	c,h	; port
062C          		inp	l	; get value
062C  ED68    		DB	0EDH,l*8+40H
062E  221420  		shld	ABUSS
0631  C9      		ret
		
0632  2A1420  	kpout:	lhld	ABUSS
0635  4C      		mov	c,h	; port
0636          		outp	l	; output value
0636  ED69    		DB	0EDH,l*8+41H
0638  C9      	kpabt:	ret
		
0639          	kprw:	; switch between display/modify
0639  3A0720  		lda	DspMod
063C  EE01    		xri	1
063E  320720  		sta	DspMod
0641  C9      		ret
		
0642          	kpsst:	; single-step one instruction
0642  F3      		di
0643  3A0920  		lda	ctl$F0
0646  EE10    		xri	00010000b	; disable SS inhibit
0648  D3F0    		out	0f0h
064A  320920  	sst1:	sta	ctl$F0
064D  E1      		pop	h	; discard ret adr
064E  C34D00  		jmp	intret	; execute
		endif
		
		; initialize monitor memory at 2000h
0651          	meminit:
0651  AF      		xra	a
0652  325321  		sta	l2153h
0655  323B20  		sta	lstcmd
0658  320520  		sta	RegI
065B  320620  		sta	DsProt
065E  320720  		sta	DspMod
0661  323920  		sta	Radix
0664  323A20  		sta	kpchar
0667  323C20  		sta	horn
066A  3C      		inr	a	; 1
066B  320A20  		sta	Refind
0000          	if nofp
		else
066E  3E20    		mvi	a,ctl$ORG0	; ORG0 on, 2mS off...
		endif
0670  323620  		sta	ctl$F2	; 2mS off, ORG0 on
0673  D3F2    		out	0f2h	; enable RAM now...
0675  3EC9    		mvi	a,0c9h	; RET
0677  320420  		sta	PrsRAM
067A  210050  		lxi	h,05000h	; 0, (beep, 2mS, !MON, !SI)
067D  220820  		shld	MFlag	; MFlag, CtlFlg
0680  21FFFF  		lxi	h,0ffffh	; top of memory
0683  221420  		shld	ABUSS
0686  3E01    		mvi	a,debounce
0688  321720  		sta	kpcnt
068B  C9      		ret
		
		; for cmdmt...
068C  07436B73	cserms:	db	BEL,'Cksum error',TRM
      756D2065
      72726F72
      00
0699  546F7020	topms:	db	'Top of Mem: ',TRM
      6F66204D
      656D3A20
      00
		
06A6  0D0A4838	prompt:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
06AA  3A2000  		db	': ',TRM
06AD  6F6F7420	bootms:	db	'oot ',TRM
      00
06B2  6F2000  	goms:	db	'o ',TRM
06B5  75627374	subms:	db	'ubstitute ',TRM
      69747574
      652000
06C0  726F6720	pcms:	db	'rog Counter ',TRM
      436F756E
      74657220
      00
06CD  656D2074	mtms:	db	'em test',TRM
      65737400
06D5  756D7020	dmpms:	db	'ump ',TRM
      00
		
		; command not built-in, check modules.
		; should only be called for console commands.
		; A=cmd key/chr (also in 'lstcmd')
06DA          	nocmd0:
06DA  323B20  		sta	lstcmd
06DD          	nocmd:
06DD  4F      		mov	c,a
06DE  0600    		mvi	b,0	; no boot modules
06E0  21C90B  		lxi	h,bfchr
06E3  CD6F0C  		call	bfind
06E6          		jrc	cmerr
06E6  3809    		DB	38H,cmerr-$-1
06E8  3A3B20  		lda	lstcmd
06EB  CDD803  		call	conout
06EE  C3CE0C  		jmp	cmexec
		
06F1  CDD603  	cmerr:	call	belout
06F4  C3C300  		jmp	prloop
		
FFFF          	if not nofp
		; get "alternate" (secondary) boot device...
06F7          	galtbt:
06F7  110000  		lxi	d,0
06FA  DBF2    		in	0f2h
06FC  E670    		ani	01110000b	; default boot selection
06FE  FE20    		cpi	00100000b	; if default at 07CH,
0700  CAF001  		jz	gtdev2		; get 078H device...
		; if device was not 07CH, then use 07CH... ???
		;;	cpi	00110000b	; if device at 078H
		;;	jz	gtdev1		; get 07CH device...
0703  C3DC01  		jmp	gtdev1		; get 07CH device...
		
0706          	kpubt:
0706  3A0820  		lda	MFlag
0709  F602    		ori	00000010b	; disable disp updates
070B  320820  		sta	MFlag
070E  CD780B  		call	clrdisp	; clean slate
0711  01310B  		lxi	b,dDev
0714  110B20  		lxi	d,Aleds
0717  CD6E0B  		call	mov3dsp
071A  CD0B0A  		call	keyin	; get device
071D  E67F    		ani	01111111b
071F  FE0C    		cpi	0ch	; cancel
0721  CA7E07  		jz	kperr
0724  325121  		sta	BDF
0727  4F      		mov	c,a
0728  06FF    		mvi	b,-1	; boot modules only
072A  21D70B  		lxi	h,bfkey
072D  CD6F0C  		call	bfind
0730          		jrc	deverr
0730  384C    		DB	38H,deverr-$-1
0732  DD      		db	0ddh !
0733  44      	 mov b,h	; mov b,IXh ; module address
0734  0E0D    		mvi	c,mddisp
0736  110B20  		lxi	d,Aleds
0739  CD6E0B  		call	mov3dsp
073C  D5      		push	d	; save LEDs pointer
			; determine if fixed port...
073D          		ldx	a,mdport
073D  DD7E0C  		DB	0DDH,a*8+46H,mdport
0740  B7      		ora	a
0741          		jrnz	gotprt
0741  2018    		DB	20H,gotprt-$-1
0743  01340B  		lxi	b,dPor
0746  CD6E0B  		call	mov3dsp
0749  CD0B0A  		call	keyin	; get port
074C  E67F    		ani	01111111b
074E  FE04    		cpi	04h	; 0..3 allowed
0750  D27E07  		jnc	deverr
0753  5F      		mov	e,a
0754  1600    		mvi	d,0
0756  21C207  		lxi	h,ports
0759  19      		dad	d
075A  7E      		mov	a,m
075B  E1      	gotprt:	pop	h	; LEDs pointer
075C  325021  		sta	cport
075F  CDA50A  		call	dod	; decode number to HL
0762  54      		mov	d,h
0763  5D      		mov	e,l
0764  01370B  		lxi	b,dUni
0767  CD6E0B  		call	mov3dsp
076A  CD0B0A  		call	keyin	; get unit
076D  E67F    		ani	01111111b
076F  5F      		mov	e,a
0770          		ldx	d,mdbase
0770  DD5602  		DB	0DDH,d*8+46H,mdbase
0773  3EC3    		mvi	a,0c3h
0775  328022  		sta	bootbf	; mark "no string"
0778  318022  		lxi	sp,bootbf
077B  CD2803  		call	doboot	; only returns if error...
077E          	kperr:
077E          	deverr:
077E  FB      		ei	; TODO: more required before this?
077F  210820  		lxi	h,MFlag
0782  7E      		mov	a,m
0783  E6FE    		ani	11111110b	; disable "private" clock intr
0785  F602    		ori	00000010b	; disable disp updates
0787  77      		mov	m,a
0788  013A0B  		lxi	b,dErr
078B  110B20  		lxi	d,Aleds
078E  2E06    		mvi	l,6
0790  CD700B  		call	movLdsp
0793  0E80    		mvi	c,10000000b	; beep on/off bit
0795  211B20  		lxi	h,ticcnt
0798  110920  		lxi	d,ctl$F0
079B          	bterr0:
079B  1A      		ldax	d
079C  A9      		xra	c	; beep on
079D  12      		stax	d
079E  7E      		mov	a,m
079F  C619    		adi	25	; 50mS
07A1          	bterr2:
07A1  BE      		cmp	m
07A2          		jrnz	bterr2
07A2  20FD    		DB	20H,bterr2-$-1
07A4  1A      		ldax	d
07A5  A9      		xra	c	; beep off
07A6  12      		stax	d
07A7  7E      		mov	a,m
07A8  C6FF    		adi	-1
07AA  BE      	bterr1:	cmp	m
07AB          		jrz	bterr0
07AB  28EE    		DB	28H,bterr0-$-1
07AD  3A3A20  		lda	kpchar
07B0  FE6F    		cpi	01101111b	; raw pattern for '*' or CANCEL
07B2          		jrnz	bterr1
07B2  20F6    		DB	20H,bterr1-$-1
07B4  AF      		xra	a
07B5  323A20  		sta	kpchar
07B8  210820  		lxi	h,MFlag
07BB  7E      		mov	a,m
07BC  E6BD    		ani	10111101b	; normal mode...
07BE  77      		mov	m,a
			; should return to 'start' but avoid extra prompts...
07BF  C39F00  		jmp	re$entry
		
		; port options for keys 0-3
07C2  787CB8BC	ports:	db	078h,07ch,0b8h,0bch
		
07C6          	kppbt:	; primary boot (default boot)
07C6  3EC3    		mvi	a,0c3h
07C8  328022  		sta	bootbf	; mark "no string"
07CB  01430B  		lxi	b,dPri
07CE  CD3908  		call	btdsp
07D1  CDF801  		call	gtdfbt
07D4  7A      		mov	a,d
07D5  FEFF    		cpi	0ffh
07D7  CA7E07  		jz	kperr
07DA  FEFE    		cpi	0feh
07DC          		jrz	kppbt0
07DC  2841    		DB	28H,kppbt0-$-1
07DE          	kpbt0:
07DE  AF      		xra	a
07DF  325021  		sta	cport
07E2  D5      		push	d	; phy drv, unit
07E3  4A      		mov	c,d
07E4  06FF    		mvi	b,-1	; boot modules only
07E6  21E50B  		lxi	h,bfnum
07E9  CD6F0C  		call	bfind	; might have already been loaded...
07EC  DA7E07  		jc	kperr
07EF  CDC802  		call	vfport
07F2  DA7E07  		jc	kperr	; TODO: specific error? SW1 Error?
07F5  CD4F08  		call	btdsp2	; show device name
07F8  D1      		pop	d	; phy drv, unit
07F9  318022  		lxi	sp,bootbf
07FC  217E07  		lxi	h,kperr
07FF  E5      		push	h
0800  C32803  		jmp	doboot
		
0803          	kpsbt:	; secondary boot
0803  3EC3    		mvi	a,0c3h
0805  328022  		sta	bootbf	; mark "no string"
0808  01460B  		lxi	b,dSec
080B  CD3908  		call	btdsp
080E  2186F8  		lxi	h,susave+dsdev
0811  CD500D  		call	dfboot0
0814  DA7E07  		jc	kperr
0817  B7      		ora	a
0818          		jrz	kpbt1
0818  2812    		DB	28H,kpbt1-$-1
081A  CDF706  		call	galtbt
081D          		jr	kpbt0
081D  18BF    		DB	18H,kpbt0-$-1
		
081F  2104F8  	kppbt0:	lxi	h,susave+dpdev
0822  CD500D  		call	dfboot0
0825  DA7E07  		jc	kperr
0828  B7      		ora	a
0829  C27E07  		jnz	kperr
082C          	kpbt1:
082C  CD4F08  		call	btdsp2	; show device name
082F          		lxiy	kperr
082F  FD21    		DB	0FDH,21H
0831  7E07    		DW	kperr
0833  318022  		lxi	sp,bootbf
0836  C31203  		jmp	gbooty
		
0839          	btdsp:
0839  3A0820  		lda	MFlag
083C  F602    		ori	00000010b	; disable disp updates
083E  320820  		sta	MFlag
0841  D5      		push	d
0842  C5      		push	b
0843  CD780B  		call	clrdisp
0846  C1      		pop	b	; display string
0847  110B20  		lxi	d,Aleds
084A  CD6E0B  		call	mov3dsp
084D  D1      		pop	d
084E  C9      		ret
		; IX=boot module
		; show device name in FP display
084F          	btdsp2:
084F  D5      		push	d	; device/unit
0850          		pushix
0850  DDE5    		DB	0DDH,0E5H
0852  E1      		pop	h
0853  110D00  		lxi	d,13	; FP display name
0856  19      		dad	d
0857  4D      		mov	c,l
0858  44      		mov	b,h
0859  111120  		lxi	d,Dleds
085C  CD6E0B  		call	mov3dsp
			; TODO: fix this - is there a better way?
085F  3EFA    		mvi	a,250	;; make it briefly visible
0861  CD3002  		call	delay	;;
0864  D1      		pop	d	; device/unit
0865  C9      		ret
		
0866          	kptap:	; cassette load (read) or store (write, save)
0866  0600    		mvi	b,0	; command only
0868  0E88    		mvi	c,88h	; cassette module key
086A  21D70B  		lxi	h,bfkey
086D  CD6F0C  		call	bfind
0870  DA7E07  		jc	kperr
0873  CDCE0C  		call	cmexec
0876  C9      		ret
		
0877          	kprdx:	; choose radix for display
0877  3A0820  		lda	MFlag
087A  F602    		ori	00000010b	; disable disp updates
087C  320820  		sta	MFlag
087F  CD780B  		call	clrdisp
0882  01400B  		lxi	b,dRad
0885  110B20  		lxi	d,Aleds
0888  CD6E0B  		call	mov3dsp
088B  3A3920  		lda	Radix
088E  B7      		ora	a
088F  2F      		cma		; 00->ff
0890          		jrz	rdx0
0890  2801    		DB	28H,rdx0-$-1
0892  AF      		xra	a	; else 00
0893  323920  	rdx0:	sta	Radix		; 00       ff
0896  E613    		ani	00010011b	; 00->00,  ff->13
0898  EE81    		xri	10000001b	; 00->81,  ff->92
089A  321020  		sta	Aleds+5		; 00->'O', ff->'H'
			; wait 1S to allow user to see...
089D  3EFA    		mvi	a,250		; 500mS
089F  CD3002  		call	delay
08A2  3EFA    		mvi	a,250		; 500mS
08A4  CD3002  		call	delay
08A7  3A0820  		lda	MFlag
08AA  E6FD    		ani	11111101b	; enable disp updates
08AC  320820  		sta	MFlag
			; TODO: beep?
08AF  C9      		ret
		
08B0          	kpnxt:	; next register/memory addr
08B0  3A0720  		lda	DspMod
08B3  E602    		ani	00000010b	; Z if memory mode
08B5  2A1420  		lhld	ABUSS
08B8  110520  		lxi	d,RegI
08BB  23      		inx	h
08BC          		jrz	sae
08BC  2821    		DB	28H,sae-$-1
08BE  1A      		ldax	d
08BF  C602    		adi	2
08C1  12      		stax	d
08C2  FE1A    		cpi	nReg
08C4  D8      		rc
08C5  AF      		xra	a
08C6  12      		stax	d
08C7  C9      		ret
		
08C8          	kpprv:	; previous register/memory addr
08C8  3A0720  		lda	DspMod
08CB  E602    		ani	00000010b	; Z if memory mode
08CD  2A1420  		lhld	ABUSS
08D0  110520  		lxi	d,RegI
08D3  2B      		dcx	h
08D4          		jrz	sae
08D4  2809    		DB	28H,sae-$-1
08D6  1A      		ldax	d
08D7  D602    		sui	2
08D9  12      		stax	d
08DA  D0      		rnc
08DB  3E18    		mvi	a,nReg-2
08DD  12      		stax	d
08DE  C9      		ret
		
08DF  221420  	sae:	shld	ABUSS
08E2  C9      		ret
		
08E3          	kpmem:	; switch to memory mode - enter address
08E3  AF      		xra	a	; also NC
08E4  320720  		sta	DspMod	; display memory...
08E7  320620  		sta	DsProt	; periods all on...
08EA  211520  		lxi	h,ABUSS+1	; little-endian, enter hi byte first
08ED  CD4D09  		call	iob
08F0  2B      		dcx	h	; HL=low byte of address
08F1  0600    		mvi	b,0
08F3  B7      		ora	a	; CY=0
08F4  CD4D09  		call	iob
08F7  C9      		ret		; back to start... TODO: prevent re-prompt
		
08F8          	kprgm:	; switch to register mode
08F8  3E02    		mvi	a,2
08FA  320720  		sta	DspMod	; display registers...
08FD  AF      		xra	a
08FE  320620  		sta	DsProt	; periods all on...
0901  CD0B0A  		call	keyin
0904  E67F    		ani	01111111b
0906  FE0C    		cpi	(nReg-1)/2	; PC requires spcl
0908          		jrc	reg0
0908  3807    		DB	38H,reg0-$-1
090A  D603    		sub	3		; gap in codes?
090C  FE0C    		cpi	12		; was 15...
090E  C27E07  		jnz	kperr	; TODO: proper handling
0911  07      	reg0:	rlc	; times 2
0912  320520  		sta	RegI
0915  C9      		ret		; back to start... TODO: prevent re-prompt
		
0916          	kpcmd:	; A=keypad command, +80h
			; keypad pressed...
0916  FE8A    		cpi	8ah	; non-digit (hex req first be '0')
0918  D2D300  		jnc	cmchr
091B  47      		mov	b,a
091C  3A0720  		lda	DspMod
091F  0F      		rrc	; CY=alter mode
0920          		jrc	kpalter	; alter mode - numeric values only
0920  3804    		DB	38H,kpalter-$-1
0922  78      		mov	a,b
0923  C3D300  		jmp	cmchr
		; A=DspMod >> 1, B=key
0926          	kpalter:
0926  2A1420  		lhld	ABUSS
0929  0F      		rrc	; register (else memory)
092A          		jrc	kpreg
092A  3809    		DB	38H,kpreg-$-1
092C  37      		stc
092D  CD4D09  		call	iob
0930  23      		inx	h
0931  221420  		shld	ABUSS
0934  C9      		ret
		
		; B=key
0935          	kpreg:
0935  3A0520  		lda	RegI
0938  B7      		ora	a
0939  CA7E07  		jz	kperr	; RegI == 0 (SP) not allowed
093C  5F      		mov	e,a
093D  1600    		mvi	d,0
093F  2A1D20  		lhld	RegPtr
0942  19      		dad	d
0943  23      		inx	h	; HL=high byte of address
0944  37      		stc
0945  CD4D09  		call	iob
0948  2B      		dcx	h	; HL=low byte of address
0949  CD4D09  		call	iob
094C  C9      		ret
		
		; Input Octal(or Hex) byte
		; B=key, CY=first digit
094D          	iob:	rarr	c	; save CY => C bit 7
094D  CB19    		DB	0CBH, 18H + c
094F  3A3920  		lda	Radix
0952  B7      		ora	a
0953  78      		mov	a,b
0954          		jrz	ioboct
0954  2820    		DB	28H,ioboct-$-1
		; iobhex - to avoid conflict with cmd keys A-F, first input must be [0]
		; So, hex input requires 3 or 5 + 1 keys.
0956          		ralr	c	; restore CY
0956  CB11    		DB	0CBH, 10H+c
0958  D40B0A  		cnc	keyin
095B  E67F    		ani	01111111b
095D  C27E07  		jnz	kperr
0960  1602    		mvi	d,2
0962  CD0B0A  	iobh0:	call	keyin
0965  E67F    		ani	01111111b
0967  5F      		mov	e,a
0968  7E      		mov	a,m
0969  07      		rlc
096A  07      		rlc
096B  07      		rlc
096C  07      		rlc
096D  E6F0    		ani	11110000b
096F  B3      		ora	e	; also ensure NC for loop
0970  77      		mov	m,a
0971  15      		dcr	d
0972          		jrnz	iobh0
0972  20EE    		DB	20H,iobh0-$-1
0974          		jr	iob0
0974  181A    		DB	18H,iob0-$-1
0976          	ioboct:
0976          		ralr	c	; restore CY
0976  CB11    		DB	0CBH, 10H+c
0978  1603    		mvi	d,3
097A  D40B0A  	iobo0:	cnc	keyin
097D  E67F    		ani	01111111b
097F  FE08    		cpi	8
0981  D27E07  		jnc	kperr
0984  5F      		mov	e,a
0985  7E      		mov	a,m
0986  07      		rlc
0987  07      		rlc
0988  07      		rlc
0989  E6F8    		ani	11111000b
098B  B3      		ora	e	; also ensure NC for loop
098C  77      		mov	m,a
098D  15      		dcr	d
098E          		jrnz	iobo0
098E  20EA    		DB	20H,iobo0-$-1
0990          	iob0:
			; TODO: blip to ack entry?
0990  C9      		ret
		endif
		
		; returns with interrupts disabled
		; preserves DE
0991          	h17init:
0991  F3      		di
0992  DBF2    		in	0f2h
0994  E603    		ani	00000011b	; port 7C - only one for H17
0996          		jrnz	h17in0
0996  2003    		DB	20H,h17in0-$-1
0998  AF      		xra	a
0999  D37F    		out	07fh	; avoid this if H17 not configured
099B  D5      	h17in0:	push	d
099C  210920  		lxi	h,ctl$F0
099F  36D0    		mvi	m,11010000b	; !beep, 2mS, !mon, !SI
09A1  215A1F  		lxi	h,R$CONST
09A4  114820  		lxi	d,D$CONST
09A7  015800  		lxi	b,88
09AA          		ldir
09AA  EDB0    		DB	0EDH,0B0H
09AC  6B      		mov	l,e
09AD  62      		mov	h,d
09AE  13      		inx	d
09AF  0E1E    		mvi	c,30
09B1  77      		mov	m,a
09B2          		ldir	; fill l20a0h...
09B2  EDB0    		DB	0EDH,0B0H
09B4  3E07    		mvi	a,7
09B6  211F20  		lxi	h,intvec	; vector area
09B9          	h17ini0:
09B9  36C3    		mvi	m,0c3h
09BB  23      		inx	h
09BC  3662    		mvi	m,LOW (nulint-rst0)
09BE  23      		inx	h
09BF  3600    		mvi	m,HIGH (nulint-rst0)
09C1  23      		inx	h
09C2  3D      		dcr	a
09C3          		jrnz	h17ini0
09C3  20F4    		DB	20H,h17ini0-$-1
09C5  D1      		pop	d
09C6  C9      		ret
		
09C7          	waitcr:
09C7  CDE109  		call	conin
09CA  FE0D    		cpi	CR
09CC          		jrnz	waitcr
09CC  20F9    		DB	20H,waitcr-$-1
09CE          	crlf:
09CE  3E0D    		mvi	a,CR
09D0  CDD803  		call	conout
09D3  3E0A    		mvi	a,LF
09D5  C3D803  		jmp	conout
		
09D8          	msgout:
09D8  7E      		mov	a,m
09D9  B7      		ora	a
09DA  C8      		rz
09DB  CDD803  		call	conout
09DE  23      		inx	h
09DF          		jr	msgout
09DF  18F7    		DB	18H,msgout-$-1
		
		; called in the context of a command on console
09E1  DBED    	conin:	in	0edh
09E3  0F      		rrc
09E4          		jrc	conin0
09E4  3811    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
09E6  DBDA    		in	0dah	; VDIP1/FT245R status
09E8  E608    		ani	00001000b	; VDIP1 RxR
0000          	if nofp
		else
09EA          		jrz	novdip2
09EA  2802    		DB	28H,novdip2-$-1
09EC  DBD9    		in	0d9h	; flush char
09EE          	novdip2:
09EE  3A3A20  		lda	kpchar
09F1  B7      		ora	a
09F2          		jrz	conin
09F2  28ED    		DB	28H,conin-$-1
			; cancel console cmd, leave keypad char for cmdin
09F4  C3AB00  		jmp	start
		endif
		
09F7  DBE8    	conin0:	in	0e8h
09F9  E67F    		ani	07fh
09FB  FE7F    		cpi	DEL	; DEL key restarts from anywhere?
09FD  CA9F00  		jz	re$entry
0A00  C9      		ret
		
		; Pure console input, no tricks
0A01  DBED    	conin1:	in	0edh
0A03  0F      		rrc
0A04          		jrnc	conin1
0A04  30FB    		DB	30H,conin1-$-1
0A06  DBE8    		in	0e8h
0A08  E67F    		ani	07fh
0A0A  C9      		ret
		
FFFF          	if not nofp
		; called in the context of command on front-panel
0A0B  3A3A20  	keyin:	lda	kpchar
0A0E  B7      		ora	a
0A0F          		jrnz	getkey
0A0F  201B    		DB	20H,getkey-$-1
0A11  DBED    		in	0edh
0A13  0F      		rrc
0A14          		jrnc	keyin
0A14  30F5    		DB	30H,keyin-$-1
			; cancel kaypad cmd, leave console char for cmdin
			; TODO: what modes need reset?
0A16  C3AB00  		jmp	start
		endif
		
		; wait for command - console or keypad
0A19          	cmdin:
0A19  DBED    		in	0edh
0A1B  0F      		rrc
0A1C          		jrc	conin0
0A1C  38D9    		DB	38H,conin0-$-1
			; flush out VDIP1 while we wait...
0A1E  DBDA    		in	0dah	; VDIP1/FT245R status
0A20  E608    		ani	00001000b	; VDIP1 RxR
			; INS8250 IIR always 0
			; 16550 IIR is RxD timeout (?)
			; 16C2550 ISR is RxD timeout (?)
0000          	if nofp
		else
0A22          		jrz	novdip1
0A22  2802    		DB	28H,novdip1-$-1
0A24  DBD9    		in	0d9h	; flush char
0A26          	novdip1:
0A26  3A3A20  		lda	kpchar
0A29  B7      		ora	a
0A2A          		jrz	cmdin
0A2A  28ED    		DB	28H,cmdin-$-1
0A2C  F5      	getkey:	push	psw	; A=scan code
0A2D  AF      		xra	a
0A2E  323A20  		sta	kpchar
0A31  F1      		pop	psw
0A32  EEFE    		xri	11111110b
0A34  0F      		rrc
0A35          		jrnc	gotkey
0A35  3004    		DB	30H,gotkey-$-1
0A37  0F      		rrc
0A38  0F      		rrc
0A39  0F      		rrc
0A3A  0F      		rrc
0A3B  E60F    	gotkey:	ani	00001111b
0A3D  F680    		ori	10000000b	; distinguish from console input
			; TODO: check for CANCEL key?
0A3F  C9      		ret
		endif
		
FFFF          	if not nofp
		; keypad check at 32mS
0A40  211620  	kpchk:	lxi	h,RckA
0A43  DBF0    		in	0f0h
0A45  BE      		cmp	m	; RckA
0A46          		jrnz	kpchk0
0A46  2014    		DB	20H,kpchk0-$-1
0A48  E611    		ani	00010001b
0A4A  FE11    		cpi	00010001b
0A4C  C8      		rz	; nothing pressed
0A4D  7E      		mov	a,m
			; need to count auto-repeat/debounce
0A4E  23      		inx	h	; kpcnt
0A4F  35      		dcr	m
0A50  C0      		rnz
			; got a key press...
0A51  323A20  		sta	kpchar
0A54  3610    		mvi	m,rptcnt
0A56  3E02    		mvi	a,4/2	; 4mS click
0A58  CDCA05  		call	set$horn
0A5B  C9      		ret
0A5C  77      	kpchk0:	mov	m,a	; RckA
0A5D  23      		inx	h	; kpcnt
0A5E  3601    		mvi	m,debounce
0A60  C9      		ret
		
		; Update Front-panel Display
0A61  3E02    	ufd:	mvi	a,00000010b
0A63  A0      		ana	b
0A64  C0      		rnz		; updates disabled
0A65  210620  		lxi	h,DsProt
0A68          		rlcr	m
0A68  CB06    		DB	0CBH, 00H + m
0A6A  46      		mov	b,m
0A6B  23      		inx	h	; DspMod
0A6C  7E      		mov	a,m
0A6D  E602    		ani	00000010b
0A6F  2A1420  		lhld	ABUSS
0A72          		jrz	ufd1	; displaying memory
0A72  2812    		DB	28H,ufd1-$-1
			; displaying registers
0A74  CD630B  		call	lra	; locate register address offset (DE)
0A77  E5      		push	h
0A78  21490B  		lxi	h,LedRegTbl
0A7B  19      		dad	d
0A7C  7E      		mov	a,m
0A7D  23      		inx	h
0A7E  66      		mov	h,m
0A7F  6F      		mov	l,a
0A80  E3      		xthl
0A81  B4      		ora	h
0A82  7E      		mov	a,m
0A83  23      		inx	h
0A84  66      		mov	h,m
0A85  6F      		mov	l,a
0A86  F5      	ufd1:	push	psw
0A87  EB      		xchg
0A88  210B20  		lxi	h,Aleds
0A8B  7A      		mov	a,d
0A8C  CDA50A  		call	dod
0A8F  7B      		mov	a,e
0A90  CDA50A  		call	dod
0A93  F1      		pop	psw
0A94  1A      		ldax	d
0A95          		jrz	dod	; if displaying memory
0A95  280E    		DB	28H,dod-$-1
			; displaying register name
0A97  C1      		pop	b
0A98  111120  		lxi	d,Dleds
0A9B  2E03    	mv3byt:	mvi	l,3
0A9D  0A      	mvb:	ldax	b
0A9E  12      		stax	d
0A9F  03      		inx	b
0AA0  13      		inx	d
0AA1  2D      		dcr	l
0AA2          		jrnz	mvb
0AA2  20F9    		DB	20H,mvb-$-1
0AA4  C9      		ret
		
		; B=dot flag
0AA5  4F      	dod:	mov	c,a	; value to display
0AA6  3A3920  		lda	Radix
0AA9  B7      		ora	a	; Z if octal (also CY=0)
0AAA  79      		mov	a,c
0AAB          		jrnz	dodhex
0AAB  2021    		DB	20H,dodhex-$-1
0AAD  D5      		push	d
0AAE  0E03    		mvi	c,3
0AB0  17      	dodr5:	ral
0AB1  17      		ral
0AB2  17      		ral
0AB3  F5      		push	psw
0AB4  E607    		ani	07h
0AB6  C6FA    		adi	LOW doddig
0AB8  5F      		mov	e,a
0AB9  3E0A    		mvi	a,HIGH doddig
0ABB  CE00    		aci	0
0ABD  57      		mov	d,a
0ABE  1A      		ldax	d
0ABF  A8      		xra	b	; DP on/off
0AC0  E67F    		and	01111111b	; why???
0AC2  A8      		xra	b
0AC3  77      		mov	m,a
0AC4  23      		inx	h
0AC5  78      		mov	a,b	; rlcr b
0AC6  07      		rlc
0AC7  47      		mov	b,a
0AC8  F1      		pop	psw
0AC9  0D      		dcr	c
0ACA          		jrnz	dodr5
0ACA  20E4    		DB	20H,dodr5-$-1
0ACC  D1      		pop	d
0ACD  C9      		ret
		
0ACE  D5      	dodhex:	push	d
0ACF  0E02    		mvi	c,2
0AD1  07      	deh55:	rlc
0AD2  07      		rlc
0AD3  07      		rlc
0AD4  07      		rlc
0AD5  F5      		push	psw
0AD6  E60F    		ani	0fh
0AD8  C6FA    		adi	LOW doddig
0ADA  5F      		mov	e,a
0ADB  3E0A    		mvi	a,HIGH doddig
0ADD  CE00    		aci	0
0ADF  57      		mov	d,a
0AE0  1A      		ldax	d
0AE1  A8      		xra	b		; DP on/off
0AE2  E67F    		ani	01111111b	; why???
0AE4  A8      		xra	b		; ???
0AE5  77      		mov	m,a
0AE6  23      		inx	h
0AE7          		rlcr	b
0AE7  CB00    		DB	0CBH, 00H + b
0AE9  F1      		pop	psw
0AEA  0D      		dcr	c
0AEB          		jrnz	deh55
0AEB  20E4    		DB	20H,deh55-$-1
0AED  D1      		pop	d
0AEE  3E6F    		mvi	a,01101111b	; "_"
0AF0  A8      		xra	b		; DP on/off
0AF1  E67F    		ani	01111111b	; why???
0AF3  A8      		xra	b		; ???
0AF4  77      		mov	m,a
0AF5  23      		inx	h
0AF6  78      		mov	a,b	; rlcr b
0AF7  07      		rlc
0AF8  47      		mov	b,a
0AF9  C9      		ret
		
		; octal (base 8) 7-seg translation
0AFA  01      	doddig:	db	00000001b	; "0."
0AFB  73      		db	01110011b	; "1."
0AFC  48      		db	01001000b	; "2."
0AFD  60      		db	01100000b	; "3."
0AFE  32      		db	00110010b	; "4."
0AFF  24      		db	00100100b	; "5."
0B00  04      		db	00000100b	; "6."
0B01  71      		db	01110001b	; "7."
0B02  00      		db	00000000b	; "8."
0B03  20      		db	00100000b	; "9."
0B04  10      		db	00010000b	; "A."
0B05  06      		db	00000110b	; "b."
0B06  0D      		db	00001101b	; "C."
0B07  42      		db	01000010b	; "d."
0B08  0C      		db	00001100b	; "E."
0B09  1C      		db	00011100b	; "F."
		
0B0A  FFA498  	dSP:	db	11111111b,10100100b,10011000b	; " SP"
0B0D  FF909C  	dPSW:	db	11111111b,10010000b,10011100b	; " AF"
0B10  FF868D  	dBC:	db	11111111b,10000110b,10001101b	; " BC"
0B13  FFC28C  	dDE:	db	11111111b,11000010b,10001100b	; " DE"
0B16  FF928F  	dHL:	db	11111111b,10010010b,10001111b	; " HL"
0B19  FFF3B6  	dIX:	db	11111111b,11110011b,10110110b	; " IX"
0B1C  FFF3DE  	dIY:	db	11111111b,11110011b,11011110b	; " IY"
0B1F  FFF3D3  	dIR:	db	11111111b,11110011b,11010011b	; " IR"
0B22  909CBF  	dPSWp:	db	10010000b,10011100b,10111111b	; "AF'"
0B25  868DBF  	dBCp:	db	10000110b,10001101b,10111111b	; "BC'"
0B28  C28CBF  	dDEp:	db	11000010b,10001100b,10111111b	; "DE'"
0B2B  928FBF  	dHLp:	db	10010010b,10001111b,10111111b	; "HL'"
0B2E  FF98CE  	dPC:	db	11111111b,10011000b,11001110b	; " PC"
		
0B31  C28C83  	dDev:	db	11000010b,10001100b,10000011b	; "dEU" (dev)
0B34  98C6DE  	dPor:	db	10011000b,11000110b,11011110b	; "Por"
0B37  83D6F7  	dUni:	db	10000011b,11010110b,11110111b	; "Uni"
0B3A  8CDEDE  	dErr:	db	10001100b,11011110b,11011110b	; "Error "
0B3D  C6DEFF  		db	11000110b,11011110b,11111111b
0B40  DE90C2  	dRad:	db	11011110b,10010000b,11000010b	; "rAd"
0B43  98DEDF  	dPri:	db	10011000b,11011110b,11011111b	; "Pri"
0B46  A48C8D  	dSec:	db	10100100b,10001100b,10001101b	; "SEC"
		
0B49          	LedRegTbl:
0B49  0A0B    		dw	dSP	; 0
0B4B  0D0B    		dw	dPSW	; 1
0B4D  100B    		dw	dBC	; 2
0B4F  130B    		dw	dDE	; 3
0B51  160B    		dw	dHL	; 4
0B53  190B    		dw	dIX	; 5	- TODO
0B55  1C0B    		dw	dIY	; 6	- TODO
0B57  1F0B    		dw	dIR	; 7	- TODO
0B59  220B    		dw	dPSWp	; 8	- TODO
0B5B  250B    		dw	dBCp	; 9	- TODO
0B5D  280B    		dw	dDEp	; 10	- TODO
0B5F  2B0B    		dw	dHLp	; 11	- TODO
0B61  2E0B    		dw	dPC	; 12	- 5
001A          	nReg	equ	$-LedRegTbl	; 2x num registers...
		
0B63  3A0520  	lra:	lda	RegI
0B66  5F      	lrax:	mov	e,a
0B67  1600    		mvi	d,0
0B69  2A1D20  		lhld	RegPtr
0B6C  19      		dad	d
0B6D  C9      		ret
		
0B6E          	mov3dsp:
0B6E  2E03    		mvi	l,3
0B70          	movLdsp:
0B70  0A      	md0:	ldax	b
0B71  12      		stax	d
0B72  03      		inx	b
0B73  13      		inx	d
0B74  2D      		dcr	l
0B75          		jrnz	md0
0B75  20F9    		DB	20H,md0-$-1
0B77  C9      		ret
		
0B78          	clrdisp:
0B78  210B20  		lxi	h,fpLeds
0B7B  5D      		mov	e,l
0B7C  54      		mov	d,h
0B7D  010800  		lxi	b,9-1
0B80  36FF    		mvi	m,11111111b
0B82  13      		inx	d
0B83          		ldir
0B83  EDB0    		DB	0EDH,0B0H
0B85  C9      		ret
		
		; Front panel display refresh and keypad check
0B86          	int1$fp:
0B86  0E00    		mvi	c,0
0B88  213C20  		lxi	h,horn
0B8B  7E      		mov	a,m
0B8C  B7      		ora	a
0B8D          		jrz	fp1
0B8D  2805    		DB	28H,fp1-$-1
0B8F  35      		dcr	m
0B90          		jrnz	fp1
0B90  2002    		DB	20H,fp1-$-1
0B92  0E80    		mvi	c,10000000b	; beep off
0B94          	fp1:
0B94  210820  		lxi	h,MFlag
0B97  46      		mov	b,m
0B98  23      		inx	h	; ctl$F0
0B99  7E      		mov	a,m
0B9A  B1      		ora	c	; beep off bit
0B9B  77      		mov	m,a
0B9C          		bit	6,b	; refresh display?
0B9C  CB70    		DB	0CBH,6*8+b+40H
0B9E          		jrnz	fp3
0B9E  200B    		DB	20H,fp3-$-1
0BA0  23      		inx	h	; Refind
0BA1  35      		dcr	m
0BA2          		jrnz	fp2
0BA2  2002    		DB	20H,fp2-$-1
0BA4  3609    		mvi	m,9
0BA6  5E      	fp2:	mov	e,m	; 1-9
0BA7  1600    		mvi	d,0
0BA9  19      		dad	d	; HL = &fpLeds[E-1]
0BAA  B3      		ora	e	; merge digit select
0BAB          	fp3:
0BAB  D3F0    		out	0f0h
0BAD  7E      		mov	a,m	; FP segments (fpLeds[E-1])
0BAE  D3F1    		out	0f1h
			; See if time to update display values or check keypad
0BB0  2E1B    		mvi	l,LOW ticcnt
0BB2  7E      		mov	a,m
0BB3  F5      		push	psw
0BB4  E61F    		ani	31	; 64mS
0BB6  CC610A  		cz	ufd	; B=MFlag
0BB9  F1      		pop	psw
0BBA  E60F    		ani	15	; 32mS
0BBC  CC400A  		cz	kpchk
		endif
0BBF          	int1$xx:
			; not really FP related, but no space in low ROM...
0BBF  3A0820  		lda	MFlag
0BC2  0F      		rrc		; private int1?
0BC3  DC1F20  		cc	vrst1
0BC6  C34D00  		jmp	intret
		
		; match module by character (letter)
		; C=letter, B=00:cmd,ff:boot
0BC9          	bfchr:	ldx	a,+2	; phy drv or type
0BC9  DD7E02  		DB	0DDH,a*8+46H,+2
0BCC  D6C8    		sui	200	; boot modules < 200
0BCE  9F      		sbb	a	; ff=boot, 00=cmd
0BCF  B8      		cmp	b	; ZR=match
0BD0          		jrnz	bfn0
0BD0  2023    		DB	20H,bfn0-$-1
0BD2          		ldx	a,mdchr
0BD2  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0BD5  B9      		cmp	c
0BD6  C9      		ret
		
		; match module by FP key
		; C=FP key, B=00:cmd,ff:boot
0BD7          	bfkey:	ldx	a,+2	; phy drv or type
0BD7  DD7E02  		DB	0DDH,a*8+46H,+2
0BDA  D6C8    		sui	200	; boot modules < 200
0BDC  9F      		sbb	a	; ff=boot, 00=cmd
0BDD  B8      		cmp	b	; ZR=match
0BDE          		jrnz	bfn0
0BDE  2015    		DB	20H,bfn0-$-1
0BE0          		ldx	a,mdkey
0BE0  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0BE3  B9      		cmp	c
0BE4  C9      		ret
		
		; match boot module by phy drv number
		; C=phy drv (base), B=type
		; Only for boot modules
0BE5          	bfnum:	ldx	a,mdbase	; phy drv or type
0BE5  DD7E02  		DB	0DDH,a*8+46H,mdbase
0BE8  FEC8    		cpi	200	; boot modules < 200
0BEA          		jrnc	bfn0	; skip if >= 200
0BEA  3009    		DB	30H,bfn0-$-1
0BEC  79      		mov	a,c
0BED          		subx	mdbase
0BED  DD9602  		DB	0DDH,96H,mdbase
0BF0  B7      		ora	a
0BF1          		jrnz	bfn0
0BF1  2002    		DB	20H,bfn0-$-1
0BF3  AF      		xra	a
0BF4  C9      		ret
0BF5  AF      	bfn0:	xra	a
0BF6  3C      		inr	a
0BF7  C9      		ret
		
		; List only boot modules
		; On first module, C=0
0BF8          	bflst:	ldx	a,mdbase	; phy drv or type
0BF8  DD7E02  		DB	0DDH,a*8+46H,mdbase
0BFB  FEC8    		cpi	200	; boot modules < 200
0BFD          		jrnc	bfn0
0BFD  30F6    		DB	30H,bfn0-$-1
0BFF  79      		mov	a,c
0C00  B7      		ora	a
0C01  3E2C    		mvi	a,','
0C03  C4D803  		cnz	conout
0C06  0C      		inr	c
0C07  78      		mov	a,b
0C08          		subx	mdbase
0C08  DD9602  		DB	0DDH,96H,mdbase
0C0B  B7      		ora	a
0C0C  3E2A    		mvi	a,'*'
0C0E  CCD803  		cz	conout
0C11          		pushix
0C11  DDE5    		DB	0DDH,0E5H
0C13  E1      		pop	h
0C14  111000  		lxi	d,mdname
0C17  19      		dad	d
0C18  CDD809  		call	msgout
0C1B  21F80B  		lxi	h,bflst
0C1E          		jr	bfn0	; NZ - keep going
0C1E  18D5    		DB	18H,bfn0-$-1
		
		; List only boot modules
0C20          	bfllst:	ldx	a,mdbase	; phy drv or type
0C20  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C23  FEC8    		cpi	200	; boot modules < 200
0C25          		jrnc	bfn0
0C25  30CE    		DB	30H,bfn0-$-1
0C27  78      		mov	a,b
0C28          		subx	mdbase
0C28  DD9602  		DB	0DDH,96H,mdbase
0C2B  B7      		ora	a
0C2C  3E20    		mvi	a,' '
0C2E          		jrnz	bfll2
0C2E  2002    		DB	20H,bfll2-$-1
0C30  3E2A    		mvi	a,'*'
0C32  CDD803  	bfll2:	call	conout
0C35          		pushix
0C35  DDE5    		DB	0DDH,0E5H
0C37  E1      		pop	h
0C38  111000  		lxi	d,mdname
0C3B  19      		dad	d
0C3C  CDD809  		call	msgout
0C3F  3E09    		mvi	a,TAB
0C41  CDD803  		call	conout
0C44          		ldx	a,mdchr
0C44  DD7E0A  		DB	0DDH,a*8+46H,mdchr
0C47  CDD803  		call	conout
0C4A  3E20    		mvi	a,' '
0C4C  CDD803  		call	conout
0C4F          		ldx	a,mdkey
0C4F  DD7E0B  		DB	0DDH,a*8+46H,mdkey
0C52  C630    		adi	'0'
0C54          		jrnc	bfll0
0C54  3002    		DB	30H,bfll0-$-1
0C56  3E2D    		mvi	a,'-'
0C58  CDD803  	bfll0:	call	conout
0C5B  3E20    		mvi	a,' '
0C5D  CDD803  		call	conout
0C60          		ldx	a,mdbase
0C60  DD7E02  		DB	0DDH,a*8+46H,mdbase
0C63  CDD40C  		call	decout
0C66  CDCE09  		call	crlf
0C69  21200C  		lxi	h,bfllst
0C6C  AF      		xra	a	; NZ - keep going
0C6D  3C      		inr	a	;
0C6E  C9      		ret
		
		; Find boot module and load into 1000h if necessary.
		; HL=match function: returns Z if found, BC=target, IX=module
		; Return CY at end of modules (not found)
		; Return IX=loaded module (run location)
		; Must preserve BC during search loop.
0C6F          	bfind:
			; can't check if it's loaded until we know where it's loaded...
			; first, check if already loaded
			;lxix	btovl
			;call	icall
			;rz
0C6F          	bfind0:
0000          	if z180
		else
			; must map ROM back in, so prevent interruptions...
			; also, we loose memory at SP...
0C6F  F3      		di
0C70          		lxiy	0
0C70  FD21    		DB	0FDH,21H
0C72  0000    		DW	0
0C74          		dady	sp
0C74  FD39    		DB	0FDH,sp*8+09H
0C76  3100E0  		lxi	sp,0e000h	; a safe SP?
0C79  3A3620  		lda	ctl$F2
0C7C  F5      		push	psw
0C7D  E6DF    		ani	not ctl$ORG0	; ORG0 off
0C7F  F608    		ori	ctl$MEM1	; MEM1 on
0C81  D3F2    		out	0f2h
		endif
0C83          		lxix	btmods	; start of modules...
0C83  DD21    		DB	0DDH,21H
0C85  0020    		DW	btmods
0C87  CD4201  	bf0:	call	icall
0C8A          		jrz	bf9
0C8A  2820    		DB	28H,bf9-$-1
0C8C          		ldx	d,mdpgs
0C8C  DD5600  		DB	0DDH,d*8+46H,mdpgs
0C8F  1E00    		mvi	e,0
0C91          		dadx	d
0C91  DD19    		DB	0DDH,d*8+09H
0C93          		pushix
0C93  DDE5    		DB	0DDH,0E5H
0C95  F1      		pop	psw	; A=IXh
0C96  FE80    		cpi	HIGH bterom	; end of ROM
0C98          		jrnc	bf1
0C98  300A    		DB	30H,bf1-$-1
0C9A          		ldx	a,mdpgs
0C9A  DD7E00  		DB	0DDH,a*8+46H,mdpgs
0C9D  B7      		ora	a
0C9E          		jrz	bf1
0C9E  2804    		DB	28H,bf1-$-1
0CA0  FEFF    		cpi	0ffh
0CA2          		jrnz	bf0
0CA2  20E3    		DB	20H,bf0-$-1
0CA4          	bf1:
0000          	if z180
		else
0CA4  F1      		pop	psw
0CA5  D3F2    		out	0f2h
0CA7          		spiy
0CA7  FDF9    		DB	0FDH,0F9H
0CA9  FB      		ei
		endif
0CAA  37      		stc	; CY = end of list (not found)
0CAB  C9      		ret
		
0CAC          	bf9:	; match found, now load into place and init
0CAC          		ldx	b,mdpgs
0CAC  DD4600  		DB	0DDH,b*8+46H,mdpgs
0CAF          		ldx	d,mdorg
0CAF  DD5601  		DB	0DDH,d*8+46H,mdorg
0CB2          		pushix		;
0CB2  DDE5    		DB	0DDH,0E5H
0CB4  E1      		pop	h	; HL=IX (module in logical addr)
0CB5  1E00    		mvi	e,0
0CB7  0E00    		mvi	c,0
0CB9  D5      		push	d
0000          	if z180
		else
			; TODO: avoid redundant load... and init?
0CBA          		ldir
0CBA  EDB0    		DB	0EDH,0B0H
		endif
0CBC          		popix	; module load addr
0CBC  DDE1    		DB	0DDH,0E1H
			; now call init routine... but must restore RAM...
0000          	if z180
		else
0CBE  F1      		pop	psw
0CBF  D3F2    		out	0f2h
0CC1          		spiy
0CC1  FDF9    		DB	0FDH,0F9H
0CC3  FB      		ei
		endif
0CC4  CDC80C  		call	btinit	; CY indicates error, pass along...
0CC7  C9      		ret
		
		; IX=module in real memory
0CC8          	btinit:	pushix
0CC8  DDE5    		DB	0DDH,0E5H
0CCA  E1      		pop	h
0CCB  2E04    		mvi	l,mdinit
0CCD  E9      		pchl
		
		; IX=module in real memory
0CCE          	cmexec:
0CCE          	btboot:	pushix
0CCE  DDE5    		DB	0DDH,0E5H
0CD0  E1      		pop	h
0CD1  2E07    		mvi	l,mdboot
0CD3  E9      		pchl
		
		; assume < 100
0CD4          	decout:
0CD4  1630    		mvi	d,'0'
0CD6          	decot0:
0CD6  D60A    		sui	10
0CD8  DADF0C  		jc	decot1
0CDB  14      		inr	d
0CDC  C3D60C  		jmp	decot0
0CDF          	decot1:
0CDF  C60A    		adi	10
0CE1  C630    		adi	'0'
0CE3  F5      		push	psw
0CE4  7A      		mov	a,d
0CE5  CDD803  		call	conout
0CE8  F1      		pop	psw
0CE9  C3D803  		jmp	conout
		
		; Returns NZ if found, D=phy drv
0CEC          	gtdvtb:
0CEC  DBF2    		in	0f2h
0CEE  E670    		ani	01110000b	; default boot device
0CF0  07      		rlc
0CF1  07      		rlc
0CF2  07      		rlc
0CF3  07      		rlc
0CF4  21900D  		lxi	h,defbt
0CF7          	gtdvtb0:
0CF7  85      		add	l
0CF8  6F      		mov	l,a
0CF9  3E00    		mvi	a,0
0CFB  8C      		adc	h
0CFC  67      		mov	h,a
0CFD  56      		mov	d,m	; might be FF or FE
0CFE  C9      		ret
		
0CFF          	A$boot:
0CFF  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D02  7A      		mov	a,d
0D03  FEFF    		cpi	0ffh
0D05  CA1C02  		jz	s501er
0D08  FEFE    		cpi	0feh
0D0A          		jrnz	findit
0D0A  200D    		DB	20H,findit-$-1
0D0C  2104F8  		lxi	h,susave+dpdev
0D0F  7E      		mov	a,m
0D10  23      		inx	h
0D11  FEFF    		cpi	0ffh
0D13  CA1C02  		jz	s501er	; not setup
0D16  C3A802  		jmp	gotit1
0D19          	findit:
0D19  D5      		push	d
0D1A  C5      		push	b
0D1B  4A      		mov	c,d
0D1C  06FF    		mvi	b,-1	; boot modules only
0D1E  21E50B  		lxi	h,bfnum
0D21  CD6F0C  		call	bfind
0D24  C1      		pop	b
0D25  D1      		pop	d
0D26  DA1C02  		jc	s501er
0D29  CDC802  		call	vfport
0D2C  DA1C02  		jc	s501er
0D2F  C3BF02  		jmp	gotit
		
		; default boot selected from console
0D32          	dfboot:
0D32  CDF801  		call	gtdfbt	; DE=phy drv/unit
0D35  7A      		mov	a,d
0D36  FEFF    		cpi	0ffh
0D38  CABE01  		jz	error
0D3B  FEFE    		cpi	0feh
0D3D  C23A02  		jnz	gotnum
0D40  2104F8  		lxi	h,susave+dpdev
0D43  CD500D  		call	dfboot0
0D46  DABE01  		jc	error
0D49  B7      		ora	a
0D4A  C2BE01  		jnz	error
0D4D  C30B03  		jmp	goboot
		
0D50          	dfboot0:	; HL=setup data for pri or sec
0D50  7E      		mov	a,m
0D51  23      		inx	h
0D52  FEFF    		cpi	0ffh
0D54  C8      		rz		; A <> 0: not setup
0D55  E5      		push	h
0D56  4F      		mov	c,a
0D57  06FF    		mvi	b,-1	; boot modules only
0D59  21C90B  		lxi	h,bfchr
0D5C  CD6F0C  		call	bfind
0D5F  E1      		pop	h
0D60  D8      		rc		; CY: no module - error
0D61  CDC802  		call	vfport
0D64  D8      		rc		; CY: SW501 error
0D65          		ldx	d,mdbase
0D65  DD5602  		DB	0DDH,d*8+46H,mdbase
0D68  7E      		mov	a,m
0D69  23      		inx	h
0D6A  FEFF    		cpi	0ffh
0D6C          		jrnz	dfbt0
0D6C  2001    		DB	20H,dfbt0-$-1
0D6E  AF      		xra	a
0D6F          	dfbt0:	cmpx	mdluns
0D6F  DDBE03  		DB	0DDH,0BEH,mdluns
0D72  3F      		cmc
0D73  D8      		rc
0D74  5F      		mov	e,a	; DE=phy drv base,unit
0D75  7E      		mov	a,m
0D76  FEFF    		cpi	0ffh	; no string?
0D78          		jrz	dfbt2
0D78  2814    		DB	28H,dfbt2-$-1
0D7A  D5      		push	d
0D7B  118122  		lxi	d,bootbf+1	; len in +0...
0D7E  0E00    		mvi	c,0
0D80  7E      	dfbt1:	mov	a,m
0D81  12      		stax	d
0D82  23      		inx	h
0D83  13      		inx	d
0D84  0C      		inr	c
0D85  B7      		ora	a
0D86          		jrnz	dfbt1
0D86  20F8    		DB	20H,dfbt1-$-1
0D88  79      		mov	a,c
0D89  3D      		dcr	a
0D8A  328022  		sta	bootbf
0D8D  D1      		pop	d
0D8E  AF      	dfbt2:	xra	a	; A=0: ready to boot
0D8F  C9      		ret
		
0D90          	defbt:	; default boot table... port F2 bits 01110000b
0D90  21      		db	33	; -000---- MMS 5" floppy 0
0D91  1D      		db	29	; -001---- MMS 8" floppy 0
0D92  FF      		db	0ffh	; -010---- n/a  (port 7CH)
0D93  FF      		db	0ffh	; -011---- n/a  (port 78H)
0D94  29      		db	41	; -100---- VDIP1
0D95  46      		db	70	; -101---- GIDE disk part 0
0D96  3C      		db	60	; -110---- Network
0D97  FE      		db	0feh	; -111---- use setup primary
		
0000          	if z180
		endif
		
0000          	if z180
		else
0D98          	savram:	; interrupts are disabled
			; init mmu
0D98  3E00    		mvi	a,0	; page 0
0D9A  D300    		out	rd00k
0D9C  D304    		out	wr00k
0D9E  3C      		inr	a
0D9F  D301    		out	rd16k
0DA1  D305    		out	wr16k
0DA3  3C      		inr	a
0DA4  D302    		out	rd32k
0DA6  D306    		out	wr32k
0DA8  3C      		inr	a
0DA9  F680    		ori	ena
0DAB  D303    		out	rd48k
0DAD  D307    		out	wr48k
			; setup pages (RD)8000->00000, (WR)8000->30000
0DAF  3E80    		mvi	a,00h+ena
0DB1  D302    		out	rd32k
0DB3  3E8C    		mvi	a,0ch+ena
0DB5  D306    		out	wr32k
0DB7  210080  		lxi	h,08000h
0DBA  110080  		lxi	d,08000h
0DBD  010040  		lxi	b,16*1024
0DC0          		ldir
0DC0  EDB0    		DB	0EDH,0B0H
			; de-init mmu
0DC2  3E00    		mvi	a,0
0DC4  D300    		out	rd00k	; turn off MAP bit, back to normal
0DC6  C9      		ret
		endif
		
0DC7  3600    	linix:	mvi	m,0	; terminate buffer
0DC9  C9      		ret
		
		; input a line from console, allow backspace
		; HL=buffer (size 128)
		; returns B=num chars, 128 max (never is 0c3h)
0DCA          	linin:
0DCA  0600    		mvi	b,0	; count chars
0DCC  CDE109  	lini0	call	conin	; handles DEL (cancel)
0DCF  FE0D    		cpi	CR
0DD1          		jrz	linix
0DD1  28F4    		DB	28H,linix-$-1
0DD3  FE08    		cpi	BS
0DD5          		jrz	backup
0DD5  281C    		DB	28H,backup-$-1
0DD7  FE20    		cpi	' '
0DD9          		jrc	chrnak
0DD9  3811    		DB	38H,chrnak-$-1
0DDB  FE7F    		cpi	'~'+1
0DDD          		jrnc	chrnak
0DDD  300D    		DB	30H,chrnak-$-1
0DDF  77      	chrok:	mov	m,a
0DE0  23      		inx	h
0DE1  04      		inr	b
0DE2  FAEA0D  		jm	chrovf	; 128 chars max
0DE5  CDD803  		call	conout
0DE8          		jr	lini0
0DE8  18E2    		DB	18H,lini0-$-1
0DEA  2B      	chrovf:	dcx	h
0DEB  05      		dcr	b
0DEC  3E07    	chrnak:	mvi	a,BEL
0DEE  CDD803  		call	conout
0DF1          		jr	lini0
0DF1  18D9    		DB	18H,lini0-$-1
0DF3          	backup:
0DF3  78      		mov	a,b
0DF4  B7      		ora	a
0DF5          		jrz	lini0
0DF5  28D5    		DB	28H,lini0-$-1
0DF7  05      		dcr	b
0DF8  2B      		dcx	h
0DF9  3E08    		mvi	a,BS
0DFB  CDD803  		call	conout
0DFE  3E20    		mvi	a,' '
0E00  CDD803  		call	conout
0E03  3E08    		mvi	a,BS
0E05  CDD803  		call	conout
0E08          		jr	lini0
0E08  18C2    		DB	18H,lini0-$-1
		
		; Used during entry of LUN in boot command.
		; multiply E by 16, check for >= (IX+mdnum) (or overflow)
		; add in A (converted to binary).
		; IX=active boot module
		; Returns CY on overflow, else E updated to new LUN value
0E0A          	E$x16$A:
0E0A  43      		mov	b,e
0E0B          		ralr	b
0E0B  CB10    		DB	0CBH, 10H+b
0E0D  D8      		rc
0E0E          		ralr	b
0E0E  CB10    		DB	0CBH, 10H+b
0E10  D8      		rc
0E11          		ralr	b
0E11  CB10    		DB	0CBH, 10H+b
0E13  D8      		rc
0E14          		ralr	b
0E14  CB10    		DB	0CBH, 10H+b
0E16  D8      		rc
0E17  F5      		push	psw
0E18  D630    		sui	'0'
0E1A  FE0A    		cpi	9+1
0E1C          		jrc	ex16a0
0E1C  3802    		DB	38H,ex16a0-$-1
0E1E  D607    		sui	'A'-'0'-10
0E20  80      	ex16a0:	add	b	; never CY
0E21          		cmpx	mdluns	; might be 0ffh
0E21  DDBE03  		DB	0DDH,0BEH,mdluns
0E24          		jrc	ex16a1	; value OK
0E24  3803    		DB	38H,ex16a1-$-1
0E26  F1      		pop	psw
0E27  37      		stc
0E28  C9      		ret
0E29  5F      	ex16a1:	mov	e,a
0E2A  F1      		pop	psw
0E2B  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Dump command
0E2C          	cmddmp:
0E2C  21D506  		lxi	h,dmpms
0E2F  CDD809  		call	msgout
0E32  211420  		lxi	h,ABUSS
0E35  B7      		ora	a	; NC
0E36  160D    		mvi	d,CR
0E38  CDE303  		call	adrin
0E3B  EB      		xchg	; HL=adr
0E3C  0608    		mvi	b,8	; 8 lines (one half page, 128 bytes)
0E3E  C5      	dmp0:	push	b
0E3F  CD3604  		call	adrnl	; CR,LF,"AAAA " (HL=AAAA)
0E42  E5      		push	h
0E43  0610    		mvi	b,16
0E45  7E      	dmp1:	mov	a,m
0E46  CD4504  		call	hexout
0E49  CD4104  		call	spout
0E4C  23      		inx	h
0E4D          		djnz	dmp1
0E4D  10F6    		DB	10H,dmp1-$-1
0E4F  E1      		pop	h
0E50  0610    		mvi	b,16
0E52  7E      	dmp2:	mov	a,m
0E53  FE20    		cpi	' '
0E55          		jrc	dmp3
0E55  3804    		DB	38H,dmp3-$-1
0E57  FE7F    		cpi	'~'+1
0E59          		jrc	dmp4
0E59  3802    		DB	38H,dmp4-$-1
0E5B  3E2E    	dmp3:	mvi	a,'.'
0E5D  CDD803  	dmp4:	call	conout
0E60  23      		inx	h
0E61          		djnz	dmp2
0E61  10EF    		DB	10H,dmp2-$-1
0E63  C1      		pop	b
0E64          		djnz	dmp0
0E64  10D8    		DB	10H,dmp0-$-1
0E66  221420  		shld	ABUSS
0E69  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; List available boot modules
0E6A  217D0E  	cmdlb:	lxi	h,lbmsg
0E6D  CDD809  		call	msgout
0E70  CDF801  		call	gtdfbt
0E73  42      		mov	b,d
0E74  21F80B  		lxi	h,bflst
0E77  0E00    		mvi	c,0
0E79  CD6F0C  		call	bfind0
0E7C  C9      		ret
		
0E7D  69737420	lbmsg:	db	'ist boot modules',CR,LF,0
      626F6F74
      206D6F64
      756C6573
      0D0A00
0E90  656C7020	hbmsg:	db	'elp boot',CR,LF,0
      626F6F74
      0D0A00
0E9B  5072693A	hbmsg2:	db	'Pri: ',0
      2000
FFFF          	if not nofp
0EA1  5365633A	hbmsg3:	db	'Sec: ',0
      2000
		endif
		
		; Help boot command
0EA7  21900E  	cmdhb:	lxi	h,hbmsg
0EAA  CDD809  		call	msgout
0EAD  CDF801  		call	gtdfbt
0EB0  42      		mov	b,d
0EB1  21200C  		lxi	h,bfllst
0EB4  CD6F0C  		call	bfind0
			; Now display primary/secondary configs
0EB7  219B0E  		lxi	h,hbmsg2
0EBA  1104F8  		lxi	d,susave+dpdev
0EBD  DBF2    		in	0f2h
0EBF  E670    		ani	01110000b	; default boot device
0EC1  FE70    		cpi	01110000b	; use setup cfg?
0EC3  3E2A    		mvi	a,'*'
0EC5          		jrz	cmdhb6
0EC5  2802    		DB	28H,cmdhb6-$-1
0EC7  3E20    		mvi	a,' '
0EC9  CDD80E  	cmdhb6:	call	cmdhbx
FFFF          	if not nofp
0ECC  21A10E  		lxi	h,hbmsg3
0ECF  1186F8  		lxi	d,susave+dsdev
0ED2  3E20    		mvi	a,' '	; never the default
0ED4  CDD80E  		call	cmdhbx
		endif
0ED7  C9      		ret
		
0ED8  CDD803  	cmdhbx:	call	conout
0EDB  CDD809  		call	msgout
0EDE  1A      		ldax	d
0EDF  13      		inx	d
0EE0  FEFF    		cpi	0ffh
0EE2          		jrnz	cmdhb0
0EE2  2002    		DB	20H,cmdhb0-$-1
0EE4  3E2D    		mvi	a,'-'
0EE6  CDD803  	cmdhb0:	call	conout
0EE9  3E20    		mvi	a,' '
0EEB  CDD803  		call	conout
0EEE  1A      		ldax	d
0EEF  13      		inx	d
0EF0  C630    		adi	'0'	; FF=2F,CY
0EF2          		jrnc	cmdhb1
0EF2  3002    		DB	30H,cmdhb1-$-1
0EF4  3E2D    		mvi	a,'-'
0EF6  CDD803  	cmdhb1:	call	conout
0EF9  3E20    		mvi	a,' '
0EFB  CDD803  		call	conout
0EFE  1A      		ldax	d
0EFF  FEFF    		cpi	0ffh
0F01          		jrnz	cmdhb2
0F01  2007    		DB	20H,cmdhb2-$-1
0F03  3E2D    		mvi	a,'-'
0F05  CDD803  		call	conout
0F08          		jr	cmdhb3
0F08  1804    		DB	18H,cmdhb3-$-1
0F0A  EB      	cmdhb2:	xchg
0F0B  CDD809  		call	msgout
0F0E  CDCE09  	cmdhb3:	call	crlf
0F11  C9      		ret
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; eXtended command set
0F12          	cmdx:
0F12  CDE109  		call	conin	; get actual command character
0F15  F620    		ori	00100000b	; lower case
0F17  FE61    		cpi	'a'
0F19          		jrc	cmxerr
0F19  381D    		DB	38H,cmxerr-$-1
0F1B  FE7B    		cpi	'z'+1
0F1D          		jrnc	cmxerr
0F1D  3019    		DB	30H,cmxerr-$-1
0F1F  323B20  		sta	lstcmd
			; would like to re-use nocmd, but error path is wrong...
0F22  4F      		mov	c,a
0F23  0600    		mvi	b,0	; no boot modules
0F25  21C90B  		lxi	h,bfchr
0F28  CD6F0C  		call	bfind
0F2B          		jrc	cmxerr
0F2B  380B    		DB	38H,cmxerr-$-1
0F2D  3A3B20  		lda	lstcmd
0F30  E65F    		ani	01011111b	; upper case echo
0F32  CDD803  		call	conout
0F35  C3CE0C  		jmp	cmexec
		
0F38  CDD603  	cmxerr:	call	belout
0F3B          		jr	cmdx
0F3B  18D5    		DB	18H,cmdx-$-1
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Print ROM version command
0F3D          	prtver:
0F3D  214A0F  		lxi	h,versms
0F40  CDD809  		call	msgout
0F43  216B0F  		lxi	h,vernum
0F46  CDD809  		call	msgout
0F49  C9      		ret
		
0F4A  65727369	versms:	db	'ersion ',TRM
      6F6E2000
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		; code required to return to monitor from stand-alone programs.
0F52          	retmon:
0F52  F3      		di
0F53  AF      		xra	a	; reset state of ctl port
0F54  D3F2    		out	0f2h
FFFF          	if not nofp
0F56  3EDF    		mvi	a,0dfh	; reset state of FP port 0
0F58  D3F0    		out	0f0h
		endif
0F5A  C30000  		jmp	0
		
0F5D  0D0A4838	signon:	db	CR,LF,'H8'
0000          	if h8nofp
		endif
0000          	if h89
		endif
0F61  20      		db	' '
0000          	if z180
		endif
0F62  4D6F6E69		db	'Monitor v'
      746F7220
      76
0F6B  322E30  	vernum:	db	(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0'
0000          	if alpha
		endif
0010          	if beta
0F6E  28626574		db	'(beta'
      61
0001          	if beta > 9
0F73  31      		db	(beta/10)+'0'
		endif
0F74  3629    		db	(beta MOD 10)+'0',')'
		endif
0F76  0D0A00  		db	CR,LF,TRM
		
			rept	1000h-$-2
0F79  FF      		db	0ffh
0F7A  FF      		db	0ffh
0F7B  FF      		db	0ffh
0F7C  FF      		db	0ffh
0F7D  FF      		db	0ffh
0F7E  FF      		db	0ffh
0F7F  FF      		db	0ffh
0F80  FF      		db	0ffh
0F81  FF      		db	0ffh
0F82  FF      		db	0ffh
0F83  FF      		db	0ffh
0F84  FF      		db	0ffh
0F85  FF      		db	0ffh
0F86  FF      		db	0ffh
0F87  FF      		db	0ffh
0F88  FF      		db	0ffh
0F89  FF      		db	0ffh
0F8A  FF      		db	0ffh
0F8B  FF      		db	0ffh
0F8C  FF      		db	0ffh
0F8D  FF      		db	0ffh
0F8E  FF      		db	0ffh
0F8F  FF      		db	0ffh
0F90  FF      		db	0ffh
0F91  FF      		db	0ffh
0F92  FF      		db	0ffh
0F93  FF      		db	0ffh
0F94  FF      		db	0ffh
0F95  FF      		db	0ffh
0F96  FF      		db	0ffh
0F97  FF      		db	0ffh
0F98  FF      		db	0ffh
0F99  FF      		db	0ffh
0F9A  FF      		db	0ffh
0F9B  FF      		db	0ffh
0F9C  FF      		db	0ffh
0F9D  FF      		db	0ffh
0F9E  FF      		db	0ffh
0F9F  FF      		db	0ffh
0FA0  FF      		db	0ffh
0FA1  FF      		db	0ffh
0FA2  FF      		db	0ffh
0FA3  FF      		db	0ffh
0FA4  FF      		db	0ffh
0FA5  FF      		db	0ffh
0FA6  FF      		db	0ffh
0FA7  FF      		db	0ffh
0FA8  FF      		db	0ffh
0FA9  FF      		db	0ffh
0FAA  FF      		db	0ffh
0FAB  FF      		db	0ffh
0FAC  FF      		db	0ffh
0FAD  FF      		db	0ffh
0FAE  FF      		db	0ffh
0FAF  FF      		db	0ffh
0FB0  FF      		db	0ffh
0FB1  FF      		db	0ffh
0FB2  FF      		db	0ffh
0FB3  FF      		db	0ffh
0FB4  FF      		db	0ffh
0FB5  FF      		db	0ffh
0FB6  FF      		db	0ffh
0FB7  FF      		db	0ffh
0FB8  FF      		db	0ffh
0FB9  FF      		db	0ffh
0FBA  FF      		db	0ffh
0FBB  FF      		db	0ffh
0FBC  FF      		db	0ffh
0FBD  FF      		db	0ffh
0FBE  FF      		db	0ffh
0FBF  FF      		db	0ffh
0FC0  FF      		db	0ffh
0FC1  FF      		db	0ffh
0FC2  FF      		db	0ffh
0FC3  FF      		db	0ffh
0FC4  FF      		db	0ffh
0FC5  FF      		db	0ffh
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC  FF      		db	0ffh
0FFD  FF      		db	0ffh
0FFE  80FF    		dw	pcode	; product code for system
0000          	if	($ <> 1000h)
		endif
		
		; module overlay area starts here...
		; ensure this does not match any...
1000  FFFF    		dw	-1
1002  0000    		db	0,0
		
			rept	1800h-$
1004  FF      		db	0ffh
1005  FF      		db	0ffh
1006  FF      		db	0ffh
1007  FF      		db	0ffh
1008  FF      		db	0ffh
1009  FF      		db	0ffh
100A  FF      		db	0ffh
100B  FF      		db	0ffh
100C  FF      		db	0ffh
100D  FF      		db	0ffh
100E  FF      		db	0ffh
100F  FF      		db	0ffh
1010  FF      		db	0ffh
1011  FF      		db	0ffh
1012  FF      		db	0ffh
1013  FF      		db	0ffh
1014  FF      		db	0ffh
1015  FF      		db	0ffh
1016  FF      		db	0ffh
1017  FF      		db	0ffh
1018  FF      		db	0ffh
1019  FF      		db	0ffh
101A  FF      		db	0ffh
101B  FF      		db	0ffh
101C  FF      		db	0ffh
101D  FF      		db	0ffh
101E  FF      		db	0ffh
101F  FF      		db	0ffh
1020  FF      		db	0ffh
1021  FF      		db	0ffh
1022  FF      		db	0ffh
1023  FF      		db	0ffh
1024  FF      		db	0ffh
1025  FF      		db	0ffh
1026  FF      		db	0ffh
1027  FF      		db	0ffh
1028  FF      		db	0ffh
1029  FF      		db	0ffh
102A  FF      		db	0ffh
102B  FF      		db	0ffh
102C  FF      		db	0ffh
102D  FF      		db	0ffh
102E  FF      		db	0ffh
102F  FF      		db	0ffh
1030  FF      		db	0ffh
1031  FF      		db	0ffh
1032  FF      		db	0ffh
1033  FF      		db	0ffh
1034  FF      		db	0ffh
1035  FF      		db	0ffh
1036  FF      		db	0ffh
1037  FF      		db	0ffh
1038  FF      		db	0ffh
1039  FF      		db	0ffh
103A  FF      		db	0ffh
103B  FF      		db	0ffh
103C  FF      		db	0ffh
103D  FF      		db	0ffh
103E  FF      		db	0ffh
103F  FF      		db	0ffh
1040  FF      		db	0ffh
1041  FF      		db	0ffh
1042  FF      		db	0ffh
1043  FF      		db	0ffh
1044  FF      		db	0ffh
1045  FF      		db	0ffh
1046  FF      		db	0ffh
1047  FF      		db	0ffh
1048  FF      		db	0ffh
1049  FF      		db	0ffh
104A  FF      		db	0ffh
104B  FF      		db	0ffh
104C  FF      		db	0ffh
104D  FF      		db	0ffh
104E  FF      		db	0ffh
104F  FF      		db	0ffh
1050  FF      		db	0ffh
1051  FF      		db	0ffh
1052  FF      		db	0ffh
1053  FF      		db	0ffh
1054  FF      		db	0ffh
1055  FF      		db	0ffh
1056  FF      		db	0ffh
1057  FF      		db	0ffh
1058  FF      		db	0ffh
1059  FF      		db	0ffh
105A  FF      		db	0ffh
105B  FF      		db	0ffh
105C  FF      		db	0ffh
105D  FF      		db	0ffh
105E  FF      		db	0ffh
105F  FF      		db	0ffh
1060  FF      		db	0ffh
1061  FF      		db	0ffh
1062  FF      		db	0ffh
1063  FF      		db	0ffh
1064  FF      		db	0ffh
1065  FF      		db	0ffh
1066  FF      		db	0ffh
1067  FF      		db	0ffh
1068  FF      		db	0ffh
1069  FF      		db	0ffh
106A  FF      		db	0ffh
106B  FF      		db	0ffh
106C  FF      		db	0ffh
106D  FF      		db	0ffh
106E  FF      		db	0ffh
106F  FF      		db	0ffh
1070  FF      		db	0ffh
1071  FF      		db	0ffh
1072  FF      		db	0ffh
1073  FF      		db	0ffh
1074  FF      		db	0ffh
1075  FF      		db	0ffh
1076  FF      		db	0ffh
1077  FF      		db	0ffh
1078  FF      		db	0ffh
1079  FF      		db	0ffh
107A  FF      		db	0ffh
107B  FF      		db	0ffh
107C  FF      		db	0ffh
107D  FF      		db	0ffh
107E  FF      		db	0ffh
107F  FF      		db	0ffh
1080  FF      		db	0ffh
1081  FF      		db	0ffh
1082  FF      		db	0ffh
1083  FF      		db	0ffh
1084  FF      		db	0ffh
1085  FF      		db	0ffh
1086  FF      		db	0ffh
1087  FF      		db	0ffh
1088  FF      		db	0ffh
1089  FF      		db	0ffh
108A  FF      		db	0ffh
108B  FF      		db	0ffh
108C  FF      		db	0ffh
108D  FF      		db	0ffh
108E  FF      		db	0ffh
108F  FF      		db	0ffh
1090  FF      		db	0ffh
1091  FF      		db	0ffh
1092  FF      		db	0ffh
1093  FF      		db	0ffh
1094  FF      		db	0ffh
1095  FF      		db	0ffh
1096  FF      		db	0ffh
1097  FF      		db	0ffh
1098  FF      		db	0ffh
1099  FF      		db	0ffh
109A  FF      		db	0ffh
109B  FF      		db	0ffh
109C  FF      		db	0ffh
109D  FF      		db	0ffh
109E  FF      		db	0ffh
109F  FF      		db	0ffh
10A0  FF      		db	0ffh
10A1  FF      		db	0ffh
10A2  FF      		db	0ffh
10A3  FF      		db	0ffh
10A4  FF      		db	0ffh
10A5  FF      		db	0ffh
10A6  FF      		db	0ffh
10A7  FF      		db	0ffh
10A8  FF      		db	0ffh
10A9  FF      		db	0ffh
10AA  FF      		db	0ffh
10AB  FF      		db	0ffh
10AC  FF      		db	0ffh
10AD  FF      		db	0ffh
10AE  FF      		db	0ffh
10AF  FF      		db	0ffh
10B0  FF      		db	0ffh
10B1  FF      		db	0ffh
10B2  FF      		db	0ffh
10B3  FF      		db	0ffh
10B4  FF      		db	0ffh
10B5  FF      		db	0ffh
10B6  FF      		db	0ffh
10B7  FF      		db	0ffh
10B8  FF      		db	0ffh
10B9  FF      		db	0ffh
10BA  FF      		db	0ffh
10BB  FF      		db	0ffh
10BC  FF      		db	0ffh
10BD  FF      		db	0ffh
10BE  FF      		db	0ffh
10BF  FF      		db	0ffh
10C0  FF      		db	0ffh
10C1  FF      		db	0ffh
10C2  FF      		db	0ffh
10C3  FF      		db	0ffh
10C4  FF      		db	0ffh
10C5  FF      		db	0ffh
10C6  FF      		db	0ffh
10C7  FF      		db	0ffh
10C8  FF      		db	0ffh
10C9  FF      		db	0ffh
10CA  FF      		db	0ffh
10CB  FF      		db	0ffh
10CC  FF      		db	0ffh
10CD  FF      		db	0ffh
10CE  FF      		db	0ffh
10CF  FF      		db	0ffh
10D0  FF      		db	0ffh
10D1  FF      		db	0ffh
10D2  FF      		db	0ffh
10D3  FF      		db	0ffh
10D4  FF      		db	0ffh
10D5  FF      		db	0ffh
10D6  FF      		db	0ffh
10D7  FF      		db	0ffh
10D8  FF      		db	0ffh
10D9  FF      		db	0ffh
10DA  FF      		db	0ffh
10DB  FF      		db	0ffh
10DC  FF      		db	0ffh
10DD  FF      		db	0ffh
10DE  FF      		db	0ffh
10DF  FF      		db	0ffh
10E0  FF      		db	0ffh
10E1  FF      		db	0ffh
10E2  FF      		db	0ffh
10E3  FF      		db	0ffh
10E4  FF      		db	0ffh
10E5  FF      		db	0ffh
10E6  FF      		db	0ffh
10E7  FF      		db	0ffh
10E8  FF      		db	0ffh
10E9  FF      		db	0ffh
10EA  FF      		db	0ffh
10EB  FF      		db	0ffh
10EC  FF      		db	0ffh
10ED  FF      		db	0ffh
10EE  FF      		db	0ffh
10EF  FF      		db	0ffh
10F0  FF      		db	0ffh
10F1  FF      		db	0ffh
10F2  FF      		db	0ffh
10F3  FF      		db	0ffh
10F4  FF      		db	0ffh
10F5  FF      		db	0ffh
10F6  FF      		db	0ffh
10F7  FF      		db	0ffh
10F8  FF      		db	0ffh
10F9  FF      		db	0ffh
10FA  FF      		db	0ffh
10FB  FF      		db	0ffh
10FC  FF      		db	0ffh
10FD  FF      		db	0ffh
10FE  FF      		db	0ffh
10FF  FF      		db	0ffh
1100  FF      		db	0ffh
1101  FF      		db	0ffh
1102  FF      		db	0ffh
1103  FF      		db	0ffh
1104  FF      		db	0ffh
1105  FF      		db	0ffh
1106  FF      		db	0ffh
1107  FF      		db	0ffh
1108  FF      		db	0ffh
1109  FF      		db	0ffh
110A  FF      		db	0ffh
110B  FF      		db	0ffh
110C  FF      		db	0ffh
110D  FF      		db	0ffh
110E  FF      		db	0ffh
110F  FF      		db	0ffh
1110  FF      		db	0ffh
1111  FF      		db	0ffh
1112  FF      		db	0ffh
1113  FF      		db	0ffh
1114  FF      		db	0ffh
1115  FF      		db	0ffh
1116  FF      		db	0ffh
1117  FF      		db	0ffh
1118  FF      		db	0ffh
1119  FF      		db	0ffh
111A  FF      		db	0ffh
111B  FF      		db	0ffh
111C  FF      		db	0ffh
111D  FF      		db	0ffh
111E  FF      		db	0ffh
111F  FF      		db	0ffh
1120  FF      		db	0ffh
1121  FF      		db	0ffh
1122  FF      		db	0ffh
1123  FF      		db	0ffh
1124  FF      		db	0ffh
1125  FF      		db	0ffh
1126  FF      		db	0ffh
1127  FF      		db	0ffh
1128  FF      		db	0ffh
1129  FF      		db	0ffh
112A  FF      		db	0ffh
112B  FF      		db	0ffh
112C  FF      		db	0ffh
112D  FF      		db	0ffh
112E  FF      		db	0ffh
112F  FF      		db	0ffh
1130  FF      		db	0ffh
1131  FF      		db	0ffh
1132  FF      		db	0ffh
1133  FF      		db	0ffh
1134  FF      		db	0ffh
1135  FF      		db	0ffh
1136  FF      		db	0ffh
1137  FF      		db	0ffh
1138  FF      		db	0ffh
1139  FF      		db	0ffh
113A  FF      		db	0ffh
113B  FF      		db	0ffh
113C  FF      		db	0ffh
113D  FF      		db	0ffh
113E  FF      		db	0ffh
113F  FF      		db	0ffh
1140  FF      		db	0ffh
1141  FF      		db	0ffh
1142  FF      		db	0ffh
1143  FF      		db	0ffh
1144  FF      		db	0ffh
1145  FF      		db	0ffh
1146  FF      		db	0ffh
1147  FF      		db	0ffh
1148  FF      		db	0ffh
1149  FF      		db	0ffh
114A  FF      		db	0ffh
114B  FF      		db	0ffh
114C  FF      		db	0ffh
114D  FF      		db	0ffh
114E  FF      		db	0ffh
114F  FF      		db	0ffh
1150  FF      		db	0ffh
1151  FF      		db	0ffh
1152  FF      		db	0ffh
1153  FF      		db	0ffh
1154  FF      		db	0ffh
1155  FF      		db	0ffh
1156  FF      		db	0ffh
1157  FF      		db	0ffh
1158  FF      		db	0ffh
1159  FF      		db	0ffh
115A  FF      		db	0ffh
115B  FF      		db	0ffh
115C  FF      		db	0ffh
115D  FF      		db	0ffh
115E  FF      		db	0ffh
115F  FF      		db	0ffh
1160  FF      		db	0ffh
1161  FF      		db	0ffh
1162  FF      		db	0ffh
1163  FF      		db	0ffh
1164  FF      		db	0ffh
1165  FF      		db	0ffh
1166  FF      		db	0ffh
1167  FF      		db	0ffh
1168  FF      		db	0ffh
1169  FF      		db	0ffh
116A  FF      		db	0ffh
116B  FF      		db	0ffh
116C  FF      		db	0ffh
116D  FF      		db	0ffh
116E  FF      		db	0ffh
116F  FF      		db	0ffh
1170  FF      		db	0ffh
1171  FF      		db	0ffh
1172  FF      		db	0ffh
1173  FF      		db	0ffh
1174  FF      		db	0ffh
1175  FF      		db	0ffh
1176  FF      		db	0ffh
1177  FF      		db	0ffh
1178  FF      		db	0ffh
1179  FF      		db	0ffh
117A  FF      		db	0ffh
117B  FF      		db	0ffh
117C  FF      		db	0ffh
117D  FF      		db	0ffh
117E  FF      		db	0ffh
117F  FF      		db	0ffh
1180  FF      		db	0ffh
1181  FF      		db	0ffh
1182  FF      		db	0ffh
1183  FF      		db	0ffh
1184  FF      		db	0ffh
1185  FF      		db	0ffh
1186  FF      		db	0ffh
1187  FF      		db	0ffh
1188  FF      		db	0ffh
1189  FF      		db	0ffh
118A  FF      		db	0ffh
118B  FF      		db	0ffh
118C  FF      		db	0ffh
118D  FF      		db	0ffh
118E  FF      		db	0ffh
118F  FF      		db	0ffh
1190  FF      		db	0ffh
1191  FF      		db	0ffh
1192  FF      		db	0ffh
1193  FF      		db	0ffh
1194  FF      		db	0ffh
1195  FF      		db	0ffh
1196  FF      		db	0ffh
1197  FF      		db	0ffh
1198  FF      		db	0ffh
1199  FF      		db	0ffh
119A  FF      		db	0ffh
119B  FF      		db	0ffh
119C  FF      		db	0ffh
119D  FF      		db	0ffh
119E  FF      		db	0ffh
119F  FF      		db	0ffh
11A0  FF      		db	0ffh
11A1  FF      		db	0ffh
11A2  FF      		db	0ffh
11A3  FF      		db	0ffh
11A4  FF      		db	0ffh
11A5  FF      		db	0ffh
11A6  FF      		db	0ffh
11A7  FF      		db	0ffh
11A8  FF      		db	0ffh
11A9  FF      		db	0ffh
11AA  FF      		db	0ffh
11AB  FF      		db	0ffh
11AC  FF      		db	0ffh
11AD  FF      		db	0ffh
11AE  FF      		db	0ffh
11AF  FF      		db	0ffh
11B0  FF      		db	0ffh
11B1  FF      		db	0ffh
11B2  FF      		db	0ffh
11B3  FF      		db	0ffh
11B4  FF      		db	0ffh
11B5  FF      		db	0ffh
11B6  FF      		db	0ffh
11B7  FF      		db	0ffh
11B8  FF      		db	0ffh
11B9  FF      		db	0ffh
11BA  FF      		db	0ffh
11BB  FF      		db	0ffh
11BC  FF      		db	0ffh
11BD  FF      		db	0ffh
11BE  FF      		db	0ffh
11BF  FF      		db	0ffh
11C0  FF      		db	0ffh
11C1  FF      		db	0ffh
11C2  FF      		db	0ffh
11C3  FF      		db	0ffh
11C4  FF      		db	0ffh
11C5  FF      		db	0ffh
11C6  FF      		db	0ffh
11C7  FF      		db	0ffh
11C8  FF      		db	0ffh
11C9  FF      		db	0ffh
11CA  FF      		db	0ffh
11CB  FF      		db	0ffh
11CC  FF      		db	0ffh
11CD  FF      		db	0ffh
11CE  FF      		db	0ffh
11CF  FF      		db	0ffh
11D0  FF      		db	0ffh
11D1  FF      		db	0ffh
11D2  FF      		db	0ffh
11D3  FF      		db	0ffh
11D4  FF      		db	0ffh
11D5  FF      		db	0ffh
11D6  FF      		db	0ffh
11D7  FF      		db	0ffh
11D8  FF      		db	0ffh
11D9  FF      		db	0ffh
11DA  FF      		db	0ffh
11DB  FF      		db	0ffh
11DC  FF      		db	0ffh
11DD  FF      		db	0ffh
11DE  FF      		db	0ffh
11DF  FF      		db	0ffh
11E0  FF      		db	0ffh
11E1  FF      		db	0ffh
11E2  FF      		db	0ffh
11E3  FF      		db	0ffh
11E4  FF      		db	0ffh
11E5  FF      		db	0ffh
11E6  FF      		db	0ffh
11E7  FF      		db	0ffh
11E8  FF      		db	0ffh
11E9  FF      		db	0ffh
11EA  FF      		db	0ffh
11EB  FF      		db	0ffh
11EC  FF      		db	0ffh
11ED  FF      		db	0ffh
11EE  FF      		db	0ffh
11EF  FF      		db	0ffh
11F0  FF      		db	0ffh
11F1  FF      		db	0ffh
11F2  FF      		db	0ffh
11F3  FF      		db	0ffh
11F4  FF      		db	0ffh
11F5  FF      		db	0ffh
11F6  FF      		db	0ffh
11F7  FF      		db	0ffh
11F8  FF      		db	0ffh
11F9  FF      		db	0ffh
11FA  FF      		db	0ffh
11FB  FF      		db	0ffh
11FC  FF      		db	0ffh
11FD  FF      		db	0ffh
11FE  FF      		db	0ffh
11FF  FF      		db	0ffh
1200  FF      		db	0ffh
1201  FF      		db	0ffh
1202  FF      		db	0ffh
1203  FF      		db	0ffh
1204  FF      		db	0ffh
1205  FF      		db	0ffh
1206  FF      		db	0ffh
1207  FF      		db	0ffh
1208  FF      		db	0ffh
1209  FF      		db	0ffh
120A  FF      		db	0ffh
120B  FF      		db	0ffh
120C  FF      		db	0ffh
120D  FF      		db	0ffh
120E  FF      		db	0ffh
120F  FF      		db	0ffh
1210  FF      		db	0ffh
1211  FF      		db	0ffh
1212  FF      		db	0ffh
1213  FF      		db	0ffh
1214  FF      		db	0ffh
1215  FF      		db	0ffh
1216  FF      		db	0ffh
1217  FF      		db	0ffh
1218  FF      		db	0ffh
1219  FF      		db	0ffh
121A  FF      		db	0ffh
121B  FF      		db	0ffh
121C  FF      		db	0ffh
121D  FF      		db	0ffh
121E  FF      		db	0ffh
121F  FF      		db	0ffh
1220  FF      		db	0ffh
1221  FF      		db	0ffh
1222  FF      		db	0ffh
1223  FF      		db	0ffh
1224  FF      		db	0ffh
1225  FF      		db	0ffh
1226  FF      		db	0ffh
1227  FF      		db	0ffh
1228  FF      		db	0ffh
1229  FF      		db	0ffh
122A  FF      		db	0ffh
122B  FF      		db	0ffh
122C  FF      		db	0ffh
122D  FF      		db	0ffh
122E  FF      		db	0ffh
122F  FF      		db	0ffh
1230  FF      		db	0ffh
1231  FF      		db	0ffh
1232  FF      		db	0ffh
1233  FF      		db	0ffh
1234  FF      		db	0ffh
1235  FF      		db	0ffh
1236  FF      		db	0ffh
1237  FF      		db	0ffh
1238  FF      		db	0ffh
1239  FF      		db	0ffh
123A  FF      		db	0ffh
123B  FF      		db	0ffh
123C  FF      		db	0ffh
123D  FF      		db	0ffh
123E  FF      		db	0ffh
123F  FF      		db	0ffh
1240  FF      		db	0ffh
1241  FF      		db	0ffh
1242  FF      		db	0ffh
1243  FF      		db	0ffh
1244  FF      		db	0ffh
1245  FF      		db	0ffh
1246  FF      		db	0ffh
1247  FF      		db	0ffh
1248  FF      		db	0ffh
1249  FF      		db	0ffh
124A  FF      		db	0ffh
124B  FF      		db	0ffh
124C  FF      		db	0ffh
124D  FF      		db	0ffh
124E  FF      		db	0ffh
124F  FF      		db	0ffh
1250  FF      		db	0ffh
1251  FF      		db	0ffh
1252  FF      		db	0ffh
1253  FF      		db	0ffh
1254  FF      		db	0ffh
1255  FF      		db	0ffh
1256  FF      		db	0ffh
1257  FF      		db	0ffh
1258  FF      		db	0ffh
1259  FF      		db	0ffh
125A  FF      		db	0ffh
125B  FF      		db	0ffh
125C  FF      		db	0ffh
125D  FF      		db	0ffh
125E  FF      		db	0ffh
125F  FF      		db	0ffh
1260  FF      		db	0ffh
1261  FF      		db	0ffh
1262  FF      		db	0ffh
1263  FF      		db	0ffh
1264  FF      		db	0ffh
1265  FF      		db	0ffh
1266  FF      		db	0ffh
1267  FF      		db	0ffh
1268  FF      		db	0ffh
1269  FF      		db	0ffh
126A  FF      		db	0ffh
126B  FF      		db	0ffh
126C  FF      		db	0ffh
126D  FF      		db	0ffh
126E  FF      		db	0ffh
126F  FF      		db	0ffh
1270  FF      		db	0ffh
1271  FF      		db	0ffh
1272  FF      		db	0ffh
1273  FF      		db	0ffh
1274  FF      		db	0ffh
1275  FF      		db	0ffh
1276  FF      		db	0ffh
1277  FF      		db	0ffh
1278  FF      		db	0ffh
1279  FF      		db	0ffh
127A  FF      		db	0ffh
127B  FF      		db	0ffh
127C  FF      		db	0ffh
127D  FF      		db	0ffh
127E  FF      		db	0ffh
127F  FF      		db	0ffh
1280  FF      		db	0ffh
1281  FF      		db	0ffh
1282  FF      		db	0ffh
1283  FF      		db	0ffh
1284  FF      		db	0ffh
1285  FF      		db	0ffh
1286  FF      		db	0ffh
1287  FF      		db	0ffh
1288  FF      		db	0ffh
1289  FF      		db	0ffh
128A  FF      		db	0ffh
128B  FF      		db	0ffh
128C  FF      		db	0ffh
128D  FF      		db	0ffh
128E  FF      		db	0ffh
128F  FF      		db	0ffh
1290  FF      		db	0ffh
1291  FF      		db	0ffh
1292  FF      		db	0ffh
1293  FF      		db	0ffh
1294  FF      		db	0ffh
1295  FF      		db	0ffh
1296  FF      		db	0ffh
1297  FF      		db	0ffh
1298  FF      		db	0ffh
1299  FF      		db	0ffh
129A  FF      		db	0ffh
129B  FF      		db	0ffh
129C  FF      		db	0ffh
129D  FF      		db	0ffh
129E  FF      		db	0ffh
129F  FF      		db	0ffh
12A0  FF      		db	0ffh
12A1  FF      		db	0ffh
12A2  FF      		db	0ffh
12A3  FF      		db	0ffh
12A4  FF      		db	0ffh
12A5  FF      		db	0ffh
12A6  FF      		db	0ffh
12A7  FF      		db	0ffh
12A8  FF      		db	0ffh
12A9  FF      		db	0ffh
12AA  FF      		db	0ffh
12AB  FF      		db	0ffh
12AC  FF      		db	0ffh
12AD  FF      		db	0ffh
12AE  FF      		db	0ffh
12AF  FF      		db	0ffh
12B0  FF      		db	0ffh
12B1  FF      		db	0ffh
12B2  FF      		db	0ffh
12B3  FF      		db	0ffh
12B4  FF      		db	0ffh
12B5  FF      		db	0ffh
12B6  FF      		db	0ffh
12B7  FF      		db	0ffh
12B8  FF      		db	0ffh
12B9  FF      		db	0ffh
12BA  FF      		db	0ffh
12BB  FF      		db	0ffh
12BC  FF      		db	0ffh
12BD  FF      		db	0ffh
12BE  FF      		db	0ffh
12BF  FF      		db	0ffh
12C0  FF      		db	0ffh
12C1  FF      		db	0ffh
12C2  FF      		db	0ffh
12C3  FF      		db	0ffh
12C4  FF      		db	0ffh
12C5  FF      		db	0ffh
12C6  FF      		db	0ffh
12C7  FF      		db	0ffh
12C8  FF      		db	0ffh
12C9  FF      		db	0ffh
12CA  FF      		db	0ffh
12CB  FF      		db	0ffh
12CC  FF      		db	0ffh
12CD  FF      		db	0ffh
12CE  FF      		db	0ffh
12CF  FF      		db	0ffh
12D0  FF      		db	0ffh
12D1  FF      		db	0ffh
12D2  FF      		db	0ffh
12D3  FF      		db	0ffh
12D4  FF      		db	0ffh
12D5  FF      		db	0ffh
12D6  FF      		db	0ffh
12D7  FF      		db	0ffh
12D8  FF      		db	0ffh
12D9  FF      		db	0ffh
12DA  FF      		db	0ffh
12DB  FF      		db	0ffh
12DC  FF      		db	0ffh
12DD  FF      		db	0ffh
12DE  FF      		db	0ffh
12DF  FF      		db	0ffh
12E0  FF      		db	0ffh
12E1  FF      		db	0ffh
12E2  FF      		db	0ffh
12E3  FF      		db	0ffh
12E4  FF      		db	0ffh
12E5  FF      		db	0ffh
12E6  FF      		db	0ffh
12E7  FF      		db	0ffh
12E8  FF      		db	0ffh
12E9  FF      		db	0ffh
12EA  FF      		db	0ffh
12EB  FF      		db	0ffh
12EC  FF      		db	0ffh
12ED  FF      		db	0ffh
12EE  FF      		db	0ffh
12EF  FF      		db	0ffh
12F0  FF      		db	0ffh
12F1  FF      		db	0ffh
12F2  FF      		db	0ffh
12F3  FF      		db	0ffh
12F4  FF      		db	0ffh
12F5  FF      		db	0ffh
12F6  FF      		db	0ffh
12F7  FF      		db	0ffh
12F8  FF      		db	0ffh
12F9  FF      		db	0ffh
12FA  FF      		db	0ffh
12FB  FF      		db	0ffh
12FC  FF      		db	0ffh
12FD  FF      		db	0ffh
12FE  FF      		db	0ffh
12FF  FF      		db	0ffh
1300  FF      		db	0ffh
1301  FF      		db	0ffh
1302  FF      		db	0ffh
1303  FF      		db	0ffh
1304  FF      		db	0ffh
1305  FF      		db	0ffh
1306  FF      		db	0ffh
1307  FF      		db	0ffh
1308  FF      		db	0ffh
1309  FF      		db	0ffh
130A  FF      		db	0ffh
130B  FF      		db	0ffh
130C  FF      		db	0ffh
130D  FF      		db	0ffh
130E  FF      		db	0ffh
130F  FF      		db	0ffh
1310  FF      		db	0ffh
1311  FF      		db	0ffh
1312  FF      		db	0ffh
1313  FF      		db	0ffh
1314  FF      		db	0ffh
1315  FF      		db	0ffh
1316  FF      		db	0ffh
1317  FF      		db	0ffh
1318  FF      		db	0ffh
1319  FF      		db	0ffh
131A  FF      		db	0ffh
131B  FF      		db	0ffh
131C  FF      		db	0ffh
131D  FF      		db	0ffh
131E  FF      		db	0ffh
131F  FF      		db	0ffh
1320  FF      		db	0ffh
1321  FF      		db	0ffh
1322  FF      		db	0ffh
1323  FF      		db	0ffh
1324  FF      		db	0ffh
1325  FF      		db	0ffh
1326  FF      		db	0ffh
1327  FF      		db	0ffh
1328  FF      		db	0ffh
1329  FF      		db	0ffh
132A  FF      		db	0ffh
132B  FF      		db	0ffh
132C  FF      		db	0ffh
132D  FF      		db	0ffh
132E  FF      		db	0ffh
132F  FF      		db	0ffh
1330  FF      		db	0ffh
1331  FF      		db	0ffh
1332  FF      		db	0ffh
1333  FF      		db	0ffh
1334  FF      		db	0ffh
1335  FF      		db	0ffh
1336  FF      		db	0ffh
1337  FF      		db	0ffh
1338  FF      		db	0ffh
1339  FF      		db	0ffh
133A  FF      		db	0ffh
133B  FF      		db	0ffh
133C  FF      		db	0ffh
133D  FF      		db	0ffh
133E  FF      		db	0ffh
133F  FF      		db	0ffh
1340  FF      		db	0ffh
1341  FF      		db	0ffh
1342  FF      		db	0ffh
1343  FF      		db	0ffh
1344  FF      		db	0ffh
1345  FF      		db	0ffh
1346  FF      		db	0ffh
1347  FF      		db	0ffh
1348  FF      		db	0ffh
1349  FF      		db	0ffh
134A  FF      		db	0ffh
134B  FF      		db	0ffh
134C  FF      		db	0ffh
134D  FF      		db	0ffh
134E  FF      		db	0ffh
134F  FF      		db	0ffh
1350  FF      		db	0ffh
1351  FF      		db	0ffh
1352  FF      		db	0ffh
1353  FF      		db	0ffh
1354  FF      		db	0ffh
1355  FF      		db	0ffh
1356  FF      		db	0ffh
1357  FF      		db	0ffh
1358  FF      		db	0ffh
1359  FF      		db	0ffh
135A  FF      		db	0ffh
135B  FF      		db	0ffh
135C  FF      		db	0ffh
135D  FF      		db	0ffh
135E  FF      		db	0ffh
135F  FF      		db	0ffh
1360  FF      		db	0ffh
1361  FF      		db	0ffh
1362  FF      		db	0ffh
1363  FF      		db	0ffh
1364  FF      		db	0ffh
1365  FF      		db	0ffh
1366  FF      		db	0ffh
1367  FF      		db	0ffh
1368  FF      		db	0ffh
1369  FF      		db	0ffh
136A  FF      		db	0ffh
136B  FF      		db	0ffh
136C  FF      		db	0ffh
136D  FF      		db	0ffh
136E  FF      		db	0ffh
136F  FF      		db	0ffh
1370  FF      		db	0ffh
1371  FF      		db	0ffh
1372  FF      		db	0ffh
1373  FF      		db	0ffh
1374  FF      		db	0ffh
1375  FF      		db	0ffh
1376  FF      		db	0ffh
1377  FF      		db	0ffh
1378  FF      		db	0ffh
1379  FF      		db	0ffh
137A  FF      		db	0ffh
137B  FF      		db	0ffh
137C  FF      		db	0ffh
137D  FF      		db	0ffh
137E  FF      		db	0ffh
137F  FF      		db	0ffh
1380  FF      		db	0ffh
1381  FF      		db	0ffh
1382  FF      		db	0ffh
1383  FF      		db	0ffh
1384  FF      		db	0ffh
1385  FF      		db	0ffh
1386  FF      		db	0ffh
1387  FF      		db	0ffh
1388  FF      		db	0ffh
1389  FF      		db	0ffh
138A  FF      		db	0ffh
138B  FF      		db	0ffh
138C  FF      		db	0ffh
138D  FF      		db	0ffh
138E  FF      		db	0ffh
138F  FF      		db	0ffh
1390  FF      		db	0ffh
1391  FF      		db	0ffh
1392  FF      		db	0ffh
1393  FF      		db	0ffh
1394  FF      		db	0ffh
1395  FF      		db	0ffh
1396  FF      		db	0ffh
1397  FF      		db	0ffh
1398  FF      		db	0ffh
1399  FF      		db	0ffh
139A  FF      		db	0ffh
139B  FF      		db	0ffh
139C  FF      		db	0ffh
139D  FF      		db	0ffh
139E  FF      		db	0ffh
139F  FF      		db	0ffh
13A0  FF      		db	0ffh
13A1  FF      		db	0ffh
13A2  FF      		db	0ffh
13A3  FF      		db	0ffh
13A4  FF      		db	0ffh
13A5  FF      		db	0ffh
13A6  FF      		db	0ffh
13A7  FF      		db	0ffh
13A8  FF      		db	0ffh
13A9  FF      		db	0ffh
13AA  FF      		db	0ffh
13AB  FF      		db	0ffh
13AC  FF      		db	0ffh
13AD  FF      		db	0ffh
13AE  FF      		db	0ffh
13AF  FF      		db	0ffh
13B0  FF      		db	0ffh
13B1  FF      		db	0ffh
13B2  FF      		db	0ffh
13B3  FF      		db	0ffh
13B4  FF      		db	0ffh
13B5  FF      		db	0ffh
13B6  FF      		db	0ffh
13B7  FF      		db	0ffh
13B8  FF      		db	0ffh
13B9  FF      		db	0ffh
13BA  FF      		db	0ffh
13BB  FF      		db	0ffh
13BC  FF      		db	0ffh
13BD  FF      		db	0ffh
13BE  FF      		db	0ffh
13BF  FF      		db	0ffh
13C0  FF      		db	0ffh
13C1  FF      		db	0ffh
13C2  FF      		db	0ffh
13C3  FF      		db	0ffh
13C4  FF      		db	0ffh
13C5  FF      		db	0ffh
13C6  FF      		db	0ffh
13C7  FF      		db	0ffh
13C8  FF      		db	0ffh
13C9  FF      		db	0ffh
13CA  FF      		db	0ffh
13CB  FF      		db	0ffh
13CC  FF      		db	0ffh
13CD  FF      		db	0ffh
13CE  FF      		db	0ffh
13CF  FF      		db	0ffh
13D0  FF      		db	0ffh
13D1  FF      		db	0ffh
13D2  FF      		db	0ffh
13D3  FF      		db	0ffh
13D4  FF      		db	0ffh
13D5  FF      		db	0ffh
13D6  FF      		db	0ffh
13D7  FF      		db	0ffh
13D8  FF      		db	0ffh
13D9  FF      		db	0ffh
13DA  FF      		db	0ffh
13DB  FF      		db	0ffh
13DC  FF      		db	0ffh
13DD  FF      		db	0ffh
13DE  FF      		db	0ffh
13DF  FF      		db	0ffh
13E0  FF      		db	0ffh
13E1  FF      		db	0ffh
13E2  FF      		db	0ffh
13E3  FF      		db	0ffh
13E4  FF      		db	0ffh
13E5  FF      		db	0ffh
13E6  FF      		db	0ffh
13E7  FF      		db	0ffh
13E8  FF      		db	0ffh
13E9  FF      		db	0ffh
13EA  FF      		db	0ffh
13EB  FF      		db	0ffh
13EC  FF      		db	0ffh
13ED  FF      		db	0ffh
13EE  FF      		db	0ffh
13EF  FF      		db	0ffh
13F0  FF      		db	0ffh
13F1  FF      		db	0ffh
13F2  FF      		db	0ffh
13F3  FF      		db	0ffh
13F4  FF      		db	0ffh
13F5  FF      		db	0ffh
13F6  FF      		db	0ffh
13F7  FF      		db	0ffh
13F8  FF      		db	0ffh
13F9  FF      		db	0ffh
13FA  FF      		db	0ffh
13FB  FF      		db	0ffh
13FC  FF      		db	0ffh
13FD  FF      		db	0ffh
13FE  FF      		db	0ffh
13FF  FF      		db	0ffh
1400  FF      		db	0ffh
1401  FF      		db	0ffh
1402  FF      		db	0ffh
1403  FF      		db	0ffh
1404  FF      		db	0ffh
1405  FF      		db	0ffh
1406  FF      		db	0ffh
1407  FF      		db	0ffh
1408  FF      		db	0ffh
1409  FF      		db	0ffh
140A  FF      		db	0ffh
140B  FF      		db	0ffh
140C  FF      		db	0ffh
140D  FF      		db	0ffh
140E  FF      		db	0ffh
140F  FF      		db	0ffh
1410  FF      		db	0ffh
1411  FF      		db	0ffh
1412  FF      		db	0ffh
1413  FF      		db	0ffh
1414  FF      		db	0ffh
1415  FF      		db	0ffh
1416  FF      		db	0ffh
1417  FF      		db	0ffh
1418  FF      		db	0ffh
1419  FF      		db	0ffh
141A  FF      		db	0ffh
141B  FF      		db	0ffh
141C  FF      		db	0ffh
141D  FF      		db	0ffh
141E  FF      		db	0ffh
141F  FF      		db	0ffh
1420  FF      		db	0ffh
1421  FF      		db	0ffh
1422  FF      		db	0ffh
1423  FF      		db	0ffh
1424  FF      		db	0ffh
1425  FF      		db	0ffh
1426  FF      		db	0ffh
1427  FF      		db	0ffh
1428  FF      		db	0ffh
1429  FF      		db	0ffh
142A  FF      		db	0ffh
142B  FF      		db	0ffh
142C  FF      		db	0ffh
142D  FF      		db	0ffh
142E  FF      		db	0ffh
142F  FF      		db	0ffh
1430  FF      		db	0ffh
1431  FF      		db	0ffh
1432  FF      		db	0ffh
1433  FF      		db	0ffh
1434  FF      		db	0ffh
1435  FF      		db	0ffh
1436  FF      		db	0ffh
1437  FF      		db	0ffh
1438  FF      		db	0ffh
1439  FF      		db	0ffh
143A  FF      		db	0ffh
143B  FF      		db	0ffh
143C  FF      		db	0ffh
143D  FF      		db	0ffh
143E  FF      		db	0ffh
143F  FF      		db	0ffh
1440  FF      		db	0ffh
1441  FF      		db	0ffh
1442  FF      		db	0ffh
1443  FF      		db	0ffh
1444  FF      		db	0ffh
1445  FF      		db	0ffh
1446  FF      		db	0ffh
1447  FF      		db	0ffh
1448  FF      		db	0ffh
1449  FF      		db	0ffh
144A  FF      		db	0ffh
144B  FF      		db	0ffh
144C  FF      		db	0ffh
144D  FF      		db	0ffh
144E  FF      		db	0ffh
144F  FF      		db	0ffh
1450  FF      		db	0ffh
1451  FF      		db	0ffh
1452  FF      		db	0ffh
1453  FF      		db	0ffh
1454  FF      		db	0ffh
1455  FF      		db	0ffh
1456  FF      		db	0ffh
1457  FF      		db	0ffh
1458  FF      		db	0ffh
1459  FF      		db	0ffh
145A  FF      		db	0ffh
145B  FF      		db	0ffh
145C  FF      		db	0ffh
145D  FF      		db	0ffh
145E  FF      		db	0ffh
145F  FF      		db	0ffh
1460  FF      		db	0ffh
1461  FF      		db	0ffh
1462  FF      		db	0ffh
1463  FF      		db	0ffh
1464  FF      		db	0ffh
1465  FF      		db	0ffh
1466  FF      		db	0ffh
1467  FF      		db	0ffh
1468  FF      		db	0ffh
1469  FF      		db	0ffh
146A  FF      		db	0ffh
146B  FF      		db	0ffh
146C  FF      		db	0ffh
146D  FF      		db	0ffh
146E  FF      		db	0ffh
146F  FF      		db	0ffh
1470  FF      		db	0ffh
1471  FF      		db	0ffh
1472  FF      		db	0ffh
1473  FF      		db	0ffh
1474  FF      		db	0ffh
1475  FF      		db	0ffh
1476  FF      		db	0ffh
1477  FF      		db	0ffh
1478  FF      		db	0ffh
1479  FF      		db	0ffh
147A  FF      		db	0ffh
147B  FF      		db	0ffh
147C  FF      		db	0ffh
147D  FF      		db	0ffh
147E  FF      		db	0ffh
147F  FF      		db	0ffh
1480  FF      		db	0ffh
1481  FF      		db	0ffh
1482  FF      		db	0ffh
1483  FF      		db	0ffh
1484  FF      		db	0ffh
1485  FF      		db	0ffh
1486  FF      		db	0ffh
1487  FF      		db	0ffh
1488  FF      		db	0ffh
1489  FF      		db	0ffh
148A  FF      		db	0ffh
148B  FF      		db	0ffh
148C  FF      		db	0ffh
148D  FF      		db	0ffh
148E  FF      		db	0ffh
148F  FF      		db	0ffh
1490  FF      		db	0ffh
1491  FF      		db	0ffh
1492  FF      		db	0ffh
1493  FF      		db	0ffh
1494  FF      		db	0ffh
1495  FF      		db	0ffh
1496  FF      		db	0ffh
1497  FF      		db	0ffh
1498  FF      		db	0ffh
1499  FF      		db	0ffh
149A  FF      		db	0ffh
149B  FF      		db	0ffh
149C  FF      		db	0ffh
149D  FF      		db	0ffh
149E  FF      		db	0ffh
149F  FF      		db	0ffh
14A0  FF      		db	0ffh
14A1  FF      		db	0ffh
14A2  FF      		db	0ffh
14A3  FF      		db	0ffh
14A4  FF      		db	0ffh
14A5  FF      		db	0ffh
14A6  FF      		db	0ffh
14A7  FF      		db	0ffh
14A8  FF      		db	0ffh
14A9  FF      		db	0ffh
14AA  FF      		db	0ffh
14AB  FF      		db	0ffh
14AC  FF      		db	0ffh
14AD  FF      		db	0ffh
14AE  FF      		db	0ffh
14AF  FF      		db	0ffh
14B0  FF      		db	0ffh
14B1  FF      		db	0ffh
14B2  FF      		db	0ffh
14B3  FF      		db	0ffh
14B4  FF      		db	0ffh
14B5  FF      		db	0ffh
14B6  FF      		db	0ffh
14B7  FF      		db	0ffh
14B8  FF      		db	0ffh
14B9  FF      		db	0ffh
14BA  FF      		db	0ffh
14BB  FF      		db	0ffh
14BC  FF      		db	0ffh
14BD  FF      		db	0ffh
14BE  FF      		db	0ffh
14BF  FF      		db	0ffh
14C0  FF      		db	0ffh
14C1  FF      		db	0ffh
14C2  FF      		db	0ffh
14C3  FF      		db	0ffh
14C4  FF      		db	0ffh
14C5  FF      		db	0ffh
14C6  FF      		db	0ffh
14C7  FF      		db	0ffh
14C8  FF      		db	0ffh
14C9  FF      		db	0ffh
14CA  FF      		db	0ffh
14CB  FF      		db	0ffh
14CC  FF      		db	0ffh
14CD  FF      		db	0ffh
14CE  FF      		db	0ffh
14CF  FF      		db	0ffh
14D0  FF      		db	0ffh
14D1  FF      		db	0ffh
14D2  FF      		db	0ffh
14D3  FF      		db	0ffh
14D4  FF      		db	0ffh
14D5  FF      		db	0ffh
14D6  FF      		db	0ffh
14D7  FF      		db	0ffh
14D8  FF      		db	0ffh
14D9  FF      		db	0ffh
14DA  FF      		db	0ffh
14DB  FF      		db	0ffh
14DC  FF      		db	0ffh
14DD  FF      		db	0ffh
14DE  FF      		db	0ffh
14DF  FF      		db	0ffh
14E0  FF      		db	0ffh
14E1  FF      		db	0ffh
14E2  FF      		db	0ffh
14E3  FF      		db	0ffh
14E4  FF      		db	0ffh
14E5  FF      		db	0ffh
14E6  FF      		db	0ffh
14E7  FF      		db	0ffh
14E8  FF      		db	0ffh
14E9  FF      		db	0ffh
14EA  FF      		db	0ffh
14EB  FF      		db	0ffh
14EC  FF      		db	0ffh
14ED  FF      		db	0ffh
14EE  FF      		db	0ffh
14EF  FF      		db	0ffh
14F0  FF      		db	0ffh
14F1  FF      		db	0ffh
14F2  FF      		db	0ffh
14F3  FF      		db	0ffh
14F4  FF      		db	0ffh
14F5  FF      		db	0ffh
14F6  FF      		db	0ffh
14F7  FF      		db	0ffh
14F8  FF      		db	0ffh
14F9  FF      		db	0ffh
14FA  FF      		db	0ffh
14FB  FF      		db	0ffh
14FC  FF      		db	0ffh
14FD  FF      		db	0ffh
14FE  FF      		db	0ffh
14FF  FF      		db	0ffh
1500  FF      		db	0ffh
1501  FF      		db	0ffh
1502  FF      		db	0ffh
1503  FF      		db	0ffh
1504  FF      		db	0ffh
1505  FF      		db	0ffh
1506  FF      		db	0ffh
1507  FF      		db	0ffh
1508  FF      		db	0ffh
1509  FF      		db	0ffh
150A  FF      		db	0ffh
150B  FF      		db	0ffh
150C  FF      		db	0ffh
150D  FF      		db	0ffh
150E  FF      		db	0ffh
150F  FF      		db	0ffh
1510  FF      		db	0ffh
1511  FF      		db	0ffh
1512  FF      		db	0ffh
1513  FF      		db	0ffh
1514  FF      		db	0ffh
1515  FF      		db	0ffh
1516  FF      		db	0ffh
1517  FF      		db	0ffh
1518  FF      		db	0ffh
1519  FF      		db	0ffh
151A  FF      		db	0ffh
151B  FF      		db	0ffh
151C  FF      		db	0ffh
151D  FF      		db	0ffh
151E  FF      		db	0ffh
151F  FF      		db	0ffh
1520  FF      		db	0ffh
1521  FF      		db	0ffh
1522  FF      		db	0ffh
1523  FF      		db	0ffh
1524  FF      		db	0ffh
1525  FF      		db	0ffh
1526  FF      		db	0ffh
1527  FF      		db	0ffh
1528  FF      		db	0ffh
1529  FF      		db	0ffh
152A  FF      		db	0ffh
152B  FF      		db	0ffh
152C  FF      		db	0ffh
152D  FF      		db	0ffh
152E  FF      		db	0ffh
152F  FF      		db	0ffh
1530  FF      		db	0ffh
1531  FF      		db	0ffh
1532  FF      		db	0ffh
1533  FF      		db	0ffh
1534  FF      		db	0ffh
1535  FF      		db	0ffh
1536  FF      		db	0ffh
1537  FF      		db	0ffh
1538  FF      		db	0ffh
1539  FF      		db	0ffh
153A  FF      		db	0ffh
153B  FF      		db	0ffh
153C  FF      		db	0ffh
153D  FF      		db	0ffh
153E  FF      		db	0ffh
153F  FF      		db	0ffh
1540  FF      		db	0ffh
1541  FF      		db	0ffh
1542  FF      		db	0ffh
1543  FF      		db	0ffh
1544  FF      		db	0ffh
1545  FF      		db	0ffh
1546  FF      		db	0ffh
1547  FF      		db	0ffh
1548  FF      		db	0ffh
1549  FF      		db	0ffh
154A  FF      		db	0ffh
154B  FF      		db	0ffh
154C  FF      		db	0ffh
154D  FF      		db	0ffh
154E  FF      		db	0ffh
154F  FF      		db	0ffh
1550  FF      		db	0ffh
1551  FF      		db	0ffh
1552  FF      		db	0ffh
1553  FF      		db	0ffh
1554  FF      		db	0ffh
1555  FF      		db	0ffh
1556  FF      		db	0ffh
1557  FF      		db	0ffh
1558  FF      		db	0ffh
1559  FF      		db	0ffh
155A  FF      		db	0ffh
155B  FF      		db	0ffh
155C  FF      		db	0ffh
155D  FF      		db	0ffh
155E  FF      		db	0ffh
155F  FF      		db	0ffh
1560  FF      		db	0ffh
1561  FF      		db	0ffh
1562  FF      		db	0ffh
1563  FF      		db	0ffh
1564  FF      		db	0ffh
1565  FF      		db	0ffh
1566  FF      		db	0ffh
1567  FF      		db	0ffh
1568  FF      		db	0ffh
1569  FF      		db	0ffh
156A  FF      		db	0ffh
156B  FF      		db	0ffh
156C  FF      		db	0ffh
156D  FF      		db	0ffh
156E  FF      		db	0ffh
156F  FF      		db	0ffh
1570  FF      		db	0ffh
1571  FF      		db	0ffh
1572  FF      		db	0ffh
1573  FF      		db	0ffh
1574  FF      		db	0ffh
1575  FF      		db	0ffh
1576  FF      		db	0ffh
1577  FF      		db	0ffh
1578  FF      		db	0ffh
1579  FF      		db	0ffh
157A  FF      		db	0ffh
157B  FF      		db	0ffh
157C  FF      		db	0ffh
157D  FF      		db	0ffh
157E  FF      		db	0ffh
157F  FF      		db	0ffh
1580  FF      		db	0ffh
1581  FF      		db	0ffh
1582  FF      		db	0ffh
1583  FF      		db	0ffh
1584  FF      		db	0ffh
1585  FF      		db	0ffh
1586  FF      		db	0ffh
1587  FF      		db	0ffh
1588  FF      		db	0ffh
1589  FF      		db	0ffh
158A  FF      		db	0ffh
158B  FF      		db	0ffh
158C  FF      		db	0ffh
158D  FF      		db	0ffh
158E  FF      		db	0ffh
158F  FF      		db	0ffh
1590  FF      		db	0ffh
1591  FF      		db	0ffh
1592  FF      		db	0ffh
1593  FF      		db	0ffh
1594  FF      		db	0ffh
1595  FF      		db	0ffh
1596  FF      		db	0ffh
1597  FF      		db	0ffh
1598  FF      		db	0ffh
1599  FF      		db	0ffh
159A  FF      		db	0ffh
159B  FF      		db	0ffh
159C  FF      		db	0ffh
159D  FF      		db	0ffh
159E  FF      		db	0ffh
159F  FF      		db	0ffh
15A0  FF      		db	0ffh
15A1  FF      		db	0ffh
15A2  FF      		db	0ffh
15A3  FF      		db	0ffh
15A4  FF      		db	0ffh
15A5  FF      		db	0ffh
15A6  FF      		db	0ffh
15A7  FF      		db	0ffh
15A8  FF      		db	0ffh
15A9  FF      		db	0ffh
15AA  FF      		db	0ffh
15AB  FF      		db	0ffh
15AC  FF      		db	0ffh
15AD  FF      		db	0ffh
15AE  FF      		db	0ffh
15AF  FF      		db	0ffh
15B0  FF      		db	0ffh
15B1  FF      		db	0ffh
15B2  FF      		db	0ffh
15B3  FF      		db	0ffh
15B4  FF      		db	0ffh
15B5  FF      		db	0ffh
15B6  FF      		db	0ffh
15B7  FF      		db	0ffh
15B8  FF      		db	0ffh
15B9  FF      		db	0ffh
15BA  FF      		db	0ffh
15BB  FF      		db	0ffh
15BC  FF      		db	0ffh
15BD  FF      		db	0ffh
15BE  FF      		db	0ffh
15BF  FF      		db	0ffh
15C0  FF      		db	0ffh
15C1  FF      		db	0ffh
15C2  FF      		db	0ffh
15C3  FF      		db	0ffh
15C4  FF      		db	0ffh
15C5  FF      		db	0ffh
15C6  FF      		db	0ffh
15C7  FF      		db	0ffh
15C8  FF      		db	0ffh
15C9  FF      		db	0ffh
15CA  FF      		db	0ffh
15CB  FF      		db	0ffh
15CC  FF      		db	0ffh
15CD  FF      		db	0ffh
15CE  FF      		db	0ffh
15CF  FF      		db	0ffh
15D0  FF      		db	0ffh
15D1  FF      		db	0ffh
15D2  FF      		db	0ffh
15D3  FF      		db	0ffh
15D4  FF      		db	0ffh
15D5  FF      		db	0ffh
15D6  FF      		db	0ffh
15D7  FF      		db	0ffh
15D8  FF      		db	0ffh
15D9  FF      		db	0ffh
15DA  FF      		db	0ffh
15DB  FF      		db	0ffh
15DC  FF      		db	0ffh
15DD  FF      		db	0ffh
15DE  FF      		db	0ffh
15DF  FF      		db	0ffh
15E0  FF      		db	0ffh
15E1  FF      		db	0ffh
15E2  FF      		db	0ffh
15E3  FF      		db	0ffh
15E4  FF      		db	0ffh
15E5  FF      		db	0ffh
15E6  FF      		db	0ffh
15E7  FF      		db	0ffh
15E8  FF      		db	0ffh
15E9  FF      		db	0ffh
15EA  FF      		db	0ffh
15EB  FF      		db	0ffh
15EC  FF      		db	0ffh
15ED  FF      		db	0ffh
15EE  FF      		db	0ffh
15EF  FF      		db	0ffh
15F0  FF      		db	0ffh
15F1  FF      		db	0ffh
15F2  FF      		db	0ffh
15F3  FF      		db	0ffh
15F4  FF      		db	0ffh
15F5  FF      		db	0ffh
15F6  FF      		db	0ffh
15F7  FF      		db	0ffh
15F8  FF      		db	0ffh
15F9  FF      		db	0ffh
15FA  FF      		db	0ffh
15FB  FF      		db	0ffh
15FC  FF      		db	0ffh
15FD  FF      		db	0ffh
15FE  FF      		db	0ffh
15FF  FF      		db	0ffh
1600  FF      		db	0ffh
1601  FF      		db	0ffh
1602  FF      		db	0ffh
1603  FF      		db	0ffh
1604  FF      		db	0ffh
1605  FF      		db	0ffh
1606  FF      		db	0ffh
1607  FF      		db	0ffh
1608  FF      		db	0ffh
1609  FF      		db	0ffh
160A  FF      		db	0ffh
160B  FF      		db	0ffh
160C  FF      		db	0ffh
160D  FF      		db	0ffh
160E  FF      		db	0ffh
160F  FF      		db	0ffh
1610  FF      		db	0ffh
1611  FF      		db	0ffh
1612  FF      		db	0ffh
1613  FF      		db	0ffh
1614  FF      		db	0ffh
1615  FF      		db	0ffh
1616  FF      		db	0ffh
1617  FF      		db	0ffh
1618  FF      		db	0ffh
1619  FF      		db	0ffh
161A  FF      		db	0ffh
161B  FF      		db	0ffh
161C  FF      		db	0ffh
161D  FF      		db	0ffh
161E  FF      		db	0ffh
161F  FF      		db	0ffh
1620  FF      		db	0ffh
1621  FF      		db	0ffh
1622  FF      		db	0ffh
1623  FF      		db	0ffh
1624  FF      		db	0ffh
1625  FF      		db	0ffh
1626  FF      		db	0ffh
1627  FF      		db	0ffh
1628  FF      		db	0ffh
1629  FF      		db	0ffh
162A  FF      		db	0ffh
162B  FF      		db	0ffh
162C  FF      		db	0ffh
162D  FF      		db	0ffh
162E  FF      		db	0ffh
162F  FF      		db	0ffh
1630  FF      		db	0ffh
1631  FF      		db	0ffh
1632  FF      		db	0ffh
1633  FF      		db	0ffh
1634  FF      		db	0ffh
1635  FF      		db	0ffh
1636  FF      		db	0ffh
1637  FF      		db	0ffh
1638  FF      		db	0ffh
1639  FF      		db	0ffh
163A  FF      		db	0ffh
163B  FF      		db	0ffh
163C  FF      		db	0ffh
163D  FF      		db	0ffh
163E  FF      		db	0ffh
163F  FF      		db	0ffh
1640  FF      		db	0ffh
1641  FF      		db	0ffh
1642  FF      		db	0ffh
1643  FF      		db	0ffh
1644  FF      		db	0ffh
1645  FF      		db	0ffh
1646  FF      		db	0ffh
1647  FF      		db	0ffh
1648  FF      		db	0ffh
1649  FF      		db	0ffh
164A  FF      		db	0ffh
164B  FF      		db	0ffh
164C  FF      		db	0ffh
164D  FF      		db	0ffh
164E  FF      		db	0ffh
164F  FF      		db	0ffh
1650  FF      		db	0ffh
1651  FF      		db	0ffh
1652  FF      		db	0ffh
1653  FF      		db	0ffh
1654  FF      		db	0ffh
1655  FF      		db	0ffh
1656  FF      		db	0ffh
1657  FF      		db	0ffh
1658  FF      		db	0ffh
1659  FF      		db	0ffh
165A  FF      		db	0ffh
165B  FF      		db	0ffh
165C  FF      		db	0ffh
165D  FF      		db	0ffh
165E  FF      		db	0ffh
165F  FF      		db	0ffh
1660  FF      		db	0ffh
1661  FF      		db	0ffh
1662  FF      		db	0ffh
1663  FF      		db	0ffh
1664  FF      		db	0ffh
1665  FF      		db	0ffh
1666  FF      		db	0ffh
1667  FF      		db	0ffh
1668  FF      		db	0ffh
1669  FF      		db	0ffh
166A  FF      		db	0ffh
166B  FF      		db	0ffh
166C  FF      		db	0ffh
166D  FF      		db	0ffh
166E  FF      		db	0ffh
166F  FF      		db	0ffh
1670  FF      		db	0ffh
1671  FF      		db	0ffh
1672  FF      		db	0ffh
1673  FF      		db	0ffh
1674  FF      		db	0ffh
1675  FF      		db	0ffh
1676  FF      		db	0ffh
1677  FF      		db	0ffh
1678  FF      		db	0ffh
1679  FF      		db	0ffh
167A  FF      		db	0ffh
167B  FF      		db	0ffh
167C  FF      		db	0ffh
167D  FF      		db	0ffh
167E  FF      		db	0ffh
167F  FF      		db	0ffh
1680  FF      		db	0ffh
1681  FF      		db	0ffh
1682  FF      		db	0ffh
1683  FF      		db	0ffh
1684  FF      		db	0ffh
1685  FF      		db	0ffh
1686  FF      		db	0ffh
1687  FF      		db	0ffh
1688  FF      		db	0ffh
1689  FF      		db	0ffh
168A  FF      		db	0ffh
168B  FF      		db	0ffh
168C  FF      		db	0ffh
168D  FF      		db	0ffh
168E  FF      		db	0ffh
168F  FF      		db	0ffh
1690  FF      		db	0ffh
1691  FF      		db	0ffh
1692  FF      		db	0ffh
1693  FF      		db	0ffh
1694  FF      		db	0ffh
1695  FF      		db	0ffh
1696  FF      		db	0ffh
1697  FF      		db	0ffh
1698  FF      		db	0ffh
1699  FF      		db	0ffh
169A  FF      		db	0ffh
169B  FF      		db	0ffh
169C  FF      		db	0ffh
169D  FF      		db	0ffh
169E  FF      		db	0ffh
169F  FF      		db	0ffh
16A0  FF      		db	0ffh
16A1  FF      		db	0ffh
16A2  FF      		db	0ffh
16A3  FF      		db	0ffh
16A4  FF      		db	0ffh
16A5  FF      		db	0ffh
16A6  FF      		db	0ffh
16A7  FF      		db	0ffh
16A8  FF      		db	0ffh
16A9  FF      		db	0ffh
16AA  FF      		db	0ffh
16AB  FF      		db	0ffh
16AC  FF      		db	0ffh
16AD  FF      		db	0ffh
16AE  FF      		db	0ffh
16AF  FF      		db	0ffh
16B0  FF      		db	0ffh
16B1  FF      		db	0ffh
16B2  FF      		db	0ffh
16B3  FF      		db	0ffh
16B4  FF      		db	0ffh
16B5  FF      		db	0ffh
16B6  FF      		db	0ffh
16B7  FF      		db	0ffh
16B8  FF      		db	0ffh
16B9  FF      		db	0ffh
16BA  FF      		db	0ffh
16BB  FF      		db	0ffh
16BC  FF      		db	0ffh
16BD  FF      		db	0ffh
16BE  FF      		db	0ffh
16BF  FF      		db	0ffh
16C0  FF      		db	0ffh
16C1  FF      		db	0ffh
16C2  FF      		db	0ffh
16C3  FF      		db	0ffh
16C4  FF      		db	0ffh
16C5  FF      		db	0ffh
16C6  FF      		db	0ffh
16C7  FF      		db	0ffh
16C8  FF      		db	0ffh
16C9  FF      		db	0ffh
16CA  FF      		db	0ffh
16CB  FF      		db	0ffh
16CC  FF      		db	0ffh
16CD  FF      		db	0ffh
16CE  FF      		db	0ffh
16CF  FF      		db	0ffh
16D0  FF      		db	0ffh
16D1  FF      		db	0ffh
16D2  FF      		db	0ffh
16D3  FF      		db	0ffh
16D4  FF      		db	0ffh
16D5  FF      		db	0ffh
16D6  FF      		db	0ffh
16D7  FF      		db	0ffh
16D8  FF      		db	0ffh
16D9  FF      		db	0ffh
16DA  FF      		db	0ffh
16DB  FF      		db	0ffh
16DC  FF      		db	0ffh
16DD  FF      		db	0ffh
16DE  FF      		db	0ffh
16DF  FF      		db	0ffh
16E0  FF      		db	0ffh
16E1  FF      		db	0ffh
16E2  FF      		db	0ffh
16E3  FF      		db	0ffh
16E4  FF      		db	0ffh
16E5  FF      		db	0ffh
16E6  FF      		db	0ffh
16E7  FF      		db	0ffh
16E8  FF      		db	0ffh
16E9  FF      		db	0ffh
16EA  FF      		db	0ffh
16EB  FF      		db	0ffh
16EC  FF      		db	0ffh
16ED  FF      		db	0ffh
16EE  FF      		db	0ffh
16EF  FF      		db	0ffh
16F0  FF      		db	0ffh
16F1  FF      		db	0ffh
16F2  FF      		db	0ffh
16F3  FF      		db	0ffh
16F4  FF      		db	0ffh
16F5  FF      		db	0ffh
16F6  FF      		db	0ffh
16F7  FF      		db	0ffh
16F8  FF      		db	0ffh
16F9  FF      		db	0ffh
16FA  FF      		db	0ffh
16FB  FF      		db	0ffh
16FC  FF      		db	0ffh
16FD  FF      		db	0ffh
16FE  FF      		db	0ffh
16FF  FF      		db	0ffh
1700  FF      		db	0ffh
1701  FF      		db	0ffh
1702  FF      		db	0ffh
1703  FF      		db	0ffh
1704  FF      		db	0ffh
1705  FF      		db	0ffh
1706  FF      		db	0ffh
1707  FF      		db	0ffh
1708  FF      		db	0ffh
1709  FF      		db	0ffh
170A  FF      		db	0ffh
170B  FF      		db	0ffh
170C  FF      		db	0ffh
170D  FF      		db	0ffh
170E  FF      		db	0ffh
170F  FF      		db	0ffh
1710  FF      		db	0ffh
1711  FF      		db	0ffh
1712  FF      		db	0ffh
1713  FF      		db	0ffh
1714  FF      		db	0ffh
1715  FF      		db	0ffh
1716  FF      		db	0ffh
1717  FF      		db	0ffh
1718  FF      		db	0ffh
1719  FF      		db	0ffh
171A  FF      		db	0ffh
171B  FF      		db	0ffh
171C  FF      		db	0ffh
171D  FF      		db	0ffh
171E  FF      		db	0ffh
171F  FF      		db	0ffh
1720  FF      		db	0ffh
1721  FF      		db	0ffh
1722  FF      		db	0ffh
1723  FF      		db	0ffh
1724  FF      		db	0ffh
1725  FF      		db	0ffh
1726  FF      		db	0ffh
1727  FF      		db	0ffh
1728  FF      		db	0ffh
1729  FF      		db	0ffh
172A  FF      		db	0ffh
172B  FF      		db	0ffh
172C  FF      		db	0ffh
172D  FF      		db	0ffh
172E  FF      		db	0ffh
172F  FF      		db	0ffh
1730  FF      		db	0ffh
1731  FF      		db	0ffh
1732  FF      		db	0ffh
1733  FF      		db	0ffh
1734  FF      		db	0ffh
1735  FF      		db	0ffh
1736  FF      		db	0ffh
1737  FF      		db	0ffh
1738  FF      		db	0ffh
1739  FF      		db	0ffh
173A  FF      		db	0ffh
173B  FF      		db	0ffh
173C  FF      		db	0ffh
173D  FF      		db	0ffh
173E  FF      		db	0ffh
173F  FF      		db	0ffh
1740  FF      		db	0ffh
1741  FF      		db	0ffh
1742  FF      		db	0ffh
1743  FF      		db	0ffh
1744  FF      		db	0ffh
1745  FF      		db	0ffh
1746  FF      		db	0ffh
1747  FF      		db	0ffh
1748  FF      		db	0ffh
1749  FF      		db	0ffh
174A  FF      		db	0ffh
174B  FF      		db	0ffh
174C  FF      		db	0ffh
174D  FF      		db	0ffh
174E  FF      		db	0ffh
174F  FF      		db	0ffh
1750  FF      		db	0ffh
1751  FF      		db	0ffh
1752  FF      		db	0ffh
1753  FF      		db	0ffh
1754  FF      		db	0ffh
1755  FF      		db	0ffh
1756  FF      		db	0ffh
1757  FF      		db	0ffh
1758  FF      		db	0ffh
1759  FF      		db	0ffh
175A  FF      		db	0ffh
175B  FF      		db	0ffh
175C  FF      		db	0ffh
175D  FF      		db	0ffh
175E  FF      		db	0ffh
175F  FF      		db	0ffh
1760  FF      		db	0ffh
1761  FF      		db	0ffh
1762  FF      		db	0ffh
1763  FF      		db	0ffh
1764  FF      		db	0ffh
1765  FF      		db	0ffh
1766  FF      		db	0ffh
1767  FF      		db	0ffh
1768  FF      		db	0ffh
1769  FF      		db	0ffh
176A  FF      		db	0ffh
176B  FF      		db	0ffh
176C  FF      		db	0ffh
176D  FF      		db	0ffh
176E  FF      		db	0ffh
176F  FF      		db	0ffh
1770  FF      		db	0ffh
1771  FF      		db	0ffh
1772  FF      		db	0ffh
1773  FF      		db	0ffh
1774  FF      		db	0ffh
1775  FF      		db	0ffh
1776  FF      		db	0ffh
1777  FF      		db	0ffh
1778  FF      		db	0ffh
1779  FF      		db	0ffh
177A  FF      		db	0ffh
177B  FF      		db	0ffh
177C  FF      		db	0ffh
177D  FF      		db	0ffh
177E  FF      		db	0ffh
177F  FF      		db	0ffh
1780  FF      		db	0ffh
1781  FF      		db	0ffh
1782  FF      		db	0ffh
1783  FF      		db	0ffh
1784  FF      		db	0ffh
1785  FF      		db	0ffh
1786  FF      		db	0ffh
1787  FF      		db	0ffh
1788  FF      		db	0ffh
1789  FF      		db	0ffh
178A  FF      		db	0ffh
178B  FF      		db	0ffh
178C  FF      		db	0ffh
178D  FF      		db	0ffh
178E  FF      		db	0ffh
178F  FF      		db	0ffh
1790  FF      		db	0ffh
1791  FF      		db	0ffh
1792  FF      		db	0ffh
1793  FF      		db	0ffh
1794  FF      		db	0ffh
1795  FF      		db	0ffh
1796  FF      		db	0ffh
1797  FF      		db	0ffh
1798  FF      		db	0ffh
1799  FF      		db	0ffh
179A  FF      		db	0ffh
179B  FF      		db	0ffh
179C  FF      		db	0ffh
179D  FF      		db	0ffh
179E  FF      		db	0ffh
179F  FF      		db	0ffh
17A0  FF      		db	0ffh
17A1  FF      		db	0ffh
17A2  FF      		db	0ffh
17A3  FF      		db	0ffh
17A4  FF      		db	0ffh
17A5  FF      		db	0ffh
17A6  FF      		db	0ffh
17A7  FF      		db	0ffh
17A8  FF      		db	0ffh
17A9  FF      		db	0ffh
17AA  FF      		db	0ffh
17AB  FF      		db	0ffh
17AC  FF      		db	0ffh
17AD  FF      		db	0ffh
17AE  FF      		db	0ffh
17AF  FF      		db	0ffh
17B0  FF      		db	0ffh
17B1  FF      		db	0ffh
17B2  FF      		db	0ffh
17B3  FF      		db	0ffh
17B4  FF      		db	0ffh
17B5  FF      		db	0ffh
17B6  FF      		db	0ffh
17B7  FF      		db	0ffh
17B8  FF      		db	0ffh
17B9  FF      		db	0ffh
17BA  FF      		db	0ffh
17BB  FF      		db	0ffh
17BC  FF      		db	0ffh
17BD  FF      		db	0ffh
17BE  FF      		db	0ffh
17BF  FF      		db	0ffh
17C0  FF      		db	0ffh
17C1  FF      		db	0ffh
17C2  FF      		db	0ffh
17C3  FF      		db	0ffh
17C4  FF      		db	0ffh
17C5  FF      		db	0ffh
17C6  FF      		db	0ffh
17C7  FF      		db	0ffh
17C8  FF      		db	0ffh
17C9  FF      		db	0ffh
17CA  FF      		db	0ffh
17CB  FF      		db	0ffh
17CC  FF      		db	0ffh
17CD  FF      		db	0ffh
17CE  FF      		db	0ffh
17CF  FF      		db	0ffh
17D0  FF      		db	0ffh
17D1  FF      		db	0ffh
17D2  FF      		db	0ffh
17D3  FF      		db	0ffh
17D4  FF      		db	0ffh
17D5  FF      		db	0ffh
17D6  FF      		db	0ffh
17D7  FF      		db	0ffh
17D8  FF      		db	0ffh
17D9  FF      		db	0ffh
17DA  FF      		db	0ffh
17DB  FF      		db	0ffh
17DC  FF      		db	0ffh
17DD  FF      		db	0ffh
17DE  FF      		db	0ffh
17DF  FF      		db	0ffh
17E0  FF      		db	0ffh
17E1  FF      		db	0ffh
17E2  FF      		db	0ffh
17E3  FF      		db	0ffh
17E4  FF      		db	0ffh
17E5  FF      		db	0ffh
17E6  FF      		db	0ffh
17E7  FF      		db	0ffh
17E8  FF      		db	0ffh
17E9  FF      		db	0ffh
17EA  FF      		db	0ffh
17EB  FF      		db	0ffh
17EC  FF      		db	0ffh
17ED  FF      		db	0ffh
17EE  FF      		db	0ffh
17EF  FF      		db	0ffh
17F0  FF      		db	0ffh
17F1  FF      		db	0ffh
17F2  FF      		db	0ffh
17F3  FF      		db	0ffh
17F4  FF      		db	0ffh
17F5  FF      		db	0ffh
17F6  FF      		db	0ffh
17F7  FF      		db	0ffh
17F8  FF      		db	0ffh
17F9  FF      		db	0ffh
17FA  FF      		db	0ffh
17FB  FF      		db	0ffh
17FC  FF      		db	0ffh
17FD  FF      		db	0ffh
17FE  FF      		db	0ffh
17FF  FF      		db	0ffh
0000          	if	($ <> 1800h)
		endif
1800          		end



Statistics:

     4	passes
     0	jr promotions
   427	symbols
  6144	bytes

  2835	macro calls
  3823	macro bytes
     0	invented symbols
