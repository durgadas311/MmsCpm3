                ;****************************************************************
                ; Z180-MMU Memory Test Program			 		*
                ; stand-alone version                		 		*
                ; Continuous, exhaustive.					*
                ;****************************************************************
                ; Assume the low 16K has already been tested - we run there.
                	$*MACRO
 0033 =         rev	equ	'3'
                
                	maclib	z180
                ;	maclib	ram	; doesn't work with REL files...
 2036 =         ctl$F2	equ	2036h
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 000D =         cr	equ	13
 000A =         lf	equ	10
 0008 =         bs	equ	8
 0007 =         bell	equ	7
                
 4000 =         buf16K	equ	4000h	; assumes normal ROM CBAR
                
                ; Z180 MMU registers
 0038 =         mmu$cbr	equ	38h
 0039 =         mmu$bbr	equ	39h
 003A =         mmu$cbar equ	3ah
                
                	cseg
                begin:
 0000 31AA04    	lxi	sp,stack
 0003 117B02    	lxi	d,signon
 0006 CD1502    	call	msgout
 0009 C38A00    	jmp	start
                
 000C 00        cont:	db	0	; continuous mode
                
 000D 00        seed0:	db	0
 000E 00        seed:	db	0
 000F 00        maxpg:	db	0
 0010 00        pgnum:	db	0
 0011 00        bbr:	db	0
                
                ; We are running at 3000h which should be 03000h physical RAM.
                ; Assuming that CBAR is set for C000/4000.
                mmu$init:
 0012 F3        	di
                	in0	a,mmu$bbr	; the only register we change...
 0013+ED3839
 0016 321100    	sta	bbr
 0019 FB        	ei
 001A C9        	ret
                
                mmu$deinit:
 001B F3        	di
 001C 3A1100    	lda	bbr
                	out0	a,mmu$bbr
 001F+ED3939
 0022 FB        	ei
 0023 C9        	ret
                
 0024 87        selpg:	add	a
 0025 87        	add	a	; convert to 4K page number
 0026 D604      	sui	4	; offset for location 4000h
                	out0	a,mmu$bbr
 0028+ED3939
 002B C9        	ret
                
                ; IX=current bank results
                ; HL=ref buffer
                ; DE=test buffer
                ; BC=count
                compare:
 002C 1A        	ldax	d
 002D BE        	cmp	m
                	jrz	comp0
 002E+2811
                	inrx	+1
 0030+DD3401
                	jrnz	comp1
 0033+2003
                	dcrx	+1	; hold at 255
 0035+DD3501
                comp1:
                	ldx	a,+2
 0038+DD7E02
 003B 3C        	inr	a
                	jrnz	comp0
 003C+2003
                	stx	e,+2
 003E+DD7302
                comp0:
 0041 23        	inx	h
 0042 13        	inx	d
 0043 0B        	dcx	b
 0044 78        	mov	a,b
 0045 B1        	ora	c
                	jrnz	compare
 0046+20E4
                	ldx	a,+1
 0048+DD7E01
 004B B7        	ora	a
 004C C9        	ret
                
                ; A=seed (BCD)
                setpat:
 004D 210040    	lxi	h,buf16K
 0050 010040    	lxi	b,16*1024
                setpat0:
 0053 77        	mov	m,a
 0054 23        	inx	h
 0055 C601      	adi	1
 0057 27        	daa
 0058 5F        	mov	e,a
 0059 0B        	dcx	b
 005A 78        	mov	a,b
 005B B1        	ora	c
 005C 7B        	mov	a,e
                	jrnz	setpat0
 005D+20F4
 005F C9        	ret
                
                ; A=seed (BCD), IX=bank results
                chkpat:
 0060 210040    	lxi	h,buf16K
 0063 010040    	lxi	b,16*1024
                chkpat0:
 0066 BE        	cmp	m
                	jrz	chkpat1
 0067+2811
                	inrx	+1
 0069+DD3401
                	jrnz	chkpat2
 006C+2003
                	dcrx	+1	; hold at 255
 006E+DD3501
                chkpat2:
                	ldx	e,+2
 0071+DD5E02
 0074 1C        	inr	e
                	jrnz	chkpat1
 0075+2003
                	stx	l,+2
 0077+DD7502
                chkpat1:
 007A 23        	inx	h
 007B C601      	adi	1
 007D 27        	daa
 007E 5F        	mov	e,a
 007F 0B        	dcx	b
 0080 78        	mov	a,b
 0081 B1        	ora	c
 0082 7B        	mov	a,e
                	jrnz	chkpat0
 0083+20E1
                	ldx	a,+1
 0085+DD7E01
 0088 B7        	ora	a
 0089 C9        	ret
                
                start:
 008A F3        	di	; completely isolate ourself...
 008B 3A3620    	lda	ctl$F2
 008E E614      	ani	00010100b
 0090 F620      	ori	00100000b
 0092 D3F2      	out	0f2h	; ORG0 on (ROM off), everything else as in RESET
 0094 CD1200    	call	mmu$init
                
                	; probe memory size - assume 512K if 1M not present.
                	; We can't access top 32K of RAM (used by EEPROM).
 0097 3E3D      	mvi	a,3dh	; last possible page (1M - 32K)
 0099 320F00    	sta	maxpg
 009C CD2400    	call	selpg
 009F 210040    	lxi	h,buf16k
 00A2 7E        	mov	a,m
 00A3 35        	dcr	m
 00A4 3D        	dcr	a
 00A5 BE        	cmp	m
                	jrz	ok
 00A6+2805
 00A8 3E1F      	mvi	a,1fh	; last page of 512K
 00AA 320F00    	sta	maxpg
 00AD 119102    ok:	lxi	d,note
 00B0 CD1502    	call	msgout
 00B3 3A0F00    	lda	maxpg
 00B6 FE20      	cpi	20h
 00B8 119E02    	lxi	d,t512k
                	jrc	sm
 00BB+3803
 00BD 11A502    	lxi	d,t1m
 00C0 CD1502    sm:	call	msgout
                over:
                	; setup results buffer
 00C3 21AA02    	lxi	h,banks
 00C6 36FF      	mvi	m,0ffh	; pattern (none)
 00C8 23        	inx	h
 00C9 3600      	mvi	m,0	; num errs
 00CB 23        	inx	h
 00CC 36FF      	mvi	m,0ffh	; 1st err
 00CE 23        	inx	h
 00CF 3600      	mvi	m,0	; not used
 00D1 2B        	dcx	h
 00D2 2B        	dcx	h
 00D3 2B        	dcx	h
 00D4 11AE02    	lxi	d,banks+4
 00D7 01FC00    	lxi	b,lenbnks-4
                	ldir
 00DA+EDB0
                	; initialize buffer to detect errors
 00DC 3E99      	mvi	a,099h
 00DE CD4D00    	call	setpat
                
                	; start testing at page 1 (0 contains this program)
                	lxix	banks
 00E1+DD21
 00E3+AA02
 00E5 3A0D00    	lda	seed0
 00E8 320E00    	sta	seed
 00EB 3E01      	mvi	a,1	; page number
 00ED 321000    	sta	pgnum
                loop1:
 00F0 3A0E00    	lda	seed
                	stx	a,+0
 00F3+DD7700
 00F6 4F        	mov	c,a
 00F7 C601      	adi	1
 00F9 27        	daa
 00FA 320E00    	sta	seed
 00FD 3A1000    	lda	pgnum
 0100 CD2400    	call	selpg
 0103 79        	mov	a,c
 0104 CD4D00    	call	setpat
 0107 110400    	lxi	d,4
                	dadx	d
 010A+DD19
 010C CD2902    	call	progress
 010F 3A0F00    	lda	maxpg
 0112 4F        	mov	c,a
 0113 3A1000    	lda	pgnum
 0116 3C        	inr	a
 0117 321000    	sta	pgnum
 011A 0C        	inr	c
 011B B9        	cmp	c
 011C DAF000    	jc	loop1
                	; Now can check write...
                	lxix	banks
 011F+DD21
 0121+AA02
 0123 3A0D00    	lda	seed0
 0126 320E00    	sta	seed
 0129 3E01      	mvi	a,1	; page number
 012B 321000    	sta	pgnum
                loop2:
 012E 3A0E00    	lda	seed
                	stx	a,+0
 0131+DD7700
 0134 4F        	mov	c,a
 0135 C601      	adi	1
 0137 27        	daa
 0138 320E00    	sta	seed
 013B 3A1000    	lda	pgnum
 013E CD2400    	call	selpg
 0141 79        	mov	a,c
 0142 CD6000    	call	chkpat
 0145 110400    	lxi	d,4
                	dadx	d
 0148+DD19
 014A CD2902    	call	progress
 014D 3A0F00    	lda	maxpg
 0150 4F        	mov	c,a
 0151 3A1000    	lda	pgnum
 0154 3C        	inr	a
 0155 321000    	sta	pgnum
 0158 0C        	inr	c
 0159 B9        	cmp	c
 015A DA2E01    	jc	loop2
                
                	; done with one pass, report results...
                	lxix	banks
 015D+DD21
 015F+AA02
 0161 3E01      	mvi	a,1
 0163 321000    	sta	pgnum
 0166 0600      	mvi	b,0
                done0:
                	ldx	a,+1	; num errs
 0168+DD7E01
 016B B7        	ora	a
 016C CAA001    	jz	done1
 016F 04        	inr	b
 0170 3A1000    	lda	pgnum
 0173 214A02    	lxi	h,res0
 0176 CDD401    	call	decout	; destroys C, DE
                	ldx	a,+0
 0179+DD7E00
 017C 215302    	lxi	h,res1
 017F CD0102    	call	hexout
                	ldx	a,+1
 0182+DD7E01
 0185 215B02    	lxi	h,res2
 0188 CDD401    	call	decout	; destroys C, DE
                	ldx	a,+2
 018B+DD7E02
 018E 215F02    	lxi	h,res3
 0191 CD0102    	call	hexout
 0194 C5        	push	b
                	pushix
 0195+DDE5
 0197 114602    	lxi	d,result
 019A CD1502    	call	msgout
                	popix
 019D+DDE1
 019F C1        	pop	b
 01A0 110400    done1:	lxi	d,4
                	dadx	d
 01A3+DD19
 01A5 3A0F00    	lda	maxpg
 01A8 4F        	mov	c,a
 01A9 0C        	inr	c
 01AA 3A1000    	lda	pgnum
 01AD 3C        	inr	a
 01AE 321000    	sta	pgnum
 01B1 B9        	cmp	c
 01B2 DA6801    	jc	done0
 01B5 78        	mov	a,b
 01B6 B7        	ora	a
                	jrnz	dover	; already reported results
 01B7+200F
 01B9 216402    	lxi	h,noerr
 01BC 3A0D00    	lda	seed0
 01BF CD0102    	call	hexout
 01C2 116402    	lxi	d,noerr
 01C5 CD1502    	call	msgout
                	; TODO: restore and return to monitor
                dover:	; do test again...
 01C8 3A0D00    	lda	seed0
 01CB C601      	adi	1
 01CD 27        	daa
 01CE 320D00    	sta	seed0
 01D1 C3C300    	jmp	over
                
                ; leading zeroes blanked - must preserve B
                decout:
 01D4 0E00      	mvi	c,0
 01D6 1664      	mvi	d,100
 01D8 CDE501    	call	divide
 01DB 160A      	mvi	d,10
 01DD CDE501    	call	divide
 01E0 C630      	adi	'0'
 01E2 77        	mov	m,a
 01E3 23        	inx	h
 01E4 C9        	ret
                
 01E5 1E00      divide:	mvi	e,0
 01E7 92        div0:	sub	d
 01E8 1C        	inr	e
                	jrnc	div0
 01E9+30FC
 01EB 82        	add	d
 01EC 1D        	dcr	e
                	jrnz	div1
 01ED+2008
                	bit	0,c
 01EF+CB41
                	jrnz	div1
 01F1+2004
 01F3 3620      	mvi	m,' '
 01F5 23        	inx	h
 01F6 C9        	ret
                div1:	setb	0,c
 01F7+CBC1
 01F9 F5        	push	psw	; remainder
 01FA 3E30      	mvi	a,'0'
 01FC 83        	add	e
 01FD 77        	mov	m,a
 01FE 23        	inx	h
 01FF F1        	pop	psw	; remainder
 0200 C9        	ret
                
 0201 F5        hexout:	push	psw
 0202 07        	rlc
 0203 07        	rlc
 0204 07        	rlc
 0205 07        	rlc
 0206 CD0A02    	call	hex0
 0209 F1        	pop	psw
 020A E60F      hex0:	ani	0fh
 020C C690      	adi	90h
 020E 27        	daa
 020F CE40      	aci	40h
 0211 27        	daa
 0212 77        	mov	m,a
 0213 23        	inx	h
 0214 C9        	ret
                
 0215 1A        msgout:	ldax	d
 0216 B7        	ora	a
 0217 C8        	rz
 0218 13        	inx	d
 0219 CD1E02    	call	conout
                	jr	msgout
 021C+18F7
                
 021E F5        conout:	push	psw
 021F DBED      cono0:	in	0edh
 0221 E620      	ani	00100000b
                	jrz	cono0
 0223+28FA
 0225 F1        	pop	psw
 0226 D3E8      	out	0e8h
 0228 C9        	ret
                
                progress:
 0229 214102    	lxi	h,spinx
 022C 34        	inr	m
 022D 7E        	mov	a,m
 022E E603      	ani	00000011b
 0230 4F        	mov	c,a
 0231 0600      	mvi	b,0
 0233 214202    	lxi	h,spin
 0236 09        	dad	b
 0237 7E        	mov	a,m
 0238 CD1E02    	call	conout
 023B 3E08      	mvi	a,bs
 023D CD1E02    	call	conout
 0240 C9        	ret
                
 0241 00        spinx:	db	0
 0242 2D5C7C2F  spin:	db	'-','\','|','/'
                
 0246 50616765  result:	db	'Page'
 024A 6E6E6E2070res0:	db	'nnn patn '
 0253 6868206572res1:	db	'hh errs '
 025B 6E6E6E20  res2:	db	'nnn '
 025F 68680D0A00res3:	db	'hh',cr,lf,0
                
 0264 68683A204Enoerr:	db	'hh: No errors found.',cr,lf,0
 027B 52414D2054signon:	db	'RAM Test Z180 rev ',rev,cr,lf,0
 0291 4D656D6F72note:	db	'Memory size ',0
 029E 3531324B0Dt512k:	db	'512K',cr,lf,0
 02A5 314D0D0A00t1m:	db	'1M',cr,lf,0
                
                banks:
 02AA           	ds	64*4	; pattern seed or 0FFH, num errs, 1st err, n/u
 0100 =         lenbnks	equ	$-banks
                
 03AA           	ds	256
 04AA           stack:	ds	0
                
 04AA           	end	begin
