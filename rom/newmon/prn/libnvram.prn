                ; NVRAM library
                	public	cksum32, vcksum, scksum, nvget
                
                	maclib	z80
                	maclib	config
                
                ; NVRAM/SEEPROM commands
 0003 =         NVRD	equ	00000011b
 0002 =         NVWR	equ	00000010b
 0005 =         RDSR	equ	00000101b
 0006 =         WREN	equ	00000110b
                ; NVRAM/SEEPROM status bits
 0001 =         WIP	equ	00000001b
                
                	cseg
                
                ; IX = buffer, BC = length
                ; return: HL = cksum hi, DE = cksum lo
                cksum32:
 0000 210000    	lxi	h,0
 0003 110000    	lxi	d,0
                cks0:	ldx	a,+0
 0006+DD7E00    	DB	0DDH,A*8+46H,+0
                	inxix
 0009+DD23      	DB	0DDH,23H
 000B 83        	add	e
 000C 5F        	mov	e,a
                	jrnc	cks1
 000D+3007      	DB	30H,CKS1-$-1
 000F 14        	inr	d
                	jrnz	cks1
 0010+2004      	DB	20H,CKS1-$-1
 0012 2C        	inr	l
                	jrnz	cks1
 0013+2001      	DB	20H,CKS1-$-1
 0015 24        	inr	h
 0016 0B        cks1:	dcx	b
 0017 78        	mov	a,b
 0018 B1        	ora	c
                	jrnz	cks0
 0019+20EB      	DB	20H,CKS0-$-1
 001B C9        	ret
                
                ; Validates checksum in buffer IX
                ; return: NZ on checksum error
                ; a checksum of 00 00 00 00 means the buffer was all 00,
                ; which is invalid.
                vcksum:
                	pushix
 001C+DDE5      	DB	0DDH,0E5H
 001E 01FC01    	lxi	b,508
 0021 CD0000    	call	cksum32	; HL:DE is checksum
                	popix
 0024+DDE1      	DB	0DDH,0E1H
 0026 01F401    	lxi	b,500	; get IX displacement in range...
                	dadx	b
 0029+DD09      	DB	0DDH,B*8+09H
                	ldx	c,+10
 002B+DD4E0A    	DB	0DDH,C*8+46H,+10
                	ldx	b,+11
 002E+DD460B    	DB	0DDH,B*8+46H,+11
 0031 78        	mov	a,b	;
 0032 B1        	ora	c	; check first half zero
                	dsbc	b
 0033+ED42      	DB	0EDH,B*8+42H
 0035 C0        	rnz
                	ldx	c,+08
 0036+DD4E08    	DB	0DDH,C*8+46H,+08
                	ldx	b,+09
 0039+DD4609    	DB	0DDH,B*8+46H,+09
 003C B0        	ora	b	;
 003D B1        	ora	c	; check second half zero
 003E EB        	xchg
                	dsbc	b	; CY is clear
 003F+ED42      	DB	0EDH,B*8+42H
 0041 C0        	rnz
 0042 B7        	ora	a	; was checksum all zero?
                	jrz	vcksm0
 0043+2802      	DB	28H,VCKSM0-$-1
 0045 AF        	xra	a	; ZR
 0046 C9        	ret
 0047 3C        vcksm0:	inr	a	; NZ
 0048 C9        	ret
                
                ; Sets checksum in buffer IX
                ; Destroys (all)
                scksum:
                	pushix
 0049+DDE5      	DB	0DDH,0E5H
 004B 01FC01    	lxi	b,508
 004E CD0000    	call	cksum32
                	popix
 0051+DDE1      	DB	0DDH,0E1H
 0053 01F401    	lxi	b,500	; get IX displacement in range...
                	dadx	b
 0056+DD09      	DB	0DDH,B*8+09H
                	stx	l,+10
 0058+DD750A    	DB	0DDH,70H+L,+10
                	stx	h,+11
 005B+DD740B    	DB	0DDH,70H+H,+11
                	stx	e,+08
 005E+DD7308    	DB	0DDH,70H+E,+08
                	stx	d,+09
 0061+DD7209    	DB	0DDH,70H+D,+09
 0064 C9        	ret
                
                ; IX=buffer, HL = nvram address, DE = length
                nvget:
 0065 3E02      	mvi	a,NVSCS
 0067 D341      	out	spi$ctl
 0069 3E03      	mvi	a,NVRD
 006B D340      	out	spi$wr
 006D 7C        	mov	a,h
 006E D340      	out	spi$wr
 0070 7D        	mov	a,l
 0071 D340      	out	spi$wr
 0073 DB40      	in	spi$rd	; prime pump
 0075 0E40      	mvi	c,spi$rd
 0077 7B        	mov	a,e
 0078 B7        	ora	a
 0079 CA7D00    	jz	nvget1
 007C 14        	inr	d	; TODO: handle 64K... and overflow of 'buf'...
                nvget1:	pushix
 007D+DDE5      	DB	0DDH,0E5H
 007F E1        	pop	h
 0080 43        	mov	b,e
                nvget0:	inir	; B = 0 after
 0081+EDB2      	DB	0EDH,0B2H
 0083 15        	dcr	d
                	jrnz	nvget0
 0084+20FB      	DB	20H,NVGET0-$-1
 0086 AF        	xra	a	; not SCS
 0087 D341      	out	spi$ctl
 0089 C9        	ret
                
 008A           	end
