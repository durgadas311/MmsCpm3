		; Boot Module for CF - unit select via port CF$BA
			maclib	ram
**** ram.lib ****
**** bcf.asm ****
			maclib	core
**** core.lib ****
**** bcf.asm ****
			maclib	z80
**** z80.lib ****
**** bcf.asm ****
		
0080          	CF$BA	equ	80h		; CF base port
0088          	CF$DA	equ	CF$BA+8	; CF data port
0089          	CF$ER	equ	CF$BA+9	; CF error register (read)
0089          	CF$FR	equ	CF$BA+9	; CF feature register (write)
008A          	CF$SC	equ	CF$BA+10	; CF sector count
008B          	CF$SE	equ	CF$BA+11	; CF sector number
008C          	CF$CL	equ	CF$BA+12	; CF cylinder low
008D          	CF$CH	equ	CF$BA+13	; CF cylinder high
008E          	CF$DH	equ	CF$BA+14	; CF drive/head
008F          	CF$CS	equ	CF$BA+15	; CF command/status
		
00EF          	CMD$FEA	equ	0efh	; Set Features command
		
0001          	F$8BIT	equ	001h	; enable 8-bit transfer
0082          	F$NOWC	equ	082h	; disable write-cache
		
0046          	drv0	equ	70
0002          	ndrv	equ	2
		
1000          		org	1000h
1000  01      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  4602    		db	drv0,ndrv	; +2,+3: phy drv base, num
		
1004  C31310  		jmp	init	; +4: init entry
1007  C31510  		jmp	boot	; +7: boot entry
		
100A  46      		db	'F'	; +10: Boot command letter
100B  04      		db	4	; +11: front panel key
100C  80      		db	80h	; +12: port, 0 if variable
100D  8D9CFF  		db	10001101b,10011100b,11111111b	; +13: FP display ("CF ")
1010  434600  		db	'CF',0	; +16: mnemonic string
		
1013  AF      	init:	xra	a	; NC
1014  C9      		ret
		
1015          	boot:
			; Partition is passed to bootloader, but we need
			; segment offset before we can start.
			; stack: retL, retH, str0, str1, ...
1015  210200  		lxi	h,2
1018  39      		dad	sp
1019  EB      		xchg		; DE=string
101A  210000  		lxi	h,0	; def seg/lun
101D  225821  		shld	l2156h+2
1020  225A21  		shld	l2156h+4
1023  2E00    		mvi	l,0	; each socket wired as master (drive 0)
1025  3E46    		mvi	a,drv0
1027  323420  		sta	l2034h	; pre-loader expects 70-78 for partn
102A  1A      		ldax	d
102B  13      		inx	d
102C  FEC3    		cpi	0c3h	; JMP means no string present
102E  2823    		jrz	nostr
1030  B7      		ora	a	; check for "", too
1031  2820    		jrz	nostr
1033  CDC110  		call	trydig
1036  300F    		jrnc	gotdig
1038  CDD010  		call	tryltr
103B  D8      		rc
103C  1A      		ldax	d
103D  13      		inx	d
103E  B7      		ora	a
103F  2812    		jrz	gotit
1041  CDC110  		call	trydig
1044  D8      		rc
1045  1809    		jr	chkend
1047  1A      	gotdig:	ldax	d
1048  13      		inx	d
1049  B7      		ora	a
104A  2807    		jrz	gotit
104C  CDD010  		call	tryltr
104F  D8      		rc
1050  1A      	chkend:	ldax	d
1051  B7      		ora	a
1052  C0      		rnz	; max two chars
1053          	gotit:
1053  225621  	nostr:	shld	l2156h	; l2156h[0]=DRV|27:24, l2156h[1]=23:16
1056  3A3121  		lda	AIO$UNI	; 0000000d - 0/1
1059  C601    		adi	1	; 01b/10b
105B  D380    		out	CF$BA	; select CF card
105D  AF      		xra	a
105E  D389    		out	CF$FR	; needed after power-on?
			; select 8-bit mode
1060  3E01    		mvi	a,F$8BIT
1062  D389    		out	CF$FR
1064  3EEF    		mvi	a,CMD$FEA
1066  D38F    		out	CF$CS
1068  CDAC10  		call	waitcf
106B  D8      		rc
			; disable write-cache
106C  3E82    		mvi	a,F$NOWC
106E  D389    		out	CF$FR
1070  3EEF    		mvi	a,CMD$FEA
1072  D38F    		out	CF$CS
1074  CDAC10  		call	waitcf
1077  D8      		rc
1078  7D      		mov	a,l
1079  F6E0    		ori	11100000b	; LBA mode + std "1" bits
107B  D38E    		out	CF$DH	; LBA 27:4, drive 0, LBA mode
107D  7C      		mov	a,h
107E  D38D    		out	CF$CH	; LBA 23:16
1080  AF      		xra	a
1081  D38C    		out	CF$CL	; LBA 15:8
1083  D38B    		out	CF$SE	; LBA 7:0
1085  3E0A    		mvi	a,10
1087  D38A    		out	CF$SC	; 10 sectors (standard boot length)
1089  3E20    		mvi	a,20h	; READ SECTORS
108B  D38F    		out	CF$CS
108D  218022  		lxi	h,bootbf
1090  0E88    		mvi	c,CF$DA
1092  1E0A    		mvi	e,10
1094  0600    		mvi	b,0	; should always be 0 after inir
1096          	bcf0:
1096  CDAC10  		call	waitcf
1099  D8      		rc
109A  CB5F    		bit	3,a	; DRQ
109C  28F8    		jrz	bcf0
109E  EDB2    		inir	; 256 bytes
10A0  EDB2    		inir	; 512 bytes
10A2  1D      		dcr	e
10A3  20F1    		jrnz	bcf0
10A5  AF      		xra	a
10A6  D380    		out	CF$BA	; deselect drive
			; final status check?
10A8  E1      		pop	h	; adj stack for possible string
10A9  C33B00  		jmp	hwboot
		
10AC          	waitcf:
10AC  DB8F    		in	CF$CS
10AE  CB7F    		bit	7,a	; busy
10B0  20FA    		jrnz	waitcf
10B2  CB47    		bit	0,a	; error
10B4  2006    		jrnz	cferr
10B6  CB77    		bit	6,a	; ready
10B8  2802    		jrz	cferr
10BA  B7      		ora	a	; NC
10BB  C9      		ret
		
10BC          	cferr:
10BC  AF      		xra	a
10BD  D380    		out	CF$BA	; deselect drive
10BF  37      		stc
10C0  C9      		ret
		
10C1          	trydig:
10C1  FE30    		cpi	'0'	; digit?
10C3  D8      		rc	; error
10C4  FE3A    		cpi	'9'+1	; max 9 partitions
10C6  3F      		cmc
10C7  D8      		rc	; error - or letter
10C8  D630    		sui	'0'
10CA  C646    		adi	drv0
10CC  323420  		sta	l2034h	; pre-loader expects 70-78 for partn
10CF  C9      		ret
		
10D0          	tryltr:
10D0  FE41    		cpi	'A'
10D2  D8      		rc	; error - or digit
10D3  E65F    		ani	5fh	; toupper
10D5  D641    		sui	'A'	; 000sssss
10D7  FE1A    		cpi	26
10D9  3F      		cmc
10DA  D8      		rc
10DB  07      		rlc
10DC  07      		rlc
10DD  07      		rlc		; sssss000
10DE  67      		mov	h,a	; no overlap with DRV
10DF  C9      		ret
		
10E0  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
0000          	if ($ > 1800h)
		endif
		
1100          	last:	end



Statistics:

     4	passes
     0	jr promotions
   108	symbols
   256	bytes

    71	macro calls
  3759	macro bytes
     0	invented symbols
