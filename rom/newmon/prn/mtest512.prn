                ;****************************************************************
                ; H8-512K Banked Memory Test Program		 		*
                ; stand-alone version                		 		*
                ; Continuous, exhaustive.					*
                ;****************************************************************
                	$*MACRO
 0032 =         rev	equ	'2'
                
                ; NOTE: This does not test every single bit in memory,
                ; but does confirm that 32 unique 16K pages can be mapped
                ; into block 4000H.
                
                	maclib z80
                ;	maclib	ram	; doesn't work with REL files...
 2036 =         ctl$F2	equ	2036h
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 000D =         cr	equ	13
 000A =         lf	equ	10
 0008 =         bs	equ	8
 0007 =         bell	equ	7
                
 0000 =         mmu	equ	000h	; H8-512K Bank Switch Board base port
 0000 =         rd00K	equ	mmu+0
 0001 =         rd16K	equ	mmu+1
 0002 =         rd32K	equ	mmu+2
 0003 =         rd48K	equ	mmu+3
 0004 =         wr00K	equ	mmu+4
 0005 =         wr16K	equ	mmu+5
 0006 =         wr32K	equ	mmu+6
 0007 =         wr48K	equ	mmu+7
                
 4000 =         buf16K	equ	4000h
                
                	cseg
                begin:
 0000 31B704    	lxi	sp,stack
 0003 3E00      	mvi	a,mmu
 0005 213203    	lxi	h,port
 0008 CD7F02    	call	hexout
 000B 111603    	lxi	d,signon
 000E CD9302    	call	msgout
 0011 C3B900    	jmp	start
                
 0014 00        cont:	db	0	; continuous mode
                
 0015 00        seed0:	db	0
 0016 00        seed:	db	0
 0017 00        pgnum:	db	0
 0018 00        err0:	db	0
                
                ; If current mapping is not the default/disabled,
                ; things will likely crash here.
                mmu$init:
 0019 F3        	di
 001A 3E00      	mvi	a,0	; page 0
 001C D300      	out	rd00K
 001E D304      	out	wr00K
 0020 3C        	inr	a
 0021 D301      	out	rd16K
 0023 D305      	out	wr16K
 0025 3C        	inr	a
 0026 D302      	out	rd32K
 0028 D306      	out	wr32K
 002A 3C        	inr	a
 002B F680      	ori	080h	; MMU enable
 002D D303      	out	rd48K
 002F D307      	out	wr48K
 0031 FB        	ei
 0032 C9        	ret
                
                mmu$deinit:
 0033 F3        	di
                	; leave 080h off, disable MMU and force "pass-thru" mapping.
                	; really, only one OUT needs to be done, but just restore all.
                	; overkill, since we only ever changed rd/wr16K.
 0034 3E00      	mvi	a,0
 0036 D300      	out	rd00K
 0038 D304      	out	wr00K
 003A 3C        	inr	a
 003B D301      	out	rd16K
 003D D305      	out	wr16K
 003F 3C        	inr	a
 0040 D302      	out	rd32K
 0042 D306      	out	wr32K
 0044 3C        	inr	a
 0045 D303      	out	rd48K
 0047 D307      	out	wr48K
 0049 FB        	ei
 004A C9        	ret
                
                ; A=page num, HL=ref buf
                minchk:
 004B F680      	ori	080h
 004D D301      	out	rd16K	; map into 16K
 004F D305      	out	wr16K	; (not used - yet)
 0051 110040    	lxi	d,buf16K
 0054 010040    	lxi	b,16*1024
 0057 CD5B00    	call	compare
 005A C9        	ret
                
                ; IX=current bank results
                ; HL=ref buffer
                ; DE=test buffer
                ; BC=count
                compare:
 005B 1A        	ldax	d
 005C BE        	cmp	m
                	jrz	comp0
 005D+2811
                	inrx	+1
 005F+DD3401
                	jrnz	comp1
 0062+2003
                	dcrx	+1	; hold at 255
 0064+DD3501
                comp1:
                	ldx	a,+2
 0067+DD7E02
 006A 3C        	inr	a
                	jrnz	comp0
 006B+2003
                	stx	e,+2
 006D+DD7302
                comp0:
 0070 23        	inx	h
 0071 13        	inx	d
 0072 0B        	dcx	b
 0073 78        	mov	a,b
 0074 B1        	ora	c
                	jrnz	compare
 0075+20E4
                	ldx	a,+1
 0077+DD7E01
 007A B7        	ora	a
 007B C9        	ret
                
                ; A=seed (BCD)
                setpat:
 007C 210040    	lxi	h,buf16K
 007F 010040    	lxi	b,16*1024
                setpat0:
 0082 77        	mov	m,a
 0083 23        	inx	h
 0084 C601      	adi	1
 0086 27        	daa
 0087 5F        	mov	e,a
 0088 0B        	dcx	b
 0089 78        	mov	a,b
 008A B1        	ora	c
 008B 7B        	mov	a,e
                	jrnz	setpat0
 008C+20F4
 008E C9        	ret
                
                ; A=seed (BCD), IX=bank results
                chkpat:
 008F 210040    	lxi	h,buf16K
 0092 010040    	lxi	b,16*1024
                chkpat0:
 0095 BE        	cmp	m
                	jrz	chkpat1
 0096+2811
                	inrx	+1
 0098+DD3401
                	jrnz	chkpat2
 009B+2003
                	dcrx	+1	; hold at 255
 009D+DD3501
                chkpat2:
                	ldx	e,+2
 00A0+DD5E02
 00A3 1C        	inr	e
                	jrnz	chkpat1
 00A4+2003
                	stx	l,+2
 00A6+DD7502
                chkpat1:
 00A9 23        	inx	h
 00AA C601      	adi	1
 00AC 27        	daa
 00AD 5F        	mov	e,a
 00AE 0B        	dcx	b
 00AF 78        	mov	a,b
 00B0 B1        	ora	c
 00B1 7B        	mov	a,e
                	jrnz	chkpat0
 00B2+20E1
                	ldx	a,+1
 00B4+DD7E01
 00B7 B7        	ora	a
 00B8 C9        	ret
                
                start:
 00B9 F3        	di	; completely isolate ourself...
 00BA 3A3620    	lda	ctl$F2
 00BD E614      	ani	00010100b
 00BF F620      	ori	00100000b
 00C1 D3F2      	out	0f2h	; ORG0 on (ROM off), everything else as in RESET
                over:
                	; setup results buffer
 00C3 213703    	lxi	h,banks
 00C6 36FF      	mvi	m,0ffh	; pattern (none)
 00C8 23        	inx	h
 00C9 3600      	mvi	m,0	; num errs
 00CB 23        	inx	h
 00CC 36FF      	mvi	m,0ffh	; 1st err
 00CE 23        	inx	h
 00CF 3600      	mvi	m,0	; not used
 00D1 2B        	dcx	h
 00D2 2B        	dcx	h
 00D3 2B        	dcx	h
 00D4 113B03    	lxi	d,banks+4
 00D7 017C00    	lxi	b,lenbnks-4
                	ldir
 00DA+EDB0
                	; initialize buffer to detect errors
 00DC 3E99      	mvi	a,099h
 00DE CD7C00    	call	setpat
                
 00E1 CD1900    	call	mmu$init
                
                	lxix	banks
 00E4+DD21
 00E6+3703
                	; First check if low 4 pages work (3, actually)
 00E8 210000    	lxi	h,0000h
 00EB 3E00      	mvi	a,0	; page 0
 00ED CD4B00    	call	minchk
 00F0 321800    	sta	err0
 00F3 CDA702    	call	progress
 00F6 110400    	lxi	d,4
                	dadx	d
 00F9+DD19
 00FB 210040    	lxi	h,4000h
 00FE 3E01      	mvi	a,1	; page 1 - no-op
 0100 CD4B00    	call	minchk
 0103 4F        	mov	c,a
 0104 3A1800    	lda	err0
 0107 B1        	ora	c
 0108 321800    	sta	err0
 010B CDA702    	call	progress
 010E 110400    	lxi	d,4
                	dadx	d
 0111+DD19
 0113 210080    	lxi	h,8000h
 0116 3E02      	mvi	a,2	; page 2
 0118 CD4B00    	call	minchk
 011B 4F        	mov	c,a
 011C 3A1800    	lda	err0
 011F B1        	ora	c
 0120 321800    	sta	err0
 0123 CDA702    	call	progress
 0126 110400    	lxi	d,4
                	dadx	d
 0129+DD19
 012B 2100C0    	lxi	h,0c000h
 012E 3E03      	mvi	a,3	; page 3
 0130 CD4B00    	call	minchk
 0133 4F        	mov	c,a
 0134 3A1800    	lda	err0
 0137 B1        	ora	c
 0138 321800    	sta	err0
 013B CDA702    	call	progress
 013E 3A1800    	lda	err0
 0141 B7        	ora	a
 0142 C2C001    	jnz	nommu
 0145 110400    	lxi	d,4
                	dadx	d
 0148+DD19
                	; Now can do write tests...
 014A 3A1500    	lda	seed0
 014D 321600    	sta	seed
 0150 3E04      	mvi	a,4	; page number
 0152 321700    	sta	pgnum
                loop1:
 0155 3A1600    	lda	seed
                	stx	a,+0
 0158+DD7700
 015B 4F        	mov	c,a
 015C C601      	adi	1
 015E 27        	daa
 015F 321600    	sta	seed
 0162 3A1700    	lda	pgnum
 0165 F680      	ori	080h
 0167 D301      	out	rd16K	; map into 16K
 0169 D305      	out	wr16K	; both RD and WR
 016B 79        	mov	a,c
 016C CD7C00    	call	setpat
 016F 110400    	lxi	d,4
                	dadx	d
 0172+DD19
 0174 CDA702    	call	progress
 0177 3A1700    	lda	pgnum
 017A 3C        	inr	a
 017B 321700    	sta	pgnum
 017E FE20      	cpi	32
 0180 DA5501    	jc	loop1
                	; Now can check write...
                	lxix	banks+4*4
 0183+DD21
 0185+4703
 0187 3A1500    	lda	seed0
 018A 321600    	sta	seed
 018D 3E04      	mvi	a,4	; page number
 018F 321700    	sta	pgnum
                loop2:
 0192 3A1600    	lda	seed
                	stx	a,+0
 0195+DD7700
 0198 4F        	mov	c,a
 0199 C601      	adi	1
 019B 27        	daa
 019C 321600    	sta	seed
 019F 3A1700    	lda	pgnum
 01A2 F680      	ori	080h
 01A4 D301      	out	rd16K	; map into 16K
 01A6 D305      	out	wr16K	; both RD and WR
 01A8 79        	mov	a,c
 01A9 CD8F00    	call	chkpat
 01AC 110400    	lxi	d,4
                	dadx	d
 01AF+DD19
 01B1 CDA702    	call	progress
 01B4 3A1700    	lda	pgnum
 01B7 3C        	inr	a
 01B8 321700    	sta	pgnum
 01BB FE20      	cpi	32
 01BD DA9201    	jc	loop2
                
                nommu:
                	; done with MMU, report results...
                	lxix	banks
 01C0+DD21
 01C2+3703
 01C4 AF        	xra	a
 01C5 321700    	sta	pgnum
 01C8 0600      	mvi	b,0
                done0:
                	ldx	a,+1	; num errs
 01CA+DD7E01
 01CD B7        	ora	a
 01CE CA0202    	jz	done1
 01D1 04        	inr	b
 01D2 3A1700    	lda	pgnum
 01D5 21C802    	lxi	h,res0
 01D8 CD5202    	call	decout
                	ldx	a,+0
 01DB+DD7E00
 01DE 21D102    	lxi	h,res1
 01E1 CD7F02    	call	hexout
                	ldx	a,+1
 01E4+DD7E01
 01E7 21D902    	lxi	h,res2
 01EA CD5202    	call	decout
                	ldx	a,+2
 01ED+DD7E02
 01F0 21DD02    	lxi	h,res3
 01F3 CD7F02    	call	hexout
 01F6 C5        	push	b
                	pushix
 01F7+DDE5
 01F9 11C402    	lxi	d,result
 01FC CD9302    	call	msgout
                	popix
 01FF+DDE1
 0201 C1        	pop	b
 0202 110400    done1:	lxi	d,4
                	dadx	d
 0205+DD19
 0207 3A1700    	lda	pgnum
 020A 3C        	inr	a
 020B 321700    	sta	pgnum
 020E FE04      	cpi	4
 0210 C21D02    	jnz	done2
 0213 3A1800    	lda	err0
 0216 B7        	ora	a
 0217 C23702    	jnz	nommu0
 021A 3A1700    	lda	pgnum
                done2:
 021D FE20      	cpi	32
 021F DACA01    	jc	done0
 0222 78        	mov	a,b
 0223 B7        	ora	a
                	jrnz	dover	; already reported results
 0224+2020
 0226 21E202    	lxi	h,noerr
 0229 3A1500    	lda	seed0
 022C CD7F02    	call	hexout
 022F 11E202    	lxi	d,noerr
 0232 CD9302    	call	msgout
                	; TODO: restore and return to monitor
                	jr	dover
 0235+180F
                
                nommu0:
 0237 21F902    	lxi	h,mmuerr
 023A 3A1500    	lda	seed0
 023D CD7F02    	call	hexout
 0240 11F902    	lxi	d,mmuerr
 0243 CD9302    	call	msgout
                	; TODO: restore and return to monitor
                	;jr	dover
                dover:	; do test again...
 0246 3A1500    	lda	seed0
 0249 C601      	adi	1
 024B 27        	daa
 024C 321500    	sta	seed0
 024F C3C300    	jmp	over
                
                ; leading zeroes blanked - must preserve B
                decout:
 0252 0E00      	mvi	c,0
 0254 1664      	mvi	d,100
 0256 CD6302    	call	divide
 0259 160A      	mvi	d,10
 025B CD6302    	call	divide
 025E C630      	adi	'0'
 0260 77        	mov	m,a
 0261 23        	inx	h
 0262 C9        	ret
                
 0263 1E00      divide:	mvi	e,0
 0265 92        div0:	sub	d
 0266 1C        	inr	e
                	jrnc	div0
 0267+30FC
 0269 82        	add	d
 026A 1D        	dcr	e
                	jrnz	div1
 026B+2008
                	bit	0,c
 026D+CB41
                	jrnz	div1
 026F+2004
 0271 3620      	mvi	m,' '
 0273 23        	inx	h
 0274 C9        	ret
                div1:	setb	0,c
 0275+CBC1
 0277 F5        	push	psw	; remainder
 0278 3E30      	mvi	a,'0'
 027A 83        	add	e
 027B 77        	mov	m,a
 027C 23        	inx	h
 027D F1        	pop	psw	; remainder
 027E C9        	ret
                
 027F F5        hexout:	push	psw
 0280 07        	rlc
 0281 07        	rlc
 0282 07        	rlc
 0283 07        	rlc
 0284 CD8802    	call	hex0
 0287 F1        	pop	psw
 0288 E60F      hex0:	ani	0fh
 028A C690      	adi	90h
 028C 27        	daa
 028D CE40      	aci	40h
 028F 27        	daa
 0290 77        	mov	m,a
 0291 23        	inx	h
 0292 C9        	ret
                
 0293 1A        msgout:	ldax	d
 0294 B7        	ora	a
 0295 C8        	rz
 0296 13        	inx	d
 0297 CD9C02    	call	conout
                	jr	msgout
 029A+18F7
                
 029C F5        conout:	push	psw
 029D DBED      cono0:	in	0edh
 029F E620      	ani	00100000b
                	jrz	cono0
 02A1+28FA
 02A3 F1        	pop	psw
 02A4 D3E8      	out	0e8h
 02A6 C9        	ret
                
                progress:
 02A7 21BF02    	lxi	h,spinx
 02AA 34        	inr	m
 02AB 7E        	mov	a,m
 02AC E603      	ani	00000011b
 02AE 4F        	mov	c,a
 02AF 0600      	mvi	b,0
 02B1 21C002    	lxi	h,spin
 02B4 09        	dad	b
 02B5 7E        	mov	a,m
 02B6 CD9C02    	call	conout
 02B9 3E08      	mvi	a,bs
 02BB CD9C02    	call	conout
 02BE C9        	ret
                
 02BF 00        spinx:	db	0
 02C0 2D5C7C2F  spin:	db	'-','\','|','/'
                
 02C4 50616765  result:	db	'Page'
 02C8 6E6E6E2070res0:	db	'nnn patn '
 02D1 6868206572res1:	db	'hh errs '
 02D9 6E6E6E20  res2:	db	'nnn '
 02DD 68680D0A00res3:	db	'hh',cr,lf,0
                
 02E2 68683A204Enoerr:	db	'hh: No errors found.',cr,lf,0
 02F9 68683A2041mmuerr:	db	'hh: Aborting test: No MMU?',cr,lf,0
 0316 52414D2054signon:	db	'RAM Test H8-512K rev ',rev,' port '
 0332 68680D0A00port:	db	'hh',cr,lf,0
                
                banks:
 0337           	ds	32*4	; pattern seed or 0FFH, num errs, 1st err, n/u
 0080 =         lenbnks	equ	$-banks
                
 03B7           	ds	256
 04B7           stack:	ds	0
                
 04B7           	end	begin
