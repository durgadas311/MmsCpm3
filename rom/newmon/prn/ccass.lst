		; Command module for Cassette tape load/store
			maclib	ram
**** ram.lib ****
**** ccass.asm ****
			maclib	core
**** core.lib ****
**** ccass.asm ****
			maclib	z80
**** z80.lib ****
**** ccass.asm ****
		
		; ASCII control characters
0002          	STXc	equ	02h
0016          	SYNc	equ	16h
		
00F8          	tpd	equ	0f8h	; data port
00F9          	tpc	equ	0f9h	; ctrl/status port
		
1000          		org	1000h
1000  02      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  FF00    		db	255,0	; +2,+3: phy drv base, num
		
1004  C31D10  		jmp	init	; +4: init entry
1007  C32610  		jmp	cass	; +7: action entry
		
100A  FF      		db	-1	; +10: Command letter
100B  88      		db	88h	; +11: front panel key
100C  00      		db	0	; +12: port, 0 if variable
100D  FFFFFF  		db	11111111b,11111111b,11111111b	; +13: FP display
1010  43617373		db	'Cassette',0	; +16: mnemonic string
      65747465
      00
		
1019  0000    	crcsum:	dw	0
101B  0000    	savstk:	dw	0
		
101D          	init:
101D  3E4E    		mvi	a,01001110b	; 1 stop, no par, 8 data, 16x
101F  D3F9    		out	tpc
1021  AF      		xra	a
1022  D3F9    		out	tpc	; in case it was not "mode" state...
1024  AF      		xra	a	; NC
1025  C9      		ret
		
1026          	cass:
1026  ED731B10		sspd	savstk
102A  3A3B20  		lda	lstcmd
102D  FE88    		cpi	88h	; load key
102F  2802    		jrz	rmem
1031  185B    		jr	wmem
		
		; "read memory" a.k.a. load from cassette
		; load start => tpadr
		; end adr => ABUSS
		; exec adr => Reg[PC]
1033          	rmem:
1033  CDEB10  		call	beep
1036  0100FE  	load:	lxi	b,0fe00h
1039  CDFC10  	load0:	call	srs	; scan for record start...
			; DE=leader (8101h)
			; HA=byte count
103C  6F      		mov	l,a	; HL=byte count
103D  EB      		xchg		; DE=byte count, HL=leader
103E  0D      		dcr	c
103F  09      		dad	b
1040  7C      		mov	a,h
1041  C5      		push	b
1042  F5      		push	psw	; A=leader(HI)
1043  E67F    		ani	7fh
1045  B5      		ora	l
1046  3E02    		mvi	a,2	; tape header error
1048  203A    		jrnz	tperr	; wrong type/seq
104A  CD1911  		call	rnp	; get PC
104D  44      		mov	b,h
104E  4F      		mov	c,a	; BC=PC
104F  D5      		push	d
1050  111800  		lxi	d,24	; get PC
1053  2A1D20  		lhld	RegPtr
1056  19      		dad	d
1057  D1      		pop	d
1058  71      		mov	m,c
1059  23      		inx	h
105A  70      		mov	m,b	; save PC in Reg[PC]
105B  CD1911  		call	rnp	; memory load address
105E  6F      		mov	l,a	; HL=load addr
105F  220020  		shld	tpadr
1062  CD1D11  	load1:	call	rnb	; data byte
1065  77      		mov	m,a
1066  221420  		shld	ABUSS
1069  23      		inx	h
106A  1B      		dcx	d
106B  7A      		mov	a,d
106C  B3      		ora	e
106D  20F3    		jrnz	load1
106F  CD7910  		call	ctc	; verify checksum
1072  F1      		pop	psw	; A=leader(HI)
1073  C1      		pop	b	; BC=0fe00h...
1074  07      		rlc
1075  3871    		jrc	tft
1077  18C0    		jr	load0
		
1079  CD1911  	ctc:	call	rnp
107C  2A1910  		lhld	crcsum
107F  7C      		mov	a,h
1080  B5      		ora	l
1081  C8      		rz
1082  3E01    		mvi	a,1	; checksum error code
			;jr	tperr
1084  77      	tperr:	mov	m,a	; error code
1085  47      		mov	b,a
1086  CDE810  		call	tft
1089  ED7B1B10		lspd	savstk
108D  C9      		ret
		
		; "write memory" a.k.a. save to cassette
		; tpadr=start of save
		; ABUSS=end of save
		; Reg[PC]=entry/start execution address
108E          	wmem:
108E  CDEB10  		call	beep
1091  3E01    		mvi	a,00000001b	; TxEn
1093  D3F9    		out	tpc
1095  3E16    		mvi	a,SYNc
1097  0620    		mvi	b,32
1099  CD4211  	wmem1:	call	wnb
109C  10FB    		djnz	wmem1
109E  3E02    		mvi	a,STXc
10A0  CD4211  		call	wnb
10A3  210000  		lxi	h,0
10A6  221910  		shld	crcsum
10A9  210181  		lxi	h,8101h
10AC  CD3D11  		call	wnp
10AF  2A0020  		lhld	tpadr
10B2  EB      		xchg
10B3  2A1420  		lhld	ABUSS	; last byte to include
10B6  23      		inx	h	; +1 for all bytes
10B7  B7      		ora	a
10B8  ED52    		dsbc	d	; HL=length of data
10BA  CD3D11  		call	wnp
10BD  E5      		push	h
10BE  D5      		push	d
10BF  111800  		lxi	d,24	; get PC
10C2  2A1D20  		lhld	RegPtr
10C5  19      		dad	d
10C6  7E      		mov	a,m
10C7  23      		inx	h
10C8  66      		mov	h,m
10C9  6F      		mov	l,a
10CA  CD3D11  		call	wnp
10CD  E1      		pop	h	; former DE content
10CE  D1      		pop	d	; former HL content
10CF  CD3D11  		call	wnp
10D2  7E      	wmem2:	mov	a,m
10D3  CD4211  		call	wnb
10D6  221420  		shld	ABUSS
10D9  23      		inx	h
10DA  1B      		dcx	d
10DB  7A      		mov	a,d
10DC  B3      		ora	e
10DD  20F3    		jrnz	wmem2
10DF  2A1910  		lhld	crcsum
10E2  CD3D11  		call	wnp
10E5  CD3D11  		call	wnp
		; turn off tape and beep
10E8  AF      	tft:	xra	a
10E9  D3F9    		out	tpc
10EB  210920  	beep:	lxi	h,ctl$F0
10EE  7E      		mov	a,m
10EF  E67F    		ani	01111111b	; beep on
10F1  77      		mov	m,a
10F2  3E64    		mvi	a,200/2
10F4  CD2B00  		call	delay
10F7  7E      		mov	a,m
10F8  F680    		ori	10000000b	; beep off
10FA  77      		mov	m,a
10FB  C9      		ret
		
		; scan for header...
		; Returns DE=leader, HA=byte count
10FC  210000  	srs:	lxi	h,0
10FF  54      		mov	d,h
1100  CD1D11  	srs2:	call	rnb
1103  14      		inr	d
1104  FE16    		cpi	SYNc
1106  28F8    		jrz	srs2
1108  FE02    		cpi	STXc
110A  20F0    		jrnz	srs
110C  3E0A    		mvi	a,10
110E  BA      		cmp	d
110F  30EB    		jrnc	srs
1111  221910  		shld	crcsum	; zero checksum
1114  CD1911  		call	rnp	; leader code
1117  54      		mov	d,h
1118  5F      		mov	e,a
			;jr	rnp	; byte count
		; returns H=first byte, A=second byte
1119  CD1D11  	rnp:	call	rnb
111C  67      		mov	h,a
			;jr	rnb
111D  3E34    	rnb:	mvi	a,00110100b	; Err reset, RTS, RxEn, no DTR
111F  D3F9    		out	tpc
1121  CD2C11  	rnb1:	call	tpxit
1124  E602    		ani	00000010b	; RxR
1126  28F9    		jrz	rnb1
1128  DBF8    		in	tpd
112A  1825    		jr	crc
		
112C  3A3A20  	tpxit:	lda	kpchar
112F  FE6F    		cpi	01101111b	; cancel?
1131  DBF9    		in	tpc
1133  C0      		rnz
1134  AF      		xra	a
1135  323A20  		sta	kpchar
1138  ED7B1B10		lspd	savstk
113C  C9      		ret
		
		; HL=two bytes to save, big endian
113D  7C      	wnp:	mov	a,h
113E  CD4211  		call	wnb
1141  7D      		mov	a,l
			; jr	wnb
1142  F5      	wnb:	push	psw
1143  CD2C11  	wnb1:	call	tpxit	; check for cancel...
1146  E601    		ani	00000001b	; TxRdy
1148  28F9    		jrz	wnb1
114A  3E11    		mvi	a,00010001b	; TxEn, Err reset
114C  D3F9    		out	tpc
114E  F1      		pop	psw
114F  D3F8    		out	tpd
			;jr	crc
		; A=data byte
1151  C5      	crc:	push	b
1152  E5      		push	h
1153  0608    		mvi	b,8
1155  2A1910  		lhld	crcsum
1158  07      	crc1:	rlc
1159  4F      		mov	c,a
115A  CB25    		slar	l
115C  CB14    		ralr	h
115E  7C      		mov	a,h
115F  17      		ral
1160  A9      		xra	c
1161  0F      		rrc
1162  3008    		jrnc	crc2
1164  7C      		mov	a,h
1165  EE80    		xri	80h
1167  67      		mov	h,a
1168  7D      		mov	a,l
1169  EE05    		xri	05h
116B  6F      		mov	l,a
116C  79      	crc2:	mov	a,c
116D  10E9    		djnz	crc1
			; A was RLCed 8 times, back to original value
116F  221910  		shld	crcsum
1172  E1      		pop	h
1173  C1      		pop	b
1174  C9      		ret
		
1175  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFF
0000          	if ($ > 1800h)
		endif
		
1200          	last:	end



Statistics:

     4	passes
     0	jr promotions
   104	symbols
   512	bytes

   193	macro calls
  3759	macro bytes
     0	invented symbols
