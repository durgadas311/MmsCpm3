		; Boot Module for VDIP1 (USB thumb drive)
		; TODO: make port variable?
		
00D8          	vdip1	equ	0d8h	; assume part of Z80-DUART
		
			maclib	ram
**** ram.lib ****
**** bvdip1.asm ****
			maclib	core
**** core.lib ****
**** bvdip1.asm ****
			maclib	z80
**** z80.lib ****
**** bvdip1.asm ****
		
000D          	CR	equ	13
2280          	bbuf:	equ	2280h
2300          	vdbuf	equ	2300h
2380          	vdscr	equ	2380h
		
1000          		org	1000h
1000  02      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  2901    		db	41,1	; +2,+3: phy drv base, num
		
1004  C31A10  		jmp	init	; +4: init entry
1007  C32110  		jmp	boot	; +7: boot entry
		
100A  56      		db	'V'	; +10: Boot command letter
100B  06      		db	6	; +11: front panel key
100C  D8      		db	vdip1	; +12: port, 0 if variable
100D  83A486  		db	10000011b,10100100b,10000110b	; +13: FP display ("USb")
1010  56444950		db	'VDIP1',0	; +16: mnemonic string
      3100
		
1016  2E737973	sfx:	db	'.sys'
0004          	sfxlen	equ	$-sfx
		
101A          	init:
101A  CD7711  		call	runout
101D  CD5611  		call	sync
1020  C9      		ret	; pass/fail based on CY
		
1021          	boot:
1021  21EC10  		lxi	h,opr
1024  110023  		lxi	d,vdbuf
1027  CD1411  		call	strcpy
102A  218022  		lxi	h,bbuf	; possible string here
102D  7E      		mov	a,m
102E  FEC3    		cpi	0c3h	; JMP means no string
1030  2823    		jrz	boot5
			; else, A=str len
1032  4F      		mov	c,a
1033  0600    		mvi	b,0
1035  23      		inx	h
1036  7E      	xx0:	mov	a,m
1037  12      		stax	d
1038  FE0D    		cpi	CR
103A  280C    		jrz	xx1
103C  D62E    		sui	'.'	; 00:(A=='.')
103E  D601    		sui	1	; CY:==, NC:<>
1040  9F      		sbb	a	; FF:=='.', 00:<>'.'
1041  B0      		ora	b	; B=true if any '.' seen
1042  47      		mov	b,a
1043  23      		inx	h
1044  13      		inx	d
1045  0D      		dcr	c
1046  20EE    		jrnz	xx0
1048  04      	xx1:	inr	b
1049  2810    		jrz	boot6	; saw a '.', don't append '.sys'
104B  211610  		lxi	h,sfx
104E  010400  		lxi	b,sfxlen
1051  EDB0    		ldir
1053  1806    		jr	boot6
1055  21E010  	boot5:	lxi	h,defbt
1058  CD1411  		call	strcpy
105B  3E0D    	boot6:	mvi	a,CR
105D  12      		stax	d
105E  210023  		lxi	h,vdbuf
1061  CD2811  		call	vdcmd	; open file
1064  D8      		rc	; no cleanup at this point
1065  218023  		lxi	h,vdscr
1068  CD3A11  		call	vdrd
106B  3851    		jrc	bootx
			; TODO: get load parameters..
106D  2A8023  		lhld	vdscr
1070  22F110  		shld	memtop
1073  2A8223  		lhld	vdscr+2
1076  22F310  		shld	bnktop
1079  2A8423  		lhld	vdscr+4
107C  22F510  		shld	entry
107F  3A9023  		lda	vdscr+16	; ORG0 flag - don't care?
1082  32F710  		sta	copy
1085  218023  		lxi	h,vdscr
1088  CD3A11  		call	vdrd
108B  3831    		jrc	bootx
108D  118023  		lxi	d,vdscr	; load message
1090  CDF810  		call	print
1093  3AF210  		lda	comlen
1096  B7      		ora	a
1097  2808    		jrz	boot1
1099  57      		mov	d,a
109A  3AF110  		lda	memtop
109D  CDC510  		call	loadit
10A0  D8      		rc
10A1  3AF410  	boot1:	lda	bnklen
10A4  B7      		ora	a
10A5  2808    		jrz	boot2
10A7  57      		mov	d,a
10A8  3AF310  		lda	bnktop
10AB  CDC510  		call	loadit
10AE  D8      		rc
10AF          	boot2:	; ready to go?
10AF  CDBE10  		call	bootx	; close file
			; cleanup clocks...
10B2  F3      		di
10B3  3E9F    		mvi	a,10011111b	; H8 2mS off, display blank
10B5  320920  		sta	ctl$F0
10B8  D3F0    		out	0f0h
			; already at ORG0... H89 2mS already off?
10BA  2AF510  		lhld	entry
10BD  E9      		pchl
		
10BE          	bootx:	; exit boot on error, must close file
10BE  21DC10  		lxi	h,clf
10C1  CD2811  		call	vdcmd
10C4  C9      		ret
		
		; A=top page (might be 0 for 64K)
		; D=num pages
10C5  67      	loadit:	mov	h,a
10C6  2E00    		mvi	l,0	; HL=top address
10C8  B7      		ora	a
10C9  CB12    		ralr	d	; num records
10CB          	load0:
10CB  0180FF  		lxi	b,-128
10CE  09      		dad	b
10CF  E5      		push	h
10D0  D5      		push	d
10D1  CD3A11  		call	vdrd
10D4  D1      		pop	d
10D5  E1      		pop	h
10D6  D8      		rc		; error
10D7  15      		dcr	d
10D8  20F1    		jrnz	load0
10DA  B7      		ora	a	; NC
10DB  C9      		ret
		
10DC  636C660D	clf:	db	'clf',CR
10E0  64656662	defbt:	db	'defboot.sys',0	; default boot file
      6F6F742E
      73797300
10EC  6F707220	opr:	db	'opr ',0	; command segment
      00
		
10F1  00      	memtop:	db	0
10F2  00      	comlen:	db	0
10F3  00      	bnktop:	db	0
10F4  00      	bnklen:	db	0
10F5  0000    	entry:	dw	0
		; don't care about cfgtbl?
10F7  00      	copy:	db	0	; 'C' if ORG0 required
		
		; BDOS-style print function
		; DE=message, '$' terminated
10F8  1A      	print:	ldax	d
10F9  FE24    		cpi	'$'
10FB  C8      		rz
10FC  CD0211  		call	outcon
10FF  13      		inx	d
1100  18F6    		jr	print
		
1102  2A2600  	outcon:	lhld	conout
1105  E9      		pchl
		
			maclib	vdip1
**** vdip1.lib ****
**** bvdip1.asm ****
		
11D8  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
0000          	if ($ > 1800h)
		endif
		
1200          	last:	end



Statistics:

     4	passes
     0	jr promotions
   121	symbols
   512	bytes

   120	macro calls
  3759	macro bytes
     0	invented symbols
