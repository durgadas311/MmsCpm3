		; Boot Module for VDIP1 (USB thumb drive)
		; TODO: make port variable?
		
			maclib	ram
**** ram.lib ****
**** bvdip1.asm ****
			maclib	core
**** core.lib ****
**** bvdip1.asm ****
			maclib	setup
**** setup.lib ****
**** bvdip1.asm ****
			maclib	z80
**** z80.lib ****
**** bvdip1.asm ****
		
000D          	CR	equ	13
2280          	bbuf:	equ	2280h
2300          	vdbuf	equ	2300h
2380          	vdscr	equ	2380h
		
1000          		org	1000h
1000  03      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  2901    		db	41,1	; +2,+3: phy drv base, num
		
1004  C31A10  		jmp	init	; +4: init entry
1007  C32D10  		jmp	boot	; +7: boot entry
		
100A  56      		db	'V'	; +10: Boot command letter
100B  06      		db	6	; +11: front panel key
100C  00      		db	0	; +12: port, 0 if variable
100D  83A486  		db	10000011b,10100100b,10000110b	; +13: FP display ("USb")
1010  56444950		db	'VDIP1',0	; +16: mnemonic string
      3100
		
1016  2E737973	sfx:	db	'.sys'
0004          	sfxlen	equ	$-sfx
		
101A          	init:
101A  3A10F9  		lda	susave+vdipt
101D  FEFF    		cpi	0ffh
101F  2002    		jrnz	init0
1021  3ED8    		mvi	a,0d8h	; default
1023  325021  	init0:	sta	cport	; for everyone to use (incl. utils)
1026  CD8A11  		call	runout
1029  CD6811  		call	sync
102C  C9      		ret	; pass/fail based on CY
		
102D          	boot:
102D  21FE10  		lxi	h,opr
1030  110023  		lxi	d,vdbuf
1033  CD2611  		call	strcpy
1036  218022  		lxi	h,bbuf	; possible string here
1039  7E      		mov	a,m
103A  FEC3    		cpi	0c3h	; JMP means no string
103C  2829    		jrz	boot5
103E  B7      		ora	a	; check for "", too
103F  2826    		jrz	boot5
			; else, A=str len
1041  4F      		mov	c,a
1042  0600    		mvi	b,0
1044  23      		inx	h
1045  7E      	xx0:	mov	a,m
1046  12      		stax	d
1047  B7      		ora	a
1048  2810    		jrz	xx1
104A  FE20    		cpi	' '	; possible command options follow
104C  280C    		jrz	xx1
104E  D62E    		sui	'.'	; 00:(A=='.')
1050  D601    		sui	1	; CY:==, NC:<>
1052  9F      		sbb	a	; FF:=='.', 00:<>'.'
1053  B0      		ora	b	; B=true if any '.' seen
1054  47      		mov	b,a
1055  23      		inx	h
1056  13      		inx	d
1057  0D      		dcr	c
1058  20EB    		jrnz	xx0
105A  04      	xx1:	inr	b
105B  2810    		jrz	boot6	; saw a '.', don't append '.sys'
105D  211610  		lxi	h,sfx
1060  010400  		lxi	b,sfxlen
1063  EDB0    		ldir
1065  1806    		jr	boot6
1067  21F210  	boot5:	lxi	h,defbt
106A  CD2611  		call	strcpy
106D  3E0D    	boot6:	mvi	a,CR
106F  12      		stax	d
1070  210023  		lxi	h,vdbuf
1073  CD3A11  		call	vdcmd	; open file
1076  D8      		rc	; no cleanup at this point
1077  218023  		lxi	h,vdscr
107A  CD4C11  		call	vdrd
107D  3851    		jrc	bootx
			; TODO: get load parameters..
107F  2A8023  		lhld	vdscr
1082  220311  		shld	memtop
1085  2A8223  		lhld	vdscr+2
1088  220511  		shld	bnktop
108B  2A8423  		lhld	vdscr+4
108E  220711  		shld	entry
1091  3A9023  		lda	vdscr+16	; ORG0 flag - don't care?
1094  320911  		sta	copy
1097  218023  		lxi	h,vdscr
109A  CD4C11  		call	vdrd
109D  3831    		jrc	bootx
109F  118023  		lxi	d,vdscr	; load message
10A2  CD0A11  		call	print
10A5  3A0411  		lda	comlen
10A8  B7      		ora	a
10A9  2808    		jrz	boot1
10AB  57      		mov	d,a
10AC  3A0311  		lda	memtop
10AF  CDD710  		call	loadit
10B2  D8      		rc
10B3  3A0611  	boot1:	lda	bnklen
10B6  B7      		ora	a
10B7  2808    		jrz	boot2
10B9  57      		mov	d,a
10BA  3A0511  		lda	bnktop
10BD  CDD710  		call	loadit
10C0  D8      		rc
10C1          	boot2:	; ready to go?
10C1  CDD010  		call	bootx	; close file
			; cleanup clocks...
10C4  F3      		di
10C5  3E9F    		mvi	a,10011111b	; H8 2mS off, display blank
10C7  320920  		sta	ctl$F0
10CA  D3F0    		out	0f0h
			; already at ORG0... H89 2mS already off?
10CC  2A0711  		lhld	entry
10CF  E9      		pchl
		
10D0          	bootx:	; exit boot on error, must close file
10D0  21EE10  		lxi	h,clf
10D3  CD3A11  		call	vdcmd
10D6  C9      		ret
		
		; A=top page (might be 0 for 64K)
		; D=num pages
10D7  67      	loadit:	mov	h,a
10D8  2E00    		mvi	l,0	; HL=top address
10DA  B7      		ora	a
10DB  CB12    		ralr	d	; num records
10DD          	load0:
10DD  0180FF  		lxi	b,-128
10E0  09      		dad	b
10E1  E5      		push	h
10E2  D5      		push	d
10E3  CD4C11  		call	vdrd
10E6  D1      		pop	d
10E7  E1      		pop	h
10E8  D8      		rc		; error
10E9  15      		dcr	d
10EA  20F1    		jrnz	load0
10EC  B7      		ora	a	; NC
10ED  C9      		ret
		
10EE  636C660D	clf:	db	'clf',CR
10F2  64656662	defbt:	db	'defboot.sys',0	; default boot file
      6F6F742E
      73797300
10FE  6F707220	opr:	db	'opr ',0	; command segment
      00
		
1103  00      	memtop:	db	0
1104  00      	comlen:	db	0
1105  00      	bnktop:	db	0
1106  00      	bnklen:	db	0
1107  0000    	entry:	dw	0
		; don't care about cfgtbl?
1109  00      	copy:	db	0	; 'C' if ORG0 required
		
		; BDOS-style print function
		; DE=message, '$' terminated
110A  1A      	print:	ldax	d
110B  FE24    		cpi	'$'
110D  C8      		rz
110E  CD1411  		call	outcon
1111  13      		inx	d
1112  18F6    		jr	print
		
1114  2A2600  	outcon:	lhld	conout
1117  E9      		pchl
		
			maclib	vdip1
**** vdip1.lib ****
**** bvdip1.asm ****
		
1218  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
0000          	if ($ > 1800h)
		endif
		
1300          	last:	end



Statistics:

     4	passes
     0	jr promotions
   160	symbols
   768	bytes

   332	macro calls
  3759	macro bytes
     0	invented symbols
