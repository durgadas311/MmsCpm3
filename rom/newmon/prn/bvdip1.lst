		; Boot Module for VDIP1 (USB thumb drive)
		; TODO: make port variable?
		
00D8          	vdip1	equ	0d8h	; assume part of Z80-DUART
		
			maclib	ram
**** ram.lib ****
**** bvdip1.asm ****
			maclib	core
**** core.lib ****
**** bvdip1.asm ****
			maclib	z80
**** z80.lib ****
**** bvdip1.asm ****
		
000D          	CR	equ	13
2280          	bbuf:	equ	2280h
2300          	vdbuf	equ	2300h
2380          	vdscr	equ	2380h
		
1000          		org	1000h
1000  02      	first:	db	HIGH (last-first)	; +0: num pages
1001  10      		db	HIGH first		; +1: ORG page
1002  2901    		db	41,1	; +2,+3: phy drv base, num
		
1004  C31A10  		jmp	init	; +4: init entry
1007  C32110  		jmp	boot	; +7: boot entry
		
100A  56      		db	'V'	; +10: Boot command letter
100B  06      		db	6	; +11: front panel key
100C  D8      		db	vdip1	; +12: port, 0 if variable
100D  83A486  		db	10000011b,10100100b,10000110b	; +13: FP display ("USb")
1010  56444950		db	'VDIP1',0	; +16: mnemonic string
      3100
		
1016  2E737973	sfx:	db	'.sys'
0004          	sfxlen	equ	$-sfx
		
101A          	init:
101A  CD7E11  		call	runout
101D  CD5C11  		call	sync
1020  C9      		ret	; pass/fail based on CY
		
1021          	boot:
1021  21F210  		lxi	h,opr
1024  110023  		lxi	d,vdbuf
1027  CD1A11  		call	strcpy
102A  218022  		lxi	h,bbuf	; possible string here
102D  7E      		mov	a,m
102E  FEC3    		cpi	0c3h	; JMP means no string
1030  2829    		jrz	boot5
1032  B7      		ora	a	; check for "", too
1033  2826    		jrz	boot5
			; else, A=str len
1035  4F      		mov	c,a
1036  0600    		mvi	b,0
1038  23      		inx	h
1039  7E      	xx0:	mov	a,m
103A  12      		stax	d
103B  B7      		ora	a
103C  2810    		jrz	xx1
103E  FE20    		cpi	' '	; possible command options follow
1040  280C    		jrz	xx1
1042  D62E    		sui	'.'	; 00:(A=='.')
1044  D601    		sui	1	; CY:==, NC:<>
1046  9F      		sbb	a	; FF:=='.', 00:<>'.'
1047  B0      		ora	b	; B=true if any '.' seen
1048  47      		mov	b,a
1049  23      		inx	h
104A  13      		inx	d
104B  0D      		dcr	c
104C  20EB    		jrnz	xx0
104E  04      	xx1:	inr	b
104F  2810    		jrz	boot6	; saw a '.', don't append '.sys'
1051  211610  		lxi	h,sfx
1054  010400  		lxi	b,sfxlen
1057  EDB0    		ldir
1059  1806    		jr	boot6
105B  21E610  	boot5:	lxi	h,defbt
105E  CD1A11  		call	strcpy
1061  3E0D    	boot6:	mvi	a,CR
1063  12      		stax	d
1064  210023  		lxi	h,vdbuf
1067  CD2E11  		call	vdcmd	; open file
106A  D8      		rc	; no cleanup at this point
106B  218023  		lxi	h,vdscr
106E  CD4011  		call	vdrd
1071  3851    		jrc	bootx
			; TODO: get load parameters..
1073  2A8023  		lhld	vdscr
1076  22F710  		shld	memtop
1079  2A8223  		lhld	vdscr+2
107C  22F910  		shld	bnktop
107F  2A8423  		lhld	vdscr+4
1082  22FB10  		shld	entry
1085  3A9023  		lda	vdscr+16	; ORG0 flag - don't care?
1088  32FD10  		sta	copy
108B  218023  		lxi	h,vdscr
108E  CD4011  		call	vdrd
1091  3831    		jrc	bootx
1093  118023  		lxi	d,vdscr	; load message
1096  CDFE10  		call	print
1099  3AF810  		lda	comlen
109C  B7      		ora	a
109D  2808    		jrz	boot1
109F  57      		mov	d,a
10A0  3AF710  		lda	memtop
10A3  CDCB10  		call	loadit
10A6  D8      		rc
10A7  3AFA10  	boot1:	lda	bnklen
10AA  B7      		ora	a
10AB  2808    		jrz	boot2
10AD  57      		mov	d,a
10AE  3AF910  		lda	bnktop
10B1  CDCB10  		call	loadit
10B4  D8      		rc
10B5          	boot2:	; ready to go?
10B5  CDC410  		call	bootx	; close file
			; cleanup clocks...
10B8  F3      		di
10B9  3E9F    		mvi	a,10011111b	; H8 2mS off, display blank
10BB  320920  		sta	ctl$F0
10BE  D3F0    		out	0f0h
			; already at ORG0... H89 2mS already off?
10C0  2AFB10  		lhld	entry
10C3  E9      		pchl
		
10C4          	bootx:	; exit boot on error, must close file
10C4  21E210  		lxi	h,clf
10C7  CD2E11  		call	vdcmd
10CA  C9      		ret
		
		; A=top page (might be 0 for 64K)
		; D=num pages
10CB  67      	loadit:	mov	h,a
10CC  2E00    		mvi	l,0	; HL=top address
10CE  B7      		ora	a
10CF  CB12    		ralr	d	; num records
10D1          	load0:
10D1  0180FF  		lxi	b,-128
10D4  09      		dad	b
10D5  E5      		push	h
10D6  D5      		push	d
10D7  CD4011  		call	vdrd
10DA  D1      		pop	d
10DB  E1      		pop	h
10DC  D8      		rc		; error
10DD  15      		dcr	d
10DE  20F1    		jrnz	load0
10E0  B7      		ora	a	; NC
10E1  C9      		ret
		
10E2  636C660D	clf:	db	'clf',CR
10E6  64656662	defbt:	db	'defboot.sys',0	; default boot file
      6F6F742E
      73797300
10F2  6F707220	opr:	db	'opr ',0	; command segment
      00
		
10F7  00      	memtop:	db	0
10F8  00      	comlen:	db	0
10F9  00      	bnktop:	db	0
10FA  00      	bnklen:	db	0
10FB  0000    	entry:	dw	0
		; don't care about cfgtbl?
10FD  00      	copy:	db	0	; 'C' if ORG0 required
		
		; BDOS-style print function
		; DE=message, '$' terminated
10FE  1A      	print:	ldax	d
10FF  FE24    		cpi	'$'
1101  C8      		rz
1102  CD0811  		call	outcon
1105  13      		inx	d
1106  18F6    		jr	print
		
1108  2A2600  	outcon:	lhld	conout
110B  E9      		pchl
		
			maclib	vdip1
**** vdip1.lib ****
**** bvdip1.asm ****
		
11E8  FFFFFFFF		rept	(($+0ffh) and 0ff00h)-$
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
      FFFFFFFF
0000          	if ($ > 1800h)
		endif
		
1200          	last:	end



Statistics:

     4	passes
     0	jr promotions
   137	symbols
   512	bytes

   113	macro calls
  3759	macro bytes
     0	invented symbols
