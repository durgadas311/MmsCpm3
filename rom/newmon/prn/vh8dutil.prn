                ; Standalone utility to dump core for CP/M 3 (H8x512K) on VDIP1
                ; linked with vdip1.rel
 0008 =         VERN	equ	008h
                
                	extrn	strcpy,strcmp,sync,runout
                	extrn	vdcmd,vdend,vdrd,vdmsg,vdout,vdprmp
                	public	vdbuf
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0007 =         BEL	equ	7
 0003 =         CTLC	equ	3
 0008 =         BS	equ	8
                
                	maclib	z180
                	maclib	core
                	aseg
                	maclib	ram
                
                ;...
                
                ; Commands:
                ;	D n	set Drive number
                ;	V n	set Volume ID
                ;	I n	Set sector Interleave
                ;	R file	Restore image from file (Recreate floppy)
                ;	S file	Save image to file (Save floppy)
                
 0A00 =         zbuf	equ	0a00h	; buffer size 1 track
 0100 =         zstk	equ	100h	; stack size
                
                ; disk addresses for H17Floppy ROM and RAM
 2061 =         dabort	equ	2061h	; jmp L1bf6
 2085 =         dsdp	equ	2085h
 2076 =         dsdt	equ	2076h
 2088 =         dsts	equ	2088h
 1C19 =         clock	equ	1c19h
 1EED =         wsp1	equ	1eedh
 2097 =         dwnb	equ	2097h
 205E =         dxok	equ	205eh
 206D =         dwrite	equ	206dh
 2067 =         dread	equ	2067h
 201F =         uivec	equ	201fh
 2008 =         mflag	equ	2008h
 20A0 =         dtt	equ	20a0h
 20A4 =         ddlyhs	equ	20a4h
 20A2 =         ddvctl	equ	20a2h
 20A3 =         ddlymo	equ	20a3h
 20A9 =         ddrvtb	equ	20a9h
 20A7 =         dvolpt	equ	20a7h
 2053 =         dwhda	equ	2053h
 2073 =         ddts	equ	2073h
 208E =         dudly	equ	208eh
 2091 =         dwsc	equ	2091h
 2082 =         drdb	equ	2082h
                
                
                	cseg
 0000 F3        	di
 0001 31A713    	lxi	sp,spint
 0004 3AFE0F    	lda	prodid	; LSB of product ID
 0007 E601      	ani	prnofp	; No FP?
 0009 329100    	sta	nofp
                
 000C 3EC3      	mvi	a,0c3h	; jmp
 000E 321F20    	sta	uivec
 0011 21191C    	lxi	h,clock
 0014 222020    	shld	uivec+1
 0017 31A713    	lxi	sp,spint
 001A 210820    	lxi	h,mflag	; turn on counter
 001D 7E        	mov	a,m
 001E F601      	ori	00000001b
 0020 77        	mov	m,a
 0021 CD5100    	call	ena2ms
 0024 FB        	ei
 0025 114405    	lxi	d,signon
 0028 CD1105    	call	print
 002B 115105    	lxi	d,phelp
 002E CD1105    	call	print
 0031 CD6120    	call	dabort	; (2mS intr must be ON) track 0
 0034 CDBE03    	call	shwprm
                main1:
                	; Prompt for command and params,
                	; perform command,
                	; close file...
 0037 CD7E02    	call	comnd
                	jrnc	main1
 003A+30FB      	DB	30H,MAIN1-$-1
                exit:
 003C CD7500    	call	dis2ms
 003F 2A1E00    	lhld	retmon
 0042 E9        	pchl
                
 0043 118306    abort:	lxi	d,abrted
 0046 CD1105    	call	print
 0049 216903    	lxi	h,clf
 004C CD0000    	call	vdcmd
                	jr	main1
 004F+18E6      	DB	18H,MAIN1-$-1
                
                ; Turn on 2mS clock intrs, interrupts already disabled
 0051 3A9100    ena2ms:	lda	nofp
 0054 B7        	ora	a
                	jrnz	nfp2ms	; H89 and/or extended H8-Z80 boards
 0055+200D      	DB	20H,NFP2MS-$-1
 0057 210920    	lxi	h,ctl$F0
 005A 7E        	mov	a,m
 005B 329200    	sta	sav$F0
 005E F640      	ori	01000000b	; 2mS ON
 0060 77        	mov	m,a
 0061 D3F0      	out	0f0h
 0063 C9        	ret
 0064 213620    nfp2ms:	lxi	h,ctl$F2
 0067 7E        	mov	a,m
 0068 329300    	sta	sav$F2
 006B F602      	ori	00000010b	; 2mS ON
 006D 77        	mov	m,a
 006E D3F2      	out	0f2h
 0070 E602      	ani	00000010b	; unlock enable
 0072 D3F3      	out	0f3h		; special Z80 board extension
 0074 C9        	ret
                
 0075 3A9100    dis2ms:	lda	nofp
 0078 B7        	ora	a
                	jrnz	nfp0ms
 0079+2009      	DB	20H,NFP0MS-$-1
 007B 3A9200    	lda	sav$F0
 007E 320920    	sta	ctl$F0
 0081 D3F0      	out	0f0h
 0083 C9        	ret
 0084 3A9300    nfp0ms:	lda	sav$F2
 0087 323620    	sta	ctl$F2
 008A D3F2      	out	0f2h
 008C E602      	ani	00000010b	; unlock enable
 008E D3F3      	out	0f3h		; special Z80 board extension
 0090 C9        	ret
                
 0091 00        nofp:	db	0
 0092 00        sav$F0:	db	0
 0093 00        sav$F2:	db	0
                
                ; format a single track
                ; B = track C = vol#
                ftrk:
 0094 F3        	di
 0095 210820    	lxi	h,mflag	; turn on counter
 0098 7E        	mov	a,m
 0099 F601      	ori	00000001b
 009B 77        	mov	m,a
 009C 78        	mov	a,b
 009D 32A020    	sta	dtt
 00A0 3E02      	mvi	a,2
 00A2 32A420    	sta	ddlyhs
 00A5 AF        	xra	a
 00A6 D37F      	out	7fh
 00A8 32A220    	sta	ddvctl
 00AB 32A320    	sta	ddlymo
 00AE 21AA20    	lxi	h,ddrvtb+1
 00B1 22A720    	shld	dvolpt
 00B4 71        	mov	m,c
 00B5 FB        	ei
 00B6 CD8520    	call	dsdp	; sdp
 00B9 CD7620    	call	dsdt	; dis intrs
 00BC AF        	xra	a
 00BD D37E      	out	7eh
 00BF 3C        	inr	a
 00C0 325320    	sta	dwhda
 00C3 3AA220    	lda	ddvctl
 00C6 3C        	inr	a
 00C7 D37F      	out	7fh
                trk1:
 00C9 CD8820    	call	dsts	; skip this sector
 00CC 3AA420    	lda	ddlyhs
 00CF A7        	ana	a
 00D0 C2C900    	jnz	trk1	; wait delay
 00D3 2AA720    	lhld	dvolpt
 00D6 46        	mov	b,m	; vol#
 00D7 2A9E06    	lhld	secpntr	; sec interleave table
                trk2:
 00DA 0E0A      	mvi	c,10
 00DC CDED1E    	call	wsp1	; writes 0's
 00DF 78        	mov	a,b	; vol#
 00E0 CD9720    	call	dwnb
 00E3 3AA020    	lda	dtt	; track
 00E6 CD9720    	call	dwnb
 00E9 7E        	mov	a,m	; sec#
 00EA CD9720    	call	dwnb
 00ED 23        	inx	h	; incr sec pntr
 00EE 7A        	mov	a,d	; ?chksum?
 00EF CD9720    	call	dwnb
 00F2 0E10      	mvi	c,16
 00F4 CDED1E    	call	wsp1
                trk3:
 00F7 CD9720    	call	dwnb
 00FA 0D        	dcr	c	; 256 0's
 00FB C2F700    	jnz	trk3
                trk4:
 00FE AF        	xra	a
 00FF CD9720    	call	dwnb	; end pad
 0102 DB7F      	in	7fh
 0104 1F        	rar
 0105 D2FE00    	jnc	trk4	; until sec end
 0108 7E        	mov	a,m
 0109 B7        	ora	a	; 0 marks end of sectable
 010A C2DA00    	jnz	trk2	; until end of track
 010D 3AA220    	lda	ddvctl
 0110 D37F      	out	7fh
 0112 FB        	ei
 0113 CD5E20    	call	dxok
 0116 3E14      	mvi	a,20
 0118 325320    	sta	dwhda
 011B 210820    	lxi	h,mflag	; turn off counter ?
 011E 7E        	mov	a,m
 011F E6FE      	ani	11111110b
 0121 77        	mov	m,a
 0122 C9        	ret
                
                ; Read file from VDIP1 into 'buffer'.
                ; Reads 1 H17 track - 10x256 sectors.
                ; File was already opened.
                ; Read 128 bytes at a time, as per vdrd routine.
 0123 21A706    vrtrk:	lxi	h,buffer
 0126 0614      	mvi	b,20	; 20 records == 10 sectors
 0128 C5        vrt0:	push	b
 0129 CD0000    	call	vdrd
 012C C1        	pop	b
 012D D8        	rc	; error
                	djnz	vrt0
 012E+10F8      	DB	10H,VRT0-$-1
 0130 C9        	ret
                
                ; Write to file on VDIP1 from 'buffer'.
                ; Writes 1 H17 track - 10x256 sectors.
                ; File was already opened (for write).
                ; Write 512 bytes at a time.
 0131 11A706    vwtrk:	lxi	d,buffer
 0134 0605      	mvi	b,5	; 5x512 == 10x256
 0136 C5        vwt0:	push	b
 0137 CD3F01    	call	vdwr
 013A C1        	pop	b
 013B D8        	rc
                	djnz	vwt0
 013C+10F8      	DB	10H,VWT0-$-1
 013E C9        	ret
                
                ; This probably should be in vdip1.asm...
                ; DE=data buffer (dma adr)
                ; Returns DE=next
 013F 215801    vdwr:	lxi	h,wrf
 0142 CD0000    	call	vdmsg
 0145 010002    	lxi	b,512
 0148 1A        vdwr0:	ldax	d
 0149 CD0000    	call	vdout
 014C 13        	inx	d
 014D 0B        	dcx	b
 014E 78        	mov	a,b
 014F B1        	ora	c
                	jrnz	vdwr0
 0150+20F6      	DB	20H,VDWR0-$-1
 0152 D5        	push	d
 0153 CD0000    	call	vdend
 0156 D1        	pop	d
 0157 C9        	ret	; CY=error
                
 0158 7772662000wrf:	db	'wrf ',0,0,2,0,CR,0	; 512 byte writes
                
                ; Copy tracks from image file onto H17
                wrimg:
 0162 3A9006    	lda	curdrv
 0165 323121    	sta	AIO$UNI
 0168 CD8520    	call	dsdp	; select unit number
 016B AF        	xra	a
 016C 32A106    	sta	secnum
 016F 32A206    	sta	secnum+1
 0172 32A006    	sta	curtrk
                wrimg1:
 0175 21AA20    	lxi	h,ddrvtb+1
 0178 77        	mov	m,a
 0179 22A720    	shld	dvolpt
                ;
 017C CD2301    	call	vrtrk	; read track from image
 017F D8        	rc
                ;
 0180 3AA006    	lda	curtrk
 0183 47        	mov	b,a
 0184 B7        	ora	a
 0185 CA8B01    	jz	wrimg3	; c is zero from above
 0188 3A9106    	lda	curvol	;  on first track
                wrimg3:
 018B 4F        	mov	c,a	;  use vol# on the rest
 018C CD9400    	call	ftrk	; format this track (B=track, C=volume
 018F 3AA006    	lda	curtrk
 0192 3C        	inr	a
 0193 32A006    	sta	curtrk	; only used to detect track 0
                ;
 0196 01000A    	lxi	b,zbuf
 0199 11A706    	lxi	d,buffer
 019C 2AA106    	lhld	secnum
 019F CDC601    	call	wrbuf
                ;
 01A2 3E52      	mvi	a,'R'
 01A4 CDED04    	call	chrout
 01A7 CD0305    	call	ckctlc
 01AA DA4300    	jc	abort
                
 01AD 2AA106    	lhld	secnum
 01B0 110A00    	lxi	d,10	; sec/trk
 01B3 19        	dad	d
 01B4 22A106    	shld	secnum
 01B7 1170FE    	lxi	d,-400	; 400 sectors max
 01BA 19        	dad	d
 01BB 7C        	mov	a,h
 01BC B5        	ora	l
 01BD 3A9106    	lda	curvol
 01C0 C27501    	jnz	wrimg1	; last track?
 01C3 C38204    	jmp	crlf
                
                ; Write sector(s) to H17
                ; BC = buffer size
                ; DE = buffer addr
                ; HL = first sec#
                wrbuf:
 01C6 3E02      	mvi	a,2
 01C8 32A420    	sta	ddlyhs
 01CB CD6D20    	call	dwrite
 01CE C9        	ret
                
                ; Copy all tracks from H17 to image file
                rdimg:
 01CF 3A9006    	lda	curdrv
 01D2 323121    	sta	AIO$UNI
 01D5 CD8520    	call	dsdp	; select unit number
 01D8 AF        	xra	a
 01D9 32A106    	sta	secnum
 01DC 32A206    	sta	secnum+1
                rdimg1:
 01DF 21AA20    	lxi	h,ddrvtb+1
 01E2 77        	mov	m,a
 01E3 22A720    	shld	dvolpt
                ;
 01E6 01000A    	lxi	b,zbuf
 01E9 11A706    	lxi	d,buffer
 01EC 2AA106    	lhld	secnum
 01EF CD1A02    	call	rdbuf	; read track off diskette
                ;
 01F2 CD3101    	call	vwtrk
 01F5 D8        	rc
 01F6 3E53      	mvi	a,'S'
 01F8 CDED04    	call	chrout
 01FB CD0305    	call	ckctlc
 01FE DA4300    	jc	abort
                
                	; next sector...
 0201 2AA106    	lhld	secnum
 0204 110A00    	lxi	d,10	; sec/trk
 0207 19        	dad	d
 0208 22A106    	shld	secnum
 020B 1170FE    	lxi	d,-400	; 400 sectors max
 020E 19        	dad	d
 020F 7C        	mov	a,h
 0210 B5        	ora	l
 0211 3A9106    	lda	curvol
 0214 C2DF01    	jnz	rdimg1
 0217 C38204    	jmp	crlf
                
                ; Read sector(s) from H17
                ; BC = buffer size
                ; DE = buffer addr
                ; HL = first sec#
                rdbuf:
 021A 3E02      	mvi	a,2
 021C 32A420    	sta	ddlyhs
 021F CD6720    	call	dread	; if carry, read error
 0222 3F        	cmc		; if carry, no error
 0223 9F        	sbb	a	; -1 if good read, else 0
 0224 329D06    	sta	goodrd
 0227 C9        	ret
                
                chkv:
 0228 AF        	xra	a
 0229 32A106    	sta	secnum
 022C 32A206    	sta	secnum+1
                chkv1:
 022F 21AA20    	lxi	h,ddrvtb+1
 0232 77        	mov	m,a
 0233 22A720    	shld	dvolpt
                ;
 0236 01000A    	lxi	b,zbuf
 0239 11A706    	lxi	d,buffer
 023C 2AA106    	lhld	secnum
 023F CD1A02    	call	rdbuf
                ;
 0242 3AA70F    	lda	buffer+900h
 0245 CDED04    	call	chrout
 0248 3E63      	mvi	a,'c'
 024A CDED04    	call	chrout
 024D C9        	ret
                
                rddv:	; read disk volume
 024E 212000    	lxi	h,20h	; someplace off track 0
 0251 E5        	push	h
 0252 CD8520    	call	dsdp
 0255 E1        	pop	h
 0256 CD7320    	call	ddts
 0259 3E01      	mvi	a,1
 025B CD8E20    	call	dudly
 025E CD8820    rddv1:	call	dsts	; skip sector
 0261 3AA420    	lda	ddlyhs
 0264 A7        	ana	a
 0265 C25E02    	jnz	rddv1
 0268 F3        	di
 0269 CD9120    	call	dwsc
 026C CD8220    	call	drdb
 026F FB        	ei
 0270 F5        	push	psw
 0271 CD6120    	call	dabort	; track 0
 0274 F1        	pop	psw
 0275 CDED04    	call	chrout
 0278 3E74      	mvi	a,'t'
 027A CDED04    	call	chrout
 027D C9        	ret
                
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                ; Routines for interactive, VDIP1
                
                ; Read a command line, parse it, execute it.
                ; Return CY if Ctrl-C
                comnd:
 027E 113A05    	lxi	d,prompt
 0281 CD1105    	call	print
 0284 CD3604    	call	linein	; if NC, C=length
 0287 D8        	rc
 0288 21A706    	lxi	h,buffer
 028B CDB203    	call	skipb
                	jrc	comnd
 028E+38EE      	DB	38H,COMND-$-1
 0290 23        	inx	h
 0291 E65F      	ani	01011111b	; toupper
 0293 FE48      	cpi	'H'
                	jrz	chelp
 0295+2835      	DB	28H,CHELP-$-1
 0297 FE44      	cpi	'D'
                	jrz	cdrive
 0299+2847      	DB	28H,CDRIVE-$-1
 029B FE56      	cpi	'V'
                	jrz	cvolnm
 029D+2858      	DB	28H,CVOLNM-$-1
 029F FE49      	cpi	'I'
                	jrz	cintlv
 02A1+2862      	DB	28H,CINTLV-$-1
 02A3 FE52      	cpi	'R'
                	jrz	crestr
 02A5+2870      	DB	28H,CRESTR-$-1
 02A7 FE53      	cpi	'S'
 02A9 CA4003    	jz	csave
 02AC 115106    invcmd:	lxi	d,invld
 02AF CD1105    	call	print
                	jr	chelp
 02B2+1818      	DB	18H,CHELP-$-1
                badcmd:
 02B4 E5        	push	h
 02B5 3E22      	mvi	a,'"'
 02B7 CDED04    	call	chrout
 02BA D1        	pop	d
 02BB CD1105    	call	print
 02BE 3E22      	mvi	a,'"'
 02C0 CDED04    	call	chrout
 02C3 CD8204    	call	crlf
 02C6 116306    	lxi	d,syntax
 02C9 CD1105    	call	print
                chelp:
 02CC 114405    	lxi	d,signon
 02CF CD1105    	call	print
 02D2 116A05    	lxi	d,help
 02D5 CD1105    	call	print
                	jr	comnd
 02D8+18A4      	DB	18H,COMND-$-1
                
                failvd:	; TODO: dump vdbuf?
 02DA 117206    	lxi	d,failed
 02DD CD1105    	call	print
                	jr	comnd
 02E0+189C      	DB	18H,COMND-$-1
                
 02E2 CDB203    cdrive:	call	skipb
 02E5 CDCE04    	call	parsnm
                	jrc	badcmd
 02E8+38CA      	DB	38H,BADCMD-$-1
 02EA 7A        	mov	a,d
 02EB FE02      	cpi	2	; only 2 drives supported by default ROM
                	jrnc	badcmd
 02ED+30C5      	DB	30H,BADCMD-$-1
 02EF 329006    	sta	curdrv
 02F2 CDBE03    showup:	call	shwprm
                	jr	comnd
 02F5+1887      	DB	18H,COMND-$-1
                
 02F7 CDB203    cvolnm:	call	skipb
 02FA CDCE04    	call	parsnm
                	jrc	badcmd
 02FD+38B5      	DB	38H,BADCMD-$-1
 02FF 7A        	mov	a,d
 0300 329106    	sta	curvol
                	jr	showup
 0303+18ED      	DB	18H,SHOWUP-$-1
                
 0305 CDB203    cintlv:	call	skipb
 0308 CDCE04    	call	parsnm
                	jrc	badcmd
 030B+38A7      	DB	38H,BADCMD-$-1
 030D 7A        	mov	a,d
 030E FE0A      	cpi	10
                	jrnc	badcmd
 0310+30A2      	DB	30H,BADCMD-$-1
 0312 CDE903    	call	mkmap
                	jr	showup
 0315+18DB      	DB	18H,SHOWUP-$-1
                
                ; Restore image file onto a diskette
 0317 CDB203    crestr:	call	skipb
 031A 119403    	lxi	d,opr+4
 031D CD0000    	call	strcpy
 0320 3E0D      	mvi	a,CR	; TODO: need to trim?
 0322 12        	stax	d
 0323 219003    	lxi	h,opr
 0326 CD0000    	call	vdcmd
 0329 DADA02    	jc	failvd	; no need for close...
 032C CDBE03    	call	shwprm
 032F CD6201    	call	wrimg
                	; CY if error
 0332 F5        	push	psw
 0333 216903    	lxi	h,clf
 0336 CD0000    	call	vdcmd
 0339 F1        	pop	psw
 033A DADA02    	jc	failvd
 033D C37E02    	jmp	comnd
                
                ; Save diskette image in file
 0340 CDB203    csave:	call	skipb
 0343 117203    	lxi	d,opw+4
 0346 CD0000    	call	strcpy
 0349 3E0D      	mvi	a,CR	; TODO: need to trim?
 034B 12        	stax	d
 034C 216E03    	lxi	h,opw
 034F CD0000    	call	vdcmd
 0352 DADA02    	jc	failvd	; no need for close...
                	; TODO: need to truncate?
 0355 CDBE03    	call	shwprm
 0358 CDCF01    	call	rdimg
                	; CY if error
 035B F5        	push	psw
 035C 216903    	lxi	h,clf
 035F CD0000    	call	vdcmd
 0362 F1        	pop	psw
 0363 DADA02    	jc	failvd
 0366 C37E02    	jmp	comnd
                
 0369 636C660D00clf:	db	'clf',CR,0
 036E 6F70772066opw:	db	'opw ','filename.typ',CR,0
 0380           	ds	16	; safety margin
 0390 6F70722066opr:	db	'opr ','filename.typ',CR,0
 03A2           	ds	16	; safety margin
                
                ; Skip blanks.
                ; HL=buffer curptr
                ; Return: CY if EOL, A=non-blank-char
 03B2 7E        skipb:	mov	a,m
 03B3 FE20      	cpi	' '
                	jrz	skb0
 03B5+2804      	DB	28H,SKB0-$-1
 03B7 B7        	ora	a
 03B8 C0        	rnz
 03B9 37        	stc
 03BA C9        	ret
 03BB 23        skb0:	inx	h
                	jr	skipb
 03BC+18F4      	DB	18H,SKIPB-$-1
                
                shwprm:
 03BE 111A05    	lxi	d,msgusg
 03C1 CD1105    	call	print
 03C4 3A9006    	lda	curdrv
 03C7 C630      	adi	'0'
 03C9 CDED04    	call	chrout
 03CC 112705    	lxi	d,usg1
 03CF CD1105    	call	print
 03D2 3A9106    	lda	curvol
 03D5 CD8C04    	call	decout
 03D8 113105    	lxi	d,usg2
 03DB CD1105    	call	print
 03DE 119206    	lxi	d,sectbl
 03E1 060A      	mvi	b,10
 03E3 CD2704    	call	aryout
 03E6 C38204    	jmp	crlf
                
                ; Create the 10-sector interleave table for formatting
                ; A = interleave factor (0 => 1)
 03E9 B7        mkmap:	ora	a
                	jrnz	mkm4
 03EA+2001      	DB	20H,MKM4-$-1
 03EC 3C        	inr	a
 03ED F5        mkm4:	push	psw
 03EE 21A706    	lxi	h,buffer
 03F1 060A      	mvi	b,10
 03F3 AF        	xra	a
 03F4 77        mkm1:	mov	m,a
 03F5 23        	inx	h
 03F6 05        	dcr	b
 03F7 C2F403    	jnz	mkm1
 03FA 21A706    	lxi	h,buffer
 03FD 119206    	lxi	d,sectbl
 0400 010000    	lxi	b,0
 0403 3601      mkm0:	mvi	m,1	; flag as used
 0405 EB        	xchg
 0406 71        	mov	m,c
 0407 23        	inx	h
 0408 EB        	xchg
 0409 F1        	pop	psw
 040A F5        	push	psw
 040B 81        	add	c
 040C FE0A      	cpi	10
 040E DA1304    	jc	mkm3
 0411 D60A      	sui	10
 0413 4F        mkm3:	mov	c,a
 0414 21A706    	lxi	h,buffer
 0417 09        	dad	b
 0418 7E        mkm2:	mov	a,m
 0419 B7        	ora	a
 041A CA0304    	jz	mkm0
 041D 0C        	inr	c
 041E 23        	inx	h
 041F 79        	mov	a,c
 0420 FE0A      	cpi	10
 0422 DA1804    	jc	mkm2
 0425 F1        	pop	psw
 0426 C9        	ret
                
                ; Print Array of values 0-9.
                ; DE = array, B = num elements
                aryout:
 0427 3E20      	mvi	a,' '
 0429 CDED04    	call	chrout
 042C 1A        	ldax	d
 042D 13        	inx	d
 042E C630      	adi	'0'
 0430 CDED04    	call	chrout
                	djnz	aryout
 0433+10F2      	DB	10H,ARYOUT-$-1
 0435 C9        	ret
                
                ; input a line from console, allow backspace
                ; returns C=num chars
                linein:
 0436 21A706    	lxi	h,buffer
 0439 0E00      	mvi	c,0	; count chars
 043B CDF804    lini0	call	chrin
 043E FE0D      	cpi	CR
                	jrz	linix
 0440+281B      	DB	28H,LINIX-$-1
 0442 FE03      	cpi	CTLC	; cancel
 0444 37        	stc
 0445 C8        	rz
 0446 FE08      	cpi	BS
                	jrz	backup
 0448+2821      	DB	28H,BACKUP-$-1
 044A FE20      	cpi	' '
                	jrc	chrnak
 044C+3816      	DB	38H,CHRNAK-$-1
 044E FE7F      	cpi	'~'+1
                	jrnc	chrnak
 0450+3012      	DB	30H,CHRNAK-$-1
 0452 77        chrok:	mov	m,a
 0453 23        	inx	h
 0454 0C        	inr	c
 0455 FA6204    	jm	chrovf	; 128 chars max
 0458 CDED04    	call	chrout
                	; TODO: detect overflow...
                	jr	lini0
 045B+18DE      	DB	18H,LINI0-$-1
                
 045D 3600      linix:	mvi	m,0	; terminate buffer
 045F C38204    	jmp	crlf
                
 0462 2B        chrovf:	dcx	h
 0463 0D        	dcr	c
 0464 3E07      chrnak:	mvi	a,BEL
 0466 CDED04    	call	chrout
                	jr	lini0
 0469+18D0      	DB	18H,LINI0-$-1
                backup:
 046B 79        	mov	a,c
 046C B7        	ora	a
                	jrz	lini0
 046D+28CC      	DB	28H,LINI0-$-1
 046F 0D        	dcr	c
 0470 2B        	dcx	h
 0471 3E08      	mvi	a,BS
 0473 CDED04    	call	chrout
 0476 3E20      	mvi	a,' '
 0478 CDED04    	call	chrout
 047B 3E08      	mvi	a,BS
 047D CDED04    	call	chrout
                	jr	lini0
 0480+18B9      	DB	18H,LINI0-$-1
                
 0482 3E0D      crlf:	mvi	a,CR
 0484 CDED04    	call	chrout
 0487 3E0A      	mvi	a,LF
 0489 C3ED04    	jmp	chrout
                
                ; A=number to print
                ; leading zeroes blanked - must preserve B
                decout:
 048C C5        	push	b
 048D 0E00      	mvi	c,0
 048F 1664      	mvi	d,100
 0491 CDB404    	call	divide
 0494 160A      	mvi	d,10
 0496 CDB404    	call	divide
 0499 C630      	adi	'0'
 049B CDED04    	call	chrout
 049E C1        	pop	b
 049F C9        	ret
                
                hexout:
 04A0 F5        	push	psw
 04A1 07        	rlc
 04A2 07        	rlc
 04A3 07        	rlc
 04A4 07        	rlc
 04A5 CDA904    	call	hexdig
 04A8 F1        	pop	psw
 04A9 E60F      hexdig:	ani	0fh
 04AB C690      	adi	90h
 04AD 27        	daa
 04AE CE40      	aci	40h
 04B0 27        	daa
 04B1 C3ED04    	jmp	chrout
                
 04B4 1E00      divide:	mvi	e,0
 04B6 92        div0:	sub	d
 04B7 1C        	inr	e
                	jrnc	div0
 04B8+30FC      	DB	30H,DIV0-$-1
 04BA 82        	add	d
 04BB 1D        	dcr	e
                	jrnz	div1
 04BC+2005      	DB	20H,DIV1-$-1
                	bit	0,c
 04BE+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	div1
 04C0+2001      	DB	20H,DIV1-$-1
 04C2 C9        	ret
                div1:	setb	0,c
 04C3+CBC1      	DB	0CBH,0*8+C+0C0H
 04C5 F5        	push	psw	; remainder
 04C6 3E30      	mvi	a,'0'
 04C8 83        	add	e
 04C9 CDED04    	call	chrout
 04CC F1        	pop	psw	; remainder
 04CD C9        	ret
                
                ; Parse a 8-bit (max) decimal number
                ; HL=string, NUL terminated
                ; Returns D=number, CY=error
                parsnm:
 04CE 110000    	lxi	d,0
 04D1 7E        pd0:	mov	a,m
 04D2 B7        	ora	a
 04D3 C8        	rz
 04D4 FE30      	cpi	'0'
 04D6 D8        	rc
 04D7 FE3A      	cpi	'9'+1
 04D9 3F        	cmc
 04DA D8        	rc
 04DB E60F      	ani	0fh
 04DD 5F        	mov	e,a
 04DE 7A        	mov	a,d
 04DF 87        	add	a	; *2
 04E0 D8        	rc	
 04E1 87        	add	a	; *4
 04E2 D8        	rc	
 04E3 82        	add	d	; *5
 04E4 D8        	rc	
 04E5 87        	add	a	; *10
 04E6 D8        	rc	
 04E7 83        	add	e	;
 04E8 D8        	rc
 04E9 57        	mov	d,a
 04EA 23        	inx	h
                	jr	pd0
 04EB+18E4      	DB	18H,PD0-$-1
                
 04ED F5        chrout:	push	psw
 04EE DBED      cono0:	in	0edh
 04F0 E620      	ani	00100000b
                	jrz	cono0
 04F2+28FA      	DB	28H,CONO0-$-1
 04F4 F1        	pop	psw
 04F5 D3E8      	out	0e8h
 04F7 C9        	ret
                
 04F8 DBED      chrin:	in	0edh
 04FA E601      	ani	00000001b
                	jrz	chrin
 04FC+28FA      	DB	28H,CHRIN-$-1
 04FE DBE8      	in	0e8h
 0500 E67F      	ani	01111111b
 0502 C9        	ret
                
 0503 DBED      ckctlc:	in	0edh
 0505 E601      	ani	00000001b
 0507 C8        	rz
 0508 DBE8      	in	0e8h
 050A E67F      	ani	01111111b
 050C FE03      	cpi	CTLC	; cancel
 050E C0        	rnz
 050F 37        	stc	; CY=cancel
 0510 C9        	ret
                
 0511 1A        print:	ldax	d
 0512 B7        	ora	a
 0513 C8        	rz
 0514 CDED04    	call	chrout
 0517 13        	inx	d
                	jr	print
 0518+18F7      	DB	18H,PRINT-$-1
                
 051A 5573696E67msgusg:	db	'Using drive ',0
 0527 2C20766F6Cusg1:	db	', volume ',0
 0531 2C20736563usg2:	db	', secmap',0
 053A 4838445554prompt:	db	'H8DUTIL> ',0
 0544 4838445554signon:	db	'H8DUTIL v',(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0',0
 0551 202D205479phelp:	db		' - Type H(cr) for help',CR,LF,0
 056A 20436F6D6Dhelp:	db		' Commands:',CR,LF
 0576 202044206E	db	'  D n     set Drive number',CR,LF
 0592 202056206E	db	'  V n     set Volume ID',CR,LF
 05AB 202049206E	db	'  I n     set sector Interleave',CR,LF
 05CC 2020522066	db	'  R file  Restore image from file (Recreate floppy)',CR,LF
 0601 2020532066	db	'  S file  Save image to file (Save floppy)',CR,LF
 062D 2020482020	db	'  H       Print this help message',CR,LF
 0650 00        	db	0
 0651 496E76616Cinvld:	db	'Invalid command',CR,LF,0
 0663 53796E7461syntax:	db	'Syntax error',CR,LF,0
 0672 436F6D6D61failed:	db	'Command failed',CR,LF,0
 0683 202A61626Fabrted:	db	' *aborted*',CR,LF,0
                
 0690 00        curdrv:	db	0
 0691 00        curvol:	db	0
 0692 0001020304sectbl:	db	0,1,2,3,4,5,6,7,8,9
 069C 00        secend:	db	0	; still used?
                
 069D 00        goodrd:	db	0
 069E 9206      secpntr: dw	sectbl
 06A0 00        curtrk:	db	0
 06A1 0000      secnum:	dw	0	; 100K disk = 400 sectors max
 06A3 FF00FF00  dummy:	db	0ffh,0,0ffh,0	; insure async alignment
                
                dbend:
                buffer:
 06A7           	ds	zbuf
                
 10A7           vdbuf:	ds	512
                
 12A7           	ds	zstk
                spint:
                
 13A7           	end
