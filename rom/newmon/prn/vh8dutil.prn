                ; Standalone utility to dump core for CP/M 3 (H8x512K) on VDIP1
                ; linked with vdip1.rel
 0009 =         VERN	equ	009h
                
                	extrn	strcpy,strcmp,sync,runout
                	extrn	vdcmd,vdend,vdrd,vdmsg,vdout,vdprmp
                	public	vdbuf
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0007 =         BEL	equ	7
 0003 =         CTLC	equ	3
 0008 =         BS	equ	8
                
                	maclib	z180
                	maclib	core
                	aseg
                	maclib	ram
                
                ;...
                
                ; Commands:
                ;	D n	set Drive number
                ;	V n	set Volume ID
                ;	I n	Set sector Interleave
                ;	R file	Restore image from file (Recreate floppy)
                ;	S file	Save image to file (Save floppy)
                
 0A00 =         zbuf	equ	0a00h	; buffer size 1 track
 0100 =         zstk	equ	100h	; stack size
                
                ; disk addresses for H17Floppy ROM and RAM
 2061 =         dabort	equ	2061h	; jmp L1bf6
 2085 =         dsdp	equ	2085h
 2076 =         dsdt	equ	2076h
 2088 =         dsts	equ	2088h
 1C19 =         clock	equ	1c19h
 1EED =         wsp1	equ	1eedh
 2097 =         dwnb	equ	2097h
 205E =         dxok	equ	205eh
 206D =         dwrite	equ	206dh
 2067 =         dread	equ	2067h
 201F =         uivec	equ	201fh
 2008 =         mflag	equ	2008h
 20A0 =         dtt	equ	20a0h
 20A4 =         ddlyhs	equ	20a4h
 20A2 =         ddvctl	equ	20a2h
 20A3 =         ddlymo	equ	20a3h
 20A9 =         ddrvtb	equ	20a9h
 20A7 =         dvolpt	equ	20a7h
 2053 =         dwhda	equ	2053h
 2073 =         ddts	equ	2073h
 208E =         dudly	equ	208eh
 2091 =         dwsc	equ	2091h
 2082 =         drdb	equ	2082h
                
                
                	cseg
 0000 F3        	di
 0001 315D13    	lxi	sp,spint
 0004 3AFE0F    	lda	prodid	; LSB of product ID
 0007 E601      	ani	prnofp	; No FP?
 0009 329400    	sta	nofp
                
 000C 3EC3      	mvi	a,0c3h	; jmp
 000E 321F20    	sta	uivec
 0011 21191C    	lxi	h,clock
 0014 222020    	shld	uivec+1
 0017 315D13    	lxi	sp,spint
 001A 210820    	lxi	h,mflag	; turn on counter
 001D 7E        	mov	a,m
 001E F601      	ori	00000001b
 0020 77        	mov	m,a
 0021 CD5400    	call	ena2ms
 0024 FB        	ei
 0025 11F904    	lxi	d,signon
 0028 CDC604    	call	print
 002B 110605    	lxi	d,phelp
 002E CDC604    	call	print
                	; (2mS intr must be ON) track 0
 0031 CD7303    	call	shwprm
 0034 3A4606    	lda	curdrv
 0037 323121    	sta	AIO$UNI
                main1:
                	; Prompt for command and params,
                	; perform command,
                	; close file...
 003A CD1F02    	call	comnd
                	jrnc	main1
 003D+30FB      	DB	30H,MAIN1-$-1
                exit:
 003F CD7800    	call	dis2ms
 0042 2A1E00    	lhld	retmon
 0045 E9        	pchl
                
 0046 113806    abort:	lxi	d,abrted
 0049 CDC604    	call	print
 004C 211E03    	lxi	h,clf
 004F CD0000    	call	vdcmd
                	jr	main1
 0052+18E6      	DB	18H,MAIN1-$-1
                
                ; Turn on 2mS clock intrs, interrupts already disabled
 0054 3A9400    ena2ms:	lda	nofp
 0057 B7        	ora	a
                	jrnz	nfp2ms	; H89 and/or extended H8-Z80 boards
 0058+200D      	DB	20H,NFP2MS-$-1
 005A 210920    	lxi	h,ctl$F0
 005D 7E        	mov	a,m
 005E 329500    	sta	sav$F0
 0061 F640      	ori	01000000b	; 2mS ON
 0063 77        	mov	m,a
 0064 D3F0      	out	0f0h
 0066 C9        	ret
 0067 213620    nfp2ms:	lxi	h,ctl$F2
 006A 7E        	mov	a,m
 006B 329600    	sta	sav$F2
 006E F602      	ori	00000010b	; 2mS ON
 0070 77        	mov	m,a
 0071 D3F2      	out	0f2h
 0073 E602      	ani	00000010b	; unlock enable
 0075 D3F3      	out	0f3h		; special Z80 board extension
 0077 C9        	ret
                
 0078 3A9400    dis2ms:	lda	nofp
 007B B7        	ora	a
                	jrnz	nfp0ms
 007C+2009      	DB	20H,NFP0MS-$-1
 007E 3A9500    	lda	sav$F0
 0081 320920    	sta	ctl$F0
 0084 D3F0      	out	0f0h
 0086 C9        	ret
 0087 3A9600    nfp0ms:	lda	sav$F2
 008A 323620    	sta	ctl$F2
 008D D3F2      	out	0f2h
 008F E602      	ani	00000010b	; unlock enable
 0091 D3F3      	out	0f3h		; special Z80 board extension
 0093 C9        	ret
                
 0094 00        nofp:	db	0
 0095 00        sav$F0:	db	0
 0096 00        sav$F2:	db	0
                
                ; format a single track
                ; B = track C = vol#
                ftrk:
 0097 F3        	di
 0098 210820    	lxi	h,mflag	; turn on counter
 009B 7E        	mov	a,m
 009C F601      	ori	00000001b
 009E 77        	mov	m,a
 009F 78        	mov	a,b
 00A0 32A020    	sta	dtt
 00A3 3E02      	mvi	a,2
 00A5 32A420    	sta	ddlyhs
 00A8 AF        	xra	a
 00A9 D37F      	out	7fh
 00AB 32A220    	sta	ddvctl
 00AE 32A320    	sta	ddlymo
 00B1 21AA20    	lxi	h,ddrvtb+1
 00B4 22A720    	shld	dvolpt
 00B7 71        	mov	m,c
 00B8 FB        	ei
 00B9 CD8520    	call	dsdp	; sdp
 00BC CD7620    	call	dsdt	; dis intrs
 00BF AF        	xra	a
 00C0 D37E      	out	7eh
 00C2 3C        	inr	a
 00C3 325320    	sta	dwhda
 00C6 3AA220    	lda	ddvctl
 00C9 3C        	inr	a
 00CA D37F      	out	7fh
                trk1:
 00CC CD8820    	call	dsts	; skip this sector
 00CF 3AA420    	lda	ddlyhs
 00D2 A7        	ana	a
 00D3 C2CC00    	jnz	trk1	; wait delay
 00D6 2AA720    	lhld	dvolpt
 00D9 46        	mov	b,m	; vol#
 00DA 2A5406    	lhld	secpntr	; sec interleave table
                trk2:
 00DD 0E0A      	mvi	c,10
 00DF CDED1E    	call	wsp1	; writes 0's
 00E2 78        	mov	a,b	; vol#
 00E3 CD9720    	call	dwnb
 00E6 3AA020    	lda	dtt	; track
 00E9 CD9720    	call	dwnb
 00EC 7E        	mov	a,m	; sec#
 00ED CD9720    	call	dwnb
 00F0 23        	inx	h	; incr sec pntr
 00F1 7A        	mov	a,d	; ?chksum?
 00F2 CD9720    	call	dwnb
 00F5 0E10      	mvi	c,16
 00F7 CDED1E    	call	wsp1
                trk3:
 00FA CD9720    	call	dwnb
 00FD 0D        	dcr	c	; 256 0's
 00FE C2FA00    	jnz	trk3
                trk4:
 0101 AF        	xra	a
 0102 CD9720    	call	dwnb	; end pad
 0105 DB7F      	in	7fh
 0107 1F        	rar
 0108 D20101    	jnc	trk4	; until sec end
 010B 7E        	mov	a,m
 010C B7        	ora	a	; 0 marks end of sectable
 010D C2DD00    	jnz	trk2	; until end of track
 0110 3AA220    	lda	ddvctl
 0113 D37F      	out	7fh
 0115 FB        	ei
 0116 CD5E20    	call	dxok
 0119 3E14      	mvi	a,20
 011B 325320    	sta	dwhda
 011E 210820    	lxi	h,mflag	; turn off counter ?
 0121 7E        	mov	a,m
 0122 E6FE      	ani	11111110b
 0124 77        	mov	m,a
 0125 C9        	ret
                
                ; Read file from VDIP1 into 'buffer'.
                ; Reads 1 H17 track - 10x256 sectors.
                ; File was already opened.
                ; Read 128 bytes at a time, as per vdrd routine.
 0126 215D06    vrtrk:	lxi	h,buffer
 0129 0614      	mvi	b,20	; 20 records == 10 sectors
 012B C5        vrt0:	push	b
 012C CD0000    	call	vdrd
 012F C1        	pop	b
 0130 D8        	rc	; error
                	djnz	vrt0
 0131+10F8      	DB	10H,VRT0-$-1
 0133 C9        	ret
                
                ; Write to file on VDIP1 from 'buffer'.
                ; Writes 1 H17 track - 10x256 sectors.
                ; File was already opened (for write).
                ; Write 512 bytes at a time.
 0134 115D06    vwtrk:	lxi	d,buffer
 0137 0605      	mvi	b,5	; 5x512 == 10x256
 0139 C5        vwt0:	push	b
 013A CD4201    	call	vdwr
 013D C1        	pop	b
 013E D8        	rc
                	djnz	vwt0
 013F+10F8      	DB	10H,VWT0-$-1
 0141 C9        	ret
                
                ; This probably should be in vdip1.asm...
                ; DE=data buffer (dma adr)
                ; Returns DE=next
 0142 215B01    vdwr:	lxi	h,wrf
 0145 CD0000    	call	vdmsg
 0148 010002    	lxi	b,512
 014B 1A        vdwr0:	ldax	d
 014C CD0000    	call	vdout
 014F 13        	inx	d
 0150 0B        	dcx	b
 0151 78        	mov	a,b
 0152 B1        	ora	c
                	jrnz	vdwr0
 0153+20F6      	DB	20H,VDWR0-$-1
 0155 D5        	push	d
 0156 CD0000    	call	vdend
 0159 D1        	pop	d
 015A C9        	ret	; CY=error
                
 015B 7772662000wrf:	db	'wrf ',0,0,2,0,CR,0	; 512 byte writes
                
                ; Copy tracks from image file onto H17
                wrimg:
 0165 CD8520    	call	dsdp	; select unit number from AIO$UNI
 0168 AF        	xra	a
 0169 325706    	sta	secnum
 016C 325806    	sta	secnum+1
 016F 325606    	sta	curtrk
                wrimg1:
 0172 21AA20    	lxi	h,ddrvtb+1
 0175 77        	mov	m,a
 0176 22A720    	shld	dvolpt
                ;
 0179 CD2601    	call	vrtrk	; read track from image
 017C D8        	rc
                ;
 017D 3A5606    	lda	curtrk
 0180 47        	mov	b,a
 0181 B7        	ora	a
 0182 CA8801    	jz	wrimg3	; c is zero from above
 0185 3A4706    	lda	curvol	;  on first track
                wrimg3:
 0188 4F        	mov	c,a	;  use vol# on the rest
 0189 CD9700    	call	ftrk	; format this track (B=track, C=volume
 018C 3A5606    	lda	curtrk
 018F 3C        	inr	a
 0190 325606    	sta	curtrk	; only used to detect track 0
                ;
 0193 01000A    	lxi	b,zbuf
 0196 115D06    	lxi	d,buffer
 0199 2A5706    	lhld	secnum
 019C CDC301    	call	wrbuf
                ;
 019F 3E52      	mvi	a,'R'
 01A1 CDA204    	call	chrout
 01A4 CDB804    	call	ckctlc
 01A7 DA4600    	jc	abort
                
 01AA 2A5706    	lhld	secnum
 01AD 110A00    	lxi	d,10	; sec/trk
 01B0 19        	dad	d
 01B1 225706    	shld	secnum
 01B4 1170FE    	lxi	d,-400	; 400 sectors max
 01B7 19        	dad	d
 01B8 7C        	mov	a,h
 01B9 B5        	ora	l
 01BA 3A4706    	lda	curvol
 01BD C27201    	jnz	wrimg1	; last track?
 01C0 C33704    	jmp	crlf
                
                ; Write sector(s) to H17
                ; BC = buffer size
                ; DE = buffer addr
                ; HL = first sec#
                wrbuf:
 01C3 3E02      	mvi	a,2
 01C5 32A420    	sta	ddlyhs
 01C8 CD6D20    	call	dwrite
 01CB C9        	ret
                
                ; Copy all tracks from H17 to image file
                rdimg:
 01CC CD8520    	call	dsdp	; select unit number from AIO$UNI
 01CF AF        	xra	a
 01D0 325706    	sta	secnum
 01D3 325806    	sta	secnum+1
                rdimg1:
 01D6 21AA20    	lxi	h,ddrvtb+1
 01D9 77        	mov	m,a
 01DA 22A720    	shld	dvolpt
                ;
 01DD 01000A    	lxi	b,zbuf
 01E0 115D06    	lxi	d,buffer
 01E3 2A5706    	lhld	secnum
 01E6 CD1102    	call	rdbuf	; read track off diskette
                ;
 01E9 CD3401    	call	vwtrk
 01EC D8        	rc
 01ED 3E53      	mvi	a,'S'
 01EF CDA204    	call	chrout
 01F2 CDB804    	call	ckctlc
 01F5 DA4600    	jc	abort
                
                	; next sector...
 01F8 2A5706    	lhld	secnum
 01FB 110A00    	lxi	d,10	; sec/trk
 01FE 19        	dad	d
 01FF 225706    	shld	secnum
 0202 1170FE    	lxi	d,-400	; 400 sectors max
 0205 19        	dad	d
 0206 7C        	mov	a,h
 0207 B5        	ora	l
 0208 3A4706    	lda	curvol
 020B C2D601    	jnz	rdimg1
 020E C33704    	jmp	crlf
                
                ; Read sector(s) from H17
                ; BC = buffer size
                ; DE = buffer addr
                ; HL = first sec#
                rdbuf:
 0211 3E02      	mvi	a,2
 0213 32A420    	sta	ddlyhs
 0216 CD6720    	call	dread	; if carry, read error
 0219 3F        	cmc		; if carry, no error
 021A 9F        	sbb	a	; -1 if good read, else 0
 021B 325306    	sta	goodrd
 021E C9        	ret
                
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                ; Routines for interactive, VDIP1
                
                ; Read a command line, parse it, execute it.
                ; Return CY if Ctrl-C
                comnd:
 021F 11EF04    	lxi	d,prompt
 0222 CDC604    	call	print
 0225 CDEB03    	call	linein	; if NC, C=length
 0228 D8        	rc
 0229 215D06    	lxi	h,buffer
 022C CD6703    	call	skipb
                	jrc	comnd
 022F+38EE      	DB	38H,COMND-$-1
 0231 23        	inx	h
 0232 E65F      	ani	01011111b	; toupper
 0234 FE48      	cpi	'H'
                	jrz	chelp
 0236+2835      	DB	28H,CHELP-$-1
 0238 FE44      	cpi	'D'
                	jrz	cdrive
 023A+2847      	DB	28H,CDRIVE-$-1
 023C FE56      	cpi	'V'
                	jrz	cvolnm
 023E+285B      	DB	28H,CVOLNM-$-1
 0240 FE49      	cpi	'I'
                	jrz	cintlv
 0242+2865      	DB	28H,CINTLV-$-1
 0244 FE52      	cpi	'R'
                	jrz	crestr
 0246+2873      	DB	28H,CRESTR-$-1
 0248 FE53      	cpi	'S'
 024A CAE702    	jz	csave
 024D 110606    invcmd:	lxi	d,invld
 0250 CDC604    	call	print
                	jr	chelp
 0253+1818      	DB	18H,CHELP-$-1
                badcmd:
 0255 E5        	push	h
 0256 3E22      	mvi	a,'"'
 0258 CDA204    	call	chrout
 025B D1        	pop	d
 025C CDC604    	call	print
 025F 3E22      	mvi	a,'"'
 0261 CDA204    	call	chrout
 0264 CD3704    	call	crlf
 0267 111806    	lxi	d,syntax
 026A CDC604    	call	print
                chelp:
 026D 11F904    	lxi	d,signon
 0270 CDC604    	call	print
 0273 111F05    	lxi	d,help
 0276 CDC604    	call	print
                	jr	comnd
 0279+18A4      	DB	18H,COMND-$-1
                
                failvd:	; TODO: dump vdbuf?
 027B 112706    	lxi	d,failed
 027E CDC604    	call	print
                	jr	comnd
 0281+189C      	DB	18H,COMND-$-1
                
 0283 CD6703    cdrive:	call	skipb
 0286 CD8304    	call	parsnm
                	jrc	badcmd
 0289+38CA      	DB	38H,BADCMD-$-1
 028B 7A        	mov	a,d
 028C FE02      	cpi	2	; only 2 drives supported by default ROM
                	jrnc	badcmd
 028E+30C5      	DB	30H,BADCMD-$-1
 0290 324606    	sta	curdrv
 0293 323121    	sta	AIO$UNI
 0296 CD7303    showup:	call	shwprm
                	jr	comnd
 0299+1884      	DB	18H,COMND-$-1
                
 029B CD6703    cvolnm:	call	skipb
 029E CD8304    	call	parsnm
                	jrc	badcmd
 02A1+38B2      	DB	38H,BADCMD-$-1
 02A3 7A        	mov	a,d
 02A4 324706    	sta	curvol
                	jr	showup
 02A7+18ED      	DB	18H,SHOWUP-$-1
                
 02A9 CD6703    cintlv:	call	skipb
 02AC CD8304    	call	parsnm
                	jrc	badcmd
 02AF+38A4      	DB	38H,BADCMD-$-1
 02B1 7A        	mov	a,d
 02B2 FE0A      	cpi	10
                	jrnc	badcmd
 02B4+309F      	DB	30H,BADCMD-$-1
 02B6 CD9E03    	call	mkmap
                	jr	showup
 02B9+18DB      	DB	18H,SHOWUP-$-1
                
                ; Restore image file onto a diskette
 02BB CD6703    crestr:	call	skipb
 02BE 114903    	lxi	d,opr+4
 02C1 CD0000    	call	strcpy
 02C4 3E0D      	mvi	a,CR	; TODO: need to trim?
 02C6 12        	stax	d
 02C7 214503    	lxi	h,opr
 02CA CD0000    	call	vdcmd
 02CD DA7B02    	jc	failvd	; no need for close...
 02D0 CD7303    	call	shwprm
 02D3 CD1303    	call	dinit
 02D6 CD6501    	call	wrimg
                	; CY if error
 02D9 F5        	push	psw
 02DA 211E03    	lxi	h,clf
 02DD CD0000    	call	vdcmd
 02E0 F1        	pop	psw
 02E1 DA7B02    	jc	failvd
 02E4 C31F02    	jmp	comnd
                
                ; Save diskette image in file
 02E7 CD6703    csave:	call	skipb
 02EA 112703    	lxi	d,opw+4
 02ED CD0000    	call	strcpy
 02F0 3E0D      	mvi	a,CR	; TODO: need to trim?
 02F2 12        	stax	d
 02F3 212303    	lxi	h,opw
 02F6 CD0000    	call	vdcmd
 02F9 DA7B02    	jc	failvd	; no need for close...
                	; TODO: need to truncate?
 02FC CD7303    	call	shwprm
 02FF CD1303    	call	dinit
 0302 CDCC01    	call	rdimg
                	; CY if error
 0305 F5        	push	psw
 0306 211E03    	lxi	h,clf
 0309 CD0000    	call	vdcmd
 030C F1        	pop	psw
 030D DA7B02    	jc	failvd
 0310 C31F02    	jmp	comnd
                
 0313 214506    dinit:	lxi	h,isinit
 0316 7E        	mov	a,m
 0317 D601      	sui	1
 0319 D0        	rnc
 031A 77        	mov	m,a
 031B C36120    	jmp	dabort	; (2mS intr must be ON) track 0, select AIO$UNI
                
 031E 636C660D00clf:	db	'clf',CR,0
 0323 6F70772066opw:	db	'opw ','filename.typ',CR,0
 0335           	ds	16	; safety margin
 0345 6F70722066opr:	db	'opr ','filename.typ',CR,0
 0357           	ds	16	; safety margin
                
                ; Skip blanks.
                ; HL=buffer curptr
                ; Return: CY if EOL, A=non-blank-char
 0367 7E        skipb:	mov	a,m
 0368 FE20      	cpi	' '
                	jrz	skb0
 036A+2804      	DB	28H,SKB0-$-1
 036C B7        	ora	a
 036D C0        	rnz
 036E 37        	stc
 036F C9        	ret
 0370 23        skb0:	inx	h
                	jr	skipb
 0371+18F4      	DB	18H,SKIPB-$-1
                
                shwprm:
 0373 11CF04    	lxi	d,msgusg
 0376 CDC604    	call	print
 0379 3A4606    	lda	curdrv
 037C C630      	adi	'0'
 037E CDA204    	call	chrout
 0381 11DC04    	lxi	d,usg1
 0384 CDC604    	call	print
 0387 3A4706    	lda	curvol
 038A CD4104    	call	decout
 038D 11E604    	lxi	d,usg2
 0390 CDC604    	call	print
 0393 114806    	lxi	d,sectbl
 0396 060A      	mvi	b,10
 0398 CDDC03    	call	aryout
 039B C33704    	jmp	crlf
                
                ; Create the 10-sector interleave table for formatting
                ; A = interleave factor (0 => 1)
 039E B7        mkmap:	ora	a
                	jrnz	mkm4
 039F+2001      	DB	20H,MKM4-$-1
 03A1 3C        	inr	a
 03A2 F5        mkm4:	push	psw
 03A3 215D06    	lxi	h,buffer
 03A6 060A      	mvi	b,10
 03A8 AF        	xra	a
 03A9 77        mkm1:	mov	m,a
 03AA 23        	inx	h
 03AB 05        	dcr	b
 03AC C2A903    	jnz	mkm1
 03AF 215D06    	lxi	h,buffer
 03B2 114806    	lxi	d,sectbl
 03B5 010000    	lxi	b,0
 03B8 3601      mkm0:	mvi	m,1	; flag as used
 03BA EB        	xchg
 03BB 71        	mov	m,c
 03BC 23        	inx	h
 03BD EB        	xchg
 03BE F1        	pop	psw
 03BF F5        	push	psw
 03C0 81        	add	c
 03C1 FE0A      	cpi	10
 03C3 DAC803    	jc	mkm3
 03C6 D60A      	sui	10
 03C8 4F        mkm3:	mov	c,a
 03C9 215D06    	lxi	h,buffer
 03CC 09        	dad	b
 03CD 7E        mkm2:	mov	a,m
 03CE B7        	ora	a
 03CF CAB803    	jz	mkm0
 03D2 0C        	inr	c
 03D3 23        	inx	h
 03D4 79        	mov	a,c
 03D5 FE0A      	cpi	10
 03D7 DACD03    	jc	mkm2
 03DA F1        	pop	psw
 03DB C9        	ret
                
                ; Print Array of values 0-9.
                ; DE = array, B = num elements
                aryout:
 03DC 3E20      	mvi	a,' '
 03DE CDA204    	call	chrout
 03E1 1A        	ldax	d
 03E2 13        	inx	d
 03E3 C630      	adi	'0'
 03E5 CDA204    	call	chrout
                	djnz	aryout
 03E8+10F2      	DB	10H,ARYOUT-$-1
 03EA C9        	ret
                
                ; input a line from console, allow backspace
                ; returns C=num chars
                linein:
 03EB 215D06    	lxi	h,buffer
 03EE 0E00      	mvi	c,0	; count chars
 03F0 CDAD04    lini0	call	chrin
 03F3 FE0D      	cpi	CR
                	jrz	linix
 03F5+281B      	DB	28H,LINIX-$-1
 03F7 FE03      	cpi	CTLC	; cancel
 03F9 37        	stc
 03FA C8        	rz
 03FB FE08      	cpi	BS
                	jrz	backup
 03FD+2821      	DB	28H,BACKUP-$-1
 03FF FE20      	cpi	' '
                	jrc	chrnak
 0401+3816      	DB	38H,CHRNAK-$-1
 0403 FE7F      	cpi	'~'+1
                	jrnc	chrnak
 0405+3012      	DB	30H,CHRNAK-$-1
 0407 77        chrok:	mov	m,a
 0408 23        	inx	h
 0409 0C        	inr	c
 040A FA1704    	jm	chrovf	; 128 chars max
 040D CDA204    	call	chrout
                	; TODO: detect overflow...
                	jr	lini0
 0410+18DE      	DB	18H,LINI0-$-1
                
 0412 3600      linix:	mvi	m,0	; terminate buffer
 0414 C33704    	jmp	crlf
                
 0417 2B        chrovf:	dcx	h
 0418 0D        	dcr	c
 0419 3E07      chrnak:	mvi	a,BEL
 041B CDA204    	call	chrout
                	jr	lini0
 041E+18D0      	DB	18H,LINI0-$-1
                backup:
 0420 79        	mov	a,c
 0421 B7        	ora	a
                	jrz	lini0
 0422+28CC      	DB	28H,LINI0-$-1
 0424 0D        	dcr	c
 0425 2B        	dcx	h
 0426 3E08      	mvi	a,BS
 0428 CDA204    	call	chrout
 042B 3E20      	mvi	a,' '
 042D CDA204    	call	chrout
 0430 3E08      	mvi	a,BS
 0432 CDA204    	call	chrout
                	jr	lini0
 0435+18B9      	DB	18H,LINI0-$-1
                
 0437 3E0D      crlf:	mvi	a,CR
 0439 CDA204    	call	chrout
 043C 3E0A      	mvi	a,LF
 043E C3A204    	jmp	chrout
                
                ; A=number to print
                ; leading zeroes blanked - must preserve B
                decout:
 0441 C5        	push	b
 0442 0E00      	mvi	c,0
 0444 1664      	mvi	d,100
 0446 CD6904    	call	divide
 0449 160A      	mvi	d,10
 044B CD6904    	call	divide
 044E C630      	adi	'0'
 0450 CDA204    	call	chrout
 0453 C1        	pop	b
 0454 C9        	ret
                
                hexout:
 0455 F5        	push	psw
 0456 07        	rlc
 0457 07        	rlc
 0458 07        	rlc
 0459 07        	rlc
 045A CD5E04    	call	hexdig
 045D F1        	pop	psw
 045E E60F      hexdig:	ani	0fh
 0460 C690      	adi	90h
 0462 27        	daa
 0463 CE40      	aci	40h
 0465 27        	daa
 0466 C3A204    	jmp	chrout
                
 0469 1E00      divide:	mvi	e,0
 046B 92        div0:	sub	d
 046C 1C        	inr	e
                	jrnc	div0
 046D+30FC      	DB	30H,DIV0-$-1
 046F 82        	add	d
 0470 1D        	dcr	e
                	jrnz	div1
 0471+2005      	DB	20H,DIV1-$-1
                	bit	0,c
 0473+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	div1
 0475+2001      	DB	20H,DIV1-$-1
 0477 C9        	ret
                div1:	setb	0,c
 0478+CBC1      	DB	0CBH,0*8+C+0C0H
 047A F5        	push	psw	; remainder
 047B 3E30      	mvi	a,'0'
 047D 83        	add	e
 047E CDA204    	call	chrout
 0481 F1        	pop	psw	; remainder
 0482 C9        	ret
                
                ; Parse a 8-bit (max) decimal number
                ; HL=string, NUL terminated
                ; Returns D=number, CY=error
                parsnm:
 0483 110000    	lxi	d,0
 0486 7E        pd0:	mov	a,m
 0487 B7        	ora	a
 0488 C8        	rz
 0489 FE30      	cpi	'0'
 048B D8        	rc
 048C FE3A      	cpi	'9'+1
 048E 3F        	cmc
 048F D8        	rc
 0490 E60F      	ani	0fh
 0492 5F        	mov	e,a
 0493 7A        	mov	a,d
 0494 87        	add	a	; *2
 0495 D8        	rc	
 0496 87        	add	a	; *4
 0497 D8        	rc	
 0498 82        	add	d	; *5
 0499 D8        	rc	
 049A 87        	add	a	; *10
 049B D8        	rc	
 049C 83        	add	e	;
 049D D8        	rc
 049E 57        	mov	d,a
 049F 23        	inx	h
                	jr	pd0
 04A0+18E4      	DB	18H,PD0-$-1
                
 04A2 F5        chrout:	push	psw
 04A3 DBED      cono0:	in	0edh
 04A5 E620      	ani	00100000b
                	jrz	cono0
 04A7+28FA      	DB	28H,CONO0-$-1
 04A9 F1        	pop	psw
 04AA D3E8      	out	0e8h
 04AC C9        	ret
                
 04AD DBED      chrin:	in	0edh
 04AF E601      	ani	00000001b
                	jrz	chrin
 04B1+28FA      	DB	28H,CHRIN-$-1
 04B3 DBE8      	in	0e8h
 04B5 E67F      	ani	01111111b
 04B7 C9        	ret
                
 04B8 DBED      ckctlc:	in	0edh
 04BA E601      	ani	00000001b
 04BC C8        	rz
 04BD DBE8      	in	0e8h
 04BF E67F      	ani	01111111b
 04C1 FE03      	cpi	CTLC	; cancel
 04C3 C0        	rnz
 04C4 37        	stc	; CY=cancel
 04C5 C9        	ret
                
 04C6 1A        print:	ldax	d
 04C7 B7        	ora	a
 04C8 C8        	rz
 04C9 CDA204    	call	chrout
 04CC 13        	inx	d
                	jr	print
 04CD+18F7      	DB	18H,PRINT-$-1
                
 04CF 5573696E67msgusg:	db	'Using drive ',0
 04DC 2C20766F6Cusg1:	db	', volume ',0
 04E6 2C20736563usg2:	db	', secmap',0
 04EF 4838445554prompt:	db	'H8DUTIL> ',0
 04F9 4838445554signon:	db	'H8DUTIL v',(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0',0
 0506 202D205479phelp:	db		' - Type H(cr) for help',CR,LF,0
 051F 20436F6D6Dhelp:	db		' Commands:',CR,LF
 052B 202044206E	db	'  D n     set Drive number',CR,LF
 0547 202056206E	db	'  V n     set Volume ID',CR,LF
 0560 202049206E	db	'  I n     set sector Interleave',CR,LF
 0581 2020522066	db	'  R file  Restore image from file (Recreate floppy)',CR,LF
 05B6 2020532066	db	'  S file  Save image to file (Save floppy)',CR,LF
 05E2 2020482020	db	'  H       Print this help message',CR,LF
 0605 00        	db	0
 0606 496E76616Cinvld:	db	'Invalid command',CR,LF,0
 0618 53796E7461syntax:	db	'Syntax error',CR,LF,0
 0627 436F6D6D61failed:	db	'Command failed',CR,LF,0
 0638 202A61626Fabrted:	db	' *aborted*',CR,LF,0
                
 0645 00        isinit:	db	0
 0646 00        curdrv:	db	0
 0647 00        curvol:	db	0
 0648 0001020304sectbl:	db	0,1,2,3,4,5,6,7,8,9
 0652 00        secend:	db	0	; still used?
                
 0653 00        goodrd:	db	0
 0654 4806      secpntr: dw	sectbl
 0656 00        curtrk:	db	0
 0657 0000      secnum:	dw	0	; 100K disk = 400 sectors max
 0659 FF00FF00  dummy:	db	0ffh,0,0ffh,0	; insure async alignment
                
                dbend:
                buffer:
 065D           	ds	zbuf
                
 105D           vdbuf:	ds	512
                
 125D           	ds	zstk
                spint:
                
 135D           	end
