                ; Standalone utility to dump core for CP/M 3 (H8x512K) on VDIP1
                ; linked with vdip1.rel
                	extrn	strcpy,strcmp
                	extrn	vdcmd,vdend,vdrd,vdmsg,vdout,sync,runout
                	public	vdbuf
                
 000D =         CR	equ	13
 000A =         LF	equ	10
                
                	maclib	z180
                	aseg
                
                ; Z180 MMU constants - Z180 only
 0038 =         mmu$cbr	equ	38h
 0039 =         mmu$bbr	equ	39h
 003A =         mmu$cbar equ	3ah
                
                ; H8x512K MMU constants - Z80 only
 0000 =         mmu	equ	0	; base port
 0000 =         rd	equ	0
 0004 =         wr	equ	4
 0000 =         pg0k	equ	0
 0001 =         pg16k	equ	1
 0002 =         pg32k	equ	2
 0003 =         pg48k	equ	3
 0080 =         ena	equ	80h
 0000 =         rd00k	equ	mmu+rd+pg0k
 0001 =         rd16k	equ	mmu+rd+pg16k
 0002 =         rd32k	equ	mmu+rd+pg32k
 0003 =         rd48k	equ	mmu+rd+pg48k
 0004 =         wr00k	equ	mmu+wr+pg0k
 0005 =         wr16k	equ	mmu+wr+pg16k
 0006 =         wr32k	equ	mmu+wr+pg32k
 0007 =         wr48k	equ	mmu+wr+pg48k
                
                ; ROM hooks...
 0026 =         conop	equ	0026h	; pointer, not vector
 2009 =         ctl$F0	equ	2009h
 2036 =         ctl$F2	equ	2036h
                
                ; e.g. org 3000h...
                	cseg
 0000 F3        begin:	di
 0001 210920    	lxi	h,ctl$F0
 0004 7E        	mov	a,m
 0005 323E01    	sta	sav$F0
 0008 F640      	ori	01000000b	; 2mS back on
 000A 77        	mov	m,a
 000B D3F0      	out	0f0h
 000D FB        	ei	; TODO: will ROM leave MMU alone?
 000E CD0000    	call	runout
 0011 CD0000    	call	sync
 0014 DAF800    	jc	vderr
 0017 CD3501    	call	cpu$type
 001A 323F01    	sta	z180
 001D B7        	ora	a
 001E 3E0D      	mvi	a,13	; H8-512K needs 13 pages
                	jrz	beg0
 0020+2802      	DB	28H,BEG0-$-1
 0022 3E0F      	mvi	a,15	; covers all of CP/M 3 on Z180
 0024 324001    beg0:	sta	npages
                
 0027 215001    	lxi	h,opw
 002A 11A601    	lxi	d,vdbuf
 002D CD0000    	call	strcpy
                	; look for optional filename...
 0030 218022    	lxi	h,2280h
 0033 46        	mov	b,m	; len
 0034 23        	inx	h
 0035 7E        chkfil:	mov	a,m
 0036 23        	inx	h
 0037 B7        	ora	a
                	jrz	nofil
 0038+2806      	DB	28H,NOFIL-$-1
 003A FE20      	cpi	' '
                	jrz	gotfil	; already skipped blank...
 003C+2805      	DB	28H,GOTFIL-$-1
                	djnz	chkfil
 003E+10F5      	DB	10H,CHKFIL-$-1
 0040 215501    nofil:	lxi	h,def
                gotfil:
 0043 CD0000    	call	strcpy	; does not incl CR
 0046 3E0D      	mvi	a,CR
 0048 12        	stax	d
                start:
 0049 21A601    	lxi	h,vdbuf
 004C CD0000    	call	vdcmd
 004F DAE700    	jc	nferr
                	; setup/activate MMU
 0052 CD9500    	call	mmu$init
                	; from here on, must exit via exit
                
                	; just map each page into pg48k and dump from there
 0055 AF        	xra	a
 0056 323D01    	sta	pagex
                loop0:
 0059 CDFD00    	call	map$page
 005C 2100C0    	lxi	h,0c000h	; page 48K
                loop1:
 005F EB        	xchg
 0060 CD1C01    	call	vdwr
 0063 EB        	xchg
 0064 DABC00    	jc	error
 0067 7C        	mov	a,h
 0068 B5        	ora	l
 0069 CA7D00    	jz	gotpg
 006C 7C        	mov	a,h
 006D E60F      	ani	0fh	; at 4K boundary?
 006F B5        	ora	l
 0070 C25F00    	jnz	loop1
 0073 E5        	push	h
 0074 3E2E      	mvi	a,'.'
 0076 CD9100    	call	conout
 0079 E1        	pop	h
 007A C35F00    	jmp	loop1
                gotpg:
 007D 3A3D01    	lda	pagex
 0080 3C        	inr	a
 0081 323D01    	sta	pagex
 0084 214001    	lxi	h,npages
 0087 FE06      	cpi	m	; done after num pages
 0089 D28F00    	jnc	done
 008C C35900    	jmp	loop0
                done:
                	jr	exit	; now safe to return directly
 008F+1831      	DB	18H,EXIT-$-1
                
                conout:
 0091 2A2600    	lhld	conop
 0094 E9        	pchl
                
                ; Create "unity" page mapping, enable MMU
                mmu$init:
 0095 F3        	di
 0096 3A3F01    	lda	z180
 0099 B7        	ora	a
                	jrz	min0
 009A+2807      	DB	28H,MIN0-$-1
                	; TODO: Z180 MMU init
 009C 3ECC      	mvi	a,1100$1100b	; com1 at C000 (bnk disabled)
                	out0	a,mmu$cbar
 009E+ED393A    	DB	0EDH, A*8+01H, MMU$CBAR
 00A1 FB        	ei
 00A2 C9        	ret
 00A3 3E00      min0:	mvi	a,0	; page 0
 00A5 D300      	out	rd00k
 00A7 D304      	out	wr00k
 00A9 3C        	inr	a
 00AA D301      	out	rd16k
 00AC D305      	out	wr16k
 00AE 3C        	inr	a
 00AF D302      	out	rd32k
 00B1 D306      	out	wr32k
 00B3 3C        	inr	a
 00B4 F680      	ori	ena
 00B6 D303      	out	rd48k
 00B8 D307      	out	wr48k
 00BA FB        	ei
 00BB C9        	ret
                
                error:
 00BC 116201    	lxi	d,fail
 00BF CD1301    	call	msgout
 00C2 214101    exit:	lxi	h,clf
 00C5 CD0000    	call	vdcmd
 00C8 3A3E01    	lda	sav$F0
 00CB 320920    	sta	ctl$F0
 00CE D3F0      	out	0f0h
                mmu$deinit:
 00D0 F3        	di
 00D1 3A3F01    	lda	z180
 00D4 B7        	ora	a
                	jrz	mdi0
 00D5+2808      	DB	28H,MDI0-$-1
                	; TODO: Z180 de-init
 00D7 AF        	xra	a
                	out0	a,mmu$cbar
 00D8+ED393A    	DB	0EDH, A*8+01H, MMU$CBAR
 00DB FB        	ei
 00DC C30000    	jmp	0
 00DF 3E00      mdi0:	mvi	a,0
 00E1 D300      	out	rd00k	; disables MMU, forces 64K
 00E3 FB        	ei
 00E4 C30000    	jmp	0
                
 00E7 117701    nferr:	lxi	d,operr
 00EA CD1301    errout:	call	msgout
 00ED 3A3E01    	lda	sav$F0
 00F0 320920    	sta	ctl$F0
 00F3 D3F0      	out	0f0h
 00F5 C30000    	jmp	0
 00F8 118E01    vderr:	lxi	d,nterr
                	jr	errout
 00FB+18ED      	DB	18H,ERROUT-$-1
                
                map$page:
 00FD 3A3F01    	lda	z180
 0100 B7        	ora	a
 0101 3A3D01    	lda	pagex	; 16K page we're on
                	jrz	mp0
 0104+2808      	DB	28H,MP0-$-1
                	; convert to 4K page adr
                	; offset by C000...
 0106 87        	add	a
 0107 87        	add	a
 0108 D60C      	sui	0ch	; might be negative
                	out0	a,mmu$cbr
 010A+ED3938    	DB	0EDH, A*8+01H, MMU$CBR
 010D C9        	ret
 010E F680      mp0:	ori	ena
 0110 D303      	out	rd48k
 0112 C9        	ret
                
                ; DE=string, NUL term
 0113 1A        msgout:	ldax	d
 0114 B7        	ora	a
 0115 C8        	rz
 0116 CD9100    	call	conout
 0119 13        	inx	d
                	jr	msgout
 011A+18F7      	DB	18H,MSGOUT-$-1
                
                ; DE=data buffer (dma adr)
                ; Returns DE=next
 011C 214601    vdwr:	lxi	h,wrf
 011F CD0000    	call	vdmsg
 0122 010002    	lxi	b,512
 0125 1A        vdwr0:	ldax	d
 0126 CD0000    	call	vdout
 0129 13        	inx	d
 012A 0B        	dcx	b
 012B 78        	mov	a,b
 012C B1        	ora	c
                	jrnz	vdwr0
 012D+20F6      	DB	20H,VDWR0-$-1
 012F D5        	push	d
 0130 CD0000    	call	vdend
 0133 D1        	pop	d
 0134 C9        	ret	; CY=error
                
                ; returns FF if running on Z180, 00 if Z80
                cpu$type:
 0135 3E01      	mvi	a,1
                	mlt	b	; a.k.a. alt NEG on Z80
 0137+ED4C      	DB	0EDH, B*8+4CH
 0139 D6FF      	sui	0ffh	; Z180: CY(02), Z80: NC(00)
 013B 9F        	sbb	a	; Z180: FF, Z80: 00
 013C C9        	ret
                
 013D 00        pagex:	db	0
 013E 00        sav$F0:	db	0
 013F 00        z180:	db	0
 0140 00        npages:	db	0
                
 0141 636C660D00clf:	db	'clf',CR,0
 0146 7772662000wrf:	db	'wrf ',0,0,2,0,CR,0	; 512 byte writes
 0150 6F70772000opw:	db	'opw ',0
 0155 636F726564def:	db	'coredump.out',0
                
 0162 210D0A2A20fail:	db	'!',CR,LF,'* dump failed *',CR,LF,0
 0177 2A2066696Coperr:	db	'* file open failed *',CR,LF,0
 018E 2A20564449nterr:	db	'* VDIP1 init failed *',CR,LF,0
                
 01A6           vdbuf:	ds	128
                
 0226           	end
