                ; A util to set time/date into the RTC.
                ; Prompts for a time/date string, and parses it and sets RTC
                
                	maclib	core
                	maclib	z80
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0009 =         TAB	equ	9
 0008 =         BS	equ	8
 0007 =         BEL	equ	7
 0003 =         CTLC	equ	3
                
 00A0 =         rtc	equ	0a0h	; standard port address
 2280 =         linbuf	equ	2280h
                
                	cseg
                
 0000 C30300    	jmp	start
                
                	dseg
 0000 5254432053signon:	db	'RTC Set Time',CR,LF
 000E 456E746572	db	'Enter MM/DD/YY HH:MM:SS (24-hour)',CR,LF
 0031 3E2000    	db	'> ',0
 0034 54696D6520noset:	db	'Time not set',CR,LF,0
 0043 2028524554setmsg:	db	' (RETURN to set): ',0
 0056 5254432073setto:	db	'RTC set to ',0
                
 0062 0000000000time:	db	0,0,0,0,0,0,0,0,0,0,0,0
 0062 =         sec1	equ	time+0
 0063 =         sec10	equ	time+1
 0064 =         min1	equ	time+2
 0065 =         min10	equ	time+3
 0066 =         hrs1	equ	time+4
 0067 =         hrs10	equ	time+5
 0068 =         dom1	equ	time+6
 0069 =         dom10	equ	time+7
 006A =         mon1	equ	time+8
 006B =         mon10	equ	time+9
 006C =         yrs1	equ	time+10
 006D =         yrs10	equ	time+11
 006E 00        dow:	db	0
                
 006F           	ds	64
 00AF           stack:	ds	0
                
                	cseg
                start:
 0003 31AF00    	lxi	sp,stack
 0006 DBAF      	in	rtc+15
 0008 F604      	ori	00000100b ; 24-hour format
 000A D3AF      	out	rtc+15
 000C 210000    	lxi	h,signon
 000F CD4400    	call	msgout
                
 0012 218022    	lxi	h,linbuf
 0015 CD8B01    	call	linin
                	jrc	quit
 0018+3830      	DB	38H,QUIT-$-1
 001A 218022    	lxi	h,linbuf
 001D CDD200    	call	parse
                	jrc	error
 0020+3828      	DB	38H,ERROR-$-1
 0022 CD1B00    	call	crlf
 0025 CD5800    	call	show
 0028 214300    	lxi	h,setmsg
 002B CD4400    	call	msgout
 002E 218022    	lxi	h,linbuf
 0031 CD8B01    	call	linin
                	jrc	quit
 0034+3814      	DB	38H,QUIT-$-1
 0036 CD3B01    	call	settime
 0039 215600    	lxi	h,setto
 003C CD4400    	call	msgout
 003F CD5701    	call	gettime
 0042 CD5800    	call	show
 0045 CD1B00    	call	crlf
                	jr	exit
 0048+1806      	DB	18H,EXIT-$-1
                
                error:	; TODO...
 004A 213400    quit:	lxi	h,noset
 004D CD4400    	call	msgout
 0050 2A1E00    exit:	lhld	retmon
 0053 E9        	pchl
                
 0054 2A2600    chrout:	lhld	conout
 0057 E9        	pchl
                
                ; MM/DD/YY HH:MM:SS
 0058 3A6B00    show:	lda	mon10
 005B F630      	ori	'0'
 005D CD5400    	call	chrout
 0060 3A6A00    	lda	mon1
 0063 F630      	ori	'0'
 0065 CD5400    	call	chrout
 0068 3E2F      	mvi	a,'/'
 006A CD5400    	call	chrout
 006D 3A6900    	lda	dom10
 0070 F630      	ori	'0'
 0072 CD5400    	call	chrout
 0075 3A6800    	lda	dom1
 0078 F630      	ori	'0'
 007A CD5400    	call	chrout
 007D 3E2F      	mvi	a,'/'
 007F CD5400    	call	chrout
 0082 3A6D00    	lda	yrs10
 0085 F630      	ori	'0'
 0087 CD5400    	call	chrout
 008A 3A6C00    	lda	yrs1
 008D F630      	ori	'0'
 008F CD5400    	call	chrout
 0092 3E20      	mvi	a,' '
 0094 CD5400    	call	chrout
 0097 3A6700    	lda	hrs10
 009A F630      	ori	'0'
 009C CD5400    	call	chrout
 009F 3A6600    	lda	hrs1
 00A2 F630      	ori	'0'
 00A4 CD5400    	call	chrout
 00A7 3E3A      	mvi	a,':'
 00A9 CD5400    	call	chrout
 00AC 3A6500    	lda	min10
 00AF F630      	ori	'0'
 00B1 CD5400    	call	chrout
 00B4 3A6400    	lda	min1
 00B7 F630      	ori	'0'
 00B9 CD5400    	call	chrout
 00BC 3E3A      	mvi	a,':'
 00BE CD5400    	call	chrout
 00C1 3A6300    	lda	sec10
 00C4 F630      	ori	'0'
 00C6 CD5400    	call	chrout
 00C9 3A6200    	lda	sec1
 00CC F630      	ori	'0'
 00CE CD5400    	call	chrout
 00D1 C9        	ret
                
                ; TODO: support reorder/partials?
                ; HL="MM/DD/YY HH:MM:SS"
                parse:
                	; TODO: skip blanks
 00D2 CD2201    	call	parsnm	; month
 00D5 7E        	mov	a,m
 00D6 FE2F      	cpi	'/'
 00D8 37        	stc
 00D9 C0        	rnz
 00DA 23        	inx	h
                	sbcd	mon1
 00DB+ED43      	DB	0EDH,43H
 00DD+6A00      	DW	MON1
 00DF CD2201    	call	parsnm	; day of month
 00E2 7E        	mov	a,m
 00E3 FE2F      	cpi	'/'
 00E5 37        	stc
 00E6 C0        	rnz
 00E7 23        	inx	h
                	sbcd	dom1
 00E8+ED43      	DB	0EDH,43H
 00EA+6800      	DW	DOM1
 00EC CD2201    	call	parsnm	; year of century
 00EF 7E        	mov	a,m
 00F0 FE20      	cpi	' '	; or NUL?
 00F2 37        	stc
 00F3 C0        	rnz
 00F4 23        	inx	h
                	sbcd	yrs1
 00F5+ED43      	DB	0EDH,43H
 00F7+6C00      	DW	YRS1
 00F9 CD2201    	call	parsnm	; hour (24-hour)
 00FC 7E        	mov	a,m
 00FD FE3A      	cpi	':'
 00FF 37        	stc
 0100 C0        	rnz
 0101 23        	inx	h
                	sbcd	hrs1
 0102+ED43      	DB	0EDH,43H
 0104+6600      	DW	HRS1
 0106 CD2201    	call	parsnm	; minutes
 0109 7E        	mov	a,m
 010A FE3A      	cpi	':'	; seconds optional?
 010C 37        	stc
 010D C0        	rnz
 010E 23        	inx	h
                	sbcd	min1
 010F+ED43      	DB	0EDH,43H
 0111+6400      	DW	MIN1
 0113 CD2201    	call	parsnm	; seconds
 0116 7E        	mov	a,m
 0117 FE00      	cpi	0	; blanks? others?
 0119 37        	stc
 011A C0        	rnz
 011B 23        	inx	h
                	sbcd	sec1
 011C+ED43      	DB	0EDH,43H
 011E+6200      	DW	SEC1
 0120 AF        	xra	a
 0121 C9        	ret
                
                ; parse (up to) two digits, return B=10's, C=1's
                ; HL=input string
                ; returns HL at next char
                parsnm:
 0122 010000    	lxi	b,0
 0125 7E        	mov	a,m
 0126 D630      	sui	'0'
 0128 D8        	rc
 0129 FE0A      	cpi	10
 012B 3F        	cmc
 012C D8        	rc
 012D 23        	inx	h
 012E 4F        	mov	c,a
 012F 7E        	mov	a,m
 0130 D630      	sui	'0'
 0132 D8        	rc
 0133 FE0A      	cpi	10
 0135 3F        	cmc
 0136 D8        	rc
 0137 23        	inx	h
 0138 41        	mov	b,c
 0139 4F        	mov	c,a
 013A C9        	ret
                
                settime:
 013B AF        	xra	a
 013C D3AD      	out	rtc+13
 013E D3AE      	out	rtc+14
 0140 3E04      	mvi	a,0100b	; 24-hour format
 0142 D3AF      	out	rtc+15
 0144 CD6E01    	call	hold
 0147 216200    	lxi	h,time
 014A 0E9F      	mvi	c,rtc-1
 014C 060D      	mvi	b,13	; TODO: day-of-week?
 014E 0C        settm0:	inr	c
                	outi
 014F+EDA3      	DB	0EDH,0A3H
                	jrnz	settm0
 0151+20FB      	DB	20H,SETTM0-$-1
 0153 CD7F01    	call	unhold
 0156 C9        	ret
                
                gettime:
 0157 CD6E01    	call	hold
 015A 216200    	lxi	h,time
 015D 0E9F      	mvi	c,rtc-1
 015F 060C      	mvi	b,12
 0161 0C        gettm0:	inr	c
                	inp	a
 0162+ED78      	DB	0EDH,A*8+40H
 0164 E60F      	ani	0fh
 0166 77        	mov	m,a
 0167 23        	inx	h
                	djnz	gettm0
 0168+10F7      	DB	10H,GETTM0-$-1
 016A CD7F01    	call	unhold
 016D C9        	ret
                
 016E DBAD      hold:	in	rtc+13
 0170 F601      	ori	0001b	; HOLD
 0172 D3AD      	out	rtc+13
 0174 DBAD      	in	rtc+13
 0176 E602      	ani	0010b	; BUSY
 0178 C8        	rz
 0179 E60E      	ani	00001110b
 017B D3AD      	out	rtc+13
                	; TODO: pause?
                	jr	hold
 017D+18EF      	DB	18H,HOLD-$-1
                
 017F DBAD      unhold:	in	rtc+13
 0181 E6FE      	ani	11111110b
 0183 D3AD      	out	rtc+13
 0185 C9        	ret
                
 0186 3600      linix:	mvi	m,0	; terminate buffer
 0188 C31B00    	jmp	crlf
                
                ; input a filename from console, allow backspace
                ; HL=buffer
                ; returns C=num chars, buffer NUL terminated
                linin:
 018B 0E00      	mvi	c,0	; count chars
 018D CD4A00    lini0	call	conin
 0190 FE0D      	cpi	CR
                	jrz	linix
 0192+28F2      	DB	28H,LINIX-$-1
 0194 FE03      	cpi	CTLC	; cancel
 0196 37        	stc
 0197 C8        	rz
 0198 FE08      	cpi	BS
                	jrz	backup
 019A+2817      	DB	28H,BACKUP-$-1
 019C FE20      	cpi	' '
                	jrc	chrnak
 019E+380C      	DB	38H,CHRNAK-$-1
 01A0 FE7F      	cpi	'~'+1
                	jrnc	chrnak
 01A2+3008      	DB	30H,CHRNAK-$-1
 01A4 77        chrok:	mov	m,a
 01A5 23        	inx	h
 01A6 0C        	inr	c
 01A7 CD5400    	call	chrout	; echo
                	; TODO: detect overflow...
                	jr	lini0
 01AA+18E1      	DB	18H,LINI0-$-1
 01AC 3E07      chrnak:	mvi	a,BEL
 01AE CD2600    	call	conout
                	jr	lini0
 01B1+18DA      	DB	18H,LINI0-$-1
                backup:
 01B3 79        	mov	a,c
 01B4 B7        	ora	a
                	jrz	lini0
 01B5+28D6      	DB	28H,LINI0-$-1
 01B7 0D        	dcr	c
 01B8 2B        	dcx	h
 01B9 3E08      	mvi	a,BS
 01BB CD2600    	call	conout
 01BE 3E20      	mvi	a,' '
 01C0 CD2600    	call	conout
 01C3 3E08      	mvi	a,BS
 01C5 CD2600    	call	conout
                	jr	lini0
 01C8+18C3      	DB	18H,LINI0-$-1
                
 01CA           	end
