                ; A util to set time/date into the RTC.
                ; Prompts for a time/date string, and parses it and sets RTC
                
                	maclib	core
                	maclib	z80
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0009 =         TAB	equ	9
 0008 =         BS	equ	8
 0007 =         BEL	equ	7
 0003 =         CTLC	equ	3
                
 00A0 =         rtc	equ	0a0h	; standard port address
 2280 =         linbuf	equ	2280h
                
                	cseg
                
 0000 C30300    	jmp	start
                
                	dseg
 0000 5254432053signon:	db	'RTC Set Time',CR,LF
 000E 4375727265	db	'Current time: ',0
 001D 4E65772074newtime: db	'New time: ',0
 0028 0D0A456E74enter:	db	CR,LF,'Enter MM/DD/YY HH:MM:SS (24-hour)',CR,LF
 004D 3E2000    	db	'> ',0
 0050 54696D6520noset:	db	'Time not set',CR,LF,0
 005F 2028524554setmsg:	db	' (RETURN to set): ',0
 0072 5254432073setto:	db	'RTC set to ',0
                
 007E 0000000000time:	db	0,0,0,0,0,0,0,0,0,0,0,0
 007E =         sec1	equ	time+0
 007F =         sec10	equ	time+1
 0080 =         min1	equ	time+2
 0081 =         min10	equ	time+3
 0082 =         hrs1	equ	time+4
 0083 =         hrs10	equ	time+5
 0084 =         dom1	equ	time+6
 0085 =         dom10	equ	time+7
 0086 =         mon1	equ	time+8
 0087 =         mon10	equ	time+9
 0088 =         yrs1	equ	time+10
 0089 =         yrs10	equ	time+11
 008A 00        dow:	db	0
                
 008B           	ds	64
 00CB           stack:	ds	0
                
                	cseg
                start:
 0003 31CB00    	lxi	sp,stack
 0006 DBAF      	in	rtc+15
 0008 F604      	ori	00000100b ; 24-hour format
 000A D3AF      	out	rtc+15
 000C 210000    	lxi	h,signon
 000F CD4400    	call	msgout
 0012 CD6801    	call	gettime
 0015 CD6900    	call	show
 0018 212800    	lxi	h,enter
 001B CD4400    	call	msgout
                
 001E 218022    	lxi	h,linbuf
 0021 CD9C01    	call	linin
                	jrc	quit
 0024+3833      	DB	38H,QUIT-$-1
 0026 218022    	lxi	h,linbuf
 0029 CDE300    	call	parse
                	jrc	error
 002C+382B      	DB	38H,ERROR-$-1
 002E 211D00    	lxi	h,newtime
 0031 CD4400    	call	msgout
 0034 CD6900    	call	show
 0037 215F00    	lxi	h,setmsg
 003A CD4400    	call	msgout
 003D 218022    	lxi	h,linbuf
 0040 CD9C01    	call	linin
                	jrc	quit
 0043+3814      	DB	38H,QUIT-$-1
 0045 CD4C01    	call	settime
 0048 217200    	lxi	h,setto
 004B CD4400    	call	msgout
 004E CD6801    	call	gettime
 0051 CD6900    	call	show
 0054 CD1B00    	call	crlf
                	jr	exit
 0057+1806      	DB	18H,EXIT-$-1
                
                error:	; TODO...
 0059 215000    quit:	lxi	h,noset
 005C CD4400    	call	msgout
 005F 2A1E00    exit:	lhld	retmon
 0062 E9        	pchl
                
                chrout:	liyd	conout
 0063+FD2A      	DB	0FDH,2AH
 0065+2600      	DW	CONOUT
                	pciy
 0067+FDE9      	DB	0FDH,0E9H
                
                ; MM/DD/YY HH:MM:SS
 0069 3A8700    show:	lda	mon10
 006C F630      	ori	'0'
 006E CD6300    	call	chrout
 0071 3A8600    	lda	mon1
 0074 F630      	ori	'0'
 0076 CD6300    	call	chrout
 0079 3E2F      	mvi	a,'/'
 007B CD6300    	call	chrout
 007E 3A8500    	lda	dom10
 0081 F630      	ori	'0'
 0083 CD6300    	call	chrout
 0086 3A8400    	lda	dom1
 0089 F630      	ori	'0'
 008B CD6300    	call	chrout
 008E 3E2F      	mvi	a,'/'
 0090 CD6300    	call	chrout
 0093 3A8900    	lda	yrs10
 0096 F630      	ori	'0'
 0098 CD6300    	call	chrout
 009B 3A8800    	lda	yrs1
 009E F630      	ori	'0'
 00A0 CD6300    	call	chrout
 00A3 3E20      	mvi	a,' '
 00A5 CD6300    	call	chrout
 00A8 3A8300    	lda	hrs10
 00AB F630      	ori	'0'
 00AD CD6300    	call	chrout
 00B0 3A8200    	lda	hrs1
 00B3 F630      	ori	'0'
 00B5 CD6300    	call	chrout
 00B8 3E3A      	mvi	a,':'
 00BA CD6300    	call	chrout
 00BD 3A8100    	lda	min10
 00C0 F630      	ori	'0'
 00C2 CD6300    	call	chrout
 00C5 3A8000    	lda	min1
 00C8 F630      	ori	'0'
 00CA CD6300    	call	chrout
 00CD 3E3A      	mvi	a,':'
 00CF CD6300    	call	chrout
 00D2 3A7F00    	lda	sec10
 00D5 F630      	ori	'0'
 00D7 CD6300    	call	chrout
 00DA 3A7E00    	lda	sec1
 00DD F630      	ori	'0'
 00DF CD6300    	call	chrout
 00E2 C9        	ret
                
                ; TODO: support reorder/partials?
                ; HL="MM/DD/YY HH:MM:SS"
                parse:
                	; TODO: skip blanks
 00E3 CD3301    	call	parsnm	; month
 00E6 7E        	mov	a,m
 00E7 FE2F      	cpi	'/'
 00E9 37        	stc
 00EA C0        	rnz
 00EB 23        	inx	h
                	sbcd	mon1
 00EC+ED43      	DB	0EDH,43H
 00EE+8600      	DW	MON1
 00F0 CD3301    	call	parsnm	; day of month
 00F3 7E        	mov	a,m
 00F4 FE2F      	cpi	'/'
 00F6 37        	stc
 00F7 C0        	rnz
 00F8 23        	inx	h
                	sbcd	dom1
 00F9+ED43      	DB	0EDH,43H
 00FB+8400      	DW	DOM1
 00FD CD3301    	call	parsnm	; year of century
 0100 7E        	mov	a,m
 0101 FE20      	cpi	' '	; or NUL?
 0103 37        	stc
 0104 C0        	rnz
 0105 23        	inx	h
                	sbcd	yrs1
 0106+ED43      	DB	0EDH,43H
 0108+8800      	DW	YRS1
 010A CD3301    	call	parsnm	; hour (24-hour)
 010D 7E        	mov	a,m
 010E FE3A      	cpi	':'
 0110 37        	stc
 0111 C0        	rnz
 0112 23        	inx	h
                	sbcd	hrs1
 0113+ED43      	DB	0EDH,43H
 0115+8200      	DW	HRS1
 0117 CD3301    	call	parsnm	; minutes
 011A 7E        	mov	a,m
 011B FE3A      	cpi	':'	; seconds optional?
 011D 37        	stc
 011E C0        	rnz
 011F 23        	inx	h
                	sbcd	min1
 0120+ED43      	DB	0EDH,43H
 0122+8000      	DW	MIN1
 0124 CD3301    	call	parsnm	; seconds
 0127 7E        	mov	a,m
 0128 FE00      	cpi	0	; blanks? others?
 012A 37        	stc
 012B C0        	rnz
 012C 23        	inx	h
                	sbcd	sec1
 012D+ED43      	DB	0EDH,43H
 012F+7E00      	DW	SEC1
 0131 AF        	xra	a
 0132 C9        	ret
                
                ; parse (up to) two digits, return B=10's, C=1's
                ; HL=input string
                ; returns HL at next char
                parsnm:
 0133 010000    	lxi	b,0
 0136 7E        	mov	a,m
 0137 D630      	sui	'0'
 0139 D8        	rc
 013A FE0A      	cpi	10
 013C 3F        	cmc
 013D D8        	rc
 013E 23        	inx	h
 013F 4F        	mov	c,a
 0140 7E        	mov	a,m
 0141 D630      	sui	'0'
 0143 D8        	rc
 0144 FE0A      	cpi	10
 0146 3F        	cmc
 0147 D8        	rc
 0148 23        	inx	h
 0149 41        	mov	b,c
 014A 4F        	mov	c,a
 014B C9        	ret
                
                settime:
 014C AF        	xra	a
 014D D3AD      	out	rtc+13
 014F D3AE      	out	rtc+14
 0151 3E04      	mvi	a,0100b	; 24-hour format
 0153 D3AF      	out	rtc+15
 0155 CD7F01    	call	hold
 0158 217E00    	lxi	h,time
 015B 0E9F      	mvi	c,rtc-1
 015D 060D      	mvi	b,13	; TODO: day-of-week?
 015F 0C        settm0:	inr	c
                	outi
 0160+EDA3      	DB	0EDH,0A3H
                	jrnz	settm0
 0162+20FB      	DB	20H,SETTM0-$-1
 0164 CD9001    	call	unhold
 0167 C9        	ret
                
                gettime:
 0168 CD7F01    	call	hold
 016B 217E00    	lxi	h,time
 016E 0E9F      	mvi	c,rtc-1
 0170 060C      	mvi	b,12
 0172 0C        gettm0:	inr	c
                	inp	a
 0173+ED78      	DB	0EDH,A*8+40H
 0175 E60F      	ani	0fh
 0177 77        	mov	m,a
 0178 23        	inx	h
                	djnz	gettm0
 0179+10F7      	DB	10H,GETTM0-$-1
 017B CD9001    	call	unhold
 017E C9        	ret
                
 017F DBAD      hold:	in	rtc+13
 0181 F601      	ori	0001b	; HOLD
 0183 D3AD      	out	rtc+13
 0185 DBAD      	in	rtc+13
 0187 E602      	ani	0010b	; BUSY
 0189 C8        	rz
 018A E60E      	ani	00001110b
 018C D3AD      	out	rtc+13
                	; TODO: pause?
                	jr	hold
 018E+18EF      	DB	18H,HOLD-$-1
                
 0190 DBAD      unhold:	in	rtc+13
 0192 E6FE      	ani	11111110b
 0194 D3AD      	out	rtc+13
 0196 C9        	ret
                
 0197 3600      linix:	mvi	m,0	; terminate buffer
 0199 C31B00    	jmp	crlf
                
                ; input a filename from console, allow backspace
                ; HL=buffer
                ; returns C=num chars, buffer NUL terminated
                linin:
 019C 0E00      	mvi	c,0	; count chars
 019E CD4A00    lini0	call	conin
 01A1 FE0D      	cpi	CR
                	jrz	linix
 01A3+28F2      	DB	28H,LINIX-$-1
 01A5 FE03      	cpi	CTLC	; cancel
 01A7 37        	stc
 01A8 C8        	rz
 01A9 FE08      	cpi	BS
                	jrz	backup
 01AB+2817      	DB	28H,BACKUP-$-1
 01AD FE20      	cpi	' '
                	jrc	chrnak
 01AF+380C      	DB	38H,CHRNAK-$-1
 01B1 FE7F      	cpi	'~'+1
                	jrnc	chrnak
 01B3+3008      	DB	30H,CHRNAK-$-1
 01B5 77        chrok:	mov	m,a
 01B6 23        	inx	h
 01B7 0C        	inr	c
 01B8 CD6300    	call	chrout	; echo
                	; TODO: detect overflow...
                	jr	lini0
 01BB+18E1      	DB	18H,LINI0-$-1
 01BD 3E07      chrnak:	mvi	a,BEL
 01BF CD6300    	call	chrout
                	jr	lini0
 01C2+18DA      	DB	18H,LINI0-$-1
                backup:
 01C4 79        	mov	a,c
 01C5 B7        	ora	a
                	jrz	lini0
 01C6+28D6      	DB	28H,LINI0-$-1
 01C8 0D        	dcr	c
 01C9 2B        	dcx	h
 01CA 3E08      	mvi	a,BS
 01CC CD6300    	call	chrout
 01CF 3E20      	mvi	a,' '
 01D1 CD6300    	call	chrout
 01D4 3E08      	mvi	a,BS
 01D6 CD6300    	call	chrout
                	jr	lini0
 01D9+18C3      	DB	18H,LINI0-$-1
                
 01DB           	end
