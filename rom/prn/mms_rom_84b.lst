		; Z89/Z90 Monitor EPROM 444-84B, by Magnolia Microsystems
		; Z89/Z90/H8-Z80 Monitor EPROM 444-84D, June 29, 2019, drm
0013          	VERN	equ	13h	; version 1.3
		
			maclib	z80
**** z80.lib ****
**** mms_rom_84b.asm ****
			$*macro
		
000D          	CR	equ	13
000A          	LF	equ	10
0007          	BEL	equ	7
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
0060          	GIDE$DA	equ	060h	; GIDE data port
0061          	GIDE$ER	equ	061h	; GIDE error register
0062          	GIDE$SC	equ	062h	; GIDE sector count
0063          	GIDE$SE	equ	063h	; GIDE sector number
0064          	GIDE$CL	equ	064h	; GIDE cylinder low
0065          	GIDE$CH	equ	065h	; GIDE cylinder high
0066          	GIDE$DH	equ	066h	; GIDE drive/head
0067          	GIDE$CS	equ	067h	; GIDE command/status
		
1800          		org	01800h	; H17 Floppy ROM routines
1800          		ds	1014
1BF6          	R$ABORT: ds	35	;00011011.11110110	033.366	R.ABORT
1C19          	CLOCK:	ds	38	;00011100.00011001	034.031 CLOCK
1C3F          	R$READ:	ds	499	;00011100.00111111	034.077	R.READ
1E32          	R$SDP:	ds	107	;			034.062 R.SDP
1E9D          	R$WHD:	ds	28	;00011110.10011101	036.235	R.WHD
1EB9          	R$WNH:	ds	161	;00011110.10111001	036.271	R.WNH
1F5A          	R$CONST: ds	88	;00011111.01011010	037.132	R.CONST
1FB2          		ds	78
		
		; RAM variables, some defined by H17 Floppy ROM
2000          		org	02000h
2000          	ramstart:
2000          		ds	3
2003          	l2003h:	ds	1	; - 02003h
2004          	l2004h:	ds	1	; - 02004h
2005          		ds	3
2008          	l2008h:	ds	1	; - 02008h
2009          	ctl$F0:	ds	1	; - 02009h
200A          		ds	17
201B          	ticcnt:	ds	2	; - 0201bh
201D          	monstk:	ds	2	; - 0201dh
201F          	intvec:
201F          	vrst1:	ds	3	; rst1 jmp vector - 0201fh
2022          	vrst2:	ds	3	; rst2 jmp vector - 02022h
2025          	vrst3:	ds	3	; rst3 jmp vector - 02025h
2028          	vrst4:	ds	3	; rst4 jmp vector - 02028h
202B          	vrst5:	ds	3	; rst5 jmp vector - 0202bh
202E          	vrst6:	ds	3	; rst6 jmp vector - 0202eh
2031          	vrst7:	ds	3	; rst7 jmp vector - 02031h
2034          	l2034h:	ds	2	; - 02034h
2036          	ctl$F2:	ds	1	; - 02036h GPP template/image
2037          	l2037h:	ds	2	; - 02037h
2039          		ds	7
2040          	l2040h:	ds	8
2048          	D$CONST: ds	88+20	; - 02048h	disk constants
20B4          	DECNT:	ds	1	; - 020b4h
20B5          		ds	124
2131          	AIO$UNI: ds	1	; - 02131h
2132          	cmdbuf:	ds	6	; SASI command buffer
2138          	resbuf:	ds	2	; SASI result buffer
213A          		ds	22
2150          	cport:	ds	1	; - 02150h
2151          		ds	1
2152          	SEC$CNT:	ds	1	; - 02152h
2153          	l2153h:	ds	1
2154          		ds	2
2156          	l2156h:	ds	6	; cmdbuf for SASI, segoff for GIDE
215C          		ds	292
		bootbf:	ds	0	; - 02280h
		
3000          	memtest	equ	03000h
C000          	ramboot	equ	0c000h
		
		; Start of ROM code
0000          		org	00000h
		
0000          	rombeg:
0000  C34B04  	rst0:	jmp	init
		
0003  6F6F7420	bootms:	db	'oot ',TRM
      00
		
0008  CDF104  	rst1:	call	intsetup
000B  2A1B20  		lhld	ticcnt
000E  C3B900  		jmp	int1$cont
0000          	if ((high int1$cont) <> 0)
		endif
		
0010          	rst2	equ	$-1	; must be a nop...
0011  CDF104  		call	intsetup
0014  1A      		ldax	d
0015  C38001  		jmp	int2$cont
		
0018  C32520  	rst3:	jmp	vrst3
		
001B  6F2000  	goms:	db	'o ',TRM
001E  0000    		db	0,0
		
0020  C32820  	rst4:	jmp	vrst4
		
0023  00000000		db	0,0,0,0,0
      00
		
0028  C32B20  	rst5:	jmp	vrst5
002B          	delayx:
002B  C36002  		jmp	delay
		
002E  3F00    	qmsg:	db	'?',TRM
		
0030  C32E20  	rst6:	jmp	vrst6
		
0033  00000000		db	0,0,0,0,0
      00
		
0038  C33120  	rst7:	jmp	vrst7
		
003B  75627374	subms:	db	'ubstitute ',TRM
      69747574
      652000
0046  726F6772	pcms:	db	'rogram Counter ',TRM
      616D2043
      6F756E74
      65722000
0056  656D6F72	mtms:	db	'emory test',TRM
      79207465
      737400
		
			rept	0066h-$
0061  00      		db	0
0062  00      		db	0
0063  00      		db	0
0064  00      		db	0
0065  00      		db	0
0000          	if	($ <> 0066h)
		endif
		
0066          	nmi:
0066  E3      		xthl	; save HL and pop RETADR
0067  E5      		push	h	; put RETADR in new position
0068  F5      		push	psw
0069  2B      		dcx	h
006A  7E      		mov	a,m		; check cause of NMI
006B  FEF0    		cpi	0f0h	; H8 front-panel port
006D          		jrz	port$f0
006D  281B    		DB	28H,port$f0-$-1
006F  FEF1    		cpi	0f1h	; H8 port
0071          		jrz	port$ign
0071  2808    		DB	28H,port$ign-$-1
0073  FEFA    		cpi	0fah	; H8...
0075          		jrz	port$ign
0075  2804    		DB	28H,port$ign-$-1
0077  FEFB    		cpi	0fbh	; H8...
0079          		jrnz	nmi$xit2
0079  202D    		DB	20H,nmi$xit2-$-1
007B          	port$ign:	; ports 0F1H, 0FAH, 0FBH.
007B  2B      		dcx	h
007C  7E      		mov	a,m
007D  FED3    		cpi	0d3h	; OUT
007F          		jrz	nmi$xit2
007F  2827    		DB	28H,nmi$xit2-$-1
0081  FEDB    		cpi	0dbh	; IN
0083          		jrnz	nmi$xit2
0083  2023    		DB	20H,nmi$xit2-$-1
			; IN 0F1H, 0FAH or 0FBH...
0085  F1      		pop	psw
0086  3E00    		mvi	a,000h	; these ports "return" 000h
0088          		jr	nmi$xit	; exit NMI
0088  181F    		DB	18H,nmi$xit-$-1
		
008A          	port$f0:	; H8 front panel port...
008A  2B      		dcx	h
008B  7E      		mov	a,m
008C  FEDB    		cpi	0dbh	; IN
008E          		jrnz	not$in
008E  2005    		DB	20H,not$in-$-1
0090  F1      		pop	psw
0091  3EFF    		mvi	a,0ffh	; simulate input of 0ffh
0093          		jr	nmi$xit
0093  1814    		DB	18H,nmi$xit-$-1
0095          	not$in:
0095  FED3    		cpi	0d3h	; OUT
0097          		jrnz	nmi$xit2
0097  200F    		DB	20H,nmi$xit2-$-1
0099  F1      		pop	psw	; byte to output to 0F0H...
009A  F5      		push	psw	; _  7 6 5 4 3 2 1 0
009B  17      		ral		; 7  6 5 4 3 2 1 0 _
009C  17      		ral		; 6  5 4 3 2 1 0 _ 7
009D  2F      		cma		; 6  5'4'3'2'1'0'_ 7'
009E  17      		ral		; 5' 4'3'2'1'0'_ 7'6
009F  07      		rlc		; 4' 3'2'1'0'_ 7'6 5'
00A0  E603    		ani	003h	; _  _ _ _ _ _ _ 6 5'
00A2  213620  		lxi	h,ctl$F2
00A5  B6      		ora	m
00A6  D3F2    		out	0f2h ; simulate some H8 features
00A8          	nmi$xit2:
00A8  F1      		pop	psw
00A9          	nmi$xit:
00A9  E1      		pop	h
00AA  E3      		xthl
00AB          		retn
00AB  ED45    		DB	0EDH,45H
		
00AD          	int1$1:
00AD  0A      		ldax	b
00AE  0F      		rrc
00AF  DC1F20  		cc	vrst1
00B2          	intret:
00B2  F1      		pop	psw
00B3  F1      		pop	psw
00B4  C1      		pop	b
00B5  D1      		pop	d
00B6  E1      		pop	h
00B7          	nulint:
00B7  FB      		ei
00B8  C9      		ret
		
00B9          	int1$cont:
00B9  23      		inx	h
00BA  221B20  		shld	ticcnt
00BD  010920  		lxi	b,ctl$F0
00C0  0A      		ldax	b
00C1  D3F0    		out	0f0h
00C3  E620    		ani	020h
00C5          		jrnz	intret
00C5  20EB    		DB	20H,intret-$-1
00C7  0B      		dcx	b
00C8          	int1$0:
00C8  0A      		ldax	b
00C9  17      		ral
00CA          		jrc	int1$1
00CA  38E1    		DB	38H,int1$1-$-1
00CC  210A00  		lxi	h,10
00CF  39      		dad	sp
00D0  5E      		mov	e,m
00D1  23      		inx	h
00D2  56      		mov	d,m
00D3  1B      		dcx	d
00D4  1A      		ldax	d
00D5  FE76    		cpi	076h	; HLT
00D7          		jrnz	int1$1
00D7  20D4    		DB	20H,int1$1-$-1
00D9  CD9B05  		call	belout
00DC  3E48    		mvi	a,'H'
00DE  CD9D05  		call	conout
00E1          	re$entry:		; re-entry point for errors, etc.
00E1  210920  		lxi	h,ctl$F0
00E4  36F0    		mvi	m,0f0h	; !beep, 2mS, MON, !SI
00E6  2A1D20  		lhld	monstk
00E9  F9      		sphl
00EA  CD9B05  		call	belout
			;jmp	start
00ED          	start:
00ED  FB      		ei
00EE  21ED00  		lxi	h,start
00F1  E5      		push	h
00F2  21DE07  		lxi	h,prompt
00F5  CD2B06  		call	msgout
00F8          	prloop:
00F8  CD8705  		call	coninx
00FB  E65F    		ani	01011111b ; toupper
00FD  211B01  		lxi	h,cmdtab
0100  0605    		mvi	b,5
0102          	cmloop:
0102  BE      		cmp	m
0103  23      		inx	h
0104          		jrz	docmd
0104  280D    		DB	28H,docmd-$-1
0106  23      		inx	h
0107  23      		inx	h
0108          		djnz	cmloop
0108  10F8    		DB	10H,cmloop-$-1
010A  4F      		mov	c,a
010B  CDF307  		call	xcmds
010E  CD9B05  		call	belout
0111          		jr	prloop
0111  18E5    		DB	18H,prloop-$-1
		
0113          	docmd:
0113  CD9D05  		call	conout
0116  7E      		mov	a,m
0117  23      		inx	h
0118  66      		mov	h,m
0119  6F      		mov	l,a
011A  E9      		pchl
		
011B          	cmdtab:
011B  47      		db	'G'
011C  5A01    		dw	cmdgo
011E  53      		db	'S'
011F  2905    		dw	cmdsub
0121  50      		db	'P'
0122  3A01    		dw	cmdpc
0124  42      		db	'B'
0125  A902    		dw	cmdboot
0127  4D      		db	'M'
0128  5A06    		dw	cmdmt
012A  00      		db	0
		
			; patched-out code?
012B  00      		db	000h
012C  00      		db	000h
012D  00      		db	000h
012E  00      		db	000h
012F  00      		db	000h
0130  00      		db	000h
0131  00      		db	000h
0132  00      		db	000h
0133  00      		db	000h
0134  00      		db	000h
0135  00      		db	000h
0136  00      		db	000h
0137  C31E04  		jmp	z47$dati
		
013A          	cmdpc:
013A  214600  		lxi	h,pcms
013D  CD2B06  		call	msgout
0140  210C00  		lxi	h,12
0143  39      		dad	sp
0144  5E      		mov	e,m
0145  23      		inx	h
0146  56      		mov	d,m
0147  EB      		xchg
0148  CD7105  		call	inhexcr
014B          		jrc	cmdpc0
014B  3807    		DB	38H,cmdpc0-$-1
014D  CDF005  		call	adrnl
0150  CD7105  		call	inhexcr
0153  D0      		rnc
0154          	cmdpc0:
0154  EB      		xchg
0155          	cmdpc1:
0155  160D    		mvi	d,CR
0157  C3A805  		jmp	adrin
		
015A          	cmdgo:
015A  211B00  		lxi	h,goms
015D  CD2B06  		call	msgout
0160  210D00  		lxi	h,13
0163  39      		dad	sp
0164  CD7105  		call	inhexcr
0167  DC5501  		cc	cmdpc1	; read HEX until CR
016A  CD2106  		call	crlf
016D  3ED0    		mvi	a,0d0h	; no-beep, 2mS, !MON, !single-step
016F          		jr	cmdgo0
016F  1808    		DB	18H,cmdgo0-$-1
0171  F3      		di
0172  3A0920  		lda	ctl$F0
0175  EE10    		xri	010h	; toggle single-step
0177  D3F0    		out	0f0h
0179          	cmdgo0:
0179  320920  		sta	ctl$F0
017C  E1      		pop	h
017D  C3B200  		jmp	intret
		
0180          	int2$cont:
0180  F610    		ori	010h	; disable single-step
0182  D3F0    		out	0f0h
0184  12      		stax	d
0185  E620    		ani	020h	; MON active?
0187  C2ED00  		jnz	start	; break to monitor code
018A  C32220  		jmp	vrst2	; else chain to (possible) user code.
		
018D          	take$5:
018D  3E05    		mvi	a,5	; 5 seconds
018F          	take$A:
018F  219F01  		lxi	h,timeout
0192  222020  		shld	vrst1+1
0195  325221  		sta	SEC$CNT
0198  3E01    		mvi	a,1
019A  320820  		sta	l2008h
019D  FB      		ei
019E  C9      		ret
		
019F          	timeout:
019F  211B20  		lxi	h,ticcnt
01A2  AF      		xra	a
01A3  B6      		ora	m
01A4  C0      		rnz
01A5  23      		inx	h
01A6  7E      		mov	a,m
01A7  0F      		rrc
01A8  D8      		rc
			; every 512 ticks... 1024mS
01A9  215221  		lxi	h,SEC$CNT
01AC  35      		dcr	m
01AD  C0      		rnz
01AE          	error:
01AE  2A1D20  		lhld	monstk
01B1  F9      		sphl
01B2  212E00  		lxi	h,qmsg
01B5  CD2B06  		call	msgout
01B8  21B700  		lxi	h,nulint
01BB  222020  		shld	vrst1+1
01BE  320820  		sta	l2008h
01C1  DBF2    		in	0f2h
01C3  E603    		ani	00000011b
01C5          		jrnz	error0
01C5  2002    		DB	20H,error0-$-1
01C7  D37F    		out	07fh
01C9          	error0:
01C9  C3E100  		jmp	re$entry
		
01CC          	chkauto:
01CC  215321  		lxi	h,l2153h	; auto-boot disable?
01CF  DBF2    		in	0f2h
01D1  57      		mov	d,a
01D2  EE80    		xri	080h	; toggle auto-boot
01D4  B6      		ora	m
01D5  F8      		rm		; auto-boot OFF
01D6  72      		mov	m,d	; ensure we only fail once... and only on power-up?
01D7  CD0C02  		call	gtdfbt
01DA  21E601  		lxi	h,autbms
01DD  CD2B06  		call	msgout
01E0  318022  		lxi	sp,bootbf
01E3  C35203  		jmp	goboot0
		
01E6  4175746F	autbms:	db	'Auto Boot',TRM
      20426F6F
      7400
		
		; determine device for port 078H
		; return phy drv number in D.
01F0          	gtdev1:
01F0  1600    		mvi	d,0	; Z17
01F2  DBF2    		in	0f2h
01F4          	gtdev0:
01F4  E603    		ani	00000011b	; port 078H device
01F6  C8      		rz		; Z17 (or Z37)
01F7  FE01    		cpi	01b
01F9  1605    		mvi	d,5
01FB  C8      		rz		; Z47
01FC  FE02    		cpi	10b
01FE  1603    		mvi	d,3
0200  C8      		rz		; Z67/MMS77320
0201  C3AE01  		jmp	error	; fatal error... not defined
		
		; determine device for port 078H
		; return phy drv number in D.
0204          	gtdev2:
0204  162E    		mvi	d,46	; Z37
0206  DBF2    		in	0f2h
0208  0F      		rrc
0209  0F      		rrc
020A          		jr	gtdev0	; rest are same
020A  18E8    		DB	18H,gtdev0-$-1
		
		; determine default boot device.
020C          	gtdfbt:
020C  110000  		lxi	d,0
020F  DBF2    		in	0f2h
0211  E670    		ani	01110000b	; default boot selection
0213  FE20    		cpi	00100000b	; device at 07CH
0215          		jrz	gtdev1
0215  28D9    		DB	28H,gtdev1-$-1
0217  FE30    		cpi	00110000b	; device at 078H
0219          		jrz	gtdev2
0219  28E9    		DB	28H,gtdev2-$-1
021B  C32208  		jmp	gtdvtb		; get MMS device
		
		; Check SW501 for installed device.
		; C = desired port pattern, 00=Z17/Z37, 01=Z47, 10=Z67, 11=undefined
		; returns base I/O port adr in B.
021E          	getport:
021E  067C    		mvi	b,07ch
0220  DBF2    		in	0f2h
0222  E603    		ani	003h
0224  B9      		cmp	c
0225  C8      		rz
0226  0678    		mvi	b,078h
0228  DBF2    		in	0f2h
022A  0F      		rrc
022B  0F      		rrc
022C  E603    		ani	003h
022E  B9      		cmp	c
022F  C8      		rz
0230  E1      		pop	h	; discard return address
0231          	s501er:
0231  213702  		lxi	h,s501ms
0234  C32B06  		jmp	msgout
		
0237  53573530	s501ms:	db	'SW501 wrong ',TRM
      31207772
      6F6E6720
      00
		
		; hack to support 3 drives on H17
0244          	m$sdp:
0244  3E0A    		mvi	a,10
0246  32B420  		sta	DECNT
0249  3A3121  		lda	AIO$UNI
024C  F5      		push	psw	; 0,1,2
024D  C6FE    		adi	-2	;
024F  CE03    		aci	3	; 1,2,4
0251  C33C1E  		jmp	R$SDP+10	; hacked R.SDP for 3-drives
		
0254          	inport0:
0254  B7      		ora	a	; NC
		; input from cport+CY
0255          	inportx:
0255  C5      		push	b
0256  3A5021  		lda	cport
0259  CE00    		aci	0
025B  4F      		mov	c,a
025C          		inp	a
025C  ED78    		DB	0EDH,a*8+40H
025E  C1      		pop	b
025F  C9      		ret
		
0260          	delay:
0260  E5      		push	h
0261  211B20  		lxi	h,ticcnt
0264  86      		add	m
0265          	delay0:
0265  BE      		cmp	m
0266          		jrnz	delay0
0266  20FD    		DB	20H,delay0-$-1
0268  E1      		pop	h
0269  C9      		ret
		
026A          	digerr:
026A  CD9B05  		call	belout
026D          		jr	btdig0
026D  1806    		DB	18H,btdig0-$-1
		; Got a digit in boot command, parse it
026F          	btdig:	; boot by phys drive number, E=0
026F  CD9D05  		call	conout	; echo digit
0272  E60F    		ani	00fh	; convert to binary
0274  57      		mov	d,a
0275          	btdig0:
0275  CD8C05  		call	conin	; get another, until term char (C)
0278  B9      		cmp	c
0279          		jrz	gotnum
0279  281D    		DB	28H,gotnum-$-1
027B  FE30    		cpi	'0'
027D          		jrc	digerr
027D  38EB    		DB	38H,digerr-$-1
027F  FE3A    		cpi	'9'+1
0281          		jrnc	digerr
0281  30E7    		DB	30H,digerr-$-1
0283  CD9D05  		call	conout
0286  E60F    		ani	00fh
0288  060A    		mvi	b,10	; add 10 times, i.e. D = (D * 10) + A
028A          	btdig1:
028A  82      		add	d
028B  DAAE01  		jc	error
028E          		djnz	btdig1
028E  10FA    		DB	10H,btdig1-$-1
0290  57      		mov	d,a
0291  FEC8    		cpi	200
0293  D2AE01  		jnc	error
0296          		jr	btdig0
0296  18DD    		DB	18H,btdig0-$-1
		
0298          	gotnum:	; Boot N... "N" in D
0298  7A      		mov	a,d
0299  FE05    		cpi	5
029B  DA4F03  		jc	goboot
029E  FE09    		cpi	9
02A0  D24F03  		jnc	goboot
02A3  C6C8    		adi	200	; modify 5..8 to not conflict
02A5  57      		mov	d,a
02A6  C34F03  		jmp	goboot
		
02A9          	cmdboot:
02A9  210300  		lxi	h,bootms
02AC  CD2B06  		call	msgout	; complete (B)oot
02AF  3EC3    		mvi	a,0c3h
02B1  328022  		sta	bootbf	; mark "no string"
02B4  318022  		lxi	sp,bootbf
02B7  CD0C02  		call	gtdfbt
02BA  0E0D    		mvi	c,CR	; end input on CR
02BC          		jr	boot0
02BC  1803    		DB	18H,boot0-$-1
02BE          	bterr:
02BE  CD9B05  		call	belout
02C1          	boot0:
02C1  CD8C05  		call	conin
02C4  B9      		cmp	c
02C5  CA4F03  		jz	goboot
02C8  1E00    		mvi	e,0
02CA  FE30    		cpi	'0'
02CC          		jrc	nodig
02CC  3804    		DB	38H,nodig-$-1
02CE  FE3A    		cpi	'9'+1
02D0          		jrc	btdig
02D0  389D    		DB	38H,btdig-$-1
02D2          	nodig:	; boot by letter... Boot alpha-
02D2  E65F    		ani	05fh ; toupper
02D4  FE5B    		cpi	'Z'+1
02D6          		jrnc	bterr
02D6  30E6    		DB	30H,bterr-$-1
02D8  FE41    		cpi	'A'
02DA          		jrc	bterr
02DA  38E2    		DB	38H,bterr-$-1
02DC  CD9D05  		call	conout
02DF  CD9D05  		call	conout
02E2  FE42    		cpi	'B'
02E4          		jrc	gotit	; 'A' is synonym for default
02E4  3816    		DB	38H,gotit-$-1
02E6  214204  		lxi	h,bootb1	; Heath/Zenith device letters
02E9  47      		mov	b,a
02EA          	luboot:
02EA  7E      		mov	a,m
02EB  23      		inx	h
02EC  56      		mov	d,m
02ED  23      		inx	h
02EE  B8      		cmp	b
02EF          		jrz	gotit
02EF  280B    		DB	28H,gotit-$-1
02F1  B7      		ora	a
02F2          		jrnz	luboot
02F2  20F6    		DB	20H,luboot-$-1
02F4  1600    		mvi	d,0
02F6  CD5408  		call	mmslookup
02F9  DAAE01  		jc	error
02FC          	gotit:
02FC  3E2D    		mvi	a,'-'	; next is optional unit number...
02FE  CD9D05  		call	conout
0301          		jr	luboot0
0301  1803    		DB	18H,luboot0-$-1
		
0303          	lunerr:
0303  CD9B05  		call	belout
0306          	luboot0:
0306  CD8C05  		call	conin
0309  B9      		cmp	c
030A          		jrz	goboot
030A  2843    		DB	28H,goboot-$-1
030C  FE3A    		cpi	':'
030E          		jrz	colon
030E  2827    		DB	28H,colon-$-1
0310  FE20    		cpi	' '
0312          		jrz	space
0312  281E    		DB	28H,space-$-1
0314  FE30    		cpi	'0'
0316          		jrc	lunerr
0316  38EB    		DB	38H,lunerr-$-1
0318  FE3A    		cpi	'9'+1
031A          		jrnc	lunerr
031A  30E7    		DB	30H,lunerr-$-1
031C  CD9D05  		call	conout
031F  D630    		sui	'0'
0321  5F      		mov	e,a	; single digit (0..9)
0322          	luboot1:
0322  CD8C05  		call	conin
0325  B9      		cmp	c
0326          		jrz	goboot
0326  2827    		DB	28H,goboot-$-1
0328  FE3A    		cpi	':'	; Boot alpha-dig:str
032A          		jrz	colon
032A  280B    		DB	28H,colon-$-1
032C  FE20    		cpi	' '	; cosmetic spaces?
032E          		jrz	space
032E  2802    		DB	28H,space-$-1
0330  3E07    		mvi	a,BEL
0332          	space:
0332  CD9D05  		call	conout
0335          		jr	luboot1
0335  18EB    		DB	18H,luboot1-$-1
		
0337          	colon:	; get arbitrary string as last boot param
0337  0600    		mvi	b,0
0339  218022  		lxi	h,bootbf
033C          	btstr0:
033C  CD9D05  		call	conout
033F  CD8C05  		call	conin
0342  04      		inr	b
0343  23      		inx	h
0344  77      		mov	m,a
0345  B9      		cmp	c
0346          		jrnz	btstr0
0346  20F4    		DB	20H,btstr0-$-1
0348  AF      		xra	a	; TRM - string terminator
0349          	btstr1:	; use stack as char array...
0349  F5      		push	psw
034A  33      		inx	sp	; undo half of push
034B  2B      		dcx	h
034C  7E      		mov	a,m
034D          		djnz	btstr1
034D  10FA    		DB	10H,btstr1-$-1
		; D=Phys Drive base number, E=Unit number
		; (or, D=Phys Drive unit, E=0)
034F          	goboot:
034F  CD2106  		call	crlf
0352          	goboot0:
0352  21AE01  		lxi	h,error
0355  E5      		push	h
0356  CDAE07  		call	h17init
0359  7B      		mov	a,e
035A  323121  		sta	AIO$UNI	; relative unit num
035D  82      		add	d
035E  323420  		sta	l2034h	; boot phys drv unit num
0361  7A      		mov	a,d
0362  FE03    		cpi	3	; 0,1,2
0364          		jrc	bz17	; Z17 boot
0364  3809    		DB	38H,bz17-$-1
			; 3,4 not used?
0366  D605    		sui	5
0368  FE04    		cpi	4	; 5,6,7,8
036A          		jrc	bz47	; Z47 boot
036A  3847    		DB	38H,bz47-$-1
036C  C30408  		jmp	exboot	;
		
036F          	bz17:
036F  83      		add	e
0370  FE03    		cpi	3
0372  D0      		rnc	; invalid Z17 drive
0373  323121  		sta	AIO$UNI
0376  DBF2    		in	0f2h
0378  E603    		ani	00000011b
037A  C23102  		jnz	s501er	; no Z17 installed
037D  3E7C    		mvi	a,07ch
037F  325021  		sta	cport
0382  214402  		lxi	h,m$sdp
0385  228620  		shld	D$CONST+62
0388  3E0A    		mvi	a,10
038A  47      		mov	b,a	; B = 10, one full revolution?
038B  CD8F01  		call	take$A	; error after 10 seconds...
038E  CD4402  		call	m$sdp	; hacked R.SDP - setup dev parms (select drive)
0391          	bz17$0:
0391  CD9D1E  		call	R$WHD	; WHD - wait hole detect
0394  CDB91E  		call	R$WNH	; WNH - wait no hole
0397          		djnz	bz17$0	; essentially hang until user inserts a disk...
0397  10F8    		DB	10H,bz17$0-$-1
0399  CDF61B  		call	R$ABORT	; R.ABORT - reset everything
039C  118022  		lxi	d,bootbf	; DMA address
039F  010009  		lxi	b,00900h	; B = 9 (num sectors), C = 0 (residual bytes to read)
03A2  210000  		lxi	h,0		; track/sector number to start
03A5  CD3F1C  		call	R$READ
03A8  D8      		rc
03A9  E1      		pop	h
03AA          	hxboot:
03AA  21191C  		lxi	h,CLOCK	; CLOCK - standard 2mS handler
03AD  222020  		shld	vrst1+1 ; normal TICK intr routine
03B0  C38022  		jmp	bootbf	; run boot code...
		
03B3          	bz47:
03B3  83      		add	e
03B4  FE04    		cpi	004h
03B6  D0      		rnc
03B7  0F      		rrc
03B8  0F      		rrc
03B9  0F      		rrc
03BA  3C      		inr	a
03BB  5F      		mov	e,a
03BC  0E01    		mvi	c,01b
03BE  CD1E02  		call	getport
03C1  78      		mov	a,b
03C2  325021  		sta	cport
03C5  CD8D01  		call	take$5	; error out after 5 seconds...
03C8  3E02    		mvi	a,2
03CA  CD1004  		call	outport0
03CD  3E02    		mvi	a,2
03CF  CD0304  		call	z47$cmdo
03D2  7B      		mov	a,e
03D3  CDFF03  		call	z47$dato
03D6  CD1E04  		call	z47$dati
03D9  E60C    		ani	00ch
03DB  0F      		rrc
03DC  0F      		rrc
03DD  3C      		inr	a
03DE  47      		mov	b,a
03DF  3E01    		mvi	a,1
03E1          	bz47$0:
03E1  87      		add	a
03E2          		djnz	bz47$0
03E2  10FD    		DB	10H,bz47$0-$-1
03E4  1F      		rar
03E5  47      		mov	b,a
03E6  218022  		lxi	h,bootbf
03E9  C5      		push	b
03EA  CD2704  		call	z47$read
03ED  C1      		pop	b
03EE  1C      		inr	e
03EF  CD2704  		call	z47$read
03F2  CD5402  		call	inport0
03F5  E601    		ani	001h
03F7  C0      		rnz
03F8          	hwboot:
03F8  AF      		xra	a
03F9  320820  		sta	l2008h
03FC  C3AA03  		jmp	hxboot
		
03FF          	z47$dato:
03FF  1680    		mvi	d,080h	; TR - date transfer request
0401          		jr	z47$out0
0401  1802    		DB	18H,z47$out0-$-1
0403          	z47$cmdo:
0403  1620    		mvi	d,020h	; DONE
0405          	z47$out0:
0405  37      		stc
0406  F5      		push	psw
0407          	z47$wt0:
0407  CD5402  		call	inport0
040A  A2      		ana	d
040B          		jrz	z47$wt0
040B  28FA    		DB	28H,z47$wt0-$-1
040D  F1      		pop	psw
040E          		jr	z47$out1
040E  1801    		DB	18H,z47$out1-$-1
0410          	outport0:
0410  B7      		ora	a
0411          	z47$out1:
0411  C5      		push	b
0412  47      		mov	b,a
0413  3A5021  		lda	cport
0416  CE00    		aci	0
0418  4F      		mov	c,a
0419  78      		mov	a,b
041A          		outp	a
041A  ED79    		DB	0EDH,a*8+41H
041C  C1      		pop	b
041D  C9      		ret
		
041E          	z47$dati:
041E  CD5402  		call	inport0
0421  07      		rlc	; TR
0422          		jrnc	z47$dati
0422  30FA    		DB	30H,z47$dati-$-1
0424  C35502  		jmp	inportx	; CY=1, input cport+1
		
0427          	z47$read:
0427  3E07    		mvi	a,7	; read thru buffer command
0429  CD0304  		call	z47$cmdo
042C  AF      		xra	a
042D  CDFF03  		call	z47$dato	; params
0430  7B      		mov	a,e
0431  CDFF03  		call	z47$dato	; params
0434          	z47$rd0:
0434  0E80    		mvi	c,128
0436          	z47$rd1:
0436  CD1E04  		call	z47$dati
0439  77      		mov	m,a
043A  23      		inx	h
043B  0D      		dcr	c
043C          		jrnz	z47$rd1
043C  20F8    		DB	20H,z47$rd1-$-1
043E  05      		dcr	b
043F          		jrnz	z47$rd0
043F  20F3    		DB	20H,z47$rd0-$-1
0441  C9      		ret
		
		; Heath/Zenith device boot table
0442          	bootb1:
0442  4200    		db	'B',0	; Z17
0444  432E    		db	'C',46	; Z37
0446  4405    		db	'D',5	; Z47
0448  4503    		db	'E',3	; Z67
044A  00      		db	0
		
		; ROM start point - initialize everything
044B          	init:
			; find amount of RAM
044B  21001F  		lxi	h,ramstart-0100h
044E          	ramsiz:
044E  24      		inr	h
044F  7E      		mov	a,m
0450  34      		inr	m
0451  BE      		cmp	m
0452  77      		mov	m,a
0453          		jrnz	ramsiz
0453  20F9    		DB	20H,ramsiz-$-1
0455  2B      		dcx	h
0456  F9      		sphl		; set SP to top of RAM (-1)
0457  E5      		push	h	; save top on stack
0458  21E100  		lxi	h,re$entry
045B  E5      		push	h
			; determine H19 BAUD, by experimentation
045C  0E03    		mvi	c,003h	; br38400
045E          	baud0:
045E  3E83    		mvi	a,083h
0460  D3EB    		out	0ebh
0462  AF      		xra	a
0463  D3E9    		out	0e9h
0465  79      		mov	a,c
0466  D3E8    		out	0e8h
0468  07      		rlc
0469  4F      		mov	c,a
046A  3E03    		mvi	a,003h
046C  D3EB    		out	0ebh
046E  AF      		xra	a
046F  D3E9    		out	0e9h
0471  DBE8    		in	0e8h
0473  210C05  		lxi	h,initms	; ask H19 for response...
0476  CD2B06  		call	msgout
0479  0619    		mvi	b,25	; loop 6400 times... let Rx overrun...
047B          	baud1:
047B  3D      		dcr	a
047C          		jrnz	baud1	; 4096 cycles each
047C  20FD    		DB	20H,baud1-$-1
047E          		djnz	baud1	; +13 * 25... 102725 cycles, about 50mS
047E  10FB    		DB	10H,baud1-$-1
0480  DBED    		in	0edh
0482  1F      		rar
0483  DBE8    		in	0e8h
0485  17      		ral
0486  D697    		sui	097h
0488          		jrnz	baud0
0488  20D4    		DB	20H,baud0-$-1
048A  23      		inx	h
048B  CD2B06  		call	msgout
048E  060F    		mvi	b,15	; 15*256 = 3840 loops
0490          	baud2:
0490  3D      		dcr	a
0491          		jrnz	baud2
0491  20FD    		DB	20H,baud2-$-1
0493          		djnz	baud2
0493  10FB    		DB	10H,baud2-$-1
0495  3E0F    		mvi	a,00001111b	; all outputs ON
0497  D3EC    		out	0ech		; OUT2=1 hides 16C2550 intr enable diff
			; compute checksum, compare
0499  010000  		lxi	b,rombeg
049C          		exx
049C  D9      		DB	0D9H
049D  11FC0F  		lxi	d,romend-rombeg
04A0  210000  		lxi	h,0
04A3  0600    		mvi	b,0
04A5          	cksum0:
04A5          		exx
04A5  D9      		DB	0D9H
04A6  0A      		ldax	b
04A7  03      		inx	b
04A8          		exx
04A8  D9      		DB	0D9H
04A9  4F      		mov	c,a
04AA  09      		dad	b
04AB  1B      		dcx	d
04AC  7A      		mov	a,d
04AD  B3      		ora	e
04AE  C2A504  		jnz	cksum0
04B1          		lded	chksum
04B1  ED5B    		DB	0EDH,5BH
04B3  FE0F    		DW	chksum
04B5          		dsbc	d
04B5  ED52    		DB	0EDH,d*8+42H
04B7  CAC204  		jz	rom$ok
04BA  21220E  		lxi	h,erprom
04BD          	msg$die:
04BD  CD2B06  		call	msgout
04C0  F3      		di
04C1  76      		hlt
04C2          	rom$ok:
04C2  AF      		xra	a
04C3  325321  		sta	l2153h
04C6  323620  		sta	ctl$F2	; 2mS, Org0 OFF
04C9  3EC9    		mvi	a,0c9h	; RET
04CB  320420  		sta	l2004h
04CE  210050  		lxi	h,05000h	; 0, (beep, 2mS, !MON, !SI)
04D1  220820  		shld	l2008h
04D4  CF      		rst	1	; kick-start clock
04D5  211B20  		lxi	h,ticcnt
04D8  11C800  		lxi	d,0280h-440	; tuned to produce ~0x280 for 2.048MHz
04DB  7E      		mov	a,m
04DC          	tick0:	; wait for next tick of clock...
04DC  BE      		cmp	m
04DD          		jrz	tick0
04DD  28FD    		DB	28H,tick0-$-1
04DF  C605    		adi	5	; +10mS (actually, +8mS from new tick)
04E1          	tick1:
04E1  13      		inx	d	; count CPU cycles for 8mS...
04E2  BE      		cmp	m	; but note: 2mS interrupt overhead,
04E3  BE      		cmp	m	; so count will be low.
04E4          		jrnz	tick1	; each loop = 32 cycles
04E4  20FB    		DB	20H,tick1-$-1
04E6  7A      		mov	a,d
04E7  FE02    		cpi	2	; min 9984 cycles... 1.248MHz...
					; max 18144 cycles... 2.268MHz
04E9          		jrz	intsetup
04E9  2806    		DB	28H,intsetup-$-1
			; Unsupported CPU speed...
04EB  211805  		lxi	h,unsupm
04EE  CD2B06  		call	msgout
		
04F1          	intsetup:
04F1  E3      		xthl
04F2  D5      		push	d
04F3  C5      		push	b
04F4  F5      		push	psw
04F5  EB      		xchg
04F6  210A00  		lxi	h,10
04F9  39      		dad	sp
04FA  E5      		push	h
04FB  D5      		push	d
04FC  110920  		lxi	d,ctl$F0
04FF  1A      		ldax	d
0500  2F      		cma
0501  E630    		ani	030h
0503  C8      		rz
0504  210200  		lxi	h,2
0507  39      		dad	sp
0508  221D20  		shld	monstk
050B  C9      		ret
		
050C  801B5B3F	initms:	db	080h,ESC,'[?2h',ESC,'Z',TRM
      32681B5A
      00
0515  1B7A00  		db	ESC,'z',TRM
		
0518  556E7375	unsupm:	db	'Unsupp CPU speed',TRM
      70702043
      50552073
      70656564
      00
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Substitute command
0529          	cmdsub:
0529  213B00  		lxi	h,subms
052C  CD2B06  		call	msgout
052F  210320  		lxi	h,l2003h
0532  160D    		mvi	d,CR
0534  CDA805  		call	adrin
0537  EB      		xchg
0538          	cmdsub0:
0538  CDF005  		call	adrnl
053B  7E      		mov	a,m
053C  CDFF05  		call	hexout
053F  CDFB05  		call	spout
0542          	cmdsub1:
0542  CDDD05  		call	hexin
0545          		jrnc	cmdsub4
0545  3019    		DB	30H,cmdsub4-$-1
0547  FE0D    		cpi	CR
0549          		jrz	cmdsub2
0549  280C    		DB	28H,cmdsub2-$-1
054B  FE2D    		cpi	'-'
054D          		jrz	cmdsub3
054D  280B    		DB	28H,cmdsub3-$-1
054F  FE2E    		cpi	'.'
0551  C8      		rz
0552  CD9B05  		call	belout
0555          		jr	cmdsub1
0555  18EB    		DB	18H,cmdsub1-$-1
0557          	cmdsub2:
0557  23      		inx	h
0558          		jr	cmdsub0
0558  18DE    		DB	18H,cmdsub0-$-1
055A          	cmdsub3:
055A  CD9D05  		call	conout
055D  2B      		dcx	h
055E          		jr	cmdsub0
055E  18D8    		DB	18H,cmdsub0-$-1
0560          	cmdsub4:
0560  3600    		mvi	m,000h
0562          	cmdsub5:
0562  CD9D05  		call	conout
0565  CDD405  		call	hexbin
0568          		rld
0568  ED6F    		DB	0EDH, 6FH
056A  CD7105  		call	inhexcr
056D          		jrnc	cmdsub2
056D  30E8    		DB	30H,cmdsub2-$-1
056F          		jr	cmdsub5
056F  18F1    		DB	18H,cmdsub5-$-1
		
0571          	inhexcr:
0571  CD8C05  		call	conin
0574  FE0D    		cpi	CR
0576  C8      		rz
0577  CDE005  		call	hexchk
057A  3F      		cmc
057B  D8      		rc
057C  CD9B05  		call	belout
057F          		jr	inhexcr
057F  18F0    		DB	18H,inhexcr-$-1
		
		; This loop checks for auto boot while waiting for command input.
		; Theoretically, one could flip the auto-boot dipsw at the MMS: prompt?
0581          	coninx0:
0581  CDCC01  		call	chkauto
0584  CDF207  		call	nulfn	; some patched-out code?
0587          	coninx:
0587  DBED    		in	0edh
0589  0F      		rrc
058A          		jrnc	coninx0
058A  30F5    		DB	30H,coninx0-$-1
058C          	conin:
058C  DBED    		in	0edh
058E  0F      		rrc
058F          		jrnc	conin
058F  30FB    		DB	30H,conin-$-1
0591  DBE8    		in	0e8h
0593  E67F    		ani	07fh
0595  FE7F    		cpi	DEL	; DEL key restarts from anywhere?
0597  CAE100  		jz	re$entry
059A  C9      		ret
		
059B          	belout:
059B  3E07    		mvi	a,BEL
059D          	conout:
059D  F5      		push	psw
059E          	conot1:
059E  DBED    		in	0edh
05A0  E620    		ani	00100000b
05A2          		jrz	conot1
05A2  28FA    		DB	28H,conot1-$-1
05A4  F1      		pop	psw
05A5  D3E8    		out	0e8h
05A7  C9      		ret
		
		; D=term char (e.g. '.' for Substitute)
		; HL=location to store address
05A8          	adrin:
05A8  E5      		push	h
05A9  210000  		lxi	h,0
05AC          	adrin0:
05AC  D48C05  		cnc	conin
05AF  CDE005  		call	hexchk
05B2          		jrc	adrin1
05B2  380E    		DB	38H,adrin1-$-1
05B4  CD9D05  		call	conout
05B7  CDD405  		call	hexbin
05BA  29      		dad	h
05BB  29      		dad	h
05BC  29      		dad	h
05BD  29      		dad	h
05BE  B5      		ora	l
05BF  6F      		mov	l,a
05C0          		jr	adrin0
05C0  18EA    		DB	18H,adrin0-$-1
05C2          	adrin1:
05C2  BA      		cmp	d
05C3          		jrz	adrin2
05C3  2806    		DB	28H,adrin2-$-1
05C5  CD9B05  		call	belout
05C8  B7      		ora	a
05C9          		jr	adrin0
05C9  18E1    		DB	18H,adrin0-$-1
05CB          	adrin2:
05CB  CD9D05  		call	conout
05CE  EB      		xchg
05CF  E1      		pop	h
05D0  72      		mov	m,d
05D1  2B      		dcx	h
05D2  73      		mov	m,e
05D3  C9      		ret
		
05D4          	hexbin:
05D4  D63A    		sui	'9'+1
05D6          		jrnc	hexbi0
05D6  3002    		DB	30H,hexbi0-$-1
05D8  C607    		adi	7
05DA          	hexbi0:
05DA  C603    		adi	3
05DC  C9      		ret
		
05DD          	hexin:
05DD  CD8C05  		call	conin
05E0          	hexchk:
05E0  FE30    		cpi	'0'
05E2  D8      		rc	
05E3  FE3A    		cpi	'9'+1
05E5  3F      		cmc
05E6  D0      		rnc
05E7  E65F    		ani	05fh	; toupper
05E9  FE41    		cpi	'A'
05EB  D8      		rc	
05EC  FE47    		cpi	'F'+1
05EE  3F      		cmc
05EF  C9      		ret
		
05F0          	adrnl:
05F0  CD2106  		call	crlf
05F3          	adrout:
05F3  7C      		mov	a,h
05F4  CDFF05  		call	hexout
05F7  7D      		mov	a,l
05F8  CDFF05  		call	hexout
05FB          	spout:
05FB  3E20    		mvi	a,' '
05FD          		jr	conout
05FD  189E    		DB	18H,conout-$-1
		
05FF          	hexout:
05FF  F5      		push	psw
0600  07      		rlc
0601  07      		rlc
0602  07      		rlc
0603  07      		rlc
0604  CD0806  		call	hexdig
0607  F1      		pop	psw
0608          	hexdig:
0608  E60F    		ani	00fh
060A  C690    		adi	090h
060C  27      		daa
060D  CE40    		aci	040h
060F  27      		daa
0610          		jr	conout
0610  188B    		DB	18H,conout-$-1
		
		; Special entry points expected by HDOS, or maybe Heath CP/M boot.
			rept	0613h-$
0612  00      		db	0
0000          	if	($ <> 0613h)
		endif
0613  C3FF03  		jmp	z47$dato ; Must be at 0613
0616  00      		db	0
0617  C30304  		jmp	z47$cmdo ; Must be at 0617
		
061A          	waitcr:
061A  CD8C05  		call	conin
061D  FE0D    		cpi	CR
061F          		jrnz	waitcr
061F  20F9    		DB	20H,waitcr-$-1
0621          	crlf:
0621  3E0D    		mvi	a,CR
0623  CD9D05  		call	conout
0626  3E0A    		mvi	a,LF
0628  C39D05  		jmp	conout
		
062B          	msgout:
062B  7E      		mov	a,m
062C  B7      		ora	a
062D  C8      		rz
062E  CD9D05  		call	conout
0631  23      		inx	h
0632          		jr	msgout
0632  18F7    		DB	18H,msgout-$-1
		
0634          	cserr:
0634  213A06  		lxi	h,cserms
0637  C32B06  		jmp	msgout
		
063A  07436865	cserms:	db	BEL,'Checksum error',TRM
      636B7375
      6D206572
      726F7200
		
064A  546F7020	topms:	db	'Top of Memory: ',TRM
      6F66204D
      656D6F72
      793A2000
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Memory Test command
065A          	cmdmt:
065A  215600  		lxi	h,mtms
065D  CD2B06  		call	msgout
0660  CD1A06  		call	waitcr
0663  214A06  		lxi	h,topms
0666  CD2B06  		call	msgout
0669  210000  		lxi	h,0
066C  39      		dad	sp
066D  7C      		mov	a,h
066E  3C      		inr	a
066F          		jrz	cmdmt0
066F  2802    		DB	28H,cmdmt0-$-1
0671  D620    		sui	020h
0673          	cmdmt0:
0673  67      		mov	h,a
0674  2E00    		mvi	l,0
0676  2B      		dcx	h
0677  D630    		sui	'0'
0679  5F      		mov	e,a
067A  CDF305  		call	adrout
067D  CD2106  		call	crlf
0680  1600    		mvi	d,000h
0682  0E30    		mvi	c,030h
0684  0600    		mvi	b,000h
0686          		exx
0686  D9      		DB	0D9H
0687  21B306  		lxi	h,mtest0
068A  11F12F  		lxi	d,memtest - (mtest1-mtest0)
068D  01FB00  		lxi	b,mtestZ-mtest0
0690          		ldir
0690  EDB0    		DB	0EDH,0B0H
0692  110030  		lxi	d,memtest
0695  21C206  		lxi	h,mtest1
0698  0EEC    		mvi	c,mtestZ-mtest1
069A  AF      		xra	a
069B          		exaf
069B  08      		DB	08H
069C  AF      		xra	a
069D          	cmdmt1:
069D  86      		add	m
069E          		exaf
069E  08      		DB	08H
069F  EB      		xchg
06A0  86      		add	m
06A1          		exaf
06A1  08      		DB	08H
06A2  EB      		xchg
06A3  23      		inx	h
06A4  13      		inx	d
06A5  0D      		dcr	c
06A6  C29D06  		jnz	cmdmt1
06A9  4F      		mov	c,a
06AA          		exaf
06AA  08      		DB	08H
06AB  B9      		cmp	c
06AC  C23406  		jnz	cserr
06AF  F3      		di
06B0  C3F82F  		jmp	memtest - (mtest1-mtest)
		
		;------------------------------------------------
		; Start of relocated code...
		; Memory Test routine, position-endependent
		;
06B3  040C0408	mtest0:	db	04h,0ch,04h,08h,0ch,08h,20h
      0C0820
		
06BA          	mtest:
06BA  21F12F  		lxi	h,memtest - (mtest1-mtest0)
06BD  01F207  		lxi	b,0700h + 0f2h	; length of unlock sequence, GPIO port
06C0          		outir
06C0  EDB3    		DB	0EDH,0B3H
06C2          	mtest1:		; lands at 03000h - retained relocated code
06C2          		exx
06C2  D9      		DB	0D9H
06C3  62      		mov	h,d
06C4  2E00    		mvi	l,0
06C6  78      		mov	a,b
06C7          		exx
06C7  D9      		DB	0D9H
06C8  4F      		mov	c,a
06C9  0602    		mvi	b,2
06CB          	mtest2:
06CB  79      		mov	a,c
06CC  07      		rlc
06CD  07      		rlc
06CE  07      		rlc
06CF  07      		rlc
06D0  4F      		mov	c,a
06D1  E60F    		ani	00fh
06D3  C690    		adi	090h
06D5  27      		daa
06D6  CE40    		aci	040h
06D8  27      		daa
06D9  D3E8    		out	0e8h
06DB          	mtest3:
06DB  DBED    		in	0edh
06DD  E620    		ani	020h
06DF          		jrz	mtest3
06DF  28FA    		DB	28H,mtest3-$-1
06E1  05      		dcr	b
06E2          		jrnz	mtest2
06E2  20E7    		DB	20H,mtest2-$-1
06E4  3E0D    		mvi	a,CR
06E6  D3E8    		out	0e8h
06E8          		exx
06E8  D9      		DB	0D9H
06E9  78      		mov	a,b
06EA          	mtest4:
06EA  77      		mov	m,a
06EB  C601    		adi	1
06ED  27      		daa
06EE  2C      		inr	l
06EF          		jrnz	mtest4
06EF  20F9    		DB	20H,mtest4-$-1
06F1  24      		inr	h
06F2  0D      		dcr	c
06F3          		jrnz	mtest4
06F3  20F5    		DB	20H,mtest4-$-1
06F5  7C      		mov	a,h
06F6  92      		sub	d
06F7  4F      		mov	c,a
06F8  62      		mov	h,d
06F9  2E00    		mvi	l,0
06FB  78      		mov	a,b
06FC          	mtest5:
06FC  BE      		cmp	m
06FD          		jrnz	mtest9
06FD  2046    		DB	20H,mtest9-$-1
06FF  C601    		adi	1
0701  27      		daa
0702  2C      		inr	l
0703          		jrnz	mtest5
0703  20F7    		DB	20H,mtest5-$-1
0705  24      		inr	h
0706  0D      		dcr	c
0707          		jrnz	mtest5
0707  20F3    		DB	20H,mtest5-$-1
0709          		exx
0709  D9      		DB	0D9H
070A  210030  		lxi	h,memtest
070D  110000  		lxi	d,0
0710  01EC00  		lxi	b,mtestZ-mtest1
0713          		exx
0713  D9      		DB	0D9H
0714  7A      		mov	a,d
0715  EE30    		xri	030h
0717  57      		mov	d,a
0718          		jrz	mtest6
0718  2803    		DB	28H,mtest6-$-1
071A  4B      		mov	c,e
071B          		jr	mtest7
071B  180A    		DB	18H,mtest7-$-1
071D          	mtest6:
071D  0E30    		mvi	c,030h
071F  3E01    		mvi	a,001h
0721  80      		add	b
0722  27      		daa
0723  47      		mov	b,a
0724          		exx
0724  D9      		DB	0D9H
0725  EB      		xchg
0726          		exx
0726  D9      		DB	0D9H
0727          	mtest7:
0727          		exx
0727  D9      		DB	0D9H
0728          		ldir
0728  EDB0    		DB	0EDH,0B0H
072A  7A      		mov	a,d
072B  E6F0    		ani	0f0h
072D  67      		mov	h,a
072E  2E00    		mvi	l,0
0730  0EEC    		mvi	c,mtestZ-mtest1
0732  AF      		xra	a
0733          	mtest8:
0733  86      		add	m
0734  23      		inx	h
0735  0D      		dcr	c
0736          		jrnz	mtest8
0736  20FB    		DB	20H,mtest8-$-1
0738  4F      		mov	c,a
0739          		exaf
0739  08      		DB	08H
073A  B9      		cmp	c
073B          		jrnz	mtestE
073B  2049    		DB	20H,mtestE-$-1
073D          		exaf
073D  08      		DB	08H
073E  7A      		mov	a,d
073F  E6F0    		ani	0f0h
0741  67      		mov	h,a
0742  2E00    		mvi	l,0
0744  E9      		pchl
0745          	mtest9:
0745  AE      		xra	m
0746  57      		mov	d,a
0747  3E0A    		mvi	a,LF
0749  D3E8    		out	0e8h
074B          	mtestA:
074B  DBED    		in	0edh
074D  E620    		ani	020h
074F          		jrz	mtestA
074F  28FA    		DB	28H,mtestA-$-1
0751  0E02    		mvi	c,2
0753  0604    		mvi	b,4
0755          	mtestB:
0755  7C      		mov	a,h
0756  07      		rlc
0757  07      		rlc
0758  07      		rlc
0759  07      		rlc
075A  E60F    		ani	00fh
075C  C690    		adi	090h
075E  27      		daa
075F  CE40    		aci	040h
0761  27      		daa
0762  D3E8    		out	0e8h
0764          	mtestC:
0764  DBED    		in	0edh
0766  E620    		ani	020h
0768          		jrz	mtestC
0768  28FA    		DB	28H,mtestC-$-1
076A  29      		dad	h
076B  29      		dad	h
076C  29      		dad	h
076D  29      		dad	h
076E          		djnz	mtestB
076E  10E5    		DB	10H,mtestB-$-1
0770  3E20    		mvi	a,' '
0772  D3E8    		out	0e8h
0774          	mtestD:
0774  DBED    		in	0edh
0776  E620    		ani	020h
0778          		jrz	mtestD
0778  28FA    		DB	28H,mtestD-$-1
077A  0D      		dcr	c
077B  EB      		xchg
077C  0602    		mvi	b,002h
077E          		jrnz	mtestB
077E  20D5    		DB	20H,mtestB-$-1
0780  3E2A    		mvi	a,'*'
0782  D3E8    		out	0e8h
0784          		jr	mtestG
0784  1814    		DB	18H,mtestG-$-1
0786          	mtestE:
0786  DBED    		in	0edh
0788  E620    		ani	020h
078A          		jrz	mtestE
078A  28FA    		DB	28H,mtestE-$-1
078C  3E0A    		mvi	a,LF
078E  D3E8    		out	0e8h
0790          	mtestF:
0790  DBED    		in	0edh
0792  E620    		ani	020h
0794          		jrz	mtestF
0794  28FA    		DB	28H,mtestF-$-1
0796  3E21    		mvi	a,'!'
0798  D3E8    		out	0e8h
079A          	mtestG:
079A  DBED    		in	0edh
079C  E620    		ani	020h
079E          		jrz	mtestG
079E  28FA    		DB	28H,mtestG-$-1
07A0  AF      		xra	a
07A1  06FA    		mvi	b,0fah
07A3          	mtestH:
07A3  3D      		dcr	a
07A4          		jrnz	mtestH
07A4  20FD    		DB	20H,mtestH-$-1
07A6          		djnz	mtestH
07A6  10FB    		DB	10H,mtestH-$-1
07A8  3E07    		mvi	a,BEL
07AA  D3E8    		out	0e8h
07AC          		jr	mtestG
07AC  18EC    		DB	18H,mtestG-$-1
		; End of relocated code
07AE          	mtestZ	equ	$
		;------------------------------------------------
		
		; returns with interrupts disabled
07AE          	h17init:
07AE  F3      		di
07AF  AF      		xra	a
07B0  D37F    		out	07fh
07B2  D5      		push	d
07B3  210920  		lxi	h,ctl$F0
07B6  36D0    		mvi	m,0d0h	; !beep, 2mS, !mon, !SI
07B8  215A1F  		lxi	h,R$CONST
07BB  114820  		lxi	d,D$CONST
07BE  015800  		lxi	b,88
07C1          		ldir
07C1  EDB0    		DB	0EDH,0B0H
07C3  6B      		mov	l,e
07C4  62      		mov	h,d
07C5  13      		inx	d
07C6  0E1E    		mvi	c,30
07C8  77      		mov	m,a
07C9          		ldir	; fill l20a0h...
07C9  EDB0    		DB	0EDH,0B0H
07CB  3C      		inr	a	; A=1
07CC  211F20  		lxi	h,intvec	; vector area
07CF          	h17ini0:
07CF  36C3    		mvi	m,0c3h
07D1  23      		inx	h
07D2  36B7    		mvi	m,LOW (nulint-rst0)
07D4  23      		inx	h
07D5  3600    		mvi	m,HIGH (nulint-rst0)
07D7  23      		inx	h
07D8  87      		add	a	; shift left, count 7
07D9  F2CF07  		jp	h17ini0
07DC  D1      		pop	d
07DD  C9      		ret
		
07DE  0D0A4D4D	prompt:	db	CR,LF,'MMS: ',TRM
      533A2000
07E6  28632920		db	'(c) 1982 MMS'
      31393832
      204D4D53
		
07F2          	nulfn:
07F2  C9      		ret
		
07F3          	xcmds:
07F3  79      		mov	a,c
07F4  FE54    		cpi	'T'	; Terminal mode
07F6  CA9A0C  		jz	termod
07F9  FE52    		cpi	'R'	; set baud Rate
07FB  CAFB0C  		jz	setbr
07FE  FE56    		cpi	'V'	; eprom Version
0800  CA0A0E  		jz	prtver
0803  C9      		ret
		
		; D=Phys Drive base, E=Unit
		; (or D=Phys Drive unit, E=0)
0804          	exboot:
0804  7A      		mov	a,d
0805  D6C8    		sui	200
0807          		jrc	exboot0	; < 200
0807  3801    		DB	38H,exboot0-$-1
0809  57      		mov	d,a	; MMS 77314 REMEX (Z47)
080A          	exboot0:
080A  216408  		lxi	h,devtbl
080D          	exboot1:
080D  7A      		mov	a,d
080E  96      		sub	m
080F  23      		inx	h
0810  BE      		cmp	m
0811          		jrc	exboot2
0811  3808    		DB	38H,exboot2-$-1
0813  7E      		mov	a,m
0814  23      		inx	h
0815  23      		inx	h
0816  23      		inx	h
0817  B7      		ora	a
0818          		jrnz	exboot1
0818  20F3    		DB	20H,exboot1-$-1
081A  C9      		ret
		
081B          	exboot2:	; found device, jump to handler
081B  23      		inx	h
081C  4E      		mov	c,m
081D  23      		inx	h
081E  66      		mov	h,m
081F  69      		mov	l,c
0820  83      		add	e
0821  E9      		pchl
		
		; Returns NZ if found, D=phy drv
0822          	gtdvtb:
0822  DBF2    		in	0f2h
0824  E670    		ani	01110000b	; default boot device
0826  07      		rlc
0827  07      		rlc
0828  07      		rlc
0829  07      		rlc
082A  21A608  		lxi	h,defbt
082D          	gtdvtb0:
082D  85      		add	l
082E  6F      		mov	l,a
082F  3E00    		mvi	a,0
0831  8C      		adc	h
0832  67      		mov	h,a
0833  7E      		mov	a,m
0834  FEFF    		cpi	0ffh
0836  C8      		rz	; no device
0837  FEFE    		cpi	0feh
0839  CA3E08  		jz	gtdvtb1	; extended dipsw
083C  57      		mov	d,a
083D  C9      		ret	; NZ
		
083E          	gtdvtb1:
083E  DB5C    		in	05ch
0840  E6E0    		ani	11100000b	; device
0842  07      		rlc
0843  07      		rlc
0844  07      		rlc
0845  21AE08  		lxi	h,auxbt
0848  CD2D08  		call	gtdvtb0
084B  C8      		rz	; no device
084C  DB5C    		in	05ch
084E  E61C    		ani	00011100b	; LUN
0850  0F      		rrc
0851  0F      		rrc
0852  5F      		mov	e,a	; D=phy drv, E=LUN
0853  C9      		ret
		
		; lookup letter in MMS table
0854          	mmslookup:
0854  21B608  		lxi	h,bootb2
0857          	mmslk0:
0857  7E      		mov	a,m
0858  23      		inx	h
0859  56      		mov	d,m
085A  23      		inx	h
085B  B8      		cmp	b
085C  C8      		rz
085D  B7      		ora	a
085E          		jrnz	mmslk0
085E  20F7    		DB	20H,mmslk0-$-1
0860  1600    		mvi	d,0
0862  37      		stc
0863  C9      		ret
		
		; disk device/drive table by phy drv
0864          	devtbl:
0864  0302    		db	3,2
0866  090B    		dw	bz67
0868  0504    		db	5,4
086A  EC0B    		dw	bm314r
086C  0F09    		db	15,9
086E  D508    		dw	bm314c
0870  1D08    		db	29,8
0872  9409    		dw	bm316
0874  2801    		db	40,1
0876  6C0C    		dw	bm318
0878  2E04    		db	46,4
087A  110A    		dw	bz37
087C  3C01    		db	60,1
087E  990C    		dw	bwiznet
0880  4609    		db	70,9
0882  A00A    		dw	bgide
0884  A804    		db	168,4
0886  F80A    		dw	bm320
0888  AC04    		db	172,4
088A  F80A    		dw	bm320
088C  B004    		db	176,4
088E  F80A    		dw	bm320
0890  B404    		db	180,4
0892  F80A    		dw	bm320
0894  B804    		db	184,4
0896  F80A    		dw	bm320
0898  BC04    		db	188,4
089A  F80A    		dw	bm320
089C  C004    		db	192,4
089E  F80A    		dw	bm320
08A0  C404    		db	196,4
08A2  F80A    		dw	bm320
08A4  0000    		dw	0
		
08A6          	defbt:	; default boot table... port F2 bits 01110000b
08A6  21      		db	33	; -000---- MMS 5" floppy 0
08A7  1D      		db	29	; -001---- MMS 8" floppy 0
08A8  FF      		db	0ffh	; -010---- n/a  (port 7CH)
08A9  FF      		db	0ffh	; -011---- n/a  (port 78H)
08AA  FF      		db	0ffh	; -100---- none
08AB  46      		db	70	; -101---- GIDE disk part 0
08AC  3C      		db	60	; -110---- WIZNET Network
08AD  FE      		db	0feh	; -111---- redirect to I/O board dipsw
		
08AE          	auxbt:	; default boot redirect (aux dipsw) bits 11100000b
08AE  0F      		db	15	; 000----- MMS 77314 Corvus
08AF  CD      		db	200+5	; 001----- MMS 77314 REMEX (Z47)
08B0  FF      		db	0ffh	; 010----- none
08B1  25      		db	37	; 011----- MMS 77317 XCOMP
08B2  3C      		db	60	; 100----- WIZNET Network
08B3  A8      		db	168	; 101----- MMS 77320 SASI
08B4  46      		db	70	; 110----- GIDE disk
08B5  FF      		db	0ffh	; 111----- none
		
08B6          	bootb2:
08B6  47CD    		db	'G',200+5	; MMS 77314 REMEX (a.k.a. Z47)
08B8  480F    		db	'H',15		; MMS 77314 Corvus
08BA  491D    		db	'I',29		; MMS 77316 8"
08BC  4A21    		db	'J',33		; MMS 77316 5"
08BE  4D28    		db	'M',40		; MMS 77318 RAM-disk
08C0  4FA8    		db	'O',168		; SASI ctrl 0
08C2  50AC    		db	'P',172		; SASI ctrl 1
08C4  51B0    		db	'Q',176		; SASI ctrl 2
08C6  52B4    		db	'R',180		; SASI ctrl 3
08C8  53B8    		db	'S',184		; SASI ctrl 4
08CA  54BC    		db	'T',188		; SASI ctrl 5
08CC  55C0    		db	'U',192		; SASI ctrl 6
08CE  56C4    		db	'V',196		; SASI ctrl 7
08D0  573C    		db	'W',60		; WIZNET Network
08D2  5846    		db	'X',70		; GIDE ctrl/disk
08D4  00      		db	0
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; MMS 77314 Corvus boot
08D5          	bm314c:
08D5  57      		mov	d,a
08D6  3E0A    		mvi	a,10
08D8  CD8F01  		call	take$A
08DB  DB58    		in	058h
08DD  E680    		ani	080h
08DF  C0      		rnz
08E0  0600    		mvi	b,0
08E2  DB58    		in	058h
08E4  4F      		mov	c,a
08E5  3EFF    		mvi	a,0ffh
08E7  D359    		out	059h
08E9          	bm314$0:
08E9  DB58    		in	058h
08EB  B9      		cmp	c
08EC          		jrnz	bm314$1
08EC  2003    		DB	20H,bm314$1-$-1
08EE          		djnz	bm314$0
08EE  10F9    		DB	10H,bm314$0-$-1
08F0  C9      		ret
08F1          	bm314$1:
08F1  0600    		mvi	b,0
08F3          	bm314$2:
08F3  E3      		xthl
08F4  E3      		xthl
08F5  3EFF    		mvi	a,0ffh
08F7  D359    		out	059h
08F9          	bm314$3:
08F9  DB58    		in	058h
08FB  0F      		rrc
08FC          		jrc	bm314$3
08FC  38FB    		DB	38H,bm314$3-$-1
08FE  0F      		rrc
08FF          		jrc	bm314$4
08FF  3803    		DB	38H,bm314$4-$-1
0901          		djnz	bm314$2
0901  10F0    		DB	10H,bm314$2-$-1
0903  C9      		ret
0904          	bm314$4:
0904  CD8C09  		call	cvs$dat
0907  FE8F    		cpi	08fh
0909  C0      		rnz
090A          		lxiy	bootbf
090A  FD21    		DB	0FDH,21H
090C  8022    		DW	bootbf
090E  7A      		mov	a,d
090F  FE09    		cpi	9
0911  D0      		rnc
0912  57      		mov	d,a
0913  87      		add	a
0914  82      		add	d
0915  4F      		mov	c,a
0916  0600    		mvi	b,0
0918          		dady	b
0918  FD09    		DB	0FDH,b*8+09H
091A          		lxix	bootbf
091A  DD21    		DB	0DDH,21H
091C  8022    		DW	bootbf
091E  010001  		lxi	b,256
0921  110000  		lxi	d,0
0924  CD4309  		call	cvs$read
0927  D8      		rc
0928          		ldy	a,+0
0928  FD7E00  		DB	0FDH,a*8+46H,+0
092B  17      		ral
092C  D8      		rc
092D          		ldy	c,+0
092D  FD4E00  		DB	0FDH,c*8+46H,+0
0930          		ldy	d,+1
0930  FD5601  		DB	0FDH,d*8+46H,+1
0933          		ldy	e,+2
0933  FD5E02  		DB	0FDH,e*8+46H,+2
0936          		lxix	bootbf
0936  DD21    		DB	0DDH,21H
0938  8022    		DW	bootbf
093A  0602    		mvi	b,2	; retry count?
093C  CD4309  		call	cvs$read
093F  D8      		rc
0940  C3F803  		jmp	hwboot
		
0943          	cvs$read:
0943  3E12    		mvi	a,012h	; read command
0945  CD8209  		call	cvs$cmd
0948  79      		mov	a,c
0949  87      		add	a
094A  87      		add	a
094B  87      		add	a
094C  87      		add	a
094D  3C      		inr	a
094E  CD8209  		call	cvs$cmd	; command params
0951  7B      		mov	a,e
0952  CD8209  		call	cvs$cmd	; command params
0955  7A      		mov	a,d
0956  CD8209  		call	cvs$cmd	; command params
0959          	cvs$rd0:
0959  DB58    		in	058h
095B  E602    		ani	002h	; done
095D          		jrz	cvs$rd0
095D  28FA    		DB	28H,cvs$rd0-$-1
095F  3E08    		mvi	a,8
0961          	cvs$rd1:
0961  3D      		dcr	a
0962  C26109  		jnz	cvs$rd1
0965  CD8C09  		call	cvs$dat
0968  07      		rlc	; error bit
0969  D8      		rc
096A  2E80    		mvi	l,128
096C          	cvs$rd2:
096C  CD8C09  		call	cvs$dat
096F          		stx	a,+0
096F  DD7700  		DB	0DDH,70H+a,+0
0972          		inxix
0972  DD23    		DB	0DDH,23H
0974  2D      		dcr	l
0975          		jrnz	cvs$rd2
0975  20F5    		DB	20H,cvs$rd2-$-1
0977  1C      		inr	e
0978          		jrnz	cvs$rd3
0978  2004    		DB	20H,cvs$rd3-$-1
097A  14      		inr	d
097B          		jrnz	cvs$rd3
097B  2001    		DB	20H,cvs$rd3-$-1
097D  0C      		inr	c
097E          	cvs$rd3:
097E          		djnz	cvs$read
097E  10C3    		DB	10H,cvs$read-$-1
0980  B7      		ora	a
0981  C9      		ret
		
		; Corvus I/O
0982          	cvs$cmd:
0982  F5      		push	psw
0983          	cvs$cmd0:
0983  DB58    		in	058h
0985  1F      		rar
0986          		jrc	cvs$cmd0
0986  38FB    		DB	38H,cvs$cmd0-$-1
0988  F1      		pop	psw
0989  D359    		out	059h
098B  C9      		ret
		
098C          	cvs$dat:
098C  DB58    		in	058h
098E  1F      		rar
098F          		jrc	cvs$dat
098F  38FB    		DB	38H,cvs$dat-$-1
0991  DB59    		in	059h
0993  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; MMS 77316 Floppy boot
0994          	bm316:
0994  210C0A  		lxi	h,int316
0997  222F20  		shld	vrst6+1
099A  FE08    		cpi	008h
099C  D0      		rnc
099D  F628    		ori	028h
099F  57      		mov	d,a
09A0  D338    		out	038h
09A2  AF      		xra	a
09A3  D3F2    		out	0f2h	; 2mS intr off
09A5  3E0B    		mvi	a,00bh	; home/restore to track 0
09A7  CD070A  		call	cmd316
09AA  0108CF  		lxi	b,53000
09AD          	bm316$0:
09AD  DB3C    		in	03ch
09AF  07      		rlc
09B0          		jrnc	bm316$1
09B0  3005    		DB	30H,bm316$1-$-1
09B2  0B      		dcx	b
09B3  78      		mov	a,b
09B4  B1      		ora	c
09B5          		jrnz	bm316$0
09B5  20F6    		DB	20H,bm316$0-$-1
09B7          	bm316$1:
09B7  DB3C    		in	03ch
09B9  E699    		ani	099h
09BB  C0      		rnz
09BC  1E19    		mvi	e,019h
09BE          	bm316$2:
09BE  218022  		lxi	h,bootbf
09C1  AF      		xra	a
09C2          	bm316$3:
09C2  3C      		inr	a
09C3  D33E    		out	03eh
09C5  013F00  		lxi	b,003fh
09C8  3E88    		mvi	a,088h
09CA  CDE509  		call	rd316
09CD  E6BF    		ani	0bfh
09CF  7A      		mov	a,d
09D0  D338    		out	038h
09D2  CADC09  		jz	bm316$4
09D5  EE40    		xri	040h
09D7  57      		mov	d,a
09D8  1D      		dcr	e
09D9          		jrnz	bm316$2
09D9  20E3    		DB	20H,bm316$2-$-1
09DB  C9      		ret
09DC          	bm316$4:
09DC  DB3E    		in	03eh
09DE  FE02    		cpi	002h
09E0          		jrc	bm316$3
09E0  38E0    		DB	38H,bm316$3-$-1
09E2  C3F803  		jmp	hwboot
		
09E5          	rd316:
09E5  F5      		push	psw
09E6  7A      		mov	a,d
09E7  E644    		ani	044h
09E9          		jrnz	rd316$5
09E9  200F    		DB	20H,rd316$5-$-1
			; 8" DD read special case
09EB  7A      		mov	a,d
09EC  E6DF    		ani	0dfh
09EE  D338    		out	038h
09F0  F1      		pop	psw
09F1  D33C    		out	03ch
09F3  FB      		ei
09F4  76      		hlt	; wait for first byte
09F5          	rd316$8: ini
09F5  EDA2    		DB	0EDH,0A2H
09F7  C3F509  		jmp	rd316$8
		
09FA          	rd316$5:
09FA  7A      		mov	a,d
09FB  D338    		out	038h
09FD  F1      		pop	psw
09FE  D33C    		out	03ch
0A00  FB      	hlt$ini: ei
0A01  76      	rd316$0: hlt
0A02          		ini
0A02  EDA2    		DB	0EDH,0A2H
0A04  C3010A  		jmp	rd316$0
		
0A07          	cmd316:
0A07  D33C    		out	03ch
0A09  FB      	ei$spin: ei
0A0A          		jr	$-1	; wait for intr to break us out
0A0A  18FE    		DB	18H,$-1-$-1
		
0A0C  F1      	int316:	pop	psw
0A0D  DB3C    		in	03ch
0A0F  FB      		ei
0A10  C9      		ret
		
0A11          	bz37:
0A11  21970A  		lxi	h,intz37
0A14  222920  		shld	vrst4+1
0A17  2B      		dcx	h
0A18  223720  		shld	l2037h
0A1B  FE04    		cpi	004h
0A1D  D0      		rnc
0A1E  3C      		inr	a
0A1F  2E08    		mvi	l,008h
0A21          	bz37$0:
0A21  29      		dad	h
0A22  3D      		dcr	a
0A23          		jrnz	bz37$0
0A23  20FC    		DB	20H,bz37$0-$-1
0A25  D379    		out	079h
0A27  DBF2    		in	0f2h
0A29  E60C    		ani	00ch
0A2B  C0      		rnz
0A2C  3E78    		mvi	a,078h
0A2E  325021  		sta	cport
0A31  3ED0    		mvi	a,0d0h
0A33  D37A    		out	07ah
0A35  7D      		mov	a,l
0A36  F608    		ori	008h
0A38  57      		mov	d,a
0A39  D378    		out	078h
0A3B  14      		inr	d
0A3C  1E19    		mvi	e,019h
0A3E  3E05    		mvi	a,5
0A40  CD8F01  		call	take$A
0A43  017B14  		lxi	b,0147bh	; mask, port
0A46          	bz37$1:
0A46  DB7A    		in	07ah
0A48  A8      		xra	b
0A49  E602    		ani	002h
0A4B          		jrz	bz37$1
0A4B  28F9    		DB	28H,bz37$1-$-1
0A4D          		djnz	bz37$1
0A4D  10F7    		DB	10H,bz37$1-$-1
0A4F          	bz37$2:
0A4F  218022  		lxi	h,bootbf
0A52  3E01    		mvi	a,001h
0A54  D379    		out	079h
0A56  D37A    		out	07ah
0A58  7A      		mov	a,d
0A59  D378    		out	078h
0A5B  0604    		mvi	b,004h
0A5D          	bz37$3:
0A5D  AF      		xra	a
0A5E  D379    		out	079h
0A60  3E40    		mvi	a,040h
0A62  D37A    		out	07ah
0A64  CD090A  		call	ei$spin
0A67          		djnz	bz37$3
0A67  10F4    		DB	10H,bz37$3-$-1
0A69  AF      		xra	a
0A6A  D379    		out	079h
0A6C  3E0B    		mvi	a,00bh
0A6E  D37A    		out	07ah
0A70  CD090A  		call	ei$spin
0A73  7A      		mov	a,d
0A74  EE04    		xri	004h
0A76  57      		mov	d,a
0A77  F602    		ori	002h
0A79  D378    		out	078h
0A7B  3E9C    		mvi	a,09ch
0A7D  D37A    		out	07ah
0A7F  CD000A  		call	hlt$ini
0A82  E6EF    		ani	0efh
0A84          		jrnz	bz37$4
0A84  200D    		DB	20H,bz37$4-$-1
0A86  7C      		mov	a,h
0A87  FE2C    		cpi	02ch
0A89          		jrc	bz37$4
0A89  3808    		DB	38H,bz37$4-$-1
0A8B  3E08    		mvi	a,008h
0A8D  D378    		out	078h
0A8F  E1      		pop	h
0A90  C3F803  		jmp	hwboot
0A93          	bz37$4:
0A93  1D      		dcr	e
0A94          		jrnz	bz37$2
0A94  20B9    		DB	20H,bz37$2-$-1
0A96  C9      		ret
		
0A97  DB7A    	intz37:	in	07ah
0A99  E3      		xthl
0A9A  2A3720  		lhld	l2037h
0A9D  E3      		xthl
0A9E  FB      		ei
0A9F  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; GIDE HDD boot
0AA0          	bgide:
0AA0  FE09    		cpi	9 ; 9 partitons, max
0AA2  D0      		rnc
			; Partition is passed to bootloader, but we need
			; segment offset before we can start.
0AA3  D1      		pop	d	; error return address
0AA4  C1      		pop	b	; possible string
0AA5  C5      		push	b
0AA6  D5      		push	d
			; parse a single letter
0AA7  210000  		lxi	h,0	; def segment off
0AAA  79      		mov	a,c
0AAB  FEC3    		cpi	0c3h	; JMP means no string present
0AAD          		jrz	nostr
0AAD  280D    		DB	28H,nostr-$-1
0AAF  78      		mov	a,b
0AB0  B7      		ora	a	; limit to 1 char?
0AB1  C0      		rnz
0AB2  79      		mov	a,c
0AB3  E65F    		ani	5fh
0AB5  D641    		sui	'A'	; 000sssss = segment ID
0AB7  D8      		rc
0AB8  07      		rlc
0AB9  07      		rlc
0ABA  07      		rlc		; sssss000 = segoff: 0000 sssss000 00000000 00000000
0ABB  67      		mov	h,a	; swap for little endian SHLD/LHLD
0ABC  225621  	nostr:	shld	l2156h	; l2156h[0]=27:24, l2156h[1]=23:16
0ABF  7D      		mov	a,l
0AC0  F6E0    		ori	11100000b	; LBA mode + std "1" bits
0AC2  D366    		out	GIDE$DH	; LBA 27:4, drive 0, LBA mode
0AC4  7C      		mov	a,h
0AC5  D365    		out	GIDE$CH	; LBA 23:16
0AC7  AF      		xra	a
0AC8  D364    		out	GIDE$CL	; LBA 15:8
0ACA  D363    		out	GIDE$SE	; LBA 7:0
0ACC  3E0A    		mvi	a,10
0ACE  D362    		out	GIDE$SC	; 10 sectors (standard boot length)
0AD0  3E20    		mvi	a,20h	; READ SECTORS
0AD2  D367    		out	GIDE$CS
0AD4  218022  		lxi	h,bootbf
0AD7  0E60    		mvi	c,GIDE$DA
0AD9  1E0A    		mvi	e,10
0ADB  0600    		mvi	b,0	; should always be 0 after inir
0ADD          	bgide0:
0ADD  DB67    		in	GIDE$CS
0ADF          		bit	7,a	; busy
0ADF  CB7F    		DB	0CBH,7*8+a+40H
0AE1          		jrnz	bgide0
0AE1  20FA    		DB	20H,bgide0-$-1
0AE3          		bit	0,a	; error
0AE3  CB47    		DB	0CBH,0*8+a+40H
0AE5  C0      		rnz
0AE6          		bit	6,a	; ready
0AE6  CB77    		DB	0CBH,6*8+a+40H
0AE8  C8      		rz
0AE9          		bit	3,a	; DRQ
0AE9  CB5F    		DB	0CBH,3*8+a+40H
0AEB          		jrz	bgide0
0AEB  28F0    		DB	28H,bgide0-$-1
0AED          		inir	; 256 bytes
0AED  EDB2    		DB	0EDH,0B2H
0AEF          		inir	; 512 bytes
0AEF  EDB2    		DB	0EDH,0B2H
0AF1  1D      		dcr	e
0AF2          		jrnz	bgide0
0AF2  20E9    		DB	20H,bgide0-$-1
			; final status check?
0AF4  E1      		pop	h	; adj stack for possible string
0AF5  C3F803  		jmp	hwboot
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; MMS 77320 SASI HDD boot
0AF8          	bm320:
0AF8  FE04    		cpi	4 ; 4 units per controller, max
0AFA  D0      		rnc
0AFB  5F      		mov	e,a	; relative drive num
0AFC  7A      		mov	a,d ; phy drv
0AFD  D6A8    		sui	168
0AFF  E6FC    		ani	0fch	; Controller num
0B01  0F      		rrc
0B02  0F      		rrc
0B03  53      		mov	d,e ; D = relative drive num
0B04  5F      		mov	e,a ; E = controller num
0B05  7A      		mov	a,d
0B06  C30E0B  		jmp	bsasi
		
0B09          	bz67:
0B09  FE02    		cpi	2
0B0B  D0      		rnc	
0B0C  1E00    		mvi	e,0	; Controller 0 only
0B0E          	bsasi:
0B0E  0F      		rrc
0B0F  0F      		rrc
0B10  0F      		rrc
0B11  DD      		db 0ddh
0B12  67      		mov h,a	; movxh	a	; 0xx00000 = relative drive num (LUN)
0B13  0E02    		mvi	c,10b
0B15  CD1E02  		call	getport
0B18  C0      		rnz
0B19  78      		mov	a,b
0B1A  325021  		sta	cport
0B1D  3C      		inr	a
0B1E  4F      		mov	c,a
0B1F  AF      		xra	a
0B20          		outp	a
0B20  ED79    		DB	0EDH,a*8+41H
0B22  210000  		lxi	h,0		; zero-out command buffer
0B25  223221  		shld	cmdbuf
0B28  223421  		shld	cmdbuf+2
0B2B  223621  		shld	cmdbuf+4
0B2E  225621  		shld	l2156h	; zero-out ...
0B31  225821  		shld	l2156h+2
0B34  325A21  		sta	l2156h+4
0B37  53      		mov	d,e
0B38  3E04    		mvi	a,4	; delay 8mS, also NZ
0B3A  B7      		ora	a
0B3B  FB      		ei
0B3C          	bsasi0:
0B3C  C8      		rz
0B3D  CD2B00  		call	delayx
0B40  1E00    		mvi	e,0	; Test Drive Ready
0B42  CD5F0B  		call	sasi$cmd
0B45  3EFF    		mvi	a,255	; longer delay on retry...
0B47          		jrc	bsasi0
0B47  38F3    		DB	38H,bsasi0-$-1
0B49  1E01    		mvi	e,1	; Recalibrate (Home)
0B4B  CD5F0B  		call	sasi$cmd
0B4E  D8      		rc
0B4F  210A80  		lxi	h,0800ah	; 10 sectors, retry
0B52  223621  		shld	cmdbuf+4
0B55  1E08    		mvi	e,8	; Read
0B57  CD5F0B  		call	sasi$cmd
0B5A  D8      		rc
0B5B  E1      		pop	h
0B5C  C3F803  		jmp	hwboot
		
		; send SASI read command, get results
0B5F          	sasi$cmd:
0B5F  F3      		di
0B60  DD      		db 0ddh	; undocumented Z80 instruction
0B61  6B      		mov l,e	; movxl	e	; SASI command
0B62          		sixd	cmdbuf
0B62  DD22    		DB	0DDH,22H
0B64  3221    		DW	cmdbuf
0B66  0600    		mvi	b,0	; wait for "not BUSY" first
0B68  1E06    		mvi	e,6	;
0B6A  210000  		lxi	h,0	; 0x060000 loop/timeout count
0B6D          	sscmd0:
0B6D          		inp	a
0B6D  ED78    		DB	0EDH,a*8+40H
0B6F  E608    		ani	00001000b
0B71  B8      		cmp	b
0B72          		jrz	sscmd1
0B72  280A    		DB	28H,sscmd1-$-1
0B74  2B      		dcx	h
0B75  7D      		mov	a,l
0B76  B4      		ora	h
0B77          		jrnz	sscmd0
0B77  20F4    		DB	20H,sscmd0-$-1
0B79  1D      		dcr	e
0B7A          		jrnz	sscmd0
0B7A  20F1    		DB	20H,sscmd0-$-1
0B7C  37      		stc
0B7D  C9      		ret
0B7E          	sscmd1:
0B7E  78      		mov	a,b
0B7F  EE08    		xri	00001000b	; wait for BUSY
0B81          		jrz	sscmd2		; got BUSY...
0B81  2810    		DB	28H,sscmd2-$-1
0B83  47      		mov	b,a
0B84  0D      		dcr	c
0B85  AF      		xra	a
0B86          		outp	a
0B86  ED79    		DB	0EDH,a*8+41H
0B88  0C      		inr	c
0B89  0C      		inr	c
0B8A          		outp	d
0B8A  ED51    		DB	0EDH,d*8+41H
0B8C  0D      		dcr	c
0B8D  3E40    		mvi	a,040h	; SELECT
0B8F          		outp	a
0B8F  ED79    		DB	0EDH,a*8+41H
0B91          		jr	sscmd0	; wait for BUSY now...
0B91  18DA    		DB	18H,sscmd0-$-1
		
0B93          	sscmd2:
0B93  3E02    		mvi	a,002h	; enable INTR
0B95          		outp	a
0B95  ED79    		DB	0EDH,a*8+41H
0B97  213221  		lxi	h,cmdbuf
0B9A          	sscmd3:
0B9A          		inp	a
0B9A  ED78    		DB	0EDH,a*8+40H
0B9C          		bit	7,a	; REQ
0B9C  CB7F    		DB	0CBH,7*8+a+40H
0B9E          		jrz	sscmd3
0B9E  28FA    		DB	28H,sscmd3-$-1
0BA0          		bit	4,a	; CMD
0BA0  CB67    		DB	0CBH,4*8+a+40H
0BA2          		jrz	sscmd4
0BA2  280A    		DB	28H,sscmd4-$-1
0BA4          		bit	6,a	; MSG
0BA4  CB77    		DB	0CBH,6*8+a+40H
0BA6          		jrz	sscmd6
0BA6  2819    		DB	28H,sscmd6-$-1
0BA8  0D      		dcr	c
0BA9          		outi		; output command byte
0BA9  EDA3    		DB	0EDH,0A3H
0BAB  0C      		inr	c
0BAC          		jr	sscmd3
0BAC  18EC    		DB	18H,sscmd3-$-1
		
0BAE          	sscmd4:
0BAE  218022  		lxi	h,bootbf
0BB1          	sscmd5:
0BB1          		inp	a
0BB1  ED78    		DB	0EDH,a*8+40H
0BB3          		bit	7,a	; REQ
0BB3  CB7F    		DB	0CBH,7*8+a+40H
0BB5          		jrz	sscmd5
0BB5  28FA    		DB	28H,sscmd5-$-1
0BB7          		bit	4,a	; CMD - indicates data done
0BB7  CB67    		DB	0CBH,4*8+a+40H
0BB9          		jrnz	sscmd6
0BB9  2006    		DB	20H,sscmd6-$-1
0BBB  0D      		dcr	c
0BBC          		ini		; input data byte
0BBC  EDA2    		DB	0EDH,0A2H
0BBE  0C      		inr	c
0BBF          		jr	sscmd5
0BBF  18F0    		DB	18H,sscmd5-$-1
0BC1          	sscmd6:
0BC1          		inp	a
0BC1  ED78    		DB	0EDH,a*8+40H
0BC3  E6D0    		ani	0d0h	; REQ, OUT, CMD
0BC5  FE90    		cpi	090h	; must be REQ, CMD
0BC7          		jrnz	sscmd6	; wait for it...
0BC7  20F8    		DB	20H,sscmd6-$-1
0BC9  0D      		dcr	c
0BCA          		inp	l	; result 0
0BCA  ED68    		DB	0EDH,l*8+40H
0BCC  0C      		inr	c
0BCD          	sscmd7:
0BCD          		inp	h	; status
0BCD  ED60    		DB	0EDH,h*8+40H
0BCF  7C      		mov	a,h
0BD0  E6E0    		ani	0e0h	; REG, OUT, MSG
0BD2  FEA0    		cpi	0a0h	; must be REQ, MSG
0BD4          		jrnz	sscmd7
0BD4  20F7    		DB	20H,sscmd7-$-1
0BD6  223821  		shld	resbuf	; command results
0BD9  0D      		dcr	c
0BDA          		inp	a	; last data byte
0BDA  ED78    		DB	0EDH,a*8+40H
0BDC  0C      		inr	c
0BDD  FB      		ei
0BDE  B7      		ora	a
0BDF  37      		stc
0BE0  C0      		rnz		; error
0BE1          		bit	0,l	; SASI error bit
0BE1  CB45    		DB	0CBH,0*8+l+40H
0BE3  C0      		rnz
0BE4          		bit	1,l	; or other error?
0BE4  CB4D    		DB	0CBH,1*8+l+40H
0BE6  C0      		rnz
0BE7          		bit	1,h	; ACK
0BE7  CB4C    		DB	0CBH,1*8+h+40H
0BE9  C0      		rnz
0BEA  AF      		xra	a	; success
0BEB  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; MMS 77314 REMEX boot
0BEC          	bm314r:
0BEC  FE04    		cpi	004h
0BEE  D0      		rnc
0BEF  0F      		rrc
0BF0  0F      		rrc
0BF1  0F      		rrc
0BF2  3C      		inr	a
0BF3  57      		mov	d,a
0BF4  3E05    		mvi	a,5
0BF6  CD8F01  		call	take$A
0BF9  DB5B    		in	05bh
0BFB  E604    		ani	004h
0BFD  C0      		rnz
0BFE  D35B    		out	05bh
0C00          	bm314$5:
0C00  DB5B    		in	05bh
0C02  17      		ral
0C03          		jrc	bm314$5
0C03  38FB    		DB	38H,bm314$5-$-1
0C05          	bm314$6:
0C05  3E07    		mvi	a,007h
0C07  D35A    		out	05ah
0C09  AF      		xra	a
0C0A  CD610C  		call	rmxout
0C0D  7A      		mov	a,d
0C0E  CD610C  		call	rmxout
0C11          	bm314$7:
0C11  DB5B    		in	05bh
0C13  E680    		ani	080h
0C15          		jrz	bm314$7
0C15  28FA    		DB	28H,bm314$7-$-1
0C17          	bm314$8:
0C17  DB5B    		in	05bh
0C19  E640    		ani	040h
0C1B          		jrnz	bm314$8
0C1B  20FA    		DB	20H,bm314$8-$-1
0C1D  DB5B    		in	05bh
0C1F  E610    		ani	010h
0C21  C0      		rnz
0C22  218022  		lxi	h,bootbf
0C25  0680    		mvi	b,080h
0C27  0E5A    		mvi	c,05ah
0C29          	bm314$9:
0C29  DB5B    		in	05bh
0C2B  E640    		ani	040h
0C2D          		jrnz	bm314$9
0C2D  20FA    		DB	20H,bm314$9-$-1
0C2F          		ini
0C2F  EDA2    		DB	0EDH,0A2H
0C31          		jrnz	bm314$9
0C31  20F6    		DB	20H,bm314$9-$-1
0C33  0600    		mvi	b,000h
0C35          	bm314$A:
0C35  DB5B    		in	05bh
0C37  E640    		ani	040h
0C39          		jrz	bm314$B
0C39  2812    		DB	28H,bm314$B-$-1
0C3B          		djnz	bm314$A
0C3B  10F8    		DB	10H,bm314$A-$-1
0C3D  DB5B    		in	05bh
0C3F  E610    		ani	010h
0C41  C0      		rnz
0C42  14      		inr	d
0C43  7A      		mov	a,d
0C44  E60F    		ani	00fh
0C46  FE03    		cpi	003h
0C48          		jrc	bm314$6
0C48  38BB    		DB	38H,bm314$6-$-1
0C4A  C3F803  		jmp	hwboot
		
0C4D          	bm314$B:
0C4D  0680    		mvi	b,080h
0C4F          	bm314$D:
0C4F  DB5B    		in	05bh
0C51  E640    		ani	040h
0C53          		jrnz	bm314$D
0C53  20FA    		DB	20H,bm314$D-$-1
0C55          		ini
0C55  EDA2    		DB	0EDH,0A2H
0C57          		jrnz	bm314$D
0C57  20F6    		DB	20H,bm314$D-$-1
0C59  DB5B    		in	05bh
0C5B  E610    		ani	010h
0C5D  C0      		rnz
0C5E  C3F803  		jmp	hwboot
		
0C61          	rmxout:
0C61  F5      		push	psw
0C62          	rmxout0:
0C62  DB5B    		in	05bh
0C64  E660    		ani	060h
0C66          		jrnz	rmxout0
0C66  20FA    		DB	20H,rmxout0-$-1
0C68  F1      		pop	psw
0C69  D35A    		out	05ah
0C6B  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; MMS 77318 (RAM-disk) boot
0C6C          	bm318:
0C6C  F3      		di
0C6D  217B0C  		lxi	h,l318rt
0C70  1100C0  		lxi	d,ramboot
0C73  011E00  		lxi	b,l318sz
0C76          		ldir
0C76  EDB0    		DB	0EDH,0B0H
0C78  C300C0  		jmp	ramboot
		
		; MMS 77318 (RAM-disk) boot loader - relocated to ramboot
0C7B          	l318rt:
0C7B  2115C0  		lxi	h,ramboot+l318lo
0C7E  0608    		mvi	b,l318lz
0C80  0EF2    		mvi	c,0f2h
0C82          		outir	; unlock memory and select OS image bank
0C82  EDB3    		DB	0EDH,0B3H
0C84  3A0000  		lda	0
0C87  FEC3    		cpi	0c3h	; JMP - does OS look good?
0C89  CA0000  		jz	0	; start OS
0C8C          		outi	; re-select ROM bank
0C8C  EDA3    		DB	0EDH,0A3H
0C8E  FB      		ei
0C8F  C9      		ret	; return to monitor (boot error)
		
		; 77318 Unlock and select bank "E" (16K common + "bank 1")
		; NOTE: "22h" should not be there, left-over cruft from CP/M unlock.
0015          	l318lo	equ	$-l318rt
0C90  040C0408	l318ul:	db	04h,0ch,04h,08h,0ch,08h,22h,10h
      0C082210
0008          	l318lz	equ	$-l318ul
0C98  00      		db	0	; fall-back to ROM on error...
001E          	l318sz	equ	$-l318rt
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; WIZNET WIZ850io (Network) boot loader
0C99          	bwiznet:
			; TODO: implement this
			; How? chip is not initialized yet!
0C99  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Terminal mode - shuttle I/O between H19 and serial port
		; since both ports operate at the same speed, don't need
		; to check ready as often.
0C9A          	termod:
0C9A  21E60C  		lxi	h,terms
0C9D  CD2B06  		call	msgout
0CA0  CD1A06  		call	waitcr
0CA3          	termfl:
0CA3  DBED    		in	0edh
0CA5  E660    		ani	01100000b
0CA7  FE60    		cpi	01100000b
0CA9  C2A30C  		jnz	termfl	; wait for output to flush
0CAC  DBEB    		in	0ebh
0CAE  F680    		ori	10000000b
0CB0  D3EB    		out	0ebh
0CB2  D3DB    		out	0dbh
0CB4  DBE8    		in	0e8h
0CB6  D3D8    		out	0d8h
0CB8  DBE9    		in	0e9h
0CBA  D3D9    		out	0d9h
0CBC  DBEB    		in	0ebh
0CBE  E67F    		ani	01111111b
0CC0  D3EB    		out	0ebh
0CC2  D3DB    		out	0dbh
0CC4  AF      		xra	a
0CC5  D3D9    		out	0d9h
0CC7  DBD8    		in	0d8h
0CC9  3E0F    		mvi	a,00fh
0CCB  D3DC    		out	0dch
0CCD          	termlp:
0CCD  DBDD    		in	0ddh
0CCF  E601    		ani	00000001b
0CD1  CAD80C  		jz	terml0
0CD4  DBD8    		in	0d8h
0CD6  D3E8    		out	0e8h
0CD8          	terml0:
0CD8  DBED    		in	0edh
0CDA  E601    		ani	00000001b
0CDC  CACD0C  		jz	termlp
0CDF  DBE8    		in	0e8h
0CE1  D3D8    		out	0d8h
0CE3  C3CD0C  		jmp	termlp
		
0CE6  5465726D	terms:	db	'Terminal Mode',TRM
      696E616C
      204D6F64
      6500
		
0CF4          	setber:
0CF4  3E07    		mvi	a,BEL
0CF6  CD9D05  		call	conout
0CF9  E1      		pop	h
0CFA  C9      		ret
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Set BAUD command
0CFB          	setbr:
0CFB  21630D  		lxi	h,ratems
0CFE  CD2B06  		call	msgout
0D01  CD8C05  		call	conin
0D04  E6DF    		ani	11011111b	; toupper
0D06  4F      		mov	c,a
0D07  CD9D05  		call	conout
0D0A  D641    		sui	'A'
0D0C  FE0E    		cpi	'O'-'A'
0D0E  D2F40C  		jnc	setber
0D11  5F      		mov	e,a
0D12  1600    		mvi	d,0
0D14  216B0D  		lxi	h,brtab
0D17  19      		dad	d
0D18  19      		dad	d
0D19  19      		dad	d
0D1A  19      		dad	d
0D1B  5E      		mov	e,m
0D1C  23      		inx	h
0D1D  56      		mov	d,m	; DE=baud divisor
0D1E  23      		inx	h
0D1F  7E      		mov	a,m
0D20  23      		inx	h
0D21  66      		mov	h,m
0D22  6F      		mov	l,a	; HL=rate string
0D23  CD2B06  		call	msgout
0D26  21030E  		lxi	h,baudms
0D29  CD2B06  		call	msgout
0D2C  CD1A06  		call	waitcr
0D2F  3E1B    		mvi	a,ESC
0D31  CD9D05  		call	conout
0D34  3E72    		mvi	a,'r' ; Set Baud
0D36  CD9D05  		call	conout
0D39  79      		mov	a,c ; Baud value
0D3A  CD9D05  		call	conout
0D3D          	setbrf:
0D3D  DBED    		in	0edh
0D3F  E660    		ani	01100000b
0D41  FE60    		cpi	01100000b
0D43  C23D0D  		jnz	setbrf	; flush output
0D46  01A00F  		lxi	b,4000	; delay value ~43mS
0D49          	setbr0:
0D49  0B      		dcx	b
0D4A  78      		mov	a,b
0D4B  B1      		ora	c
0D4C  C2490D  		jnz	setbr0
0D4F  DBEB    		in	0ebh
0D51  F680    		ori	10000000b	; divsor latch enable
0D53  D3EB    		out	0ebh
0D55  7B      		mov	a,e
0D56  D3E8    		out	0e8h
0D58  7A      		mov	a,d
0D59  D3E9    		out	0e9h
0D5B  DBEB    		in	0ebh
0D5D  E67F    		ani	01111111b	; divisor latch disable
0D5F  D3EB    		out	0ebh
0D61  E1      		pop	h
0D62  C9      		ret
		
0D63  52617465	ratems:	db	'Rate - ',TRM
      202D2000
		
0D6B          	brtab:
0D6B  1704A30D		dw	1047,	br110
0D6F  0003A90D		dw	768,	br150
0D73  8001AF0D		dw	384,	br300
0D77  C000B50D		dw	192,	br600
0D7B  6000BB0D		dw	96,	br1200
0D7F  4000C20D		dw	64,	br1800
0D83  3A00C90D		dw	58,	br2000
0D87  3000D00D		dw	48,	br2400
0D8B  2000D70D		dw	32,	br3600
0D8F  1800DE0D		dw	24,	br4800
0D93  1000E50D		dw	16,	br7200
0D97  0C00EC0D		dw	12,	br9600
0D9B  0600F30D		dw	6,	br19200
0D9F  0300FB0D		dw	3,	br38400
		
0DA3  20283131	br110:	db	' (110',TRM
      3000
0DA9  20283135	br150:	db	' (150',TRM
      3000
0DAF  20283330	br300:	db	' (300',TRM
      3000
0DB5  20283630	br600:	db	' (600',TRM
      3000
0DBB  20283132	br1200:	db	' (1200',TRM
      303000
0DC2  20283138	br1800:	db	' (1800',TRM
      303000
0DC9  20283230	br2000:	db	' (2000',TRM
      303000
0DD0  20283234	br2400:	db	' (2400',TRM
      303000
0DD7  20283336	br3600:	db	' (3600',TRM
      303000
0DDE  20283438	br4800:	db	' (4800',TRM
      303000
0DE5  20283732	br7200:	db	' (7200',TRM
      303000
0DEC  20283936	br9600:	db	' (9600',TRM
      303000
0DF3  20283139	br19200: db	' (19200',TRM
      32303000
0DFB  20283338	br38400: db	' (38400',TRM
      34303000
0E03  20626175	baudms:	db	' baud)',TRM
      642900
		
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		; Print ROM version command
0E0A          	prtver:
0E0A  21180E  		lxi	h,versms
0E0D  CD2B06  		call	msgout
0E10  3A210E  		lda	vers
0E13  CDFF05  		call	hexout
0E16  E1      		pop	h
0E17  C9      		ret
		
0E18  56657273	versms:	db	'Version ',TRM
      696F6E20
      00
0E21  13      	vers:	db	VERN	; version byte... "1.0"
		
0E22  0D0A0745	erprom:	db	CR,LF,BEL,'EPROM err',TRM
      50524F4D
      20657272
      00
		
			rept	1000h-$-4
0E2F  FF      		db	0ffh
0E30  FF      		db	0ffh
0E31  FF      		db	0ffh
0E32  FF      		db	0ffh
0E33  FF      		db	0ffh
0E34  FF      		db	0ffh
0E35  FF      		db	0ffh
0E36  FF      		db	0ffh
0E37  FF      		db	0ffh
0E38  FF      		db	0ffh
0E39  FF      		db	0ffh
0E3A  FF      		db	0ffh
0E3B  FF      		db	0ffh
0E3C  FF      		db	0ffh
0E3D  FF      		db	0ffh
0E3E  FF      		db	0ffh
0E3F  FF      		db	0ffh
0E40  FF      		db	0ffh
0E41  FF      		db	0ffh
0E42  FF      		db	0ffh
0E43  FF      		db	0ffh
0E44  FF      		db	0ffh
0E45  FF      		db	0ffh
0E46  FF      		db	0ffh
0E47  FF      		db	0ffh
0E48  FF      		db	0ffh
0E49  FF      		db	0ffh
0E4A  FF      		db	0ffh
0E4B  FF      		db	0ffh
0E4C  FF      		db	0ffh
0E4D  FF      		db	0ffh
0E4E  FF      		db	0ffh
0E4F  FF      		db	0ffh
0E50  FF      		db	0ffh
0E51  FF      		db	0ffh
0E52  FF      		db	0ffh
0E53  FF      		db	0ffh
0E54  FF      		db	0ffh
0E55  FF      		db	0ffh
0E56  FF      		db	0ffh
0E57  FF      		db	0ffh
0E58  FF      		db	0ffh
0E59  FF      		db	0ffh
0E5A  FF      		db	0ffh
0E5B  FF      		db	0ffh
0E5C  FF      		db	0ffh
0E5D  FF      		db	0ffh
0E5E  FF      		db	0ffh
0E5F  FF      		db	0ffh
0E60  FF      		db	0ffh
0E61  FF      		db	0ffh
0E62  FF      		db	0ffh
0E63  FF      		db	0ffh
0E64  FF      		db	0ffh
0E65  FF      		db	0ffh
0E66  FF      		db	0ffh
0E67  FF      		db	0ffh
0E68  FF      		db	0ffh
0E69  FF      		db	0ffh
0E6A  FF      		db	0ffh
0E6B  FF      		db	0ffh
0E6C  FF      		db	0ffh
0E6D  FF      		db	0ffh
0E6E  FF      		db	0ffh
0E6F  FF      		db	0ffh
0E70  FF      		db	0ffh
0E71  FF      		db	0ffh
0E72  FF      		db	0ffh
0E73  FF      		db	0ffh
0E74  FF      		db	0ffh
0E75  FF      		db	0ffh
0E76  FF      		db	0ffh
0E77  FF      		db	0ffh
0E78  FF      		db	0ffh
0E79  FF      		db	0ffh
0E7A  FF      		db	0ffh
0E7B  FF      		db	0ffh
0E7C  FF      		db	0ffh
0E7D  FF      		db	0ffh
0E7E  FF      		db	0ffh
0E7F  FF      		db	0ffh
0E80  FF      		db	0ffh
0E81  FF      		db	0ffh
0E82  FF      		db	0ffh
0E83  FF      		db	0ffh
0E84  FF      		db	0ffh
0E85  FF      		db	0ffh
0E86  FF      		db	0ffh
0E87  FF      		db	0ffh
0E88  FF      		db	0ffh
0E89  FF      		db	0ffh
0E8A  FF      		db	0ffh
0E8B  FF      		db	0ffh
0E8C  FF      		db	0ffh
0E8D  FF      		db	0ffh
0E8E  FF      		db	0ffh
0E8F  FF      		db	0ffh
0E90  FF      		db	0ffh
0E91  FF      		db	0ffh
0E92  FF      		db	0ffh
0E93  FF      		db	0ffh
0E94  FF      		db	0ffh
0E95  FF      		db	0ffh
0E96  FF      		db	0ffh
0E97  FF      		db	0ffh
0E98  FF      		db	0ffh
0E99  FF      		db	0ffh
0E9A  FF      		db	0ffh
0E9B  FF      		db	0ffh
0E9C  FF      		db	0ffh
0E9D  FF      		db	0ffh
0E9E  FF      		db	0ffh
0E9F  FF      		db	0ffh
0EA0  FF      		db	0ffh
0EA1  FF      		db	0ffh
0EA2  FF      		db	0ffh
0EA3  FF      		db	0ffh
0EA4  FF      		db	0ffh
0EA5  FF      		db	0ffh
0EA6  FF      		db	0ffh
0EA7  FF      		db	0ffh
0EA8  FF      		db	0ffh
0EA9  FF      		db	0ffh
0EAA  FF      		db	0ffh
0EAB  FF      		db	0ffh
0EAC  FF      		db	0ffh
0EAD  FF      		db	0ffh
0EAE  FF      		db	0ffh
0EAF  FF      		db	0ffh
0EB0  FF      		db	0ffh
0EB1  FF      		db	0ffh
0EB2  FF      		db	0ffh
0EB3  FF      		db	0ffh
0EB4  FF      		db	0ffh
0EB5  FF      		db	0ffh
0EB6  FF      		db	0ffh
0EB7  FF      		db	0ffh
0EB8  FF      		db	0ffh
0EB9  FF      		db	0ffh
0EBA  FF      		db	0ffh
0EBB  FF      		db	0ffh
0EBC  FF      		db	0ffh
0EBD  FF      		db	0ffh
0EBE  FF      		db	0ffh
0EBF  FF      		db	0ffh
0EC0  FF      		db	0ffh
0EC1  FF      		db	0ffh
0EC2  FF      		db	0ffh
0EC3  FF      		db	0ffh
0EC4  FF      		db	0ffh
0EC5  FF      		db	0ffh
0EC6  FF      		db	0ffh
0EC7  FF      		db	0ffh
0EC8  FF      		db	0ffh
0EC9  FF      		db	0ffh
0ECA  FF      		db	0ffh
0ECB  FF      		db	0ffh
0ECC  FF      		db	0ffh
0ECD  FF      		db	0ffh
0ECE  FF      		db	0ffh
0ECF  FF      		db	0ffh
0ED0  FF      		db	0ffh
0ED1  FF      		db	0ffh
0ED2  FF      		db	0ffh
0ED3  FF      		db	0ffh
0ED4  FF      		db	0ffh
0ED5  FF      		db	0ffh
0ED6  FF      		db	0ffh
0ED7  FF      		db	0ffh
0ED8  FF      		db	0ffh
0ED9  FF      		db	0ffh
0EDA  FF      		db	0ffh
0EDB  FF      		db	0ffh
0EDC  FF      		db	0ffh
0EDD  FF      		db	0ffh
0EDE  FF      		db	0ffh
0EDF  FF      		db	0ffh
0EE0  FF      		db	0ffh
0EE1  FF      		db	0ffh
0EE2  FF      		db	0ffh
0EE3  FF      		db	0ffh
0EE4  FF      		db	0ffh
0EE5  FF      		db	0ffh
0EE6  FF      		db	0ffh
0EE7  FF      		db	0ffh
0EE8  FF      		db	0ffh
0EE9  FF      		db	0ffh
0EEA  FF      		db	0ffh
0EEB  FF      		db	0ffh
0EEC  FF      		db	0ffh
0EED  FF      		db	0ffh
0EEE  FF      		db	0ffh
0EEF  FF      		db	0ffh
0EF0  FF      		db	0ffh
0EF1  FF      		db	0ffh
0EF2  FF      		db	0ffh
0EF3  FF      		db	0ffh
0EF4  FF      		db	0ffh
0EF5  FF      		db	0ffh
0EF6  FF      		db	0ffh
0EF7  FF      		db	0ffh
0EF8  FF      		db	0ffh
0EF9  FF      		db	0ffh
0EFA  FF      		db	0ffh
0EFB  FF      		db	0ffh
0EFC  FF      		db	0ffh
0EFD  FF      		db	0ffh
0EFE  FF      		db	0ffh
0EFF  FF      		db	0ffh
0F00  FF      		db	0ffh
0F01  FF      		db	0ffh
0F02  FF      		db	0ffh
0F03  FF      		db	0ffh
0F04  FF      		db	0ffh
0F05  FF      		db	0ffh
0F06  FF      		db	0ffh
0F07  FF      		db	0ffh
0F08  FF      		db	0ffh
0F09  FF      		db	0ffh
0F0A  FF      		db	0ffh
0F0B  FF      		db	0ffh
0F0C  FF      		db	0ffh
0F0D  FF      		db	0ffh
0F0E  FF      		db	0ffh
0F0F  FF      		db	0ffh
0F10  FF      		db	0ffh
0F11  FF      		db	0ffh
0F12  FF      		db	0ffh
0F13  FF      		db	0ffh
0F14  FF      		db	0ffh
0F15  FF      		db	0ffh
0F16  FF      		db	0ffh
0F17  FF      		db	0ffh
0F18  FF      		db	0ffh
0F19  FF      		db	0ffh
0F1A  FF      		db	0ffh
0F1B  FF      		db	0ffh
0F1C  FF      		db	0ffh
0F1D  FF      		db	0ffh
0F1E  FF      		db	0ffh
0F1F  FF      		db	0ffh
0F20  FF      		db	0ffh
0F21  FF      		db	0ffh
0F22  FF      		db	0ffh
0F23  FF      		db	0ffh
0F24  FF      		db	0ffh
0F25  FF      		db	0ffh
0F26  FF      		db	0ffh
0F27  FF      		db	0ffh
0F28  FF      		db	0ffh
0F29  FF      		db	0ffh
0F2A  FF      		db	0ffh
0F2B  FF      		db	0ffh
0F2C  FF      		db	0ffh
0F2D  FF      		db	0ffh
0F2E  FF      		db	0ffh
0F2F  FF      		db	0ffh
0F30  FF      		db	0ffh
0F31  FF      		db	0ffh
0F32  FF      		db	0ffh
0F33  FF      		db	0ffh
0F34  FF      		db	0ffh
0F35  FF      		db	0ffh
0F36  FF      		db	0ffh
0F37  FF      		db	0ffh
0F38  FF      		db	0ffh
0F39  FF      		db	0ffh
0F3A  FF      		db	0ffh
0F3B  FF      		db	0ffh
0F3C  FF      		db	0ffh
0F3D  FF      		db	0ffh
0F3E  FF      		db	0ffh
0F3F  FF      		db	0ffh
0F40  FF      		db	0ffh
0F41  FF      		db	0ffh
0F42  FF      		db	0ffh
0F43  FF      		db	0ffh
0F44  FF      		db	0ffh
0F45  FF      		db	0ffh
0F46  FF      		db	0ffh
0F47  FF      		db	0ffh
0F48  FF      		db	0ffh
0F49  FF      		db	0ffh
0F4A  FF      		db	0ffh
0F4B  FF      		db	0ffh
0F4C  FF      		db	0ffh
0F4D  FF      		db	0ffh
0F4E  FF      		db	0ffh
0F4F  FF      		db	0ffh
0F50  FF      		db	0ffh
0F51  FF      		db	0ffh
0F52  FF      		db	0ffh
0F53  FF      		db	0ffh
0F54  FF      		db	0ffh
0F55  FF      		db	0ffh
0F56  FF      		db	0ffh
0F57  FF      		db	0ffh
0F58  FF      		db	0ffh
0F59  FF      		db	0ffh
0F5A  FF      		db	0ffh
0F5B  FF      		db	0ffh
0F5C  FF      		db	0ffh
0F5D  FF      		db	0ffh
0F5E  FF      		db	0ffh
0F5F  FF      		db	0ffh
0F60  FF      		db	0ffh
0F61  FF      		db	0ffh
0F62  FF      		db	0ffh
0F63  FF      		db	0ffh
0F64  FF      		db	0ffh
0F65  FF      		db	0ffh
0F66  FF      		db	0ffh
0F67  FF      		db	0ffh
0F68  FF      		db	0ffh
0F69  FF      		db	0ffh
0F6A  FF      		db	0ffh
0F6B  FF      		db	0ffh
0F6C  FF      		db	0ffh
0F6D  FF      		db	0ffh
0F6E  FF      		db	0ffh
0F6F  FF      		db	0ffh
0F70  FF      		db	0ffh
0F71  FF      		db	0ffh
0F72  FF      		db	0ffh
0F73  FF      		db	0ffh
0F74  FF      		db	0ffh
0F75  FF      		db	0ffh
0F76  FF      		db	0ffh
0F77  FF      		db	0ffh
0F78  FF      		db	0ffh
0F79  FF      		db	0ffh
0F7A  FF      		db	0ffh
0F7B  FF      		db	0ffh
0F7C  FF      		db	0ffh
0F7D  FF      		db	0ffh
0F7E  FF      		db	0ffh
0F7F  FF      		db	0ffh
0F80  FF      		db	0ffh
0F81  FF      		db	0ffh
0F82  FF      		db	0ffh
0F83  FF      		db	0ffh
0F84  FF      		db	0ffh
0F85  FF      		db	0ffh
0F86  FF      		db	0ffh
0F87  FF      		db	0ffh
0F88  FF      		db	0ffh
0F89  FF      		db	0ffh
0F8A  FF      		db	0ffh
0F8B  FF      		db	0ffh
0F8C  FF      		db	0ffh
0F8D  FF      		db	0ffh
0F8E  FF      		db	0ffh
0F8F  FF      		db	0ffh
0F90  FF      		db	0ffh
0F91  FF      		db	0ffh
0F92  FF      		db	0ffh
0F93  FF      		db	0ffh
0F94  FF      		db	0ffh
0F95  FF      		db	0ffh
0F96  FF      		db	0ffh
0F97  FF      		db	0ffh
0F98  FF      		db	0ffh
0F99  FF      		db	0ffh
0F9A  FF      		db	0ffh
0F9B  FF      		db	0ffh
0F9C  FF      		db	0ffh
0F9D  FF      		db	0ffh
0F9E  FF      		db	0ffh
0F9F  FF      		db	0ffh
0FA0  FF      		db	0ffh
0FA1  FF      		db	0ffh
0FA2  FF      		db	0ffh
0FA3  FF      		db	0ffh
0FA4  FF      		db	0ffh
0FA5  FF      		db	0ffh
0FA6  FF      		db	0ffh
0FA7  FF      		db	0ffh
0FA8  FF      		db	0ffh
0FA9  FF      		db	0ffh
0FAA  FF      		db	0ffh
0FAB  FF      		db	0ffh
0FAC  FF      		db	0ffh
0FAD  FF      		db	0ffh
0FAE  FF      		db	0ffh
0FAF  FF      		db	0ffh
0FB0  FF      		db	0ffh
0FB1  FF      		db	0ffh
0FB2  FF      		db	0ffh
0FB3  FF      		db	0ffh
0FB4  FF      		db	0ffh
0FB5  FF      		db	0ffh
0FB6  FF      		db	0ffh
0FB7  FF      		db	0ffh
0FB8  FF      		db	0ffh
0FB9  FF      		db	0ffh
0FBA  FF      		db	0ffh
0FBB  FF      		db	0ffh
0FBC  FF      		db	0ffh
0FBD  FF      		db	0ffh
0FBE  FF      		db	0ffh
0FBF  FF      		db	0ffh
0FC0  FF      		db	0ffh
0FC1  FF      		db	0ffh
0FC2  FF      		db	0ffh
0FC3  FF      		db	0ffh
0FC4  FF      		db	0ffh
0FC5  FF      		db	0ffh
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC          	romend:
0FFC  0000    		dw	0
0FFE          	chksum:
0FFE  A690    		dw	090a6h	; checksum...
		
0000          	if	($ <> 1000h)
		endif
1000          		end



Statistics:

     4	passes
     0	jr promotions
   341	symbols
  4096	bytes

  1063	macro calls
  3785	macro bytes
     0	invented symbols
