;	TITLE	'SBA MAGIC WAND -- TERMINAL XTERM (ANSI)'
***********************************************
**	       T E R M I N A L		     **
***********************************************
*		 Xterm VERSION

*	DEVELOPED BY SMALL BUSINESS APPLICATIONS INC
*		     3220 LOUISIANA, SUITE 205
*		     HOUSTON, TEXAS  77006
*		     (713)528-5158
*
*	LAST REVISION 1/23/18 by Douglas Miller <durgadas311@gmail.com>
*	for Peachtree Magic Wand as of above date.
*
BASE	EQU	0	;STANDARD CP/M BASE

	ORG	BASE+108H
	JMP	0
	JMP	0
	DB	128

	ORG	BASE+200H  ;TERMINAL MODULE ORIGIN
*
ROWSX	EQU	24	;DISPLAY ROWS
COLSX	EQU	80	;DISPLAY COLUMNS
TERMDIM DB	ROWSX,COLSX	;PHYSICAL TERMINAL LIMITS
SCRDIM	EQU	$		;CURRENT SCREEN LIMITS
ROWS	DB	ROWSX-1
COLS	DB	COLSX
CURSOR	EQU	$	;CURRENT CURSOR LOCATION
ROW	DB	1
COL	DB	1
CONOUT	DB	0,0,0	;CONOUT ADDR TO BE SUPPLIED AT INITIALIZATION
ZPRSEQ	JMP	PRSEQ	;OUTPUT CHAR SEQUENCE AT DE UNTIL NULL
ZCURSE	JMP	CURSE	;POSITION CURSOR AT HL
ZCLRSCR JMP	CLRSCRN ;CLEAR WHOLE SCREEN
ZCLRLN	JMP	CLRLINE ;CLEAR REMAINING LINE
ZSCROLL JMP	SCROLL	;SCROLL 1 LINE UP
ZBKSP	JMP	BKSP	;BACKSPACE 1 FROM CURRENT COLUMN
ZALARM	JMP	ALARM	;SOUND ALARM BELL, IF ANY
ZINIT	JMP	INITSCRN ;INITIALIZE TERMINAL, IF NEEDED
ZNAME	DB	'xterm           '
ZID	DB	'XT'	;TERMINAL ID NUMBER FOR SERIAL
*
*********CONTROL TABLES
*
CTAB	DB	8,16,24,32,40,48,56,64,72,COLSX,0,0,0,0,0,0
	DB	255	;TAB TABLE STOP BYTE
*
*	HIGH-ORDER BIT (128+) ON INDICATES ESCAPE SEQUENCE
*
XTAB	EQU	$	;TABLE OF CONTROL CHARACTERS
XRET	DB	RETC	;CARRIAGE RETURN
XCURR	DB	128+'C' ;*****	CURSOR RIGHT
XCURU	DB	128+'A' ;*****	CURSOR UP
XCURD	DB	128+'B' ;*****	CURSOR DOWN   
XDELTL	DB	128+'d' ;DELETE	LINE DELETE
XFSCRL	DB	128+'Q' ;'F2'	LINE SCROLL FORWARD
XBSCRL	DB	128+'P' ;'F1'	LINE SCROLL BACKWARD
XPFSCRL DB	128+'g' ;'PGDN'	PAGE FORWARD
XPBSCRL DB	128+'f' ;'PGUP'	PAGE BACKWARD
XHOME	DB	128+'H' ;*HOME*	HOME LINE, SCREEN
XSCRTOP DB	20	;Ctl-T	TOP OF TEXT
XSCRBOT DB	2	;Ctl-B	BOTTOM OF TEXT
XTABC	DB	TABKEY	;CTL-I (TAB KEY)
XISRT	DB	128+'R' ;'F3'	CHARACTER INSERT
XISRTP	DB	128+'c' ;INSERT	FULL INSERT (OPEN/CLOSE TEXT)
XISRTX	DB	23	;CTL-W	WORD DELETE
XESC	DB	ESC	;ESCAPE KEY
XDUPE	DB	128+'s' ;'f7'	REPEAT SEARCH/REPLACE
XFIND	DB	128+'r' ;'f6'	START SEARCH/REPLACE
XSETMK	DB	128+'t' ;'f8'	SET BLOCK MARKER
XFORM	DB	128+'p' ;'f5'	SET FORM FEED
XLNFD	DB	10	;LINE	SET LINE FEED
XBKSP	DB	8	;BACKSPACE
XDELTC	DB	128+'S'	;'F4'  CHARACTER DELETE
XCURL	DB	128+'D' ;*****	CURSOR LEFT
XEND	DB	ESC	;END TABLE /CURRENT CHAR
;	PAGE
*	TABLE OF CONTROL CODE/DISPLAY SUBSTITUTIONS
SUBCTLS EQU	$	;TRANSLATES VALUES 0-1F
	DB	0,'_',0,0,0,0,0,BELL,0,0
	DB	'|'	;LINE FEED
	DB	0
	DB	'^'	;FORM FEED
XDCR	DB	'~'	;CARRIAGE RETURN
	DB	0,0,0
	DB	':'	;FIND-KEY
	DB	0,0,0,0,0,0,0,0,0,0,0,0,0
*
BLKMARK EQU	1	;BLOCK MARKER
RETC	EQU	13	;LINE-END CTL CHAR
LNFD	EQU	10	;LINE FEED
FFORM	EQU	12	;FORM FEED
TABKEY	EQU	9	;TAB KEY (CONTROL-I)
BELL	EQU	7	;BELL CODE
ESC	EQU	27	;ESCAPE KEY
DELKEY	EQU	127	;DELETE KEY
DEFIND	EQU	7	;KEY TO DEFINE SEARCH/REPLACE
	PAGE
********	HEATH SCREEN CONTROL ROUTINES
**
LEADIN	EQU	ESC	;CONTROL SEQUENCE FLAG CODE
CSI	EQU	128+'['	;CONTROL SEQUENCE INIT
INTSEQ	DB	CSI,'1;1H'	;HOME cursor
	DB	CSI,'1;24r'	;Scroll region
	DB	0	;SEQUENCE TERMINATOR
EXITSEQ DB	CSI,'r'		;return to normal scroll
	DB	CSI,'1;1H'	;HOME cursor
	DB	CSI,'2J'	;clear screen
	DB	0
CLRSEQ	DB	CSI,'2J'	;SEQUENCE TO CLEAR SCREEN
	DB	0
LNSEQ	DB	CSI,'K'	;SEQUENCE TO CLEAR LINE
	DB	0
SETSEQ	DB	CSI	;SEQUENCE TO SET CURSOR LOCATION
SETR	DW	0	;CURSOR COORDINATES (ROW)
	DB	';'
SETC	DW	0	;CURSOR COORDINATES (COL)
	DB	'H'
	DB	0
SCROLSQ DB	CSI,'S'	;SEQUENCE TO SCROLL FWD (UP) 1 LINE
	DB	CSI,'23;1H'	;JUMP TO BOTTOM ROW FOR BACKFILL
	DB	CSI,'J'	;clear below/after
	DB	0
*
CURSE	EQU	$	;SET CURSOR CORRDINATES IN HL (L=row, H=col)
	XCHG
	MOV	A,E	;ROW
	CALL	NUM
	SHLD	SETR	;STORE IN SEQUENCE
	MOV	A,D	;COL
	CALL	NUM
	SHLD	SETC	;STORE IN SEQUENCE
	LXI	D,SETSEQ ;USE CPM BUFFER PRINT
	JMP	PRSEQ
*
; 1-24 or 1-80...
NUM:	MVI	L,'0'	; MSD after SHLD...
NUM0:	SUI	10
	INR	L
	JNC	NUM0
	ADI	10
	DCR	L
	ORI	'0'
	MOV	H,A	; LSD
	RET
*
SCROLL:	LXI	D,SCROLSQ	;INITIATE LINE SCROLL SEQUENCE
	JMP	PRSEQ
*
CLRLINE:LXI	D,LNSEQ ;CLEAR LINE
	JMP	PRSEQ
*
BKSP:	MVI	C,BKSPCODE
	JMP	CONOUT
BKSPCODE EQU	8
*
CLRSCRN:LXI	H,0101H
	CALL	CURSE	;FORCE CURSOR HOME
	LXI	D,CLRSEQ ;CLEAR SCREEN
	JMP	PRSEQ
*
ALARM:	MVI	C,BELL	  ;SOUND ALARM BELL
	JMP	CONOUT
*
PRSEQ:	LDAX	D	;PRINT SEQ AT DE UNTIL ZERO
	ANA	A
	RZ
	PUSH	D
	JP	PRSEQ0
	ANI	7FH
	PUSH	PSW
	MVI	C,LEADIN
	CALL	CONOUT
	POP	PSW
PRSEQ0:	MOV	C,A
	CALL	CONOUT
	POP	D
	INX	D
	JMP	PRSEQ

INITSCRN EQU	$	;INIT/DE-INIT ENVIRONMENT
	LXI	D,EXITSEQ
	LXI	H,INITSW
	MOV	A,M
	MVI	M,1
	ANA	A
	JNZ	PRSEQ	; finished
	LHLD	ORGCONST
	SHLD	CONST
	LXI	H,TCONST
	SHLD	ORGCONST
	LHLD	ORGCONIN
	SHLD	CONIN
	LXI	H,TCONIN
	SHLD	ORGCONIN
	LXI	D,INTSEQ
	JMP	PRSEQ

INITSW:	DB	0	;FIRST-TIME SWITCH

ORGCONST EQU	BASE+109H ;MW CONST ADDR FROM CBIOS
CONST	DW	0	;ADDRESS FOR CBIOS CHAR STATUS

ORGCONIN EQU	BASE+10CH ;MW CONIN ADDR FROM CBIOS
CONIN	DW	0	;ADDR FOR CBIOS CHAR INPUT

HLCALL:	PCHL		;ROUTINE PROVIDING INDIRECT CALLS

TCONST:	LHLD	CONST
	JMP	HLCALL

DCONST:	MVI	A,250	;WAIT FOR 0.875 MS @ 4MHZ
DLY:	DCR	A	;(9600 Baud is 1.04ms/char)
	JNZ	DLY	;(125K Baud is 0.08ms/char)
	CALL	TCONST	;(if no s/w overhead)
	ORA	A
	RET

ERRSEQ:	DB	0,0,0,0,0,0,0,0
ERRPTR:	DW	0

TCONIN:
	LHLD	ERRPTR
	MOV	A,L
	ORA	H
	JZ	TC0
	MOV	A,M
	MVI	M,0
	INX	H
	SHLD	ERRPTR
	ORA	A
	RNZ
	LXI	H,0
	SHLD	ERRPTR
TC0:	LHLD	CONIN
	CALL	HLCALL
	CPI	ESC
	RNZ		;DIRECT RETURN ANY NON-ESCAPE SEQUENCE
	LXI	H,ERRSEQ
	SHLD	ERRPTR
	MOV	M,A	; ESC
	INX	H
	MVI	M,0
	PUSH	H
	CALL	DCONST	; DELAYED CONST
	POP	H
	JZ	TCONIN	; unspool ESC...
	PUSH	H
	LHLD	CONIN
	CALL	HLCALL
	POP	H
	MOV	M,A
	INX	H
	MVI	M,0
	CPI	'O'
	JZ	TC2
	CPI	'['
	JNZ	TCONIN	; unspool ESC x
TC2:	PUSH	H
	CALL	DCONST	; DELAYED CONST
	POP	H
	JZ	TCONIN	; unspool ESC [
	PUSH	H
	LHLD	CONIN
	CALL	HLCALL
	POP	H
	MOV	M,A
	INX	H
	MVI	M,0
	CPI	'0'
	JC	TCONIN	; unspool ESC [ ...
	CPI	'9'+1
	JC	TC2
	CPI	'~'
	JZ	TC3
	; assume letter...
	; "ESC O c" [PQRS] function keys f1-f4
	; "ESC [ c" [ABCD] cursor keys
	; TODO: handle "ESC [ nn ~" function keys...
TC6:	LXI	H,0
	SHLD	ERRPTR
	ORI	10000000B	;ELSE RETURN IT WITH HIGH-BIT SET
	RET
TC3:	LXI	H,ERRSEQ+2	; point to "nn"
	MVI	B,0
TC4:	MOV	A,M
	INX	H
	CPI	'~'
	JZ	TC5
	SUI	'0'
	MOV	C,A
	MOV	A,B
	ADD	A	; *2
	ADD	A	; *4
	ADD	B	; *5
	ADD	A	; *10
	ADD	C
	MOV	B,A
	JMP	TC4
TC5:	MVI	A,'a'
	ADD	B	; f5='p', f6='r', f7='s', f8='t', INS='c', DEL='d'
	JMP	TC6	; PGUP='f', PGDN='g'

;	f5	f6	f7	f8
;	\e[15~	\e[17~	\e[18~	\e[19~	Note: skips 16...
;	'p'	'r'	's'	't'

	END
