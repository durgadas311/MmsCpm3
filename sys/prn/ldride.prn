 2032 =         VERS	EQU   '2 '  ; Feb 26, 2020 20:41 drm "ldride.asm"
                ***************************************************
                ;	Loader disk I/O module for MMS CP/M 2.24
                ;	for the GIDE bus interface 
                ;	Copyright (c) 1983 Magnolia Microsystems
                ***************************************************
                
                	MACLIB	z80
                	$-MACRO
                
                	public	btend		;end of system (boot stops loading there)
                	extrn	BDOS,CBOOT,DSKSTA,TIMEOT,MIXER,DIRBUF,DLOG
                	extrn	NEWDSK,NEWTRK,NEWSEC,DMAA,phytrk
                
 0046 =         DRIV0	EQU	70		; FIRST PHYSICAL DRIVE NUMBER
 0009 =         NDRIV	EQU	9
                
                ***************************************************
                **  PORTS AND CONSTANTS
                ***************************************************
 00F2 =         GPIO	EQU	0F2H		; SWITCH 501
                
 0080 =         GIDE	equ	080h	; GIDE base port
 0088 =         GIDE$DA	equ	GIDE+8	; GIDE data port
 0089 =         GIDE$EF	equ	GIDE+9	; GIDE feature/error register
 008A =         GIDE$SC	equ	GIDE+10	; GIDE sector count
 008B =         GIDE$SE	equ	GIDE+11	; GIDE sector number	(lba7:0)
 008C =         GIDE$CL	equ	GIDE+12	; GIDE cylinder low	(lba15:8)
 008D =         GIDE$CH	equ	GIDE+13	; GIDE cylinder high	(lba23:16)
 008E =         GIDE$DH	equ	GIDE+14	; GIDE drive+head	(drive+lba27:24)
 008F =         GIDE$CS	equ	GIDE+15	; GIDE command/status
                
 0001 =         ERR	equ	00000001b	; error bit in GIDE$CS
 0040 =         RDY	equ	01000000b	; ready bit in GIDE$CS
 0008 =         DRQ	equ	00001000b	; DRQ bit in GIDE$CS
 0080 =         BSY	equ	10000000b	; busy bit in GIDE$CS
                
 000A =         DPHDPB	EQU	10
 0010 =         DPHL	EQU	16
 0015 =         DPBL	EQU	21
 0004 =         DDEFL	EQU	4
 000D =         CSTRNG	EQU	13
 0013 =         NPART	EQU	19
 0004 =         CBYTE	EQU	4
 0005 =         DDATA	EQU	5
 0003 =         DCTYPE	EQU	3
 0014 =         SECTBL	EQU	20
 002F =         DDPB	EQU	47
                
 0000 =         WRALL	EQU	0	; WRITE TO ALLOCATED
 0001 =         WRDIR	EQU	1	; WRITE TO DIRECTORY
 0002 =         WRUNA	EQU	2	; WRITE TO UNALLOCATED
 0003 =         READOP	EQU	3	; READ OPERATION
                
 2034 =         BTDRV	EQU	2034H	; BOOT DRIVE SAVE BY PROM
 25F0 =         STRNG	EQU	25F0H	; ASCII SEGMENT NUMBER SAVE BY BOOT LOADER
 2131 =         UNITNUM EQU	2131H	; PARTITION NUMBER SAVE BY EPROM
 2156 =         SEGOFF	EQU	2156H	; segment offset setup by ROM
 004E =         nsegmt	equ	004eh	; where to pass segment to CP/M 3
                
                ***************************************************
                ** START OF RELOCATABLE DISK I/O MODULE
                *************************************************** 
                
                ; Assume SPT is always 64 (16x512):
                ; Init:
                ;	seg_off = (STRNG - 'A') << 19		[256M segments]
                ;	partn(UNITNUM) += seg_off
                ; each I/O:
                ;	LBA = partn(UNITNUM) + (NEWTRK << 4) + (NEWSEC - 1)
                
                	cseg   
                 
 0000 C3E201    	jmp	INIT$GIDE
 0003 C3A001    	jmp	SEL$GIDE
 0006 C35B02    	jmp	READ$GIDE
                
 0009 0000      	dw	0
 000B 0000      	dw	0     
                
                ;	TEXT
 000D 4749444520	DB	'GIDE ',0,'ATA system loader ',0,'v3.00'
 002B 32202400  	DW	VERS,'$'
                
                
 002F 0000000000DPH0:	DW	0,0,0,0,DIRBUF,DPB0,CSV0,ALV0
 003F 0000000000DPH1:	DW	0,0,0,0,DIRBUF,DPB1,CSV0,ALV0
 004F 0000000000DPH2:	DW	0,0,0,0,DIRBUF,DPB2,CSV0,ALV0
 005F 0000000000DPH3:	DW	0,0,0,0,DIRBUF,DPB3,CSV0,ALV0
 006F 0000000000DPH4:	DW	0,0,0,0,DIRBUF,DPB4,CSV0,ALV0
 007F 0000000000DPH5:	DW	0,0,0,0,DIRBUF,DPB5,CSV0,ALV0
 008F 0000000000DPH6:	DW	0,0,0,0,DIRBUF,DPB6,CSV0,ALV0
 009F 0000000000DPH7:	DW	0,0,0,0,DIRBUF,DPB7,CSV0,ALV0
 00AF 0000000000DPH8:	DW	0,0,0,0,DIRBUF,DPB8,CSV0,ALV0
                
                
                ;	SECTOR DEFINITION/TRANSLATION TABLE
                ;	already converted to 512b sectors
                ;	i.e. base LBA 27:0
                ;		-----ADDRESS----
 00BF 00000000  DDEFTBL:DB	0,   0,   0,   0
 00C3 00000000  	DB	0,   0,   0,   0
 00C7 00000000  	DB	0,   0,   0,   0
 00CB 00000000  	DB	0,   0,   0,   0
 00CF 00000000  	DB	0,   0,   0,   0
 00D3 00000000  	DB	0,   0,   0,   0
 00D7 00000000  	DB	0,   0,   0,   0
 00DB 00000000  	DB	0,   0,   0,   0
 00DF 00000000  	DB	0,   0,   0,   0
                
                ;
                ;
                ; DISK PARAMETER BLOCKS -- CONTAIN DUMMY DATA. REAL DATA IS OBTAINED FROM 
                ;			   MAGIC SECTOR ON INITIALIZATION OF PARTITION
                ;
 00E3 4000      DPB0:	DW	64		; SPT
 00E5 051F01    	DB	5,31,1		; BSH,BLM,EXM
 00E8 0300FF01  	DW	4-1,512-1	; DSM,DRM
 00EC F000      	DB	0F0H,0		; AL0,AL1
 00EE 00000200  	DW	0,2		; CKS,OFF
 00F2 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 00F5 FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 00F8 4000      DPB1:	DW	64		; SPT
 00FA 051F01    	DB	5,31,1		; BSH,BLM,EXM
 00FD 0300FF01  	DW	4-1,512-1	; DSM,DRM
 0101 F000      	DB	0F0H,0		; AL0,AL1
 0103 00000200  	DW	0,2		; CKS,OFF
 0107 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 010A FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 010D 4000      DPB2:	DW	64		; SPT
 010F 051F01    	DB	5,31,1		; BSH,BLM,EXM
 0112 0300FF01  	DW	4-1,512-1	; DSM,DRM
 0116 F000      	DB	0F0H,0		; AL0,AL1
 0118 00000200  	DW	0,2		; CKS,OFF
 011C 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 011F FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 0122 4000      DPB3:	DW	64		; SPT
 0124 051F01    	DB	5,31,1		; BSH,BLM,EXM
 0127 0300FF01  	DW	4-1,512-1	; DSM,DRM
 012B F000      	DB	0F0H,0		; AL0,AL1
 012D 00000200  	DW	0,2		; CKS,OFF
 0131 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 0134 FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 0137 4000      DPB4:	DW	64		; SPT
 0139 051F01    	DB	5,31,1		; BSH,BLM,EXM
 013C 0300FF01  	DW	4-1,512-1	; DSM,DRM
 0140 F000      	DB	0F0H,0		; AL0,AL1
 0142 00000200  	DW	0,2		; CKS,OFF
 0146 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 0149 FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 014C 4000      DPB5:	DW	64		; SPT
 014E 051F01    	DB	5,31,1		; BSH,BLM,EXM
 0151 0300FF01  	DW	4-1,512-1	; DSM,DRM
 0155 F000      	DB	0F0H,0		; AL0,AL1
 0157 00000200  	DW	0,2		; CKS,OFF
 015B 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 015E FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 0161 4000      DPB6:	DW	64		; SPT
 0163 051F01    	DB	5,31,1		; BSH,BLM,EXM
 0166 0300FF01  	DW	4-1,512-1	; DSM,DRM
 016A F000      	DB	0F0H,0		; AL0,AL1
 016C 00000200  	DW	0,2		; CKS,OFF
 0170 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 0173 FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 0176 4000      DPB7:	DW	64		; SPT
 0178 051F01    	DB	5,31,1		; BSH,BLM,EXM
 017B 0300FF01  	DW	4-1,512-1	; DSM,DRM
 017F F000      	DB	0F0H,0		; AL0,AL1
 0181 00000200  	DW	0,2		; CKS,OFF
 0185 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 0188 FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
 018B 4000      DPB8:	DW	64		; SPT
 018D 051F01    	DB	5,31,1		; BSH,BLM,EXM
 0190 0300FF01  	DW	4-1,512-1	; DSM,DRM
 0194 F000      	DB	0F0H,0		; AL0,AL1
 0196 00000200  	DW	0,2		; CKS,OFF
 019A 028000    	DB	00000010B,10000000B,0  ; MODE BYTES
 019D FFFFFF    	DB	0FFH,0FFH,0FFH	; MODE MASKS
                
                ;	SELECT DISK CODE
                ;
                SEL$GIDE:
 01A0 AF        	xra	a
 01A1 324203    	sta	SELERR		; NO SELECT ERRORS (YET)
 01A4 3A4303    	lda	PARTLUN
 01A7 47        	mov	b,a
 01A8 3A0000    	lda	NEWDSK
 01AB D646      	sui	DRIV0
 01AD B8        	cmp	b
 01AE D2D901    	jnc	ERREXT
 01B1 47        	mov	b,a
 01B2 11BF00    	lxi	d,DDEFTBL
 01B5 6F        	mov	l,a		; NOW POINT TO THE CORRECT
 01B6 2600      	mvi	h,0		; ENTRY IN THE SECTOR
 01B8 29        	dad	h		; OFFSET TABLE
 01B9 29        	dad	h		; *4
 01BA 19        	dad	d
 01BB 223E03    	shld	SECPTR
 01BE 211F00    	lxi	h,DPH0-DPHL	; POINT TO DPH TABLE
 01C1 111000    	lxi	d,DPHL		; LENGTH OF DPH's
 01C4 04        	inr	b
 01C5 19        SEL1:	dad	d
 01C6           	djnz	SEL1		; CALCULATE POINTER TO REQUESTED DPH
 01C8 224003    	shld	curdph		
 01CB 110A00    	lxi	d,DPHDPB
 01CE 19        	dad	d		; POINT TO ADDRESS OF DPB
 01CF CD0A03    	call	HLIHL		; DPB ADDRESS IN HL
 01D2 224903    	shld	CURDPB		; SAVE IT
 01D5 2A4003    	lhld	curdph
 01D8 C9        	ret
                
 01D9 3E01      ERREXT: mvi	a,1
 01DB 324203    	sta	SELERR
 01DE 210000    	lxi	h,0
 01E1 C9        	ret
                
                INIT$GIDE:
                	; gather info from bootloader
 01E2 3A3420    	lda	BTDRV		;FROM BOOT LOADER
 01E5 320000    	sta	MIXER
 01E8 2A5621    	lhld	SEGOFF		;from ROM
 01EB 224E00    	shld	nsegmt		;hope it is safe here
                	; since we only have one disk, init partn table now.
                	; read "magic sector"
 01EE 224B03    	shld	CURLBA+0
 01F1 210000    	lxi	h,0
 01F4 224D03    	shld	CURLBA+2		; phy sec 0 = partition table
 01F7 CDA702    	call	READ
 01FA C0        	rnz	; error
 01FB 3A6603    	lda	HSTBUF+NPART	; num partns
 01FE 324303    	sta	PARTLUN		; use all partitons
                	; copy over all DPBs
 0201 3A4303    	lda	PARTLUN		; compute length of DPB block
 0204 47        	mov	b,a
 0205 210000    	lxi	h,0		; CALCULATE TOTAL LENGTH OF DPB'S TO BE MOVED 
 0208 111500    	lxi	d,DPBL
 020B 19        NXTLEN:	dad	d
 020C           	djnz	NXTLEN
 020E 44        	mov	b,h		; PUT LENGTH IN BC
 020F 4D        	mov	c,l
 0210 11E300    	lxi	d,DPB0
 0213 218203    	lxi	h,HSTBUF+DDPB	; PUT FROM ADDRESS IN HL
 0216           	ldir
                	; copy over sector (partition) offsets,
                	; converting from LBA and 4-byte entries.
 0218           	lxix	DDEFTBL		; destination start
 021C 216703    	lxi	h,HSTBUF+SECTBL	; source start
 021F 3A4303    	lda	PARTLUN		; num entries
 0222 47        	mov	b,a
 0223 C5        nxtdef:	push	b
 0224 3A5621    	lda	SEGOFF+0; LBA27:24,DRV is fixed
 0227           	stx	a,+0
 022A           	inxix
 022C 0603      	mvi	b,3
 022E 3A5721    	lda	SEGOFF+1; LBA23:19 is segment offset
 0231 57        	mov	d,a	; carry-in, s0000000
 0232 7E        	mov	a,m
 0233 E61F      	ani	00011111b	; must clear LUN bits
 0235 77        	mov	m,a
                nxdef0:
 0236 1E00      	mvi	e,0
 0238 7E        	mov	a,m
 0239 23        	inx	h
 023A           	srlr	a	; convert 128B-secnum to 512B-secnum
 023C           	rarr	e	;
 023E           	srlr	a	;
 0240           	rarr	e	;
 0242 B2        	ora	d	; carry-in from previous
 0243           	stx	a,+0
 0246           	inxix
 0248 53        	mov	d,e	; carry-out becomes next carry-in
 0249           	djnz	nxdef0
 024B C1        	pop	b
 024C           	djnz	nxtdef
                	; anything else to do?
 024E AF        	xra	a
 024F C9        	ret
                
                ; HL, DE are LBA buffers to be compared
 0250 0604      cmplba:	mvi	b,4
                cmplba0:
 0252 1A        	ldax	d
 0253 BE        	cmp	m
 0254 C0        	rnz
 0255 23        	inx	h
 0256 13        	inx	d
 0257           	djnz	cmplba0
 0259 AF        	xra	a
 025A C9        	ret
                
                READ$GIDE:
 025B 3A4203    	lda	SELERR
 025E B7        	ora	a
 025F C0        	rnz
 0260 2A0000    	lhld	phytrk
 0263 224503    	shld	REQTRK
 0266 0E00      	mvi	c,0		; CALCULATE PHYSICAL SECTOR
 0268 3A0000    	lda	NEWSEC
 026B           	srlr	a		; DIVIDE ACCUMULATOR BY 2
 026D           	rarr	c		; SAVE OVERFLOW BIT
 026F           	srlr	a		; DIVIDE ACCUMULATOR BY 4
 0271           	rarr	c		; SAVE OVERFLOW BIT
 0273 324703    	sta	REQSEC		; SAVE IT
 0276 79        	mov	a,c
 0277 07        	rlc
 0278 07        	rlc			; sub-sector index
 0279 324803    	sta	BLKSEC		; STORE IT
 027C CDBB02    	call	SET$LBA		; setup CURLBA from REQTRK/SEC
                	; only one disk, each partn LBAs are unique
 027F 214F03    	lxi	h,HSTLBA
 0282 114B03    	lxi	d,CURLBA
 0285 CD5002    	call	cmplba
 0288 CA8F02    	jz	NOREAD		; no pre-read required
                	; no flushing required - we never write
 028B CDA702    	call	READ		; READ THE SECTOR
 028E C0        	rnz
 028F 215303    NOREAD: lxi	h,HSTBUF	; POINT TO START OF SECTOR BUFFER
 0292 018000    	lxi	b,128
 0295 3A4803    	lda	BLKSEC		; POINT TO LOCATION OF CORRECT LOGICAL SECTOR
 0298 3D        MOVIT1: dcr	a
 0299 FA9F02    	jm	MOVIT2
 029C 09        	dad	b
 029D           	jr	MOVIT1
 029F           MOVIT2: lded	DMAA		; POINT TO DMA
 02A3           	ldir			; MOVE IT
 02A5 AF        	xra	a		; FLAG NO ERROR
 02A6 C9        	ret			; RETURN TO BDOS
                
                ;
                ;	READ A PHYSICAL SECTOR CODE
                ;
                READ:
 02A7 CDEE02    	call	SET$SEC 	; set ctrl regs from CURLBA
 02AA CD0F03    	call	GIDERD		; DO READ OR WRITE
 02AD C0        	rnz
 02AE 214B03    	lxi	h,CURLBA
 02B1 114F03    	lxi	d,HSTLBA	; SET UP NEW BUFFER PARAMETERS
 02B4 010400    	lxi	b,4
 02B7           	ldir
 02B9 AF        	xra	a
 02BA C9        	ret
                
                ;	ABSOLUTE SECTOR NUMBER
                ;
                ;	CALCULATE THE REQUESTED SECTOR
                ;
                SET$LBA:
                	; note: LBA is stored big-endian, LHLD/SHLD are little-endian
                	; so H,D are LSB and L,E are MSB.
 02BB 2A4503    	lhld	REQTRK		; GET REQUESTED TRACK
 02BE 5D        	mov	e,l	;
 02BF 6C        	mov	l,h	;
 02C0 63        	mov	h,e	; bswap HL
 02C1 110000    	lxi	d,0
 02C4 0604      	mvi	b,4		; shift 4 bits left (16 psec/trk)
                stlba0:
 02C6           	slar	h
 02C8           	rarr	l
 02CA           	rarr	d	; can't carry out
 02CC           	djnz	stlba0
                	; sector can't carry - 0-15 into vacated bits
 02CE 3A4703    	lda	REQSEC		; GET REQUESTED SECTOR
 02D1 B4        	ora	h
 02D2 67        	mov	h,a
 02D3 224D03    	shld	CURLBA+2
 02D6 EB        	xchg
 02D7 224B03    	shld	CURLBA+0
                	; add 32-bit values LBA += *(SECPTR)
 02DA 214E03    	lxi	h,CURLBA+3
 02DD           	lded	SECPTR	; adjusted by SEGOFF already
 02E1 13        	inx	d
 02E2 13        	inx	d
 02E3 13        	inx	d	; SECPTR+3
                	; CY is cleared above
 02E4 0604      	mvi	b,4
                stlba1:
 02E6 1A        	ldax	d
 02E7 8E        	adc	m
 02E8 77        	mov	m,a
 02E9 2B        	dcx	h
 02EA 1B        	dcx	d
 02EB           	djnz	stlba1
 02ED C9        	ret
                
                SET$SEC:
 02EE 214B03    	lxi	h,CURLBA	; adjusted by SEGOFF already
 02F1 7E        	mov	a,m
 02F2 F6E0      	ori	11100000b	; LBA mode, etc
 02F4 D38E      	out	GIDE$DH
 02F6 23        	inx	h
 02F7 7E        	mov	a,m
 02F8 D38D      	out	GIDE$CH
 02FA 23        	inx	h
 02FB 7E        	mov	a,m
 02FC D38C      	out	GIDE$CL
 02FE 23        	inx	h
 02FF 7E        	mov	a,m
 0300 D38B      	out	GIDE$SE
 0302 3E01      	mvi	a,1
 0304 D38A      	out	GIDE$SC	; always 1 sector at a time
 0306 AF        	xra	a
 0307 D389      	out	GIDE$EF	; feature always zero?
 0309 C9        	ret
                
 030A 7E        HLIHL:	mov	a,m
 030B 23        	inx	h
 030C 66        	mov	h,m
 030D 6F        	mov	l,a
 030E C9        	ret
                
                ;
                ;	ACTUAL READ OF DATA
                ;	controller registers already set
                ;
                GIDERD: 			; THIS ROUTINE IS FOR READING
 030F 3E20      	mvi	a,20h
 0311 D38F      	out	GIDE$CS		; start command
 0313 AF        	xra	a
 0314 320000    	sta	DSKSTA
 0317 215303    	lxi	h,HSTBUF	; AND WRITING DATA
 031A 0E88      	mvi	c,GIDE$DA	; DATA PORT ADDRESS TO REG. C
 031C 0600      	mvi	b,0		; 256 bytes per INIR/OUTIR
 031E DB8F      GIDECK: in	GIDE$CS		; FIRST CHECK FOR DRIVE READY
 0320           	bit	7,a		; BSY
 0322           	jrnz	GIDECK
 0324           	bit	0,a		; ERR
 0326           	jrnz	rwerr0
 0328           	bit	6,a		; RDY
 032A           	jrz	rwerr
 032C           	bit	3,a		; DRQ
 032E           	jrz	GIDECK
 0330           	inir
 0332           	inir
 0334 AF        	xra	a
 0335 C9        	ret	; ZR = success
                rwerr0:
 0336 DB89      	in	GIDE$EF
 0338 320000    	sta	DSKSTA		; STORE STATUS
                rwerr:
 033B AF        	xra	a
 033C 3C        	inr	a
 033D C9        	ret	; NZ = error
                
                ****************************************************************
                
                ;
                ;	DATA BUFFERS AND STORAGE
                ;
 033E 0000      SECPTR	DW	0		; POINTER TO CURRENT SECTOR TABLE ENTRY
 0340 0000      CURDPH	DW	0		; current disk parameter header
 0342 00        SELERR	DB	0		; SELECT ERROR FLAG
 0343 00        PARTLUN DB	0		; NUMBER OF PARTITIONS IN CURRENT LUN
 0344 00        DSKERR:	db	0
                ;
                ; DEBLOCKING VARIABLES
                ;
 0345 0000      REQTRK	DW	0
 0347 00        REQSEC	DB	0
 0348 00        BLKSEC: DB	0		; LOCATION OF LOGICAL SECTOR WITHIN PHYSICAL
 0349 0000      CURDPB	DW	0		; ADDRESS OF CURRENT DISK PARAMETER BLOCK
                
 034B 00000000  CURLBA:	db	0,0,0,0
 034F FF000000  HSTLBA:	db	0ffh,0,0,0
                
 0353 =         btend	equ	$
                
                ********************************************************
                ** BUFFERS
                ********************************************************
                
 0353           HSTBUF: DS	512
 0553           CSV0:	DS	128
 05D3           ALV0:	DS	256
                
 06D3           	END
