 2031 =         VERS EQU '1 ' ; July 19, 1983	9:55  mjm  "LDRZ37.ASM"
                **********************************************************
                ;	Loader disk I/O module for MMS CP/M 3.1
                ;	for the Zenith Z37 controller
                ;	Copyright (c) 1983 Magnolia Microsystems
                ;*********************************************************
                
                	MACLIB Z80
                
                	public btend
                	extrn BDOS,CBOOT,DSKSTA,TIMEOT,MIXER,DIRBUF,DLOG
                	extrn NEWDSK,NEWTRK,NEWSEC,DMAA
                
 002E =         driv0	equ	46
                
                ; Physical drives are assigned as follows:
                ;
                ;	46 - 1st Z37 drive
                ;	47 - 2nd Z37 drive
                ;	48 - 3rd Z37 drive
                ;	49 - 4th Z37 drive
                
                ;	Ports and Constants
 0078 =         FD$BASE EQU	078H		; BASE PORT ADDRESS
 0078 =         FD$CON	EQU	FD$BASE 	; DISK CONTROL PORT
 0079 =         FD$INT	EQU	FD$BASE+1	; INTERFACE MUX PORT
 007A =         FD$CMD	EQU	FD$BASE+2	; 1797 COMMAND REGISTER
 007A =         FD$STA	EQU	FD$BASE+2	;      STATUS REGISTER
 007B =         FD$DAT	EQU	FD$BASE+3	;      DATA REGISTER
 007A =         FD$SEC	EQU	FD$BASE+2	;      SECTOR REGISTER
 007B =         FD$TRK	EQU	FD$BASE+3	;      TRACK REGISTER
                
                ;  INTERFACE MUX PORT FLAGS
 0000 =         FD$CD	EQU	0		; ACCESS C/D REGISTERS
 0001 =         FD$TS	EQU	1		; ACCESS T/S REGISTERS
                
                ;  COMMANDS
 0000 =         FDCRST	EQU	000H		; RESTORE
 0040 =         FDCSTI	EQU	040H		; STEP IN
 0060 =         FDCSTO	EQU	060H		; STEP OUT
 0080 =         FDCRDS	EQU	080H		; READ SECTOR
 00C0 =         FDCRDA	EQU	0C0H		; READ ADDRESS
 00D0 =         FDCFI	EQU	0D0H		; FORCE INTERRUPT
                
                ;  TYPE 1 COMMAND FLAGS
 0010 =         FDFUTR	EQU	00010000B	; UPDATE TRACK REGISTER
 0008 =         FDFHLB	EQU	00001000B	; HEAD LOAD AT BEGINNING
                
                ;  TYPE 2&3 COMMAND FLAGS
 0008 =         FDFSLF	EQU	00001000B	; SECTOR LENGTH FLAG
 0004 =         FDFDLF	EQU	00000100B	; 30 MS DELAY
 0002 =         FDFSS1	EQU	00000010B	; SELECT SIDE 1
                
 0000 =         FDFINI	EQU	00000000B	; TERMINATE WITH NO INTERUPT
                
                ;  STATUS FLAGS
 0010 =         FDSRNF	EQU	00010000B	; RECORD NOT FOUND
 0008 =         FDSCRC	EQU	00001000B	; CRC ERROR
 0004 =         FDSTK0	EQU	00000100B	; FOUND TRACK 0
 0002 =         FDSIND	EQU	00000010B	; INDEX HOLE
                
                ;  CONTROL REGISTER FLAGS
 0001 =         CONIRQ	EQU	00000001B	; ENABLE INT REQ
 0002 =         CONDRQ	EQU	00000010B	; ENABLE DRQ INT / DISABLE SYSTEM INT
 0004 =         CONMFM	EQU	00000100B	; ENABLE MFM
 0008 =         CONMO	EQU	00001000B	; MOTOR(S) ON
 0010 =         CONDS0	EQU	00010000B	; DRIVE 0
 0020 =         CONDS1	EQU	00100000B	; DRIVE 1
 0040 =         CONDS2	EQU	01000000B	; DRIVE 2
 0080 =         CONDS3	EQU	10000000B	; DRIVE 3
                
                ;  HEATH EXTENSIONS
 0060 =         DPEH37	EQU	01100000B	; H37
 0008 =         DPEHL	EQU	8		; LENGTH OF HEATH EXTENSION
                
                ; MODE BYTES
 0004 =         MOD48RO EQU	00000100B	; BIT 2 -- 48 TPI MEDIA IN 96 TPI DRIVE (R/O)
 0040 =         MODEDD	EQU	01000000B	; BIT 6 -- 0=SINGLE DENSITY 1=DOUBLE
 0001 =         MODE2S	EQU	00000001B	; BIT 0 -- 0=SINGLE DENSITY 1=DOUBLE
                
                ;  DISK LABEL DEFINITIONS
 0000 =         LABVER	EQU	0		; CURRENT FORM # FOR LABEL
 0000 =         LABBUF	EQU	0		; SLOT FOR JUMP INSTRUCTION AROUND LABEL
 0004 =         LABEL	EQU	LABBUF+4
 0004 =         LABTYP	EQU	LABEL+0 	; SLOT FOR LABEL TYPE
 0005 =         LABHTH	EQU	LABTYP+1	; SLOT FOR HEATH EXTENSIONS TO DPE
 000D =         LABDPB	EQU	LABHTH+DPEHL	; SLOT FOR DISK PARAMETER BLOCK
 001C =         LABCS	EQU	LABDPB+15	; CHECKSUM
 0019 =         LABLEN	EQU	LABCS-LABEL+1	; LABEL LENGTH
                
                ;  MISCELLANEOUS VALUES
 0014 =         FDHDD	EQU	20
 060F =         DELAY37 EQU	6*256+15	; DESELECT AND MOTOR TURN OFF DELAY
 0020 =         H37VEC	EQU	8*4		; LEVEL 4 INTERRUPT
 0023 =         DLYMO37 EQU	H37VEC+3	; MOTOR TURN OFF DELAY COUNTER
 0025 =         H37CTL	EQU	H37VEC+5	; H37 CONTROL REGISTER IMAGE
                
 00F2 =         PORT	EQU	0F2H		; Z89 INTERRUPT CONTROL
                
 0004 =         MOD48RO EQU	00000100B	; 48 TPI DISK IN 96 TPI DRIVE (R/O)
 0040 =         MODEDD	EQU	01000000B	; DOUBLE DENSITY
 0019 =         LABLEN	EQU	19H		; LENGTH OF Z37 DISK LABEL
 0004 =         LABEL	EQU	04H		; POSITION OF LABEL IN SECTOR 0
 0005 =         LABHTH	EQU	05H		; START OF "HEATH EXTENSION" IN SECTOR 0
 0001 =         MODE2S	EQU	00000001H	; DOUBLE SIDED
 000D =         LABDPB	EQU	0DH		; START OF DPB IN SECTOR 0
 0000 =         LABVER	EQU	00		; LABEL VERSION NUMBER
 0060 =         DPEH37	EQU	60H		; I.D.
                
 000B =         ?CLOCK		equ	11
 000D =         ?INT$BYTE	equ	13
                
                	cseg			; START OF MODULE
 0000 C3B700    	jmp	init
 0003 C3D400    	JMP	SEL$Z37
 0006 C31C02    	JMP	READ$Z37
                
 0009 5A38392D33	DB	'Z89-37 ',0,'Double Density Loader ',0,'3.10'
 002C 3120      	DW	VERS
 002E 24        	DB	'$'
                
 2288 =         modebt: equ	2288h
 2287 =         drvbt:	equ	2287h
                
                ; NOTE: DPH's are selected by "modebt"
 002F 0000000000DPH:	DW	0,0,0,0,DIRBUF,dpb5ssst,CSV,ALV
 003F 0000000000	DW	0,0,0,0,DIRBUF,dpb5dsst,CSV,ALV
 004F 0000000000	DW	0,0,0,0,DIRBUF,dpb5ssdt,CSV,ALV
 005F 0000000000	DW	0,0,0,0,DIRBUF,dpb5dsdt,CSV,ALV
                
                dpb5ssst:
 006F 2400      	DW	36		; SECTORS PER TRACK
 0071 040F01    	DB	4,15,1		; BSH,BSM,EXM
 0074 52005F00  	DW	83-1,96-1	; DSM-1,DRM-1
 0078 C000      	DB	11000000B,0	; AL0,AL1
 007A 18000300  	DW	24,3		; CKS,OFF
 007E 026300    	DB	00000010B,01100011B,00000000B	; MODE BYTES
                
                dpb5dsst:
 0081 2400      	DW	36		; SECTORS PER TRACK
 0083 040F01    	DB	4,15,1		; BSH,BSM,EXM
 0086 AC005F00  	DW	173-1,96-1	; DSM-1,DRM-1
 008A C000      	DB	11000000B,0	; AL0,AL1
 008C 18000300  	DW	24,3		; CKS,OFF
 0090 226300    	DB	00100010B,01100011B,00000000B	; MODE BYTES
                
                dpb5ssdt:
 0093 2400      	DW	36		; SECTORS PER TRACK
 0095 051F03    	DB	5,31,3		; BSH,BSM,EXM
 0098 55007F00  	DW	86-1,128-1	; DSM-1,DRM-1
 009C 8000      	DB	10000000B,0	; AL0,AL1
 009E 20000300  	DW	32,3		; CKS,OFF
 00A2 026B00    	DB	00000010B,01101011B,00000000B	; MODE BYTES
                
                dpb5dsdt:
 00A5 2400      	DW	36		; SECTORS PER TRACK
 00A7 051F03    	DB	5,31,3		; BSH,BSM,EXM
 00AA AF007F00  	DW	176-1,128-1	; DSM-1,DRM-1
 00AE 8000      	DB	10000000B,0	; AL0,AL1
 00B0 20000300  	DW	32,3		; CKS,OFF
 00B4 226B00    	DB	00100010B,01101011B,00000000B	; MODE BYTES
                
                INIT:
 00B7 3EC3      	MVI	A,(JMP) 	; INSTALL H37 INTERRUPT ROUTINE
 00B9 213A05    	LXI	H,H37ISR
 00BC 322000    	STA	H37VEC
 00BF 222100    	SHLD	H37VEC+1
 00C2 215805    	LXI	H,MTRDLY	; INSTALL Z37 TIME OUT ROUTINE
 00C5 220100    	SHLD	TIMEOT+1
 00C8 3EC3      	mvi	a,(JMP)
 00CA 320000    	STA	TIMEOT		; ACC. STILL CONTAINS (JMP)
 00CD 3A8722    	lda	drvbt
 00D0 320000    	sta	mixer
 00D3 C9        	RET
                
                SEL$Z37:
 00D4 AF        	XRA	A
 00D5 329805    	STA	SELERR		; NO SELECT ERROR (YET)
 00D8 328005    	STA	RDYFLG		; ASSUME DISK NOT READY 
 00DB 3A0000    	LDA	NEWDSK		; get drive select code in 'A'.
 00DE D62E      	SUI	DRIV0		; relate drive number to 0
 00E0 328905    	STA	RELDSK		; SAVE IT
 00E3 212F00    	lxi	h,dph
 00E6 3A8822    	lda	modebt
 00E9 87        	add	a
 00EA 87        	add	a
 00EB 87        	add	a
 00EC 87        	add	a	;*16
 00ED 85        	add	l
 00EE 6F        	mov	l,a
 00EF 3E00      	mvi	a,0
 00F1 8C        	adc	h
 00F2 67        	mov	h,a
 00F3 E5        	push	h
 00F4 110A00    	LXI	D,10
 00F7 19        	DAD	D		; POINT TO ADDRESS OF DPB
 00F8 CD3505    	CALL	HLIHL		; POINT TO DPB
 00FB 229A05    	SHLD	CURDPB
 00FE 110F00    	LXI	D,15
 0101 19        	DAD	D		; POINT TO MODE BYTES
 0102 228705    	SHLD	MODE		; SAVE MODE BYTE POINTER
 0105 E5        	PUSH	H
 0106 CD3901    	CALL	LOGIN		; HAS DISK BEEN LOGGED IN ?
 0109 D43F01    	CNC	PHYSEL
 010C E1        	POP	H		; GET MODE BYTE 1
 010D 23        	INX	H
 010E 3E28      	MVI	A,40		; 40 TRACKS PER SIDE
                	BIT	3,M		;  FOR SINGLE TRACK
 0110+CB5E      	DB	0CBH,3*8+M+40H
                	JRZ	STRK		;  80 FOR DOUBLE TRACK
 0112+2801      	DB	28H,STRK-$-1
 0114 87        	ADD	A
 0115 328205    STRK:	STA	TPS
                ; CALCULATE DEBLOCKING PARAMETERS
 0118 2A9A05    	LHLD	CURDPB		; GET DPB ADDRESS
 011B 23        	INX	H
 011C 23        	INX	H
 011D 23        	INX	H
 011E 7E        	MOV	A,M		; GET BLOCK MASK
 011F 328E05    	STA	BLKMSK		; SAVE IT
 0122 110A00    	LXI	D,10
 0125 19        	DAD	D
 0126 7E        	MOV	A,M		; GET TRACK OFFSET
 0127 329705    	STA	OFFSET		; SAVE IT
 012A 2A8705    	LHLD	MODE
 012D 7E        	MOV	A,M
 012E E603      	ANI	03H		; ISOLATE SECTOR SIZE BITS
 0130 329605    	STA	BLCODE		; STARE AS DEBLOCK CODE
 0133 3A8905    	LDA	RELDSK
 0136 4F        	MOV	C,A		; RESTORE PHYSICAL DRIVE #
 0137 E1        	pop	h		; SELDSK NEEDS DPH
 0138 C9        	RET
                
 0139 2A0000    LOGIN:	lhld	dlog		; CHECK FOR DISK LOGGED IN
 013C 7D        	mov	a,l
 013D 1F        	rar
 013E C9        	ret
                
 013F 2A8705    PHYSEL: LHLD	MODE		; DO WE NEED TO READ THE LABEL ?
                	BIT	4,M
 0142+CB66      	DB	0CBH,4*8+M+40H
 0144 CAD001    	JZ	PHYSEL3 	;  GO ON IF NOT
 0147 3A0000    	LDA	NEWDSK
 014A 328F05    	STA	HSTDSK
 014D AF        	XRA	A
 014E 329005    	STA	HSTTRK		; TRACK 0
 0151 329105    	STA	HSTSEC		; SECTOR 0
 0154 329905    	STA	SELOP		; FLAG A SELECT OPERATION
 0157 329C05    	STA	MODFLG		; RESET CHANGED MODE FLAG
 015A 3E05      	MVI	A,5		; 5 RETRYS FOR A SELECT OPERATION
 015C 328405    	STA	RETRYS
 015F CDB602    	CALL	READ		; TRY READING LABEL AT DENSITY
                				; CURRENTLY INDICATED IN TABLES
                	JRZ	PHYSEL1 	; BR IF SUCCESSFUL
 0162+2819      	DB	28H,PHYSEL1-$-1
 0164 3E05      	MVI	A,5		; RESET RETRYS TO 5
 0166 328405    	STA	RETRYS
 0169 329C05    	STA	MODFLG		; SET CHANGED MODE FLAG
 016C 2A8705    	LHLD	MODE
 016F 23        	INX	H		; POINT TO MODE BYTE 2
 0170 7E        	MOV	A,M		; TRY OTHER DENSITY
 0171 EE40      	XRI	MODEDD
 0173 77        	MOV	M,A
 0174 CDF204    	CALL	ON$H37		; THIS SETS DENSITY ACCORDING TO MODE BYTE
 0177 CDB602    	CALL	READ		; TRY TO READ LABEL
 017A C20A02    	JNZ	PHYSEL5 	; ERROR
 017D AF        PHYSEL1:XRA	A		; ZERO ACCUM.
 017E 0619      	MVI	B,LABLEN	; GET LENGTH OF LABEL
 0180 21A605    	LXI	H,HSTBUF+LABEL
 0183 86        CHKLAB1:ADD	M
 0184 23        	INX	H
                	DJNZ	CHKLAB1
 0185+10FC      	DB	10H,CHKLAB1-$-1
 0187 3C        	INR	A
                	JRZ	PHYSEL2 	; BR IF CORRECT CHECKSUM
 0188+2809      	DB	28H,PHYSEL2-$-1
 018A 3A9C05    	LDA	MODFLG
 018D B7        	ORA	A		; MODE BEEN CHANGED ?
 018E C20F02    	JNZ	PHYSEL6 	;  THEN ERROR
                	JR	PHYSEL3 	; OTHERWISE DONE, KEEPING OLD MODE BYTES
 0191+183D      	DB	18H,PHYSEL3-$-1
                
                PHYSEL2:
 0193 2A8705    	LHLD	MODE		; HL POINTS TO MODE BYTE
 0196 11A705    	LXI	D,HSTBUF+LABHTH ; DE POINTS TO HEATH EXTENSION IN LABEL
 0199 1A        	LDAX	D		; GET FIRST BYTE OF HEATH EXTENSION
 019A 0618      	MVI	B,00011000B	; Z37 DOUBLE DENSITY FORMAT
 019C 0E01      	MVI	C,00000001B	; 256 BYTES PER SECTOR
                	BIT	2,A		; GET EXTENDED DOUBLE DENSITY BIT
 019E+CB57      	DB	0CBH,2*8+A+40H
                	JRZ	GETSID
 01A0+2804      	DB	28H,GETSID-$-1
 01A2 0630      	MVI	B,00110000B	; Z37 EXTENDED DOUBLE DENSITY FORMAT
 01A4 0E03      	MVI	C,00000011B	; 1024 BYTES PER SECTOR
 01A6 E601      GETSID: ANI	00000001B	; GET SIDED BIT
 01A8 0F        	RRC
 01A9 0F        	RRC
 01AA 0F        	RRC			; MOVE TO BIT POSITION 5
 01AB B1        	ORA	C		; OR IN SECTOR SIZE BITS
 01AC F614      	ORI	00010100B	; OR IN OTHER Z37 RELATED BITS
 01AE 77        	MOV	M,A		; SAVE NEW MODE BYTE 1
 01AF 23        	INX	H		; POINT TO MODE BYTE 2
 01B0 0E00      	MVI	C,0		; BITS FOR SINGLE DENSITY
 01B2 1A        	LDAX	D
                	BIT	1,A		; GET DOUBLE DENSITY BIT
 01B3+CB4F      	DB	0CBH,1*8+A+40H
                	JRZ	SDEN
 01B5+2802      	DB	28H,SDEN-$-1
 01B7 0E60      	MVI	C,01100000B	; DOUBLE DENSITY
 01B9 E608      SDEN:	ANI	00001000B	; GET TRACK DENSITY BIT
 01BB B1        	ORA	C		; OR IN SECTOR SIZE BITS
 01BC 4F        	MOV	C,A
 01BD 7E        	MOV	A,M		; GET MODE BYTE 2
 01BE E603      	ANI	00000011B	; KEEP STEP RATE BITS
 01C0 B1        	ORA	C		; OR IN NEW BITS
 01C1 77        	MOV	M,A		; SAVE NEW MODE BYTE 2
 01C2 23        	INX	H		; POINT TO MODE BYTE 3
 01C3 70        	MOV	M,B		; SAVE NEW MODE BYTE 3
                	LDED	CURDPB		; GET DPB ADDRESS
 01C4+ED5B      	DB	0EDH,5BH
 01C6+9A05      	DW	CURDPB
 01C8 21AF05    	LXI	H,HSTBUF+LABDPB ; GET ADDRESS OF INFO IN LABEL
 01CB 010F00    	LXI	B,15		; COUNT TO MOVE
                	LDIR			; MOVE INFO
 01CE+EDB0      	DB	0EDH,0B0H
 01D0 CD8404    PHYSEL3:CALL	SELECT
                	JRC	PHYSEL6 	; ERROR IF NOT READY
 01D3+383A      	DB	38H,PHYSEL6-$-1
 01D5 CD2604    	CALL	HOME		;RESTORE HEAD TO TRACK 0
                	JRC	PHYSEL6
 01D8+3835      	DB	38H,PHYSEL6-$-1
 01DA 0648      	MVI	B,FDCSTI+FDFHLB ;STEP IN, NO UPDATE
 01DC CD5F04    	CALL	TYPE$I
 01DF CD5F04    	CALL	TYPE$I		;STEP IN TWICE
 01E2 3EC0      	MVI	A,FDCRDA	; READ ADDRESS
 01E4 CD6304    	CALL	PUT$I
 01E7 E618      	ANI	FDSRNF+FDSCRC
                	JRNZ	PHYSEL6
 01E9+2024      	DB	20H,PHYSEL6-$-1
 01EB 3E01      	MVI	A,FD$TS 	; SELECT SECTOR REGISTER
 01ED D379      	OUT	FD$INT
 01EF DB7A      	IN	FD$SEC
 01F1 FE02      	CPI	2
                	JRZ	PHYSEL4
 01F3+280E      	DB	28H,PHYSEL4-$-1
 01F5 FE01      	CPI	1
                	JRNZ	PHYSEL6
 01F7+2016      	DB	20H,PHYSEL6-$-1
 01F9 2A8705    	LHLD	MODE
 01FC 23        	INX	H		; MODE BYTE 2
                	BIT	3,M		; IS MODE SET TO DOUBLE TRACK ?
 01FD+CB5E      	DB	0CBH,3*8+M+40H
                	JRNZ	PHYSEL6 	; ERROR BECAUSE WRONG DPB IS INSTALLED
 01FF+200E      	DB	20H,PHYSEL6-$-1
                	SETB	4,M		; SET HALF TRACK BIT
 0201+CBE6      	DB	0CBH,4*8+M+0C0H
                PHYSEL4:			; RESTORE
 0203 CD2604    	CALL	HOME  
                	JRC	PHYSEL6
 0206+3807      	DB	38H,PHYSEL6-$-1
                	JR	PHYSEL7
 0208+180A      	DB	18H,PHYSEL7-$-1
                
 020A 3EFF      PHYSEL5:MVI	A,0FFH
 020C 328F05    	STA	HSTDSK		; FLAG BUFFER AS UNKNOWN
 020F 3E01      PHYSEL6:MVI	A,1
 0211 329805    	STA	SELERR		; FLAG A SELECT ERROR
 0214 3EFF      PHYSEL7:MVI	A,0FFH
 0216 329905    	STA	SELOP		; SELECT OPERATION IS OVER
 0219 C34A03    	JMP	DONE
                
                READ$Z37:
 021C 3A9805    	LDA	SELERR		; WAS THERE AN ERROR ON SELECT ?
 021F B7        	ORA	A
 0220 C0        	RNZ
 0221 3E15      	MVI	A,21		; 21 RETRYS FOR A READ/WRITE OPERATION
 0223 328405    	STA	RETRYS
 0226 D5        	PUSH	D		; TEMPORARILY SAVE RECORD NUMBER
 0227 010300    	LXI	B,3
 022A 210000    	LXI	H,NEWDSK
 022D 119205    	LXI	D,REQDSK
                	LDIR
 0230+EDB0      	DB	0EDH,0B0H
 0232 D1        	POP	D		; RESTORE RECORD NUMBER
 0233 AF        	XRA	A		; CLEAR CARRY
 0234 4F        	MOV	C,A		; CALCULATE PHYSICAL SECTOR
 0235 3A9605    	LDA	BLCODE
 0238 47        	MOV	B,A
 0239 3A0000    	LDA	NEWSEC
 023C 05        DBLOK1: DCR	B
 023D FA4502    	JM	DBLOK2
 0240 1F        	RAR
                	RARR	C
 0241+CB19      	DB	0CBH, 18H + C
                	JR	DBLOK1
 0243+18F7      	DB	18H,DBLOK1-$-1
 0245 329405    DBLOK2: STA	REQSEC		; SAVE IT
 0248 3A9605    	LDA	BLCODE		; CALCULATE BLKSEC
 024B 3D        DBLOK3: DCR	A
 024C FA5302    	JM	DBLOK4
                	RLCR	C
 024F+CB01      	DB	0CBH, 00H + C
                	JR	DBLOK3
 0251+18F8      	DB	18H,DBLOK3-$-1
 0253 79        DBLOK4: MOV	A,C
 0254 329505    	STA	BLKSEC		; STORE IT
 0257 3C        	INR	A		; NON-ZERO VALUE TO ACC.
 0258 328C05    	STA	RD$FLAG 	; FLAG A PRE-READ
 025B AF        	XRA	A		; NO LONGER WRITING AN UNALLOCATED BLOCK
 025C 328D05    	STA	UNALLOC
 025F 210000    	LXI	H,NEWTRK
 0262 3A9705    	LDA	OFFSET
 0265 BE        	CMP	M		; IS IT THE DIRECTORY TRACK ?
                	JRNZ	CHKBUF
 0266+2005      	DB	20H,CHKBUF-$-1
 0268 23        	INX	H
 0269 7E        	MOV	A,M
 026A B7        	ORA	A		; FIRST SECTOR OF DIRECTORY ?
                	JRZ	READIT 
 026B+2812      	DB	28H,READIT-$-1
 026D 219205    CHKBUF: LXI	H,REQDSK
 0270 118F05    	LXI	D,HSTDSK
 0273 0603      	MVI	B,3
 0275 1A        CHKNXT: LDAX	D
 0276 BE        	CMP	M
                	JRNZ	READIT
 0277+2006      	DB	20H,READIT-$-1
 0279 23        	INX	H
 027A 13        	INX	D
                	DJNZ	CHKNXT
 027B+10F8      	DB	10H,CHKNXT-$-1
                	JR	NOREAD		; THEN NO NEED TO PRE-READ
 027D+1812      	DB	18H,NOREAD-$-1
                READIT:
 027F 118F05    	LXI	D,HSTDSK	; SET UP NEW BUFFER PARAMETERS
 0282 219205    	LXI	H,REQDSK
 0285 010300    	LXI	B,3
                	LDIR
 0288+EDB0      	DB	0EDH,0B0H
 028A 3A8C05    	LDA	RD$FLAG 	; DO WE NEED TO PRE-READ ?
 028D B7        	ORA	A
 028E C4A902    	CNZ	RD$SEC		; READ THE SECTOR
 0291 21A205    NOREAD: LXI	H,HSTBUF	; POINT TO START OF SECTOR BUFFER
 0294 018000    	LXI	B,128
 0297 3A9505    	LDA	BLKSEC		; POINT TO LOCATION OF CORRECT LOGICAL SECTOR
 029A 3D        MOVIT1: DCR	A
 029B FAA102    	JM	MOVIT2
 029E 09        	DAD	B
                	JR	MOVIT1
 029F+18F9      	DB	18H,MOVIT1-$-1
                MOVIT2: LDED	DMAA		; POINT TO DMA
 02A1+ED5B      	DB	0EDH,5BH
 02A3+0000      	DW	DMAA
                	LDIR			; MOVE IT
 02A5+EDB0      	DB	0EDH,0B0H
 02A7 AF        	XRA	A		; FLAG NO ERROR
 02A8 C9        	RET			; RETURN TO BDOS (OR RESEL ROUTINE)
                
 02A9 CDB602    RD$SEC: CALL	READ		; READ A PHYSICAL SECTOR
 02AC C8        	RZ			; RETURN IF SUCCESSFUL
 02AD 3EFF      	MVI	A,0FFH		; FLAG BUFFER AS UNKNOWN
 02AF 328F05    	STA	HSTDSK
 02B2 D1        	POP	D		; THROW AWAY TOP OF STACK
 02B3 3E01      	MVI	A,1		; SIGNAL ERROR TO BDOS
 02B5 C9        	RET			; RETURN TO BDOS (OR RESEL ROUTINE)
                
 02B6 CD6103    READ:	CALL	ACCESS$R	; START DRIVE AND STEP TO PROPER TRACK
 02B9 DA4803    	JC	ERROR
 02BC 0688      	MVI	B,FDCRDS+FDFSLF ; READ COMMAND W/O SIDE SELECT
 02BE 3EA2      	MVI	A,0A2H		; INI INSTRUCTION (2ND BYTE)
 02C0 325E03    	STA	FIX1+1		;setup physical routines for read/write
                RETRY:						     
 02C3 C5        	PUSH	B		; save registers
 02C4 D5        	PUSH	D
 02C5 3A0D00    	LDA	?INT$BYTE	; get interrupt byte
 02C8 E6FD      	ANI	11111101B	; Turn 2 millisecond clock off
 02CA D3F2      	OUT	PORT		; to prevent interupts from causing lost-data
                
 02CC 3E01      	MVI	A,FD$TS 	; SELECT SECTOR REGISTER
 02CE D379      	OUT	FD$INT
 02D0 3A9105    	LDA	HSTSEC		; MAKE SECTOR 1,2,3,...,SPT
 02D3 3C        	INR	A
 02D4 D37A      	OUT	FD$SEC		; SEND SECTOR NUMBER TO CONTROLLER
 02D6 3A8B05    	LDA	SIDE		; get the side select bits
 02D9 B0        	ORA	B		; merge COMMAND and SIDE SELECT bits
 02DA 47        	MOV	B,A
 02DB 3A2500    	LDA	H37CTL		; TURN ON DRQ AND IRQ
 02DE F603      	ORI	CONDRQ+CONIRQ
 02E0 D378      	OUT	FD$CON
 02E2 3E00      	MVI	A,FD$CD 	; ACCESS C/D REGS.
 02E4 D379      	OUT	FD$INT
 02E6 78        	MOV	A,B		; GET COMMAND BACK IN ACC.
 02E7 21A205    	LXI	H,HSTBUF	; DATA BUFFER ADDRESS
 02EA 0E7B      	MVI	C,FD$DAT	; DATA PORT TO REG. C
 02EC CD5903    	CALL	IO$1024 	; TRANSFER THE SECTOR
 02EF 320000    	STA	DSKSTA		; save status of transfer
 02F2 3A2500    	LDA	H37CTL	  
 02F5 D378      	OUT	FD$CON		; TURN OFF INTERRUPTS
 02F7 3ED0      	MVI	A,FDCFI
 02F9 D37A      	OUT	FD$CMD		; FORCE TYPE I STATUS
                
 02FB 3A0D00    	LDA	?INT$BYTE	; get interrupt byte
 02FE D3F2      	OUT	PORT		; CLOCK ON AGAIN
                
 0300 AF        	XRA	A		; CLEAR CARRY FOR DSBC
 0301 11A205    	LXI	D,HSTBUF
                	DSBC	D		; HL NOW CONTAINS # OF BYTES TRANSFERRED
 0304+ED52      	DB	0EDH,D*8+42H
 0306 3A0000    	LDA	DSKSTA		; check for successful transfer
 0309 E6BF      	ANI	10111111B
                	JRNZ	IOERR		; RETRY IF ERROR
 030B+2015      	DB	20H,IOERR-$-1
 030D 3A9905    	LDA	SELOP		; IS THIS A SELECT OPERATION ?
 0310 B7        	ORA	A
                	JRZ	POPRET		; THEN DON'T CHECK SECTOR SIZE
 0311+2809      	DB	28H,POPRET-$-1
 0313 3A9605    	LDA	BLCODE		; CHECK IF CORRECT NUMBER OF BYTES TRANSFERRED
 0316 FE03      	CPI	3
                	JRNZ	NOTED		; BLCODE=3 => 1024 BYTE SECTOR EXPECTED
 0318+2001      	DB	20H,NOTED-$-1
 031A 3C        	INR	A		; INCREMENT BECAUSE (H) FOR 1024 IS 4
 031B BC        NOTED:	CMP	H		; COMPARE TO EXPECTED SIZE
 031C D1        POPRET: POP	D
 031D C1        	POP	B
                	JRZ	DONE		; DONE IF CORRECT
 031E+282A      	DB	28H,DONE-$-1
                	JR	TRYAGN		; RETRY IF INCORRECT
 0320+1805      	DB	18H,TRYAGN-$-1
 0322 D1        IOERR:	POP	D
 0323 C1        	POP	B
 0324 DA4803    	JC	ERROR		; ERROR IF NO READY SIGNAL
 0327 218405    TRYAGN: LXI	H,RETRYS	; decrement retry count
 032A 35        	DCR	M
 032B CA4803    	JZ	ERROR		; NO MORE RETRIES
 032E 7E        	MOV	A,M
 032F FE0A      	CPI	10
 0331 D2C302    	JNC	RETRY		; LESS THAN TEN RETRYS LEFT => STEP HEAD
 0334 3A9905    	LDA	SELOP
 0337 B7        	ORA	A
 0338 CAC302    	JZ	RETRY		; DO NOT STEP HEAD IF SELECT OPERATION
 033B C5        	PUSH	B		; SAVE REGISTERS
 033C D5        	PUSH	D
 033D CD1704    	CALL	STEPIN		; STEP IN COMMAND
 0340 CD6503    	CALL	SEEK		; SEEK WILL REPOSITION HEAD
 0343 D1        	POP	D		; RESTORE REGISTERS
 0344 C1        	POP	B
 0345 C3C302    	JMP	RETRY		; TRY AGAIN
                
 0348 AF        ERROR:	XRA	A		; PSW/Z MUST BE RESET TO INDICATE ERROR
 0349 3C        	INR	A
 034A F5        DONE:	PUSH	PSW		; SAVE ERROR STATUS
 034B 3A9905    	LDA	SELOP		; CHECK FOR SELECT OPERATION
 034E B7        	ORA	A
                	JRZ	RETRN
 034F+2806      	DB	28H,RETRN-$-1
 0351 210F06    	LXI	H,DELAY37	; SET DESELECT AND MOTOR TURN OFF DELAYS
 0354 222300    	SHLD	DLYMO$37	;  UNLESS SELECT OPERATION IS IN PROGRESS
 0357 F1        RETRN:	POP	PSW		; RECALL ERROR STATUS
 0358 C9        	RET
                
                IO$1024:
 0359 D37A      	OUT	FD$CMD		; send command to controller
 035B FB        	EI			; turn on interrupts
 035C 76        RW1	HLT			; WAIT FOR DRQ
                FIX1	INI			; transfer byte (INI becomes OUTI for writes)
 035D+EDA2      	DB	0EDH,0A2H
                	JR	RW1		; loop until transfer complete.
 035F+18FB      	DB	18H,RW1-$-1
                				; RETURN DONE BY INTERRUPT ROUTINE
                
                ACCESS$R:
 0361 CD8404    	CALL	SELECT		; SELECT DRIVE
 0364 D8        	RC			; ERROR IF DRIVE NOT READY
 0365 3A9005    SEEK:	LDA	HSTTRK		; GET REQUESTED TRACK
 0368 0600      	MVI	B,0		; SET SIDE VALUE FOR SIDE 0
 036A 2A8705    	LHLD	MODE
                	BIT	2,M
 036D+CB56      	DB	0CBH,2*8+M+40H
                	JRNZ	CONZEN		; ALTERNATE CONVERT PROCEDURE FOR ZENITH DISKS
 036F+200E      	DB	20H,CONZEN-$-1
 0371 218205    	LXI	H,TPS		; GET TRACKS PER SIDE
 0374 4E        	MOV	C,M
 0375 B9        	CMP	C		; COMPARE REQUESTED TRACK WITH TRACKS-PER-SIDE
                	JRC	SIDE0		; NO CONVERSION IF ON FIRST SIDE
 0376+3811      	DB	38H,SIDE0-$-1
 0378 2F        	CMA			; NEGATE LOGICAL TRACK NUMBER
 0379 3C        	INR	A
 037A 81        	ADD	C
 037B 81        	ADD	C		; ADD TOT TRACKS ON DISK SURFACES (2*NUM$TRKS)
 037C 3D        	DCR	A		; SUBTRACT 1 BECAUSE TRACKS START AT 0
                	JR	SIDE1
 037D+1808      	DB	18H,SIDE1-$-1
                CONZEN: BIT	5,M		; CHECK SIDED BIT
 037F+CB6E      	DB	0CBH,5*8+M+40H
                	JRZ	SIDE0		; NO CONVERT IF SINGLE SIDED
 0381+2806      	DB	28H,SIDE0-$-1
 0383 A7        	ANA	A		; TO CLEAR CARRY
 0384 1F        	RAR			; DIVIDE BY 2 TO GET REAL TRACK NUMBER
                	JRNC	SIDE0
 0385+3002      	DB	30H,SIDE0-$-1
 0387 0602      SIDE1:	MVI	B,FDFSS1	; set side value for 2nd side	 
                
 0389 4F        SIDE0:	MOV	C,A		; store track number
 038A 78        	MOV	A,B		
 038B 328B05    	STA	SIDE		; save side value for read/write command
 038E 218505    	LXI	H,SEKERR	; initialize seek error counters
 0391 3604      	MVI	M,4		; 4 ERRORS ON SEEK IS FATAL
 0393 23        	INX	H
 0394 360A      	MVI	M,10		; RESTORE once, then 9 errors are fatal
 0396 79        RETRS:	MOV	A,C		; get track number back
 0397 B7        	ORA	A		; FORCES "RESTORE" IF "seek to track 0"
 0398 CA2604    	JZ	HOME		;RESTORE HEAD TO TRACK 0
 039B 2A8705    	LHLD	MODE		;TRACK NUMBER IN (A) MUST BE PRESERVED
 039E 23        	INX	H		; MODE BYTE 2
 039F 66        	MOV	H,M		; BIT 4 IS THE HALF-TRACK OPTION
 03A0 3E01      	MVI	A,FD$TS 	; SELECT TRACK REGISTER
 03A2 D379      	OUT	FD$INT
 03A4 DB7B      	IN	FD$TRK		; GET CURRENT HEAD POSITION,
 03A6 91        	SUB	C		;SEE HOW FAR WE WANT TO GO.
 03A7 C8        	RZ			       ; IF ZERO TRACKS TO STEP, WERE FINISHED
 03A8 0678      	MVI	B,FDCSTO+FDFHLB+FDFUTR ; ASSUME STEP-OUT + UPDATE + HEADLOAD
                	JRNC	STOUT		       ; ASSUMPTION WAS CORRECT...
 03AA+3004      	DB	30H,STOUT-$-1
 03AC 0658      	MVI	B,FDCSTI+FDFHLB+FDFUTR ; ELSE MUST BE STEP-IN
                	NEG			       ; AND NUMBER OF TRACKS WOULD BE NEGATIVE
 03AE+ED44      	DB	0EDH,44H
 03B0 6F        STOUT:	MOV	L,A		; COUNTER FOR STEPPING
                SEEK5:	BIT	4,H		; CHECK FOR 48 TPI DISK IN 96 TPI DRIVE
 03B1+CB64      	DB	0CBH,4*8+H+40H
                	JRZ	NOTHT
 03B3+2809      	DB	28H,NOTHT-$-1
                	RES	4,B		; SELECT NO-UPDATE
 03B5+CBA0      	DB	0CBH,4*8+B+80H
 03B7 CD5F04    	CALL	TYPE$I		; STEP HEAD
 03BA E604      	ANI	FDSTK0		; DID THIS STEP PUT US AT TRACK 0 ?
                	JRNZ	TRK0ERR
 03BC+203A      	DB	20H,TRK0ERR-$-1
                NOTHT:	SETB	4,B		; SELECT UPDATE TO TRACK-REG
 03BE+CBE0      	DB	0CBH,4*8+B+0C0H
 03C0 CD5F04    	CALL	TYPE$I		; STEP HEAD
 03C3 E604      	ANI	FDSTK0		; DID THIS STEP PUT US AT TRACK 0 ?
                	JRNZ	TRK0ERR
 03C5+2031      	DB	20H,TRK0ERR-$-1
 03C7 2D        	DCR	L
                	JRNZ	SEEK5
 03C8+20E7      	DB	20H,SEEK5-$-1
 03CA 3E01      	MVI	A,FD$TS 	; SELECT SECTOR REGISTER
 03CC D379      	OUT	FD$INT
 03CE DB7A      	IN	FD$SEC		; SAVE CURRENT SECTOR NUMBER
 03D0 6F        	MOV	L,A
 03D1 CD5804    	CALL	READ$ADDR	; GET ACTUAL TRACK UNDER HEAD (IN SECTOR REG)
 03D4 3E01      	MVI	A,FD$TS 	; SECLECT SECTOR REGISTER
 03D6 D379      	OUT	FD$INT
 03D8 DB7A      	IN	FD$SEC		; GET TRACK NUMBER FROM MEDIA
 03DA 67        	MOV	H,A
 03DB 7D        	MOV	A,L
 03DC D37A      	OUT	FD$SEC		; RESTORE SECTOR NUMBER
 03DE 3A0000    	LDA	DSKSTA		; GET TRUE ERROR STATUS OF READ-ADDRESS
 03E1 E618      	ANI	FDSRNF+FDSCRC	; CRC ERROR + REC-NOT-FOUND
 03E3 7C        	MOV	A,H		; ACTUAL TRACK FROM READ-ADDRESS
 03E4 218505    	LXI	H,SEKERR	; POINT TO ERROR COUNTERS
                	JRNZ	RESTR0
 03E7+2015      	DB	20H,RESTR0-$-1
 03E9 B9        	CMP	C		; (C) MUST STILL BE VALID DEST. TRACK
 03EA C8        	RZ	;NO ERRORS
 03EB 35        RTS00:	DCR	M		; SHOULD WE KEEP TRYING ?
 03EC 37        	STC
 03ED C8        	RZ			; NO, WE'VE TRYED TOO MUCH
 03EE 47        	MOV	B,A
 03EF 3E01      	MVI	A,FD$TS 	; SELECT TRACK REGISTER
 03F1 D379      	OUT	FD$INT
 03F3 78        	MOV	A,B
 03F4 D37B      	OUT	FD$TRK		; re-define head position accordingly
                	JR	RETRS		; RETRY SEEK
 03F6+189E      	DB	18H,RETRS-$-1
                
                TRK0ERR:
 03F8 AF        	XRA	A
 03F9 218505    	LXI	H,SEKERR
                	JR	RTS00
 03FC+18ED      	DB	18H,RTS00-$-1
                
 03FE 23        RESTR0: INX	H		; RESTORE ERROR COUNT
 03FF 35        	DCR	M
 0400 37        	STC
 0401 C8        	RZ			; If count 0, return with Carry set.
 0402 7E        	MOV	A,M
 0403 FE09      	CPI	9
                	JRNC	RESTR1		; RESTORE ONLY FIRST TIME
 0405+3005      	DB	30H,RESTR1-$-1
 0407 CD1704    	CALL	STEPIN		; OTHERWISE STEP HEAD IN 1 TRACK
                	JR	RETRS
 040A+188A      	DB	18H,RETRS-$-1
                RESTR1: 			; RESTORE HEAD TO TRACK 0
 040C 3E03      	MVI	A,00000011B
 040E 328305    	STA	STEPRA		; RETRY WITH MAXIMUM STEP RATE
 0411 CD2604    	CALL	HOME
 0414 C39603    	JMP	RETRS		; RETRY SEEK
                
 0417 2A8705    STEPIN: LHLD	MODE
 041A 23        	INX	H		; MODE BYTE 2
                	BIT	4,M		; CHECK HALF TRACK BIT
 041B+CB66      	DB	0CBH,4*8+M+40H
 041D 0648      	MVI	B,FDC$STI+FDFHLB; STEP IN WITHOUT UPDATE
 041F C45F04    	CNZ	TYPE$I		; STEP A SECOND TIME (W/O UPDATE) FOR HALF-TRK
 0422 0658      	MVI	B,FDC$STI+FDFHLB+FDFUTR; STEP IN AND UPDATE TRACK REGISTER
                	JR	TYPE$I
 0424+1839      	DB	18H,TYPE$I-$-1
                
 0426 3E00      HOME:	MVI	A,FD$CD 	; SELECT STATUS REGISTER
 0428 D379      	OUT	FD$INT
 042A DB7A      	IN	FD$STA		; GET STATUS
 042C 47        	MOV	B,A
 042D 3E01      	MVI	A,FD$TS 	; SELECT TRACK REGISTER
 042F D379      	OUT	FD$INT
 0431 78        	MOV	A,B
 0432 E604      	ANI	FDSTK0		;TEST TRACK ZERO SENSOR,
                	JRNZ	@TRK0		;SKIP ROUTINE IF WE'RE ALREADY AT TRACK 0.
 0434+201D      	DB	20H,@TRK0-$-1
 0436 DB7B      	IN	FD$TRK		;DOES THE SYSTEM THINK WE'RE AT TRACK 0 ??
 0438 B7        	ORA	A
                	JRNZ	HOME1	;IF IT DOESN'T, ITS PROBEBLY ALRIGHT TO GIVE "RESTORE"
 0439+200E      	DB	20H,HOME1-$-1
 043B 2E06      	MVI	L,6 ;(6 TRKS)	;ELSE WE COULD BE IN "NEGATIVE TRACKS" SO...
 043D 0648      	MVI	B,FDCSTI+FDFHLB ;WE MUST STEP-IN A FEW TRACKS, LOOKING FOR THE
 043F CD5F04    HOME0:	CALL	TYPE$I		;TRACK ZERO SIGNAL.
 0442 E604      	ANI	FDSTK0
                	JRNZ	@TRK0
 0444+200D      	DB	20H,@TRK0-$-1
 0446 2D        	DCR	L
                	JRNZ	HOME0
 0447+20F6      	DB	20H,HOME0-$-1
 0449 0608      HOME1:	MVI	B,FDCRST+FDFHLB ;RESTORE COMMAND, WITH HEADLOAD
 044B CD5F04    	CALL	TYPE$I
 044E EE04      	XRI	FDSTK0		;TEST TRACK-0 SIGNAL
 0450 1F        	RAR
 0451 1F        	RAR
 0452 1F        	RAR	;[CY] = 1 IF NOT AT TRACK 0
 0453 3E00      @TRK0:	MVI	A,0
 0455 D37B      	OUT	FD$TRK		;MAKE SURE EVERYONE KNOWS WERE AT TRACK 0
 0457 C9        	RET
                
                READ$ADDR:
 0458 3A8B05    	LDA	SIDE
 045B F6C4      	ORI	FDCRDA+FDFDLF	; READ-ADDRESS COMMAND WITH SETTLE DELAY
                	JR	PUT$I		; IGNORE DATA (AND DATA-LOST ERROR)
 045D+1804      	DB	18H,PUT$I-$-1
                
 045F 3A8305    TYPE$I: LDA	STEPRA
 0462 B0        	ORA	B
 0463 47        PUT$I:	MOV	B,A
 0464 3E00      	MVI	A,FD$CD 	; SELECT COMMAND/STATUS PORT
 0466 D379      	OUT	FD$INT
 0468 78        	MOV	A,B
 0469 F3        	DI			; prevent interrupt routines
 046A D37A      	OUT	FD$CMD		; SEND command TO CONTROLLER
 046C DB7A      WB:	IN	FD$STA		; WAIT FOR BUSY SIGNAL
 046E 1F        	RAR			; TO COME UP
                	JRNC	WB
 046F+30FB      	DB	30H,WB-$-1
 0471 DB7A      WNB:	IN	FD$STA		; poll controller for function-complete
 0473 1F        	RAR			; Busy?
                	JRC	WNB		; wait until not busy.
 0474+38FB      	DB	38H,WNB-$-1
 0476 17        	RAL
 0477 320000    	STA	DSKSTA		;SAVE TYPE$II (III) STATUS FOR ERROR DETECTION.
 047A 3ED0      	MVI	A,FDCFI 	;TERMINATE COMMAND (RESET STATUS TO TYPE 1)
 047C D37A      	OUT	FD$CMD 
 047E FB        	EI			; re-enable interrupts.
 047F DB7B      	IN	FD$DAT
 0481 DB7A      	IN	FD$STA		; MUST RETURN WITH STATUS IN ACC.
 0483 C9        	RET
                
 0484 3A8005    SELECT: LDA	RDYFLG		; NEED TO CHECK FOR READY ?
 0487 B7        	ORA	A
 0488 CCBA04    	CZ	CHKRDY
 048B D8        	RC			; ERROR IF NOT READY
 048C 3EFF      	MVI	A,0FFH
 048E 328005    	STA	RDYFLG		; FLAG DRIVE AS READY
 0491 2A8705    	LHLD	MODE		; point to drive mode byte table
 0494 23        	INX	H
 0495 3A8905    	LDA	RELDSK
 0498 4F        	MOV	C,A
 0499 7E        	MOV	A,M
 049A E603      	ANI	00000011B	; setup steprate bits for seek-restore commands
 049C 328305    	STA	STEPRA		; RATE FOR SUBSEQUENT SEEK/RESTORE
 049F 218A05    	LXI	H,LOGDSK	; save position (track) of current drive
 04A2 5E        	MOV	E,M		; in 'trks' array addressed by contents of
 04A3 71        	MOV	M,C		; location 'logdsk'.
 04A4 0600      	MVI	B,0
 04A6 50        	MOV	D,B
 04A7 219D05    	LXI	H,TRKS
 04AA 19        	DAD	D
 04AB 3E01      	MVI	A,FD$TS 	; SELECT TRACK REGISTER
 04AD D379      	OUT	FD$INT
 04AF DB7B      	IN	FD$TRK
 04B1 77        	MOV	M,A		; SAVE CURRENT TRACK #
 04B2 219D05    	LXI	H,TRKS		; identify position (track) of requested drive
 04B5 09        	DAD	B		; from 'trks' array addressed by new 'logdsk'.
 04B6 7E        	MOV	A,M
 04B7 D37B      	OUT	FD$TRK		; set track number
 04B9 C9        	RET
                
 04BA CDF204    CHKRDY: CALL	ON$H37		; TURN ON DRIVE
 04BD CD4905    	CALL	WAIT		; WAIT 'TIL UP TO SPEED
 04C0 3E00      	MVI	A,FD$CD 	; ACCESS C/D REGS
 04C2 D379      	OUT	FD$INT
 04C4 3ED0      	MVI	A,FDCFI+FDFINI	; FORCE TYPE I STATUS
 04C6 D37A      	OUT	FD$CMD
 04C8 3E0A      	MVI	A,10
                RDYH37B:
 04CA 3D        	DCR	A		; DELAY A WHILE TO LET CONTROLLER SETTLE
                	JRNZ	RDYH37B
 04CB+20FD      	DB	20H,RDYH37B-$-1
 04CD FB        	EI
 04CE 210B00    	LXI	H,?CLOCK	; GET TIME VALUE
 04D1 3EC8      	MVI	A,200
 04D3 86        	ADD	M
 04D4 47        	MOV	B,A		; (B) = TIME VALUE
 04D5 0E00      	MVI	C,0		; (C) = HOLE COUNTER
 04D7 51        	MOV	D,C		; (D) = INIT HOLE STATUS TO NO HOLE
                RDYH37C:
 04D8 DB7A      	IN	FD$STA		; GET HOLE STATUS
 04DA E602      	ANI	FDSIND
 04DC BA        	CMP	D		; CHECK IF CHANGE IN STATUS
                	JRZ	RDYH37D 	; BR IF NO CHANGE
 04DD+2807      	DB	28H,RDYH37D-$-1
 04DF 57        	MOV	D,A		; SAVE NEW STATUS
 04E0 0C        	INR	C		; COUNT TRANSITION
 04E1 3E14      	MVI	A,FDHDD
                RDYH37C1:
 04E3 3D        	DCR	A
                	JRNZ	RDYH37C1
 04E4+20FD      	DB	20H,RDYH37C1-$-1
                RDYH37D:
 04E6 78        	MOV	A,B		; CHECK IF TIME UP
 04E7 BE        	CMP	M
                	JRNZ	RDYH37C 	; BR IF NOT
 04E8+20EE      	DB	20H,RDYH37C-$-1
 04EA 79        	MOV	A,C		; TIME UP -- CHECK # OF HOLES
 04EB FE02      	CPI	1*2
 04ED D8        	RC			; IF < 1 THEN ERROR
 04EE FE07      	CPI	3*2+1		; IF <=3 THEN OK
 04F0 3F        	CMC
 04F1 C9        	RET 
                
                ON$H37:
 04F2 210000    	LXI	H,0
 04F5 222300    	SHLD	DLYMO37
 04F8 3A8905    	LDA	RELDSK
 04FB 0604      	MVI	B,4
 04FD 0E10      	MVI	C,CONDS0	; START WITH DRIVE 0 BIT POSITION
 04FF 3D        DRVL:	DCR	A
 0500 FA0905    	JM	GDRIVE
                	RLCR	C		; DRIVE SELECT CODE IN REG. C
 0503+CB01      	DB	0CBH, 00H + C
                	DJNZ	DRVL
 0505+10F8      	DB	10H,DRVL-$-1
 0507 0E00      	MVI	C,0		; NO DRIVE SELECTED
 0509 2A8705    GDRIVE: LHLD	MODE
 050C 23        	INX	H
 050D 7E        	MOV	A,M
 050E E640      	ANI	MODEDD
                	JRZ	ONH37A		; BR IF SINGLE
 0510+2802      	DB	28H,ONH37A-$-1
 0512 3E04      	MVI	A,CONMFM	; SET DOUBLE DENSITY CONTROL FLAG
 0514 B1        ONH37A: ORA	C		; OR IN UNIT SELECT
 0515 F608      	ORI	CONMO		; OR THE MOTOR ON
 0517 D378      	OUT	FD$CON
 0519 47        	MOV	B,A
 051A 212500    	LXI	H,H37CTL	; GET CURRENT VALUE OF THE CONTROL PROT
 051D 7E        	MOV	A,M
 051E E608      	ANI	CONMO		; IF THE MOTOR WAS ON
                	JRNZ	ONH37B		; THEN WE DON'T HAVE TO WAIT FOR IT TO COME UP
 0520+2004      	DB	20H,ONH37B-$-1
 0522 3EFB      	MVI	A,(1000+3)/4+1	; NORMAL TIMING (APPROX 1 SECOND)
                	JR	ONH37C
 0524+180A      	DB	18H,ONH37C-$-1
 0526 7E        ONH37B	MOV	A,M		; GET THE OLD VALUE OF THE CONTROL PORT
 0527 E6F0      	ANI	CONDS0+CONDS1+CONDS2+CONDS3	; CHECK SELECT DRIVE(S)
 0529 A0        	ANA	B		; CHECK TO SEE IF SAME HEAD ALREADY DOWN
 052A 3E00      	MVI	A,0
                	JRNZ	ONH37C		; YES, ALREADY LOADED, NO DELAY
 052C+2002      	DB	20H,ONH37C-$-1
 052E 3E0E      	MVI	A,(50+3)/4+1	; MUST DELAY FOR HEAD LOAD
 0530 328105    ONH37C: STA	DLYW
 0533 70        	MOV	M,B		; SET NEW VALUE OF CONTROL PORT
 0534 C9        	RET
                
 0535 7E        HLIHL:	MOV	A,M		; LOAD HL INDIRECT THRU HL
 0536 23        	INX	H
 0537 66        	MOV	H,M
 0538 6F        	MOV	L,A
 0539 C9        	RET
                
 053A 3E0A      H37ISR: MVI	A,10
 053C 3D        H37ISR1:DCR	A		; DELAY A WHILE TO LET STATUS SETTLE
                	JRNZ	H37ISR1
 053D+20FD      	DB	20H,H37ISR1-$-1
 053F 3E00      	MVI	A,FD$CD 	; SELECT STATUS REGISTER
 0541 D379      	OUT	FD$INT
 0543 DB7A      	IN	FD$STA		; Clear interrupt request
 0545 33        	INX	SP		; TERMINATE SUB-ROUTINE by eliminating the
 0546 33        	INX	SP		; return address PUSHed by the interrupt.
 0547 FB        	EI			; turn interrupts back on.
 0548 C9        	RET			; end
                
 0549 3A0B00    WAIT:	LDA	?CLOCK
 054C 1F        	RAR			; IS IT EVEN, MAKING 4MS BIG TICKS ?
                	JRC	WAIT
 054D+38FA      	DB	38H,WAIT-$-1
 054F 218105    	LXI	H,DLYW		; CHECK WAIT TIMER
 0552 7E        	MOV	A,M		;  AND DECREMENT IF IT IS NOT ALREADY ZERO
 0553 B7        	ORA	A
 0554 C8        	RZ
 0555 35        	DCR	M
                	JR	WAIT
 0556+18F1      	DB	18H,WAIT-$-1
                
                MTR$DLY: 
 0558 212300    	LXI	H,DLYMO$37	; POINTER TO MOTOR DELAY TIME FOR H37
 055B 7E        	MOV	A,M
 055C B7        	ORA	A		; IF ALREADY ZERO
 055D C8        	RZ
 055E 35        	DCR	M		; DECREMENT TIMER
                	JRNZ	TIME$1		;   IF IT HAS NOT TIMED OUT CHECK HEADS
 055F+200A      	DB	20H,TIME$1-$-1
 0561 3A2500    	LDA	H37CTL		; GET THE CURRENT VALUE OF THE CONTROL PORT
 0564 E6F7      	ANI	0FFH-CONMO	; TURN OFF MOTOR
 0566 322500    	STA	H37CTL
 0569 D378      	OUT	FD$CON
 056B 23        TIME$1: INX	H		; POINT TO THE HEAD DELAY FOR H37
 056C 7E        	MOV	A,M
 056D B7        	ORA	A		; IF ALREADY ZERO
 056E C8        	RZ			;   THEN DON'T DECREMENT
 056F 35        	DCR	M		; DECREMENT TIMER
 0570 C0        	RNZ			;   IF IT HAS NOT TIMED OUT THEN SKIP
 0571 3A2500    	LDA	H37CTL		; DESELECT THE DRIVE
 0574 E60F      	ANI	0FFH-CONDS0-CONDS1-CONDS2-CONDS3
 0576 322500    	STA	H37CTL	  
 0579 D378      	OUT	FD$CON
 057B AF        	XRA	A
 057C 328005    	STA	RDYFLG		; FLAG DRIVE AS NOT READY
 057F C9        	RET
                
 0580 00        RDYFLG: DB	0
 0581 00        DLYW:	DB	0
 0582 00        TPS:	DB	0		; TRACKS PER SIDE
 0583 00        STEPRA	DB	0		; STEP RATE CODE 
 0584 00        RETRYS	DB	0
 0585 0000      SEKERR	DB	0,0		; SEEK,RESTORE ERROR COUNTS
 0587 0000      MODE	DW	0		; POINTER TO MODE BYTE
 0589 00        RELDSK	DB	0		; DRIVE # RELATIVE TO 0
 058A 04        LOGDSK	DB	4		; CURRENT DRIVE SELECTED BY THIS MODULE
 058B 00        SIDE	DB	0		; SIDE SELECT BIT FOR COMMANDS
 058C 00        RD$FLAG DB	0
 058D 00        UNALLOC DB	0
 058E 00        BLKMSK	DB	0
 058F FF        HSTDSK	DB	0FFH
 0590 00        HSTTRK	DB	0
 0591 00        HSTSEC	DB	0
 0592 00        REQDSK: DB	0
 0593 00        	DB	0
 0594 00        REQSEC: DB	0
 0595 00        BLKSEC	DB	0
 0596 00        BLCODE	DB	0
 0597 00        OFFSET: DB	0		; OFFSET TO DIRECTORY TRACK
 0598 00        SELERR: DB	0
 0599 FF        SELOP:	DB	0FFH
 059A 0000      CURDPB: DW	0
 059C 00        MODFLG: DB	0
                ;	Current head positions for each drive
 059D FFFFFFFF00TRKS:	DB	255,255,255,255,0	
                
 05A2 =         btend	equ	$
                	
 05A2           HSTBUF	DS	1024
 09A2           CSV	DS	0
 09A2           ALV	DS	0
                
 09A2           	end
