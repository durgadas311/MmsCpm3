 2031 =         vers equ '1 ' ; July 14, 1983  16:30 mjm "LDRB316.ASM"
                
 0000 =         false	equ	0
 FFFF =         true	equ	not false
                
                	MACLIB Z80
                	$*MACRO
                	extrn cboot,btend,loader
                
                **************	Boot mode codes **************
                **	 0 = 8"    SD SS                    **
                **	 1 = 8"    DD SS                    **
                **	 2 = 8"    DD DS                    **
                **	 3 = 5.25" DD SS ST                 **
                **	 4 = 5.25" DD DS ST                 **
                **	 5 = 5.25" DD SS DT                 **
                **	 6 = 5.25" DD DS DT                 **
                ********** 77316 xxxxxxxx BOOT ROUTINE *******
 0005 =         disksiz equ	5		; 8 = 8 inch disk or 5 = 5.25 inch disk
                
 0068 =         ctl$bytsd equ	 01101000b	;single density
 0028 =         ctl$bytdd equ	 00101000b	;double density
                
 001A =         SPT8SD	  EQU	 26		;SECTORS PER TRACK  8" sd
 0010 =         SPT8DD	  EQU	 16		;   "     "    "    8" dd
 0009 =         SPT5	  EQU	 9		;   "     "    "    5" dd
                
 007F =         secmsksd  equ	  007fh 	 
 01FF =         secmskdd  equ	  01ffh
                
 0007 =         secshfsd  equ	  7
 0009 =         secshfdd  equ	  9
                
 0008 =         ndrv	equ	8
 001D =         drv0	equ	29
                
                ***** PHYSICAL DRIVES ARE ASSIGNED AS FOLLOWS *****
                *****					      *****
                *****  29 = FIRST 8" DRIVE                    *****
                *****  30 = SECOND 8" DRIVE                   *****
                *****  31 = THIRD 8" DRIVE                    *****
                *****  32 = FOURTH 8" DRIVE                   *****
                *****  33 = FIRST 5.25" DRIVE                 *****
                *****  34 = SECOND 5.25" DRIVE                *****
                *****  35 = THIRD 5.25" DRIVE                 *****
                *****  36 = FOURTH 5.25" DRIVE                *****
                *****					      *****
                ***************************************************
                
                ***************************************************
                **  PORTS AND CONSTANTS
                ***************************************************
 0038 =         CTRL	EQU	38H
 003C =         WD1797	EQU	3CH
 003C =         STAT	EQU	WD1797+0
 003D =         TRACK	EQU	WD1797+1
 003E =         SECTOR	EQU	WD1797+2
 003F =         DATA	EQU	WD1797+3
                
 00F2 =         ?PORT	EQU	0F2H
                ***************************************************
                
                ***************************************************
                ** START OF RELOCATABLE DISK BOOT MODULE
                *************************************************** 
                	aseg
 2280           	org	2280h
 2280 C38B22    BOOT:	jmp	around
                
 2283 0000      sysend: dw	btend
 2285 0000      systrt: dw	loader
                 if disksiz eq 8
                drive:	db	29		; boot drive
                btmode: db	2		; boot mode default DD DS
                	db	29		; first drive
                 else
 2287 21        drive:	db	33
 2288 04        btmode: db	4
 2289 21        	db	33
                 endif
 228A 04        	db	4		; number of valid drives
                
 228B E1        around: POP	H	;ADDRESS OF ERROR ROUTINE
 228C 310024    	LXI	SP,?STACK
 228F E5        	PUSH	H
                
                ***************************************************
                *** START OF UNIQUE ROUTINE FOR BOOTING
                ***************************************************
 2290 210000    	lxi	h,btend
 2293 110000    	lxi	d,loader
 2296 B7        	ora	a
                	dsbc	d	;length of system, in bytes
 2297+ED52
 2299 223823    	shld	syssiz
                 if disksiz eq 8
                	lda	btmode
                	ora	a
                	jrnz	yes$dd	
                	lxi	d,secmsksd+100h   ;add in boot size, round up.
                	dad	d
                	mvi	a,secshfsd
                	jr	div0
                yes$dd:
                 endif
 229C 11FF02    	lxi	d,secmskdd+100h   ; add in boot size, round up
 229F 19        	dad	d
 22A0 3E09      	mvi	a,secshfdd
                div0:	srlr	h
 22A2+CB3C
                	rarr	l
 22A4+CB1D
 22A6 3D        	dcr	a
                	jrnz	div0
 22A7+20F9
 22A9 5D        	mov	e,l	;number of sectors to load
 22AA 210030    	LXI	H,3000h
 22AD 3A8722    	lda	drive
 22B0 D61D      	SUI	drv0
 22B2 FE08      	CPI	ndrv	;don't allow invalid drives
 22B4 D0        	RNC
                 if disksiz eq 8
                	mov	b,a
                	lda	btmode
                	ora	a
                	mov	a,b
                	jrz	not$dd
                	ORI	ctl$bytdd
                	jr	a1
                not$dd	ORI	ctl$bytsd
                 else
 22B5 F628      	ORI	ctl$bytdd
                 endif
 22B7 323A23    a1:	STA	ctrlpt
 22BA D338      	OUT	CTRL
 22BC 3E0B      	MVI	A,00001011B	;RESTORE COMMAND
 22BE CD1D23    LOOP0	CALL	COMMAND
 22C1 DB3C      	IN	STAT
 22C3 E699      	ANI	10011001B
 22C5 C0        	RNZ
                 if disksiz eq 8	;8" drives
                	MVI	A,10	;NUMBER OF RETRYS
                	STA	RETRY
                	lda	btmode 
                	ora	a
                	jrz	no$burst0
                	mvi	a,(NOP) 	;nop out halts in read sector 
                	sta	RD0
                	sta	RD1
                no$burst0:
                 endif
 22C6 1601      	MVI	D,1
 22C8 013F00    	LXI	B,(0)*256+(DATA)
 22CB E5        SECL0	PUSH	H	;SAVE DMA ADDRESS IN CASE OF RETRY
                 if disksiz eq 8	;8" drives
                	lda	btmode	
                	ora	a
                	jrz	no$burst1
                	LDA	ctrlpt
                	ANI	11011111B	;BURST ON
                	OUT	CTRL
                no$burst1:
                 endif
 22CC 7A        	MOV	A,D
 22CD D33E      	OUT	SECTOR
 22CF 3E88      	MVI	A,10001000B	;READ SINGLE SECTOR
 22D1 CD2223    	CALL	READ$REC
 22D4 E6BF      	ANI	10111111B
                 if disksiz eq 8	;8" drives
                	LDA	ctrlpt		  
                	OUT	CTRL
                 endif
                	JRZ	OK
 22D6+280E
 22D8 E1        	POP	H
                 if disksiz eq 5	 ;5" drives
 22D9 3A3623    	lda	errf
 22DC B7        	ora	a
 22DD C0        	rnz
 22DE 2F        	cma
 22DF 323623    	sta	errf
 22E2 3E4B      	mvi	a,01001011b	;step-in, w/o update, for HT
                	jr	loop0
 22E4+18D8
                 else			;8" drives
                	LDA	RETRY
                	DCR	A
                	STA	RETRY
                	JRNZ	SECL0
                	RET
                 endif
 22E6 E3        OK:	XTHL
 22E7 E1        	POP	H
                 if disksiz eq 5	 ;5" drives
 22E8 2F        	cma
 22E9 323623    	sta	errf
                 endif
 22EC 1D        	DCR	E
                	JRZ	DONE
 22ED+280E
 22EF 14        	INR	D
                 if disksiz eq 8
                	lda	btmode
                	ora	a
                	MOV	A,D
                	jrz	not$dd2
                	CPI	SPT8DD+1
                	JRC	SECL0
                not$dd2 CPI	SPT8SD+1
                 else
 22F0 7A        	MOV	A,D
 22F1 FE0A      	CPI	SPT5+1
                 endif
                	JRC	SECL0
 22F3+38D6
                 if disksiz eq 5	 ;5" drives
 22F5 AF        	xra	a
 22F6 323623    	sta	errf
 22F9 3E5B      	mvi	a,01011011b	;step in, with update
                	jr	loop0
 22FB+18C1
                 else			;8" drives
                	IN	TRACK
                	INR	A
                	OUT	DATA
                	MVI	A,00011011B	;SEEK
                	JR	LOOP0
                 endif
                DONE:
 22FD F3        	DI
 22FE 211623    	LXI	H,?CODE ;SEQUENCE TO MOVE MEMORY-MAP
 2301 0607      	MVI	B,?CODE$LEN	;NUMBER OF BYTES IN SEQUENCE
 2303 0EF2      	MVI	C,?PORT ;I/O PORT TO SEND SEQUENCE
                	OUTIR
 2305+EDB3
 2307 210031    	lxi	h,3000h+256
 230A 110000    	lxi	d,loader
                	lbcd	syssiz
 230D+ED4B
 230F+3823
                	ldir
 2311+EDB0
 2313 C30000    	JMP	CBOOT
                
 2316 04        ?CODE	DB	0000$01$00B
 2317 0C        	DB	0000$11$00B
 2318 04        	DB	0000$01$00B
 2319 08        	DB	0000$10$00B
 231A 0C        	DB	0000$11$00B
 231B 08        	DB	0000$10$00B
 231C 22        	DB	0010$00$10B	;FOR "-FA" MACHINES
 0007 =         ?CODE$LEN	EQU	$-?CODE
                
                COMMAND:
 231D D33C      	OUT	STAT
 231F FB        	EI
                	JR $-1
 2320+18FE
                
                READ$REC:
 2322 D33C      	OUT	STAT
 2324 FB        	EI
 2325 76        	HLT
                	INI
 2326+EDA2
 2328 76        RD0	HLT		; changed to a NOP on 8" dd
                	INI
 2329+EDA2
 232B C22823    	JNZ	RD0
 232E 76        RD1	HLT		; changed to a NOP on 8" dd
                	INI
 232F+EDA2
 2331 C22E23    	JNZ	RD1
                	JR $-1
 2334+18FE
                
 2336 00        errf:	db	0
 2337 00        retry:	db	0
 2338 0000      syssiz: dw	0
 233A 00        ctrlpt	db	0	
                
                	REPT	256-($-BOOT)
                	DB	0
                	ENDM
 233B+00
 233C+00
 233D+00
 233E+00
 233F+00
 2340+00
 2341+00
 2342+00
 2343+00
 2344+00
 2345+00
 2346+00
 2347+00
 2348+00
 2349+00
 234A+00
 234B+00
 234C+00
 234D+00
 234E+00
 234F+00
 2350+00
 2351+00
 2352+00
 2353+00
 2354+00
 2355+00
 2356+00
 2357+00
 2358+00
 2359+00
 235A+00
 235B+00
 235C+00
 235D+00
 235E+00
 235F+00
 2360+00
 2361+00
 2362+00
 2363+00
 2364+00
 2365+00
 2366+00
 2367+00
 2368+00
 2369+00
 236A+00
 236B+00
 236C+00
 236D+00
 236E+00
 236F+00
 2370+00
 2371+00
 2372+00
 2373+00
 2374+00
 2375+00
 2376+00
 2377+00
 2378+00
 2379+00
 237A+00
 237B+00
 237C+00
 237D+00
 237E+00
 237F+00
                
 2400 =         ?STACK: EQU	$+128
                
 2380           	END
