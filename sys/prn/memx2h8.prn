 2031 =         vers equ '1 ' ; Sep 24, 2017  16:24   drm "MEMX2H8.ASM"
                ;****************************************************************
                ; Banked Memory BIOS module for CP/M 3 (CP/M plus), 		*
                ; Copyright (c) 1983 Magnolia Microsystems			*
                ;****************************************************************
                	maclib Z80
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 000D =         cr	equ 13
 000A =         lf	equ 10
 0007 =         bell	equ 7
                
 0000 =         mmu	equ	000h	; Trionyx X/2-H8 Bank Switch Board
                
                ;  SCB registers
                	extrn @bnkbf,@cbnk
                
                ;  Variables for use by other modules
                	public @nbnk,@compg,@mmerr
                
                ;  Routines for use by other modules
                	public ?bnksl,?bnkck,?xmove,?mvccp,?move
                
                	cseg		; GENCPM puts CSEG stuff in common memory
                
 0000 04        @nbnk:	db	4
 0001 C0        @compg:	db	0c0h
 0002 0D0A074E6F@mmerr: db	cr,lf,bell,'No X/2-H8$'
                
                ; Uses XMOVE semantics...
                ; C=source bank, B=dest bank, HL=address, A=num recs
                ?mvccp: exaf	;save number of records
 000F+08        	DB	08H
 0010 79        	mov	a,c
 0011 CD3600    	call	?bnksl	;select source bank
 0014 C5        	push	b
 0015 E5        	push	h
                	lded	@bnkbf
 0016+ED5B      	DB	0EDH,5BH
 0018+0000      	DW	@BNKBF
 001A 018000    	lxi	b,128
                	ldir
 001D+EDB0      	DB	0EDH,0B0H
 001F E1        	pop	h
 0020 C1        	pop	b
 0021 78        	mov	a,b
 0022 CD3600    	call	?bnksl	;select destination bank
 0025 C5        	push	b
 0026 EB        	xchg
 0027 2A0000    	lhld	@bnkbf
 002A 018000    	lxi	b,128
                	ldir
 002D+EDB0      	DB	0EDH,0B0H
 002F EB        	xchg
 0030 C1        	pop	b
                	exaf
 0031+08        	DB	08H
 0032 3D        	dcr	a
                	jrnz	?mvccp
 0033+20DA      	DB	20H,?MVCCP-$-1
 0035 C9        	ret
                
                ?bnksl:
 0036 320000    	sta	@cbnk		; remember current bank
 0039 C5        	push	b		; save register b for temp
 003A E5        	push	h		;
 003B 215400    	lxi	h,table 	;
 003E 87        	add	a
 003F 87        	add	a
 0040 4F        	mov	c,a		;
 0041 0600      	mvi	b,0		;
 0043 09        	dad	b		;
 0044 0604      	mvi	b,4
 0046 0E00      	mvi	c,mmu
                	ldai	; P = EI state (IFF2)
 0048+ED57      	DB	0EDH,57H
 004A F5        	push	psw
 004B F3        	di
                	outir	; trashes P
 004C+EDB3      	DB	0EDH,0B3H
 004E F1        	pop	psw	; restore IFF2 to P
 004F E1        	pop	h		;
 0050 C1        	pop	b		; restore register b
 0051 E0        	rpo	; P=0, leave interrupts off
 0052 FB        	ei
 0053 C9        	ret
                
                table:
 0054 00        	db	0$000$0000b	; Bank 0
 0055 1F        	db	0$001$1111b
 0056 2F        	db	0$010$1111b
 0057 3F        	db	0$011$1111b
                	;
 0058 07        	db	0$000$0111b	; Bank 1
 0059 18        	db	0$001$1000b
 005A 2F        	db	0$010$1111b
 005B 3F        	db	0$011$1111b
                	;
 005C 07        	db	0$000$0111b	; Bank 2
 005D 1F        	db	0$001$1111b
 005E 28        	db	0$010$1000b
 005F 3F        	db	0$011$1111b
                	;
 0060 07        	db	0$000$0111b	; Bank 3
 0061 1F        	db	0$001$1111b
 0062 2F        	db	0$010$1111b
 0063 38        	db	0$011$1000b
                
 0064 EB        ?move:	xchg		; we are passed source in DE and dest in HL
                	ldir		; use Z80 block move instruction
 0065+EDB0      	DB	0EDH,0B0H
 0067 EB        	xchg		; need next addresses in same regs
                ?xmove:
 0068 C9        	ret
                
                	dseg	; this part can be banked
                
                ; Verify that we have banked RAM...
                ; This code assumes the Bank Switch Board is set as for "bank 0" in 'table'
                ?bnkck:
 0000 114000    	lxi	d,40h
 0003 3E01      	mvi	a,0$000$0001b
 0005 D300      	out	mmu
 0007 3E1E      	mvi	a,0$001$1110b
 0009 D300      	out	mmu
 000B 3E01      	mvi	a,1
 000D 12        	stax	d	;put bank number in 40h of respective bank
 000E 3E1F      	mvi	a,0$001$1111b
 0010 D300      	out	mmu
 0012 3E2E      	mvi	a,0$010$1110b
 0014 D300      	out	mmu
 0016 3E02      	mvi	a,2
 0018 12        	stax	d	;put bank number in 40h of respective bank
 0019 3E2F      	mvi	a,0$010$1111b
 001B D300      	out	mmu
 001D 3E3E      	mvi	a,0$011$1110b
 001F D300      	out	mmu
 0021 3E03      	mvi	a,3
 0023 12        	stax	d	;put bank number in 40h of respective bank
 0024 3E3F      	mvi	a,0$011$1111b
 0026 D300      	out	mmu
 0028 3E1E      	mvi	a,0$001$1110b
 002A D300      	out	mmu
 002C 1A        	ldax	d
 002D FE01      	cpi	1
                	jrnz	noram
 002F+201E      	DB	20H,NORAM-$-1
 0031 3E1F      	mvi	a,0$001$1111b
 0033 D300      	out	mmu
 0035 3E2E      	mvi	a,0$010$1110b
 0037 D300      	out	mmu
 0039 1A        	ldax	d
 003A FE02      	cpi	2
                	jrnz	noram
 003C+2011      	DB	20H,NORAM-$-1
 003E 3E2F      	mvi	a,0$010$1111b
 0040 D300      	out	mmu
 0042 3E3E      	mvi	a,0$011$1110b
 0044 D300      	out	mmu
 0046 1A        	ldax	d
 0047 FE03      	cpi	3
                	jrnz	noram
 0049+2004      	DB	20H,NORAM-$-1
 004B 3EFF      	mvi	a,true
                	jr	bnkck0
 004D+1801      	DB	18H,BNKCK0-$-1
 004F AF        noram:	xra	a
 0050 F5        bnkck0:	push	psw
 0051 AF        	xra	a
 0052 CD3600    	call	?bnksl
 0055 F1        	pop	psw
 0056 C9        	ret
                
 0057           	end
