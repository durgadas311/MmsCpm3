 2032 =         vers equ '2 ' ; Oct 29, 2018  18:14   drm "MEM318.ASM"
                ;****************************************************************
                ; Banke Membory BIOS module for CP/M 3 (CP/M plus),		*
                ; Copyright (c) 1983 Magnolia Microsystems			*
                ;****************************************************************
                	maclib Z80
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 0038 =         bnksiz	equ	56	;size of banks, in "K". Either 48 or 56.
                
 000D =         cr	equ 13
 000A =         lf	equ 10
 0007 =         bell	equ 7
                
 00F2 =         port	equ	0f2h	;interupt/memory control port
                
                ;  SCB registers
                	extrn @bnkbf,@cbnk,@intby,@dtacb,@dircb,@heapt
                
                ;  Variables for use by other modules
                	public @nbnk,@compg,@mmerr,@memstr
                
                ;  Routines for use by other modules
                	public ?bnksl,?bnkck,?xmove,?mvccp,?move
                
                	cseg		; GENCPM puts CSEG stuff in common memory
                
 0000 03        @nbnk:	db	3
 0001 0D0A074E6F@mmerr: db	cr,lf,bell,'No 77318$'
 000D 3737333138@memstr: db	'77318 ',0,'MMS 128K+48K RAM ',0,'v3.10'
 002B 3220      	dw	vers
 002D 24        	db	'$'
                
                ; Uses XMOVE semantics
                ; C=source bank, B=dest bank, HL=address, A=num recs
                ?mvccp: exaf	;save number of records
 002E+08        	DB	08H
 002F 79        	mov	a,c
 0030 CD5500    	call	?bnksl	;select source bank
 0033 C5        	push	b
 0034 E5        	push	h
                	lded	@bnkbf
 0035+ED5B      	DB	0EDH,5BH
 0037+0000      	DW	@BNKBF
 0039 018000    	lxi	b,128
                	ldir
 003C+EDB0      	DB	0EDH,0B0H
 003E E1        	pop	h
 003F C1        	pop	b
 0040 78        	mov	a,b
 0041 CD5500    	call	?bnksl	;select destination bank
 0044 C5        	push	b
 0045 EB        	xchg
 0046 2A0000    	lhld	@bnkbf
 0049 018000    	lxi	b,128
                	ldir
 004C+EDB0      	DB	0EDH,0B0H
 004E EB        	xchg
 004F C1        	pop	b
                	exaf
 0050+08        	DB	08H
 0051 3D        	dcr	a
                	jrnz	?mvccp
 0052+20DA      	DB	20H,?MVCCP-$-1
 0054 C9        	ret
                
                ?bnksl:
 0055 320000    	sta	@cbnk		; remember current bank
 0058 C5        	push	b		; save register b for temp
 0059 E5        	push	h		;
 005A 217000    	lxi	h,table 	;
 005D 4F        	mov	c,a		;
 005E 0600      	mvi	b,0		;
 0060 09        	dad	b		;
 0061 46        	mov	b,m		;
 0062 210000    	lxi	h,@intby	;
 0065 7E        	mov	a,m		;
 0066 E6CB      	ani	11001011b	;
 0068 B0        	ora	b		;
 0069 77        	mov	m,a		;
 006A D3F2      	out	port		;
 006C E1        	pop	h		;
 006D C1        	pop	b		; restore register b
 006E C9        	ret
                
                
                	IF bnksiz EQ 56
                
 006F E0        @compg	db	0e0h
                
 0070 20        table:	db	20H	;select code for bank 0 (B)
 0071 14        	db	14H	; bank 1 (56K) (G)
 0072 34        	db	34H	; bank 2 (56K) (H)
                
                	endif
                
                	IF bnksiz EQ 48
                
                @compg	db	0c0h
                
                table:	db	20H	;select code for bank 0 (B)
                	db	10H	; bank 1 (48K) (E)
                	db	30H	; bank 2 (48K) (F)
                
                	endif
                
 0073 EB        ?move:	xchg		; we are passed source in DE and dest in HL
                	ldir		; use Z80 block move instruction
 0074+EDB0      	DB	0EDH,0B0H
 0076 EB        	xchg		; need next addresses in same regs
                ?xmove:
 0077 C9        	ret
                
                ; Data buffers must be in common memory
 0078           dtabf1: ds	1024
 0478           dtabf2: ds	1024-1
 0877 00        	db	0	;to force LINK to fill with "00"
                
                	dseg	; this part can be banked
                
                ; Verify that we have banked RAM...
                ?bnkck:
 0000 210000    	lxi	h,@intby	; presumed to be bank B
 0003 114000    	lxi	d,40h
 0006 3E01      	mvi	a,1
 0008 12        	stax	d	;put bank number in 40h of respective bank
 0009 7E        	mov	a,m
 000A E6CB      	ani	11001011b
 000C F604      	ori	04h	; bank C (G)
 000E D3F2      	out	port
 0010 3E02      	mvi	a,2
 0012 12        	stax	d
 0013 7E        	mov	a,m
 0014 E6CB      	ani	11001011b
 0016 F624      	ori	24h	; bank D (H)
 0018 D3F2      	out	port
 001A 3E03      	mvi	a,3
 001C 12        	stax	d
 001D 7E        	mov	a,m	; presumed to be bank B
 001E D3F2      	out	port
 0020 1A        	ldax	d
 0021 FE01      	cpi	1
                	jrnz	noram
 0023+203C      	DB	20H,NORAM-$-1
 0025 7E        	mov	a,m
 0026 E6CB      	ani	11001011b
 0028 F604      	ori	04h	; bank C (G)
 002A D3F2      	out	port
 002C 1A        	ldax	d
 002D FE02      	cpi	2
                	jrnz	noram
 002F+2030      	DB	20H,NORAM-$-1
 0031 7E        	mov	a,m
 0032 E6CB      	ani	11001011b
 0034 F624      	ori	24h	; bank D (H)
 0036 D3F2      	out	port
 0038 1A        	ldax	d
 0039 FE03      	cpi	3
                	jrnz	noram
 003B+2024      	DB	20H,NORAM-$-1
                	; Allocate some buffers below BNKBDOS
 003D 2A0000    	lhld	@heapt
 0040 1100FC    	lxi	d,-1024	; max sector size = 1024
 0043 19        	dad	d
 0044 229000    	shld	dirbf1
 0047 19        	dad	d
 0048 229F00    	shld	dirbf2
 004B 220000    	shld	@heapt
 004E 216800    	lxi	h,dtacb1
 0051 220000    	shld	@dtacb
 0054 218600    	lxi	h,dircb1
 0057 220000    	shld	@dircb
 005A 210000    	lxi	h,@intby ; *MUST* restore this
 005D 3EFF      	mvi	a,true
                	jr	bnkck0
 005F+1801      	DB	18H,BNKCK0-$-1
 0061 AF        noram:	xra	a
 0062 F5        bnkck0:	push	psw
 0063 7E        	mov	a,m
 0064 D3F2      	out	port
 0066 F1        	pop	psw
 0067 C9        	ret
                
 0068 FF        dtacb1: db 0ffh ;drive
 0069 0000000000	db 0,0,0,0,0
 006E 0000000078	dw 0,0,dtabf1
 0074 00        	db 0
 0075 7700      	dw dtacb2
                
 0077 FF        dtacb2: db 0ffh ;drive
 0078 0000000000	db 0,0,0,0,0
 007D 0000000078	dw 0,0,dtabf2
 0083 00        	db 0
 0084 0000      	dw 0000 ;end of data buffers
                
 0086 FF        dircb1: db 0ffh ;drive
 0087 0000000000	db 0,0,0,0,0
 008C 00000000  	dw 0,0
 0090 0000      dirbf1:	dw	0
 0092 00        	db 0
 0093 9500      	dw dircb2
                
 0095 FF        dircb2: db 0ffh ;drive
 0096 0000000000	db 0,0,0,0,0
 009B 00000000  	dw 0,0
 009F 0000      dirbf2:	dw	0
 00A1 00        	db 0
 00A2 0000      	dw 0000 ;end of DIR buffers
                
 00A4           	end
