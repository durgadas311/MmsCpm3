#!/bin/bash
# Example of building GENCOM.COM using Linux/thames environment.
#
# "intel80tools" is from https://github.com/ogdenpm/intel80tools.git
# CP/M 3 source is from http://www.cpm.z80.de
# All filenames converted to lower case. CR-LF line endings required.
# (NOTE: files in dist/src DO NOT have CR-LF line endings)

# NOTE: choice of versions may account for .COM differences from distro.
# plm80_3.1 seems to build the same code as original distro.
export ISIS_F0=${PWD}
export ISIS_F1=~/git/intel80tools/itools/plm80_3.1
export ISIS_F2=~/git/intel80tools/itools/link_3.0
export ISIS_F3=~/git/intel80tools/itools/asm80_4.1
export ISIS_F4=~/git/intel80tools/itools/locate_3.0
export ISIS_F5=~/git/intel80tools/itools/isis_4.3

# These commands are derived from CP/M 3 build submit files
thames :f1:plm80 gencom.plm debug optimize 'pagewidth(132)'
thames :f3:asm80 mcd80a.asm debug
thames :f3:asm80 parse.asm debug
thames :f2:link mcd80a.obj,parse.obj,gencom.obj,plm80.lib to gencom.mod
thames :f4:locate gencom.mod 'code(0100H)' 'stacksize(100)' map 'print(gencom.tra)'

# TODO: best way to generate binary executable?
# (both produce nearly-identical results - diff is length being 128-byte aligned)
obj2bin gencom gencom.com
# or:
#	thames :f5:objhex gencom to gencom.hex
#	cpm: hexcom gencom
