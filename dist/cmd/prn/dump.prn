CP/M MACRO ASSEM 2.0	#001	CP/M 3 DUMP Utility

                	TITLE 'CP/M 3 DUMP Utility'
                	;***************************
                	;***************************
                	;**                       **
                	;**        D U M P        **
                	;**                       **
                	;**  FILE  DUMP  ROUTINE  **
                	;**                       **
                	;**    JULY  16  1982     **
                	;**                       **
                 	;***************************
                	;***************************
                	;
                	;
                	;
 0100           	ORG	100H		;BASE OF TPA
                	;
                	;******************
                	;* BDOS FUNCTIONS *
                	;******************
 0000 =         RETURN  EQU	0		;SYSTEM RESET
 0001 =         CONIN	EQU	01		;READ CONSOLE
 0002 =         CONOUT	EQU	02		;TYPE CHARACTER
 0005 =         BDOS	EQU	05		;DOS ENTRY POINT
 0006 =         INPUT	EQU	06		;RAW CONSOLE I/O
 0009 =         PSTRING	EQU	09		;TYPE STRING
 000A =         RSTRING	EQU	10		;READ CONNSOLE BUFFER
 000B =         CHKIO	EQU	11		;CONSOLE STATUS
 000D =         RESET	EQU	13		;RESET DISK SYSTEM
 000F =         OPENF	EQU	15		;OPEN FILE
 0014 =         READF	EQU	20		;READ BUFFER
 001A =         DMAF	EQU	26		;SET DMA ADDRESS
 0023 =         FSIZE	EQU	35		;COMPUTE FILE SIZE
 002D =         ERRMODE EQU	45		;SET ERROR MODE 
 0031 =         GETSCB	EQU	49		;GET/SET SCB
 006D =         CONMODE EQU	109		;SET CONSOLE MODE			
                	;**************************
                	;* NON GRAPHIC CHARACTERS *
                	;**************************
 0003 =         CTRLC	EQU	03H		;CONTROL - C (^C)
 0018 =         CTRLX	EQU	018H		;CONTROL - X (^X)
 000D =         CR	EQU	0DH		;CARRIAGE RETURN
 000A =         LF      EQU	0AH		;LINE FEED
                	;
                	;*******************
                	;* FCB DEFINITIONS *
                	;*******************
 005C =         FCB	EQU	5CH		;FILE CONTROL BLOCK
 0080 =         BUF	EQU	80H		;PASSWORD BUFFER LOCATION
                	;
                	;*****************
                	;* BEGIN PROGRAM *
                	;*****************
 0100 C3DB03    	JMP	BEGIN
                	;
                	;*********************************************
CP/M MACRO ASSEM 2.0	#002	CP/M 3 DUMP Utility

                	;* PATCH AREA, DATE, VERSION & SERIAL NUMBER *
                	;*********************************************
 0103 0000000000DW	0,0,0,0,0,0
 010F 00        DB	0
 0110 44554D5020DB	'DUMP VERSION 3.0'
 0120 2020204455DB	'   DUMP.COM     '
 0130 0000000000DW	0,0,0,0,0,0,0,0
 0140 0000000000DW      0,0,0,0,0,0,0,0
 0150 434F505952DB	'COPYRIGHT 1982, '
 0160 4449474954DB	'DIGITAL RESEARCH'
 0170 3135313238DB	'151282'		;VERSION DATE  [DAY-MONTH-YEAR]
 0176 00000000  DB	0,0,0,0			;PATCH BIT MAP
 017A 3635343332DB	'654321'		;SERIAL NUMBER
                	;
                PGRAPH:				;PRINT GRAPHIC CHAR. IN ACC. OR PERIOD
 0180 FE7F      	CPI	7FH
 0182 D28A01    	JNC	PPERIOD
 0185 FE20      	CPI	' '
 0187 D28F01    	JNC	PCHAR
                	;
                PPERIOD:			;PRINT PERIOD
 018A 3E2E      	MVI	A,'.'
 018C C38F01    	JMP	PCHAR
                	;
                PCHAR:				;PRINT CHAR. IN ACC. TO CONSOLE
 018F E5        	PUSH	H		
 0190 D5        	PUSH	D
 0191 C5        	PUSH	B
 0192 5F        	MOV	E,A		;VALUE IN ACC. IS PUT IN REGISTER E 
 0193 0E02      	MVI	C,CONOUT	;VALUE IN REGISTER E IS SENT TO CONSOLE  
 0195 CD0500    	CALL	BDOS		;PRINT CHARACTER
 0198 C1        	POP	B
 0199 D1        	POP	D
 019A E1        	POP	H
 019B C9        	RET
                	;
                PNIB:				;PRINT NIBBLE IN LOW ACC. 
 019C FE0A      	CPI	10
 019E D2A601    	JNC	PNIBH		;JUMP IF 'A-F'
 01A1 C630      	ADI	'0'
 01A3 C38F01    	JMP	PCHAR
                	;
                PNIBH:
 01A6 C637      	ADI	'A'-10
 01A8 C38F01    	JMP	PCHAR
                	;
                PBYTE:				;PRINT BYTE IN HEX
 01AB F5        	PUSH	PSW		;SAVE COPY FOR LOW NIBBLE
 01AC 1F        	RAR			;ROTATE HIGH NIBBLE TO LOW
 01AD 1F        	RAR
 01AE 1F        	RAR
 01AF 1F        	RAR
 01B0 E60F      	ANI	0FH		;MASK HIGH NIBBLE 
 01B2 CD9C01    	CALL	PNIB
 01B5 F1        	POP	PSW
 01B6 E60F      	ANI	0FH
CP/M MACRO ASSEM 2.0	#003	CP/M 3 DUMP Utility

 01B8 C39C01    	JMP	PNIB
                	;
                OPENFILE:
 01BB 0E0F      	MVI	C,OPENF
 01BD 115C00    	LXI	D,FCB
 01C0 CD0500    	CALL	BDOS		;OPEN FILE
 01C3 32AD04    	STA	KEEPA
 01C6 7C        	MOV	A,H
 01C7 FE07      	CPI	07		;CHECK PASSWORD STATUS
 01C9 CAD501    	JZ	GETPASSWD	;REG. H CONTAINS '7' IF PASSWORD EXISTS
 01CC 3AAD04    	LDA	KEEPA
 01CF FEFF      	CPI	0FFH		;ACC.=FF IF THERE IS NO FILE FOUND
 01D1 CAC003    	JZ	NOFILE
 01D4 C9        	RET
                	;
                GETPASSWD:
 01D5 3AB104    	LDA	TPASSWD
 01D8 FEFF      	CPI	255		;CHECK IF ALREADY TRIED PASSWORD
 01DA CACB03    	JZ	WRNGPASS
 01DD CD1102    	CALL	SPACE		;SET PASSWORD MEMORY AREA TOO BLANKS
 01E0 114904    	LXI	D,QUEST
 01E3 CDBA03    	CALL	PRINT		;PRINT QUESTION
 01E6 3E08      	MVI	A,8		;MAX # OF CHARACTERS ABLE TO INPUT
 01E8 328000    	STA	BUF		;FOR PASSWORD IS EIGHT (8) 
 01EB 0E0A      	MVI	C,RSTRING
 01ED 118000    	LXI	D,BUF
 01F0 CD0500    	CALL	BDOS		;GET PASSWORD
 01F3 3A8100    	LDA	BUF+1
 01F6 32BC04    	STA	LEN		;STORE LENGTH OF PASSWORD
 01F9 FE00      	CPI	0		
 01FB CAD103    	JZ	STOP		;IF <CR> ENTERED THEN STOP PROGRAM
 01FE CD1E02    	CALL	CAP		;CAP THE PASSWORD
 0201 118200    	LXI	D,BUF+2
 0204 CD6602    	CALL	SETDMA
 0207 3EFF      	MVI	A,255
 0209 32B104    	STA	TPASSWD		;SET TRIED PASSWORD FLAG
 020C 3E00      	MVI	A,0
 020E C3BB01    	JMP	OPENFILE
                	;
                SPACE:				;THIS ROUTINE FILLS THE MEMORY	
 0211 3E08      	MVI	A,8		;LOCATIONS FROM 82-89H WITH
 0213 218200    	LXI	H,BUF+2		;A SPACE
                SPACE2:
 0216 3620      	MVI	M,' '		;PUT A (BLANK) INTO THE MEMORY
 0218 23        	INX	H		;LOCATION WHERE HL ARE POINTING 
 0219 3D        	DCR	A		
 021A C21602    	JNZ	SPACE2
 021D C9        	RET
                	;
                CAP:				;THIS ROUTINE TAKES THE INPUTED 
 021E 0608      	MVI	B,8		;PASSWORD AND CONVERTS IT TO
 0220 218200    	LXI	H,BUF+2		;UPPER-CASE LETTERS
                CAP2:
 0223 7E        	MOV	A,M		;MOVE INTO THE ACC. WHERE THE
 0224 FE61      	CPI	'a'		;CURRENT HL POSITION POINTS TO
 0226 DA3102    	JC	SKIP		;AND IF IT IS A LOWER-CASE LETTER
CP/M MACRO ASSEM 2.0	#004	CP/M 3 DUMP Utility

 0229 FE7B      	CPI	'{'		;MAKE IT UPPER CASE
 022B D23102    	JNC	SKIP
 022E D620      	SUI	20H
 0230 77        	MOV	M,A
                SKIP:
 0231 23        	INX	H		;INC THE POINTER TO THE NEXT LETTER
 0232 05        	DCR	B
 0233 C22302    	JNZ	CAP2
                DELCHAR:			;THIS ROUTINE DELETES THE LAST
 0236 3ABC04    	LDA	LEN		;CHARACTER IN THE INPUT BECAUSE
 0239 C682      	ADI	82H		;AN EXTRA CHARACTER IS ADDED TO
 023B 32BE04    	STA	LEN2		;THE INPUT WHEN USING BDOS FUNCTION 10
 023E 2ABE04    	LHLD	LEN2		
 0241 3620      	MVI	M,' '
 0243 C9        	RET
                	;
                FILLBUFF:
 0244 11D404    	LXI	D,BUFF		;CURRENT POSITION
                FILLBUFF2:
 0247 32AD04    	STA	KEEPA
 024A D5        	PUSH	D		
 024B CD6602    	CALL	SETDMA		;SET DMA FOR FILE READING
 024E CD6C02    	CALL	READBUFF	;READ FILE AND FILL BUFF
 0251 3AAF04    	LDA	NOREC		;# RECORDS READ IN CURRENT LOOP
 0254 3C        	INR	A
 0255 32AF04    	STA	NOREC
 0258 FE08      	CPI	8		;CHECK IF '8' RECORDS READ IN LOOP
 025A CAF003    	JZ	LOOP2
 025D D1        	POP	D
 025E 218000    	LXI	H,80H		;80H=128(DECIMAL)= # BYTES IN 1 RECORD READ
 0261 19        	DAD	D
 0262 EB        	XCHG			;CHANGES DMA = DMA+80H
 0263 C34702    	JMP	FILLBUFF2
                	;
                SETDMA:
 0266 0E1A      	MVI	C,DMAF
 0268 CD0500    	CALL	BDOS		;SET DMA
 026B C9        	RET
                	;
                READBUFF:
 026C 0E14      	MVI	C,READF
 026E 115C00    	LXI	D,FCB
 0271 CD0500    	CALL	BDOS		;FILL BUFFER
 0274 FE00      	CPI	0		;ACC. <> 0 IF UNSUCCESSFUL
 0276 C8        	RZ			;RETURN IF NOT END OF FILE 
 0277 3AAF04    	LDA	NOREC		
 027A FE00      	CPI	0		;THIS CHECK IS NEEDED TO SEE IF
 027C CAD103    	JZ	STOP		;THE RECORD IS THE FIRST IN THE
 027F 3EFF      	MVI	A,255		;LOOP
 0281 32B004    	STA	EOF		;SET END OF FILE FLAG
 0284 C3F003    	JMP	LOOP2		;NO MORE BUFF READING
                	;
                BREAK:
 0287 C5        	PUSH	B
 0288 D5        	PUSH	D		;SEE IF CHARACTER READY 
 0289 E5        	PUSH	H		;IF SO THEN QUIT PROGRAM
CP/M MACRO ASSEM 2.0	#005	CP/M 3 DUMP Utility

 028A 0E0B      	MVI	C,CHKIO		;IF CHARACTER IS A ^C	
 028C CD0500    	CALL	BDOS		;CHECK CONSOLE STATUS
 028F B7        	ORA	A		;ZERO FLAG IS SET IF NO CHARACTER
 0290 F5        	PUSH	PSW		;SAVE ALL REGISTERS
 0291 0E01      	MVI	C,CONIN		;CONSOLE IN FUNCTION
 0293 C40500    	CNZ	BDOS		;EAT CHARACTER IF NOT ZERO
 0296 F1        	POP	PSW		;RESTORE ALL REGISTERS
 0297 E1        	POP	H
 0298 D1        	POP	D
 0299 C1        	POP	B
 029A C9        	RET			
                	;
                PADDR:
 029B 2AA904    	LHLD	ALOC		;CURRENT DISPLAY ADDRESS
 029E 7C        	MOV	A,H
 029F CDAB01    	CALL	PBYTE		;HIGH BYTE
 02A2 7D        	MOV	A,L
 02A3 2AA704    	LHLD	DISLOC
 02A6 CDAB01    	CALL	PBYTE		;LOW BYTE
 02A9 3E3A      	MVI	A,':'
 02AB C38F01    	JMP	PCHAR
                	;
                PAGE$CHECK:
 02AE 3AB904    	LDA	PAGE$ON
 02B1 FE00      	CPI	0
 02B3 CCC602    	CZ	PAGE$COUNT	;IF PAGE MODE ON CALL ROUTINE
 02B6 C9        	RET
                	;
                CRLF:	
 02B7 3E0D      	MVI	A,CR
 02B9 CD8F01    	CALL	PCHAR
 02BC 3E0A      	MVI	A,LF
 02BE C38F01    	JMP	PCHAR
                	;
                BLANK:	
 02C1 3E20      	MVI	A,' '
 02C3 C38F01    	JMP	PCHAR
                	;
                PAGE$COUNT:
 02C6 3ABA04    	LDA	PAGE$SIZE	;RELATIVE TO ZERO
 02C9 5F        	MOV	E,A		
 02CA 3ABB04    	LDA	COUNT		;CURRENT NUMBER OF LINES 
 02CD BB        	CMP	E
 02CE CAD602    	JZ	STOP$DISPLAY	;IF XX LINES THEN STOP DISPLAY
 02D1 3C        	INR	A
 02D2 32BB04    	STA	COUNT		;COUNT=COUNT+1
 02D5 C9        	RET
                	;
                STOP$DISPLAY:
 02D6 3E00      	MVI	A,0
 02D8 32BB04    	STA	COUNT		;COUNT=0
 02DB 118704    	LXI	D,CON$MESS
 02DE CDBA03    	CALL	PRINT
                STOP$DISPLAY2:
 02E1 0E06      	MVI	C,INPUT
 02E3 1EFD      	MVI	E,0FDH
CP/M MACRO ASSEM 2.0	#006	CP/M 3 DUMP Utility

 02E5 CD0500    	CALL	BDOS
 02E8 FE03      	CPI	CTRLC
 02EA CAD103    	JZ	STOP
 02ED FE0D      	CPI	CR		;COMPARE CHARACTER WITH <CR>
 02EF C2E102    	JNZ	STOP$DISPLAY2	;WAIT UNTIL <CR> IS ENCOUNTERED
 02F2 3E18      	MVI	A,CTRLX
 02F4 C38F01    	JMP	PCHAR
                	;
                DISCOM:				;CHECK LINE FORMAT
 02F7 EB        	XCHG
 02F8 2AA304    	LHLD	DISMAX
 02FB 7D        	MOV	A,L
 02FC 93        	SUB	E
 02FD 6F        	MOV	L,A
 02FE 7C        	MOV	A,H
 02FF 9A        	SBB	D
 0300 EB        	XCHG
 0301 C9        	RET
                	;
                DISPLAY:
 0302 2AB304    	LHLD	SIZE		;[(NOREC)X(128)]-1
 0305 EB        	XCHG
 0306 21D404    	LXI	H,BUFF		;BUFFER LOCATION
 0309 22A704    	SHLD	DISLOC
 030C 19        	DAD	D
                	;
                DISPLAY2:
 030D 22A304    	SHLD	DISMAX
                	;
                DISPLAY3:
 0310 CDAE02    	CALL	PAGE$CHECK
 0313 CDB702    	CALL	CRLF
 0316 CD8702    	CALL	BREAK
 0319 C2D103    	JNZ	STOP		;IF KEY PRESSED THEN QUIT
 031C 2AA704    	LHLD	DISLOC
 031F 22A504    	SHLD	TDISP
 0322 CD9B02    	CALL	PADDR		;PRINT THE LINE ADDRESS
                	;
                DISPLAY4:
 0325 CDC102    	CALL	BLANK
 0328 7E        	MOV	A,M		
 0329 CDAB01    	CALL	PBYTE		;PRINT BYTE
 032C 23        	INX	H		;INCREMENT THE CURRENT BUFFER LOCATION
 032D E5        	PUSH	H		
 032E 2AA904    	LHLD	ALOC		;ALOC IS CURRENT ADDRESS FOR THE DISPLAY
 0331 7D        	MOV	A,L
 0332 E60F      	ANI	0FH
 0334 FE0F      	CPI	0FH		;CHECK IF 16 BYTES PRINTED	
 0336 23        	INX	H		;INCREMENT CURRENT DISPLAY ADDRESS
 0337 22A904    	SHLD	ALOC		;SAVE IT
 033A E1        	POP	H		
 033B C22503    	JNZ	DISPLAY4	;IF NOT THEN CONTINUE
                	;
                DISPLAY5:
 033E 22A704    	SHLD	DISLOC		;SAVE THE CURRENT PLACE
 0341 2AA504    	LHLD	TDISP		;LOAD CURRENT PLACE - 16
CP/M MACRO ASSEM 2.0	#007	CP/M 3 DUMP Utility

 0344 EB        	XCHG
 0345 CDC102    	CALL	BLANK
 0348 CDC102    	CALL    BLANK
                	;
                DISPLAY6:
 034B 1A        	LDAX	D		;GET BYTE
 034C CD8001    	CALL	PGRAPH		;PRINT IF GRAPHIC CHARACTER
 034F 13        	INX	D
 0350 2AA704    	LHLD	DISLOC
 0353 7D        	MOV	A,L
 0354 93        	SUB	E
 0355 C24B03    	JNZ	DISPLAY6
 0358 7C        	MOV	A,H
 0359 92        	SUB	D
 035A C24B03    	JNZ	DISPLAY6
 035D 2AA704    	LHLD	DISLOC
 0360 CDF702    	CALL	DISCOM		;END OF DISPLAY ?
 0363 D8        	RC
 0364 C31003    	JMP	DISPLAY3
                	;
                PINTRO:
 0367 111204    	LXI	D,INTROMESS
 036A CDBA03    	CALL	PRINT
 036D C9        	RET
                	;
                SETMODE:			;THIS ROUTINE ALLOWS ERROR CODES
 036E 0E2D      	MVI	C,ERRMODE	;TO BE DETECTED IN THE ACC. AND
 0370 1EFF      	MVI	E,255		;REG. H INSTEAD OF BDOS ERROR
 0372 CD0500    	CALL	BDOS		;MESSAGES
 0375 0E6D      	MVI	C,CONMODE	;AND ALSO SETS THE CONSOLE STATUS
 0377 110100    	LXI	D,1		;SO THAT ONLY A ^C CAN AFFECT
 037A CD0500    	CALL	BDOS		;FUNCTION 11
 037D C9        	RET
                	;
                CHECK$PAGE:
 037E 0E31      	MVI	C,GETSCB	;GET/SET SCB FUNCTION
 0380 11B504    	LXI	D,PAGE$MODE
 0383 CD0500    	CALL	BDOS
 0386 FE00      	CPI	0
 0388 C0        	RNZ			;RETURN IF MODE IS OFF (FALSE)
 0389 32B904    	STA	PAGE$ON		;SET 'ON' BYTE
 038C 0E31      	MVI	C,GETSCB
 038E 11B704    	LXI	D,PAGE$LEN
 0391 CD0500    	CALL	BDOS
 0394 3D        	DCR	A
 0395 32BA04    	STA	PAGE$SIZE	;STORE PAGE LENGTH (RELATIVE TO ZERO)
 0398 C9        	RET
                	;
                CHECKFILE:
 0399 0E23      	MVI	C,FSIZE
 039B 115C00    	LXI	D,FCB
 039E CD0500    	CALL	BDOS
 03A1 3A7D00    	LDA	FCB+33
 03A4 FE00      	CPI	0
 03A6 C0        	RNZ
 03A7 116D04    	LXI	D,NORECMESS
CP/M MACRO ASSEM 2.0	#008	CP/M 3 DUMP Utility

 03AA CDBA03    	CALL	PRINT
 03AD C3D103    	JMP	STOP
                	;
                CHNGSIZE:			;IF ODD NUMBER OF RECORDS READ
 03B0 32AD04    	STA 	KEEPA		;THIS ROUTINE ADDS 128 OR
 03B3 3E80      	MVI	A,80H		;80H TO THE DISPLAY SIZE
 03B5 6F        	MOV	L,A		;BECAUSE THE ACC. CANNOT DEAL
 03B6 3AAD04    	LDA	KEEPA		;WITH DECIMALS
 03B9 C9        	RET
                	;
                PRINT:				;PRINTS THE STRING WHERE
 03BA 0E09      	MVI	C,PSTRING	;DE ARE POINTING TO
 03BC CD0500    	CALL	BDOS
 03BF C9        	RET
                	;
                NOFILE:
 03C0 0E09      	MVI	C,PSTRING
 03C2 112F04    	LXI	D,NOFMESS
 03C5 CD0500    	CALL	BDOS		;PRINT 'FILE NOT FOUND'
 03C8 C3D103    	JMP	STOP
                	;
                WRNGPASS:	
 03CB 115C04    	LXI	D,BADPASS
 03CE CDBA03    	CALL    PRINT		;PRINT 'FALSE PASSWORD'
                	;
                STOP:				;STOP PROGRAM EXECUTION
 03D1 0E0D      	MVI	C,RESET
 03D3 CD0500    	CALL	BDOS
 03D6 0E00      	MVI	C,RETURN
 03D8 CD0500    	CALL	BDOS
                	;
                BEGIN:
 03DB 31D204    	LXI	SP,STACK
 03DE CD6703    	CALL	PINTRO		;PRINT THE INTRO
 03E1 CD6E03    	CALL	SETMODE		;SET ERROR MODE
 03E4 CD7E03    	CALL	CHECK$PAGE	;CHECK CONSOLE PAGE MODE
 03E7 CDBB01    	 CALL	OPENFILE	;OPEN THE FILE
 03EA CD9903    	CALL	CHECKFILE	;CHECK IF REANY RECORDS EXIST
                	;	
                LOOP:
 03ED C34402    	JMP 	FILLBUFF	;FILL THE BUFFER(S)	
                LOOP2:
 03F0 2E00      	MVI	L,0		;SET L = 0  
 03F2 3AAF04    	LDA	NOREC		;NOREC IS SET BY FILLBUFF ROUTINE
 03F5 1F        	RAR			;(X128) OR (/2)
 03F6 DCB003    	CC	CHNGSIZE	;IF ODD # RECORDS READ THEN CALL THIS ROUTINE
 03F9 67        	MOV	H,A		
 03FA 2B        	DCX	H
 03FB 22B304    	SHLD	SIZE		;NUMBER OF BYTES TO DISPLAY
 03FE D1        	POP	D
 03FF CD0203    	CALL	DISPLAY		;CALL DISPLAY ROUTINE
 0402 3AB004    	LDA	EOF
 0405 FEFF      	CPI	255		
 0407 CAD103    	JZ	STOP		;JUMP IF END OF FILE
 040A 3E00      	MVI	A,0
 040C 32AF04    	STA	NOREC		;RESET # RECORDS READ TO 0
CP/M MACRO ASSEM 2.0	#009	CP/M 3 DUMP Utility

 040F C3ED03    	JMP	LOOP
                	;
                	;****************************
                	;* CONSOLE MESSAGES TO USER *
                	;****************************
 0412 0D0A0A4350INTROMESS:	DB CR,LF,LF,'CP/M 3 DUMP - Version 3.0$'
 042F 0D0A455252NOFMESS:	DB CR,LF,'ERROR: File Not Found',CR,LF,'$'
 0449 0D0A456E74QUEST:		DB CR,LF,'Enter Password: $'
 045C 0D0A506173BADPASS:	DB CR,LF,'Password Error$'
 046D 0D0A455252NORECMESS:	DB CR,LF,'ERROR: No Records Exist$'
 0487 0D0A507265CON$MESS:	DB CR,LF,'Press RETURN to continue $'
                	;
                	;*****************************
                	;* VARIABLE AND STORAGE AREA *
                	;*****************************	
 04A3           DISMAX:		DS 2		;MAX.# REFERENCE
 04A5           TDISP:  	DS 2		;CURRENT BUFFER LOCATION (FOR ASCII)
 04A7           DISLOC: 	DS 2		;CURRENT BUFFER LOOCATION
 04A9 0000      ALOC:   	DW 0		;LINE ADDRESS
 04AB           PLOC:   	DS 2		;CURRENT BUFFER LOCATION STORAGE
 04AD           KEEPA:  	DS 2		;STORAGE FOR ACC.
 04AF 00        NOREC:  	DB 0		;# OF RECORDS READ IN CERTAIN LOOP (1-8)
 04B0 00        EOF:		DB 0 		;END OF FILE FLAG
 04B1 0000      TPASSWD:	DW 0		;TRIED PASSWORD FLAG
 04B3 0000      SIZE:   	DW 0		;DISPLAY SIZE 
 04B5 2C        PAGE$MODE:	DB 02CH		;PAGE MODE OFFSET RELATIVE TO SCB
 04B6 00        		DB 00H
 04B7 1C        PAGE$LEN:	DB 01CH		;PAGE LENGTH OFFSET RELATIVE TO SCB
 04B8 00        		DB 00H
 04B9 FF        PAGE$ON:	DB 0FFH		;PAGE ON/OFF FLAG (0=ON)
 04BA 00        PAGE$SIZE:	DB 00H		;PAGE LENGTH RELATIVE TO ZERO 
 04BB 00        COUNT:		DB 0		;LINE COUNTER
 04BC 0000      LEN:		DW 0		;PASSWORD INPUT LENGTH
 04BE 0000      LEN2:		DW 0		;EXTRA CHARACTER POINTER
 04C0           		DS 12H	
 04D2           STACK:  	DS 2
 04D4           BUFF:		DS 1024		;THE BUFFER (HOLDS UP TO 400H = 1K)
 08D4           END:
