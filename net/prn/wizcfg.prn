                ; A config util for WizNET 550 devices, attached in parallel-SPI interface
                ; Sets config into NVRAM, unless 'w' option prefix to set to WIZ850io directly.
                ;
                ; Commands:
                ;	[w] n <id>		Set node ID
                ;	[w] g <ip>		Set gateway IP addr
                ;	[w] s <ip>		Set sub-network mask
                ;	[w] i <ip>		Set node IP addr
                ;	[w] m <ma>		Set node h/w addr
                ;	[w] 0 <id> <ip> <pt>	Set sock 0
                ;	r			Restore WIZ850io config from NVRAM
                
                	extrn	wizcfg, wizcmd, wizget, wizset, wizclose, setsok, settcp
                	extrn	gkeep,skeep
                	extrn	cksum32, vcksum, scksum, nvget
                
                	public	nvbuf	; for wizcfg routine
                
                	maclib	z80
                
 000D =         CR	equ	13
 000A =         LF	equ	10
                
 0000 =         cpm	equ	0
 0005 =         bdos	equ	5
 0080 =         cmd	equ	0080h
                
 0009 =         print	equ	9
 000C =         getver	equ	12
 0045 =         cfgtbl	equ	69
                
                	cseg
                
 0000 C30300    	jmp	start
                
                	dseg
 0000 4E6F646520idmsg:	db	'Node ID:  $'
 000B 4761746577gwmsg:	db	'Gateway:  $'
 0016 5375626E65ntmsg:	db	'Subnet:   $'
 0021 4D41433A20mcmsg:	db	'MAC:      $'
 002C 4950204164ipmsg:	db	'IP Addr:  $'
                
 0037 57495A4346usage:	db	'WIZCFG version 1.2',CR,LF
 004B 5573616765	db	'Usage: WIZCFG {G|I|S} ipadr',CR,LF
 0068 2020202020	db	'       WIZCFG M macadr',CR,LF
 0080 2020202020	db	'       WIZCFG N cid',CR,LF
 0095 2020202020	db	'       WIZCFG {0..7} sid ipadr port [keep]',CR,LF
 00C1 2020202020	db	'       WIZCFG R',CR,LF
 00D2 5365747320	db	'Sets network config in NVRAM',CR,LF
 00F0 5072656669	db	'Prefix cmd with W to set WIZ850io directly',CR,LF
 011C 5220636D64	db	'R cmd sets WIZ850io from NVRAM',CR,LF
 013C 24        	db	'$'
 013D 5365740D0Adone:	db	'Set',CR,LF,'$'
 0143 536F636B65sock:	db	'Socket '
 014A 4E3A2024  sokn:	db	'N: $'
 014E 2D204E6F74ncfg:	db	'- Not Configured',CR,LF,'$'
 0161 43502F4E45nocpn:	db	'CP/NET is running! Restoring config anyway...',CR,LF,'$'
 0191 4E5652414Dnverr:	db	'NVRAM block not initialized',CR,LF,'$'
 01AF 496E697469newbuf:	db	'Initializing new NVRAM block',CR,LF,'$'
                
                	cseg
                start:
                	sspd	usrstk
 0003+ED73      	DB	0EDH,73H
 0005+F601      	DW	USRSTK
 0007 31F601    	lxi	sp,stack
 000A 0E0C      	mvi	c,getver
 000C CD0500    	call	bdos
 000F 7C        	mov	a,h
 0010 E602      	ani	02h
 0012 CA2200    	jz	nocpnt
 0015 F6FF      	ori	0ffh
 0017 32F901    	sta	cpnet
 001A 0E45      	mvi	c,cfgtbl
 001C CD0500    	call	bdos
 001F 22FA01    	shld	netcfg
                nocpnt:
 0022 3A8000    	lda	cmd
 0025 B7        	ora	a
 0026 CA9E02    	jz	show
                
 0029 218000    	lxi	h,cmd
 002C 46        	mov	b,m
 002D 23        	inx	h
                pars0:
 002E 7E        	mov	a,m
 002F FE20      	cpi	' '
 0031 C23A00    	jnz	pars1
 0034 23        	inx	h
                	djnz	pars0
 0035+10F7      	DB	10H,PARS0-$-1
 0037 C39E02    	jmp	show
                
                pars1:
 003A FE57      	cpi	'W'
 003C C24800    	jnz	notw
 003F 32F801    	sta	direct
 0042 23        	inx	h
                	djnz	pars0
 0043+10E9      	DB	10H,PARS0-$-1
 0045 C39E02    	jmp	show
                notw:
                	; All require pre-read of NVRAM, if not direct
 0048 E5        	push	h
 0049 C5        	push	b
 004A 3AF801    	lda	direct
 004D B7        	ora	a
 004E CC0405    	cz	nvgetb	; init buf if needed
 0051 C1        	pop	b
 0052 E1        	pop	h
 0053 7E        	mov	a,m	; restore cmd
                	; These have no params...
 0054 FE52      	cpi 	'R'
 0056 CA5802    	jz	pars5
                	;
 0059 4F        	mov	c,a
 005A CD4B04    	call	skipb1
 005D DA8802    	jc	help
 0060 79        	mov	a,c
 0061 FE47      	cpi 	'G'
                	lxix	gw
 0063+DD21      	DB	0DDH,21H
 0065+FD01      	DW	GW
 0067 110100    	lxi	d,GAR
 006A CACA01    	jz	pars2
 006D FE49      	cpi 	'I'
                	lxix	ip
 006F+DD21      	DB	0DDH,21H
 0071+0B02      	DW	IP
 0073 110F00    	lxi	d,SIPR
 0076 CACA01    	jz	pars2
 0079 FE53      	cpi 	'S'
                	lxix	msk
 007B+DD21      	DB	0DDH,21H
 007D+0102      	DW	MSK
 007F 110500    	lxi	d,SUBR
 0082 CACA01    	jz	pars2
 0085 FE4D      	cpi 	'M'
 0087 CAB501    	jz	pars3
 008A FE4E      	cpi 	'N'
 008C CAA001    	jz	pars4
 008F FE30      	cpi	'0'
 0091 DA8802    	jc	help
 0094 FE38      	cpi	'7'+1
 0096 D28802    	jnc	help
                
                ; Parse new Socket config
 0099 324A01    	sta	sokn
                	; parse <srvid> <ipadr> <port>
 009C 0E00      	mvi	c,0	; NUL won't ever be seen
 009E CD7204    	call	parshx
 00A1 DA8802    	jc	help
 00A4 3E31      	mvi	a,31h
 00A6 322202    	sta	nskpt
 00A9 7A        	mov	a,d	; server ID
 00AA 322302    	sta	nskpt+1
 00AD CD4D04    	call	skipb
 00B0 DA8802    	jc	help
                	lxix	nskip
 00B3+DD21      	DB	0DDH,21H
 00B5+2A02      	DW	NSKIP
 00B7 CDA104    	call	parsadr
 00BA DA8802    	jc	help
 00BD CD4D04    	call	skipb
 00C0 DA8802    	jc	help
 00C3 CDD304    	call	parsnm
 00C6 DA8802    	jc	help
 00C9 7A        	mov	a,d
 00CA 322E02    	sta	nskdpt
 00CD 7B        	mov	a,e
 00CE 322F02    	sta	nskdpt+1
                	; optional keep-alive timeout
 00D1 AF        	xra	a
 00D2 323002    	sta	nskkp
 00D5 CD4D04    	call	skipb
 00D8 DAF100    	jc	nokp
 00DB 78        	mov	a,b
 00DC B7        	ora	a
 00DD C4D304    	cnz	parsnm
 00E0 DA8802    	jc	help
 00E3 CD1304    	call	div5
 00E6 7A        	mov	a,d
 00E7 B7        	ora	a
 00E8 CAED00    	jz	nokp0
 00EB 1EFF      	mvi	e,0ffh	; max keepalive
 00ED 7B        nokp0:	mov	a,e
 00EE 323002    	sta	nskkp
                nokp:
                ; Now prepare to update socket config
 00F1 3AF801    	lda	direct
 00F4 B7        	ora	a
 00F5 CA6201    	jz	nvsok
                	; set Sn_MR separate, to avoid writing CR and SR...
 00F8 CD9302    	call	getsokn
 00FB 57        	mov	d,a
 00FC D5        	push	d
 00FD CD0000    	call	settcp	; force TCP mode
 0100 3A3002    	lda	nskkp
 0103 CD0000    	call	skeep	; set keep-alive
                	; Get current values, cleanup as needed
 0106 210F02    	lxi	h,sokregs
 0109 1E00      	mvi	e,SnMR
 010B 0612      	mvi	b,soklen
 010D CD0000    	call	wizget
 0110 211502    	lxi	h,sokmac
 0113 112402    	lxi	d,nskmac
 0116 010600    	lxi	b,6
                	ldir
 0119+EDB0      	DB	0EDH,0B0H
 011B 3A1302    	lda	sokpt
 011E FE31      	cpi	31h
 0120 C24801    	jnz	ntcpnet	; don't care about sockets not configured
 0123 3AF901    	lda	cpnet
 0126 B7        	ora	a
 0127 CA4801    	jz	ntcpnet	; skip CFGTBL cleanup if not CP/NET
                	; remove all refs to this server...
 012A 3A1402    	lda	sokpt+1	; server node ID
 012D 4F        	mov	c,a
 012E 2AFA01    	lhld	netcfg
 0131 0612      	mvi	b,18	; 16 drives, CON:, LST:
 0133 23        	inx	h
 0134 23        	inx	h
 0135 7E        cln0:	mov	a,m
 0136 B7        	ora	a
 0137 F24401    	jp	ntnet	; device not networked
 013A 23        	inx	h
 013B 7E        	mov	a,m
 013C B9        	cmp	c	; same server?
 013D C24501    	jnz	ntnet1
 0140 AF        	xra	a
 0141 77        	mov	m,a
 0142 2B        	dcx	h
 0143 77        	mov	m,a
 0144 23        ntnet:	inx	h
 0145 23        ntnet1:	inx	h
                	djnz	cln0
 0146+10ED      	DB	10H,CLN0-$-1
                ntcpnet:
 0148 3A1202    	lda	sokmr+SnSR
 014B FE00      	cpi	CLOSED
 014D CA5701    	jz	ntopn
 0150 D1        	pop	d
 0151 D5        	push	d
 0152 3E08      	mvi	a,DISCON
 0154 CD0000    	call	wizcmd
                	; don't care about results?
 0157 212202    ntopn:	lxi	h,newsok
 015A D1        	pop	d
 015B 1E04      	mvi	e,SnPORT
 015D 060E      	mvi	b,soklen-SnPORT
 015F C3ED01    	jmp	setit
                nvsok:
 0162 3A4A01    	lda	sokn
 0165 D630      	sui	'0'	; 00000sss
 0167 0F        	rrc
 0168 0F        	rrc
 0169 0F        	rrc		; sss00000 or sokn * 32
 016A 5F        	mov	e,a
 016B 1600      	mvi	d,0
                	lxix	nvbuf+32	; socket 0 buffer
 016D+DD21      	DB	0DDH,21H
 016F+5102      	DW	NVBUF+32
                	dadx	d
 0171+DD19      	DB	0DDH,D*8+09H
 0173 2A2202    	lhld	nskpt	; big endian data, little endian load...
                	stx	l,SnPORT
 0176+DD7504    	DB	0DDH,70H+L,SNPORT
                	stx	h,SnPORT+1
 0179+DD7405    	DB	0DDH,70H+H,SNPORT+1
 017C 2A2A02    	lhld	nskip	; little endian load...
                	stx	l,SnDIPR
 017F+DD750C    	DB	0DDH,70H+L,SNDIPR
                	stx	h,SnDIPR+1
 0182+DD740D    	DB	0DDH,70H+H,SNDIPR+1
 0185 2A2C02    	lhld	nskip+2	; little endian load...
                	stx	l,SnDIPR+2
 0188+DD750E    	DB	0DDH,70H+L,SNDIPR+2
                	stx	h,SnDIPR+3
 018B+DD740F    	DB	0DDH,70H+H,SNDIPR+3
 018E 2A2E02    	lhld	nskdpt	; big endian data, little endian load...
                	stx	l,SnDPORT
 0191+DD7510    	DB	0DDH,70H+L,SNDPORT
                	stx	h,SnDPORT+1
 0194+DD7411    	DB	0DDH,70H+H,SNDPORT+1
 0197 3A3002    	lda	nskkp
                	stx	a,NvKPALVTR	; force to 00 if not set
 019A+DD771D    	DB	0DDH,70H+A,NVKPALVTR
 019D C37002    	jmp	nvsetit
                
                pars4:
 01A0 CD7204    	call	parshx
 01A3 DA8802    	jc	help
 01A6 7A        	mov	a,d
 01A7 32FC01    	sta	wizmag
 01AA 21FC01    	lxi	h,wizmag
 01AD 111D00    	lxi	d,PMAGIC
 01B0 0601      	mvi	b,1
 01B2 C3D701    	jmp	setit0
                
                pars3:
                	lxix	mac
 01B5+DD21      	DB	0DDH,21H
 01B7+0502      	DW	MAC
                	pushix
 01B9+DDE5      	DB	0DDH,0E5H
 01BB CD5A04    	call	parsmac
 01BE E1        	pop	h
 01BF DA8802    	jc	help
 01C2 110900    	lxi	d,SHAR
 01C5 0606      	mvi	b,6
 01C7 C3D701    	jmp	setit0
                
                pars2:
                	pushix
 01CA+DDE5      	DB	0DDH,0E5H
 01CC D5        	push	d
 01CD CDA104    	call	parsadr
 01D0 D1        	pop	d
 01D1 E1        	pop	h
 01D2 DA8802    	jc	help
 01D5 0604      	mvi	b,4
                	; got it...
                setit0:
 01D7 3AF801    	lda	direct
 01DA B7        	ora	a
 01DB C2ED01    	jnz	setit
 01DE E5        	push	h
 01DF 213102    	lxi	h,nvbuf
 01E2 19        	dad	d
 01E3 EB        	xchg
 01E4 E1        	pop	h
 01E5 48        	mov	c,b
 01E6 0600      	mvi	b,0
                	ldir
 01E8+EDB0      	DB	0EDH,0B0H
 01EA C37002    	jmp	nvsetit
                setit:
 01ED CD0000    	call	wizset
                
                	;lxi	d,done
                	;mvi	c,print
                	;call	bdos
 01F0 C38002    	jmp	exit
                
                nvshow:	; show config from NVRAM
                	lxix	nvbuf
 01F3+DD21      	DB	0DDH,21H
 01F5+3102      	DW	NVBUF
 01F7 210000    	lxi	h,0
 01FA 110002    	lxi	d,512
 01FD CD0000    	call	nvget
 0200 CD0000    	call	vcksum
 0203 C28302    	jnz	cserr
 0206 3A4E02    	lda	nvbuf+PMAGIC
 0209 CD8A05    	call	shid
 020C 214002    	lxi	h,nvbuf+SIPR
 020F 112C00    	lxi	d,ipmsg
 0212 CD9F05    	call	ship
 0215 213202    	lxi	h,nvbuf+GAR
 0218 110B00    	lxi	d,gwmsg
 021B CD9F05    	call	ship
 021E 213602    	lxi	h,nvbuf+SUBR
 0221 111600    	lxi	d,ntmsg
 0224 CD9F05    	call	ship
 0227 213A02    	lxi	h,nvbuf+SHAR
 022A CDAC05    	call	shmac
 022D 215102    	lxi	h,nvbuf+32	; socket 0 buffer
 0230 0608      	mvi	b,nsock
                shnvsk0:
 0232 C5        	push	b
 0233 110F02    	lxi	d,sokregs
 0236 011200    	lxi	b,soklen
                	ldir
 0239+EDB0      	DB	0EDH,0B0H
 023B 110B00    	lxi	d,NvKPALVTR-soklen
 023E 19        	dad	d
 023F 7E        	mov	a,m
 0240 322102    	sta	sokkp
 0243 110300    	lxi	d,32-NvKPALVTR
 0246 19        	dad	d	; next socket buf
 0247 C1        	pop	b
 0248 C5        	push	b
 0249 E5        	push	h
 024A 3E08      	mvi	a,nsock
 024C 90        	sub	b	; 0..7
 024D 5F        	mov	e,a
 024E CD0A03    	call	showsok
 0251 E1        	pop	h
 0252 C1        	pop	b
                	djnz	shnvsk0
 0253+10DD      	DB	10H,SHNVSK0-$-1
 0255 C38002    	jmp	exit
                
                pars5:	; restore config from NVRAM
 0258 3AF901    	lda	cpnet
 025B B7        	ora	a
 025C CA6702    	jz	xocpnt
 025F 116101    	lxi	d,nocpn
 0262 0E09      	mvi	c,print
 0264 CD0500    	call	bdos
                xocpnt:
 0267 CD0000    	call	wizcfg
 026A DA8302    	jc	cserr
 026D C38002    	jmp	exit
                	;...
                
                nvsetit:
                	lxix	nvbuf
 0270+DD21      	DB	0DDH,21H
 0272+3102      	DW	NVBUF
 0274 CD0000    	call	scksum
 0277 210000    	lxi	h,0	; WIZNET uses 512 bytes at 0000 in NVRAM
 027A 110002    	lxi	d,512
 027D CD3B05    	call	nvset
                	;lxi	d,done
                	;mvi	c,print
                	;call	bdos
                	;jmp	exit
                exit:
 0280 C30000    	jmp	cpm
                
 0283 119101    cserr:	lxi	d,nverr
                	jr	xtmsg
 0286+1803      	DB	18H,XTMSG-$-1
                
                help:
 0288 113700    	lxi	d,usage
 028B 0E09      xtmsg:	mvi	c,print
 028D CD0500    	call	bdos
 0290 C38002    	jmp	exit
                
                ; Convert 'sokn' (ASCII digit) to socket BSB
                getsokn:
 0293 3A4A01    	lda	sokn
 0296 D630      	sui	'0'
 0298 0F        	rrc
 0299 0F        	rrc
 029A 0F        	rrc		; xxx00000
 029B F608      	ori	SOCK0	; xxx01000
 029D C9        	ret
                
                show:
 029E 3AF801    	lda	direct
 02A1 B7        	ora	a
 02A2 CAF301    	jz	nvshow
 02A5 21FD01    	lxi	h,comregs
 02A8 110100    	lxi	d,GAR
 02AB 0612      	mvi	b,comlen
 02AD CD0000    	call	wizget
 02B0 21FC01    	lxi	h,wizmag
 02B3 111D00    	lxi	d,PMAGIC
 02B6 0601      	mvi	b,1
 02B8 CD0000    	call	wizget
                
 02BB 3AFC01    	lda	wizmag
 02BE CD8A05    	call	shid
                
 02C1 210B02    	lxi	h,ip
 02C4 112C00    	lxi	d,ipmsg
 02C7 CD9F05    	call	ship
                
 02CA 21FD01    	lxi	h,gw
 02CD 110B00    	lxi	d,gwmsg
 02D0 CD9F05    	call	ship
                
 02D3 210102    	lxi	h,msk
 02D6 111600    	lxi	d,ntmsg
 02D9 CD9F05    	call	ship
                
 02DC 210502    	lxi	h,mac
 02DF CDAC05    	call	shmac
                
 02E2 110008    	lxi	d,SOCK0 shl 8	; E=0
 02E5 0608      	mvi	b,nsock
 02E7 C5        show0:	push	b
 02E8 D5        	push	d
 02E9 1E00      	mvi	e,0
 02EB 210F02    	lxi	h,sokregs
 02EE 0612      	mvi	b,soklen
 02F0 CD0000    	call	wizget
 02F3 CD0000    	call	gkeep
 02F6 322102    	sta	sokkp
 02F9 D1        	pop	d
 02FA D5        	push	d
 02FB CD0A03    	call	showsok
 02FE D1        	pop	d
 02FF C1        	pop	b
 0300 1C        	inr	e
 0301 3E20      	mvi	a,001$00$000b	; socket BSB incr value
 0303 82        	add	d
 0304 57        	mov	d,a
                	djnz	show0
 0305+10E0      	DB	10H,SHOW0-$-1
                
 0307 C38002    	jmp	exit
                
                showsok:
 030A 7B        	mov	a,e
 030B C630      	adi	'0'
 030D 324A01    	sta	sokn
 0310 114301    	lxi	d,sock
 0313 0E09      	mvi	c,print
 0315 CD0500    	call	bdos
 0318 3A1302    	lda	sokpt
 031B FE31      	cpi	31h
 031D C25803    	jnz	nocfg
 0320 3A1402    	lda	sokpt+1
 0323 CD3704    	call	hexout
 0326 3E48      	mvi	a,'H'
 0328 CD8503    	call	chrout
 032B 3E20      	mvi	a,' '
 032D CD8503    	call	chrout
 0330 211B02    	lxi	h,sokip
 0333 CD7303    	call	ipout
 0336 3E20      	mvi	a,' '
 0338 CD8503    	call	chrout
 033B 3A1F02    	lda	sokdpt
 033E 57        	mov	d,a
 033F 3A2002    	lda	sokdpt+1
 0342 5F        	mov	e,a
 0343 CDA903    	call	dec16
 0346 3E20      	mvi	a,' '
 0348 CD8503    	call	chrout
 034B 3A2102    	lda	sokkp
 034E CD2904    	call	mult5
 0351 CDA903    	call	dec16
 0354 CD9E03    	call	crlf
 0357 C9        	ret
                
 0358 114E01    nocfg:	lxi	d,ncfg
 035B 0E09      	mvi	c,print
 035D CD0500    	call	bdos
 0360 C9        	ret
                
                hwout:
 0361 0606      	mvi	b,6
 0363 0E3A      	mvi	c,':'
 0365 7E        hw0:	mov	a,m
 0366 CD3704    	call	hexout
 0369 05        	dcr	b
 036A C8        	rz
 036B 79        	mov	a,c
 036C CD8503    	call	chrout
 036F 23        	inx	h
 0370 C36503    	jmp	hw0
                
                ipout:
 0373 0604      	mvi	b,4
 0375 0E2E      	mvi	c,'.'
 0377 7E        ip0:	mov	a,m
 0378 CDE503    	call	decout
 037B 05        	dcr	b
 037C C8        	rz
 037D 79        	mov	a,c
 037E CD8503    	call	chrout
 0381 23        	inx	h
 0382 C37703    	jmp	ip0
                
                chrout:
 0385 E5        	push	h
 0386 D5        	push	d
 0387 C5        	push	b
 0388 5F        	mov	e,a
 0389 0E02      	mvi	c,002h
 038B CD0500    	call	bdos
 038E C1        	pop	b
 038F D1        	pop	d
 0390 E1        	pop	h
 0391 C9        	ret
                
                getsts:
 0392 0E44      	mvi	c,044h
 0394 CD0500    	call	bdos
 0397 C9        	ret
                
                getcfg:
 0398 0E45      	mvi	c,045h
 039A CD0500    	call	bdos
 039D C9        	ret
                
                crlf:
 039E 3E0D      	mvi	a,CR
 03A0 CD8503    	call	chrout
 03A3 3E0A      	mvi	a,LF
 03A5 CD8503    	call	chrout
 03A8 C9        	ret
                
                dec16:
 03A9 EB        	xchg	; remainder in HL
 03AA 0E00      	mvi	c,0
 03AC 111027    	lxi	d,10000
 03AF CDCB03    	call	div16
 03B2 11E803    	lxi	d,1000
 03B5 CDCB03    	call	div16
 03B8 116400    	lxi	d,100
 03BB CDCB03    	call	div16
 03BE 110A00    	lxi	d,10
 03C1 CDCB03    	call	div16
 03C4 7D        	mov	a,l
 03C5 C630      	adi	'0'
 03C7 CD8503    	call	chrout
 03CA C9        	ret
                
 03CB 0600      div16:	mvi	b,0
 03CD B7        dv0:	ora	a
                	dsbc	d
 03CE+ED52      	DB	0EDH,D*8+42H
 03D0 04        	inr	b
                	jrnc	dv0
 03D1+30FA      	DB	30H,DV0-$-1
 03D3 19        	dad	d
 03D4 05        	dcr	b
                	jrnz	dv1
 03D5+2005      	DB	20H,DV1-$-1
                	bit	0,c
 03D7+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	dv1
 03D9+2001      	DB	20H,DV1-$-1
 03DB C9        	ret
                dv1:	setb	0,c
 03DC+CBC1      	DB	0CBH,0*8+C+0C0H
 03DE 3E30      	mvi	a,'0'
 03E0 80        	add	b
 03E1 CD8503    	call	chrout
 03E4 C9        	ret
                
                ; A=number to print
                ; leading zeroes blanked - must preserve B
                decout:
 03E5 C5        	push	b
 03E6 0E00      	mvi	c,0
 03E8 1664      	mvi	d,100
 03EA CDF903    	call	divide
 03ED 160A      	mvi	d,10
 03EF CDF903    	call	divide
 03F2 C630      	adi	'0'
 03F4 CD8503    	call	chrout
 03F7 C1        	pop	b
 03F8 C9        	ret
                
 03F9 1E00      divide:	mvi	e,0
 03FB 92        div0:	sub	d
 03FC 1C        	inr	e
                	jrnc	div0
 03FD+30FC      	DB	30H,DIV0-$-1
 03FF 82        	add	d
 0400 1D        	dcr	e
                	jrnz	div1
 0401+2005      	DB	20H,DIV1-$-1
                	bit	0,c
 0403+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	div1
 0405+2001      	DB	20H,DIV1-$-1
 0407 C9        	ret
                div1:	setb	0,c
 0408+CBC1      	DB	0CBH,0*8+C+0C0H
 040A F5        	push	psw	; remainder
 040B 3E30      	mvi	a,'0'
 040D 83        	add	e
 040E CD8503    	call	chrout
 0411 F1        	pop	psw	; remainder
 0412 C9        	ret
                
                ; brute-force divide DE by 5
                ; Return: DE=quotient (remainder lost)
 0413 E5        div5:	push	h
 0414 C5        	push	b
 0415 EB        	xchg
 0416 010500    	lxi	b,5
 0419 110000    	lxi	d,0
 041C B7        	ora	a
                div50:	dsbc	b
 041D+ED42      	DB	0EDH,B*8+42H
 041F DA2604    	jc	div51
 0422 13        	inx	d
 0423 C31D04    	jmp	div50
 0426 C1        div51:	pop	b
 0427 E1        	pop	h
 0428 C9        	ret
                
                ; Multiply A by 5, result in DE
 0429 EB        mult5:	xchg	; save HL
 042A 6F        	mov	l,a
 042B 2600      	mvi	h,0
 042D 29        	dad	h	; *2
 042E 29        	dad	h	; *4
 042F 85        	add	l	; *5
 0430 6F        	mov	l,a
 0431 3E00      	mvi	a,0
 0433 8C        	adc	h
 0434 67        	mov	h,a
 0435 EB        	xchg	; result to DE, restore HL
 0436 C9        	ret
                
                hexout:
 0437 F5        	push	psw
 0438 0F        	rrc
 0439 0F        	rrc
 043A 0F        	rrc
 043B 0F        	rrc
 043C CD4004    	call	hexdig
 043F F1        	pop	psw
                	;jmp	hexdig
                hexdig:
 0440 E60F      	ani	0fh
 0442 C690      	adi	90h
 0444 27        	daa
 0445 CE40      	aci	40h
 0447 27        	daa
 0448 C38503    	jmp	chrout
                
                skipb1:	; skip character, then skip blanks
 044B 23        	inx	h
 044C 05        	dcr	b
                skipb:	; skip blanks
 044D 78        	mov	a,b
 044E B7        	ora	a
 044F 37        	stc
 0450 C8        	rz
 0451 7E        skip0:	mov	a,m
 0452 FE20      	cpi	' '
 0454 C0        	rnz	; no carry?
 0455 23        	inx	h
                	djnz	skip0
 0456+10F9      	DB	10H,SKIP0-$-1
 0458 37        	stc
 0459 C9        	ret
                
                ; IX=destination
                parsmac:
 045A 0E3A      	mvi	c,':'
                pm00:
 045C CD7204    	call	parshx
 045F D8        	rc
 0460 CA6804    	jz	pm1	; hit term char
                	; TODO: check for 6 bytes...
                	stx	d,+0
 0463+DD7200    	DB	0DDH,70H+D,+0
 0466 B7        	ora	a	; NC
 0467 C9        	ret
                pm1:
                	stx	d,+0
 0468+DD7200    	DB	0DDH,70H+D,+0
                	inxix
 046B+DD23      	DB	0DDH,23H
 046D 23        	inx	h
                	djnz	pm00
 046E+10EC      	DB	10H,PM00-$-1
                	; error if ends here...
 0470 37        	stc
 0471 C9        	ret
                
                
                ; C=term char
                ; returns CY if error, Z if term char, NZ end of text
                parshx:
 0472 1600      	mvi	d,0
 0474 7E        pm0:	mov	a,m
 0475 B9        	cmp	c
 0476 C8        	rz
 0477 FE20      	cpi	' '
 0479 CA9E04    	jz	nzret
 047C D630      	sui	'0'
 047E D8        	rc
 047F FE0A      	cpi	'9'-'0'+1
 0481 DA8D04    	jc	pm3
 0484 D611      	sui	'A'-'0'
 0486 D8        	rc
 0487 FE06      	cpi	'F'-'A'+1
 0489 3F        	cmc
 048A D8        	rc
 048B C60A      	adi	10
                pm3:
 048D E60F      	ani	0fh
 048F 5F        	mov	e,a
 0490 7A        	mov	a,d
 0491 87        	add	a
 0492 D8        	rc
 0493 87        	add	a
 0494 D8        	rc
 0495 87        	add	a
 0496 D8        	rc
 0497 87        	add	a
 0498 D8        	rc
 0499 83        	add	e	; carry not possible
 049A 57        	mov	d,a
 049B 23        	inx	h
                	djnz	pm0
 049C+10D6      	DB	10H,PM0-$-1
                nzret:
 049E AF        	xra	a
 049F 3C        	inr	a	; NZ
 04A0 C9        	ret
                
                ; IX=destination
                parsadr:
 04A1 0E2E      	mvi	c,'.'
                pa00:
 04A3 1600      	mvi	d,0
 04A5 7E        pa0:	mov	a,m
 04A6 B9        	cmp	c
 04A7 CAC904    	jz	pa1
 04AA FE20      	cpi	' '
 04AC CAC404    	jz	pa2
 04AF FE30      	cpi	'0'
 04B1 D8        	rc
 04B2 FE3A      	cpi	'9'+1
 04B4 3F        	cmc
 04B5 D8        	rc
 04B6 E60F      	ani	0fh
 04B8 5F        	mov	e,a
 04B9 7A        	mov	a,d
 04BA 87        	add	a	; *2
 04BB 87        	add	a	; *4
 04BC 82        	add	d	; *5
 04BD 87        	add	a	; *10
 04BE 83        	add	e
 04BF D8        	rc
 04C0 57        	mov	d,a
 04C1 23        	inx	h
                	djnz	pa0
 04C2+10E1      	DB	10H,PA0-$-1
                pa2:
                	; TODO: check for 4 bytes...
                	stx	d,+0
 04C4+DD7200    	DB	0DDH,70H+D,+0
 04C7 B7        	ora	a
 04C8 C9        	ret
                
                pa1:
                	stx	d,+0
 04C9+DD7200    	DB	0DDH,70H+D,+0
                	inxix
 04CC+DD23      	DB	0DDH,23H
 04CE 23        	inx	h
                	djnz	pa00
 04CF+10D2      	DB	10H,PA00-$-1
                	; error if ends here...
 04D1 37        	stc
 04D2 C9        	ret
                
                ; Parse a 16-bit (max) decimal number
                parsnm:
 04D3 110000    	lxi	d,0
 04D6 7E        pd0:	mov	a,m
 04D7 FE20      	cpi	' '
 04D9 C8        	rz
 04DA FE30      	cpi	'0'
 04DC D8        	rc
 04DD FE3A      	cpi	'9'+1
 04DF 3F        	cmc
 04E0 D8        	rc
 04E1 E60F      	ani	0fh
 04E3 E5        	push	h
 04E4 62        	mov	h,d
 04E5 6B        	mov	l,e
 04E6 29        	dad	h	; *2
 04E7 DA0205    	jc	pd1
 04EA 29        	dad	h	; *4
 04EB DA0205    	jc	pd1
 04EE 19        	dad	d	; *5
 04EF DA0205    	jc	pd1
 04F2 29        	dad	h	; *10
 04F3 DA0205    	jc	pd1
 04F6 5F        	mov	e,a
 04F7 1600      	mvi	d,0
 04F9 19        	dad	d
 04FA EB        	xchg
 04FB E1        	pop	h
 04FC D8        	rc
 04FD 23        	inx	h
                	djnz	pd0
 04FE+10D6      	DB	10H,PD0-$-1
 0500 B7        	ora	a	; NC
 0501 C9        	ret
                
 0502 E1        pd1:	pop	h
 0503 C9        	ret	; CY still set
                
                
                ; Get a block of data from NVRAM to 'buf'
                ; Verify checksum, init block if needed.
                nvgetb:
                	lxix	nvbuf
 0504+DD21      	DB	0DDH,21H
 0506+3102      	DW	NVBUF
 0508 210000    	lxi	h,0
 050B 110002    	lxi	d,512
 050E CD0000    	call	nvget
 0511 CD0000    	call	vcksum
 0514 C8        	rz	; chksum OK, ready to update/use
 0515 11AF01    	lxi	d,newbuf
 0518 0E09      	mvi	c,print
 051A CD0500    	call	bdos
 051D 213102    	lxi	h,nvbuf
 0520 36FF      	mvi	m,0ffh
 0522 54        	mov	d,h
 0523 5D        	mov	e,l
 0524 23        	inx	h
 0525 01FF01    	lxi	b,511
                	ldir
 0528+EDB0      	DB	0EDH,0B0H
 052A C9        	ret
                
                ; NOTE: this delay varies with CPU clock speed.
                msleep:
 052B E5        	push	h
 052C F5        mslp0:	push	psw
 052D 214F00    	lxi	h,79	; ~1mS at 2.048MHz (200uS at 10.24MHz)
 0530 2B        mslp1:	dcx	h
 0531 7C        	mov	a,h
 0532 B5        	ora	l
                	jrnz	mslp1
 0533+20FB      	DB	20H,MSLP1-$-1
 0535 F1        	pop	psw
 0536 3D        	dcr	a
                	jrnz	mslp0
 0537+20F3      	DB	20H,MSLP0-$-1
 0539 E1        	pop	h
 053A C9        	ret
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                ; These defines should be in a common file...
 0040 =         spi	equ	40h
                
 0040 =         spi?dat	equ	spi+0
 0041 =         spi?ctl	equ	spi+1
 0041 =         spi?sts	equ	spi+1
                
 0002 =         NVSCS	equ	10b	; H8xSPI SCS for NVRAM
                
                ; Standard W5500 register offsets
 0001 =         GAR	equ	1	; offset of GAR, etc.
 0005 =         SUBR	equ	5
 0009 =         SHAR	equ	9
 000F =         SIPR	equ	15
 001D =         PMAGIC	equ	29	; used for node ID
                
 0008 =         nsock	equ	8
 0008 =         SOCK0	equ	000$01$000b
 0028 =         SOCK1	equ	001$01$000b
 0048 =         SOCK2	equ	010$01$000b
 0068 =         SOCK3	equ	011$01$000b
 0088 =         SOCK4	equ	100$01$000b
 00A8 =         SOCK5	equ	101$01$000b
 00C8 =         SOCK6	equ	110$01$000b
 00E8 =         SOCK7	equ	111$01$000b
                
 0000 =         SnMR	equ	0
 0001 =         SnCR	equ	1
 0002 =         SnIR	equ	2
 0003 =         SnSR	equ	3
 0004 =         SnPORT	equ	4
 000C =         SnDIPR	equ	12
 0010 =         SnDPORT	equ	16
 0014 =         SnRESV1 equ     20      ; 0x14 reserved
 0017 =         SnRESV2 equ     23      ; 0x17 reserved
 0018 =         SnRESV3 equ     24      ; 0x18 reserved
 0019 =         SnRESV4 equ     25      ; 0x19 reserved
 001A =         SnRESV5 equ     26      ; 0x1a reserved
 001B =         SnRESV6 equ     27      ; 0x1b reserved
 001C =         SnRESV7 equ     28      ; 0x1c reserved
 001D =         SnRESV8 equ     29      ; 0x1d reserved
 001F =         SnTXBUF	equ	31	; TXBUF_SIZE
                
 001D =         NvKPALVTR equ	SnRESV8	; where to stash keepalive in NVRAM
 002F =         SnKPALVTR equ	47	; Keep alive timeout, 5s units
                
                ; Socket SR values
 0000 =         CLOSED	equ	00h
                
                ; Socket CR commands
 0008 =         DISCON	equ	08h
                
                ; Standard NVRAM defines
                
                ; NVRAM/SEEPROM commands
 0003 =         NVRD	equ	00000011b
 0002 =         NVWR	equ	00000010b
 0005 =         RDSR	equ	00000101b
 0006 =         WREN	equ	00000110b
                ; NVRAM/SEEPROM status bits
 0001 =         WIP	equ	00000001b
                
                ; Put block of data to NVRAM from 'buf'
                ; HL = nvram address, DE = length
                ; Must write in 128-byte blocks (pages).
                ; HL must be 128-byte aligned, DE must be multiple of 128
                nvset:
 053B E5        	push	h
 053C 213102    	lxi	h,nvbuf	; HL = buf, TOS = nvadr
 053F 0E41      	mvi	c,spi?ctl
                nvset0:
                	; wait for WIP=0...
 0541 3E02      	mvi	a,NVSCS
                	outp	a
 0543+ED79      	DB	0EDH,A*8+41H
 0545 3E05      	mvi	a,RDSR
 0547 D340      	out	spi?dat
 0549 DB40      	in	spi?dat	; prime pump
 054B DB40      	in	spi?dat	; status register
 054D F5        	push	psw
 054E AF        	xra	a
                	outp	a	; not SCS
 054F+ED79      	DB	0EDH,A*8+41H
 0551 F1        	pop	psw
 0552 E601      	ani	WIP
                	jrnz	nvset0
 0554+20EB      	DB	20H,NVSET0-$-1
 0556 3E02      	mvi	a,NVSCS
                	outp	a
 0558+ED79      	DB	0EDH,A*8+41H
 055A 3E06      	mvi	a,WREN
 055C D340      	out	spi?dat
 055E AF        	xra	a
                	outp	a	; not SCS
 055F+ED79      	DB	0EDH,A*8+41H
 0561 3E02      	mvi	a,NVSCS
                	outp	a
 0563+ED79      	DB	0EDH,A*8+41H
 0565 3E02      	mvi	a,NVWR
 0567 D340      	out	spi?dat
 0569 E3        	xthl	; get nvadr
 056A 7C        	mov	a,h
 056B D340      	out	spi?dat
 056D 7D        	mov	a,l
 056E D340      	out	spi?dat
 0570 018000    	lxi	b,128
 0573 09        	dad	b	; update nvadr
 0574 EB        	xchg
 0575 B7        	ora	a
                	dsbc	b	; update length
 0576+ED42      	DB	0EDH,B*8+42H
 0578 EB        	xchg
 0579 E3        	xthl	; get buf adr
 057A 41        	mov	b,c	; B = 128
 057B 0E40      	mvi	c,spi?dat
                	outir		; HL = next page in 'buf'
 057D+EDB3      	DB	0EDH,0B3H
 057F 0E41      	mvi	c,spi?ctl
 0581 AF        	xra	a
                	outp	a	; not SCS
 0582+ED79      	DB	0EDH,A*8+41H
                ;	mvi	a,50
                ;	call	msleep	; wait for WIP to go "1"?
 0584 7B        	mov	a,e
 0585 B2        	ora	d
                	jrnz	nvset0
 0586+20B9      	DB	20H,NVSET0-$-1
 0588 E1        	pop	h
 0589 C9        	ret
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                
                ; A = PMAGIC
 058A F5        shid:	push	psw
 058B 110000    	lxi	d,idmsg
 058E 0E09      	mvi	c,print
 0590 CD0500    	call	bdos
 0593 F1        	pop	psw
 0594 CD3704    	call	hexout
 0597 3E48      	mvi	a,'H'
 0599 CD8503    	call	chrout
 059C C39E03    	jmp	crlf
                
                ; HL = IP addr, DE = prefix msg
 059F E5        ship:	push	h
 05A0 0E09      	mvi	c,print
 05A2 CD0500    	call	bdos
 05A5 E1        	pop	h
 05A6 CD7303    	call	ipout
 05A9 C39E03    	jmp	crlf
                
                ; HL = mac addr
 05AC E5        shmac:	push	h
 05AD 112100    	lxi	d,mcmsg
 05B0 0E09      	mvi	c,print
 05B2 CD0500    	call	bdos
 05B5 E1        	pop	h
 05B6 CD6103    	call	hwout
 05B9 C39E03    	jmp	crlf
                
                	dseg
 01CE           	ds	40
 01F6           stack:	ds	0
 01F6 0000      usrstk:	dw	0
                
 01F8 00        direct:	db	0
 01F9 00        cpnet:	db	0
 01FA 0000      netcfg:	dw	0
                
 01FC 00        wizmag:	db	0	; used as client (node) ID
                
                comregs:
 01FD           gw:	ds	4
 0201           msk:	ds	4
 0205           mac:	ds	6
 020B           ip:	ds	4
 0012 =         comlen	equ	$-comregs
                
                sokregs:
 020F           sokmr:	ds	4	; MR, CR, IR, SR
 0213           sokpt:	ds	2	; PORT
 0215           sokmac:	ds	6	; DHAR
 021B           sokip:	ds	4	; DIPR
 021F           sokdpt:	ds	2	; DPORT
 0012 =         soklen	equ	$-sokregs
 0221           sokkp:	ds	1
                
                newsok:
 0222           nskpt:	ds	2	; PORT
 0224           nskmac:	ds	6	; DHAR
 022A           nskip:	ds	4	; DIPR
 022E           nskdpt:	ds	2	; DPORT
 0021 =         nsklen	equ	$-sokregs
 0230           nskkp:	ds	1	; KPALVTR
                
 0231           nvbuf:	ds	512
                
 0431           	end
