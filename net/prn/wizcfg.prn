                ; A CONFIG UTIL FOR WIZNET 550 DEVICES, ATTACHED IN PARALLEL-SPI INTERFACE
                ;
                ; COMMANDS:
                ;	N <ID>			SET NODE ID
                ;	G <IP>			SET GATEWAY IP ADDR
                ;	S <IP>			SET SUB-NETWORK MASK
                ;	I <IP>			SET NODE IP ADDR
                ;	M <MA>			SET NODE H/W ADDR
                ;	0 <ID> <IP> <PT>	SET SOCK 0
                ;	V			SAVE WIZNET CONFIG TO NVRAM
                ;	R			RESTORE WIZNET CONFIG FROM NVRAM
                
                	MACLIB	Z80
                
 0040 =         WIZ	EQU	40H	; BASE PORT OF H8-WIZX50IO SPI INTERFACE
                
 0040 =         WIZ$DAT	EQU	WIZ+0
 0041 =         WIZ$CTL	EQU	WIZ+1
 0041 =         WIZ$STS	EQU	WIZ+1
                
 0001 =         SCS	EQU	01B	; SCS FOR WIZNET
 0002 =         NVSCS	EQU	10B	; SCS FOR NVRAM
                
                ; NVRAM/SEEPROM COMMANDS
 0003 =         NVRD	EQU	00000011B
 0002 =         NVWR	EQU	00000010B
 0005 =         RDSR	EQU	00000101B
 0006 =         WREN	EQU	00000110B
                ; NVRAM/SEEPROM STATUS BITS
 0001 =         WIP	EQU	00000001B
                
                ; WIZNET CTRL BIT FOR WRITING
 0004 =         WRITE	EQU	00000100B
                
 0001 =         GAR	EQU	1	; OFFSET OF GAR, ETC.
 0005 =         SUBR	EQU	5
 0009 =         SHAR	EQU	9
 000F =         SIPR	EQU	15
 001D =         PMAGIC	EQU	29	; USED FOR NODE ID
                
 0008 =         SOCK0	EQU	000$01$000B
 0028 =         SOCK1	EQU	001$01$000B
 0048 =         SOCK2	EQU	010$01$000B
 0068 =         SOCK3	EQU	011$01$000B
 0088 =         SOCK4	EQU	100$01$000B
 00A8 =         SOCK5	EQU	101$01$000B
 00C8 =         SOCK6	EQU	110$01$000B
 00E8 =         SOCK7	EQU	111$01$000B
                
 0000 =         SNMR	EQU	0
 0001 =         SNCR	EQU	1
 0002 =         SNIR	EQU	2
 0003 =         SNSR	EQU	3
 0004 =         SNPORT	EQU	4
 000C =         SNDIPR	EQU	12
 0010 =         SNDPORT	EQU	16
 001F =         SNTXBUF	EQU	31	; TXBUF_SIZE
                
                ; SOCKET SR VALUES
 0000 =         CLOSED	EQU	00H
                
                ; SOCKET CR COMMANDS
 0008 =         DISCON	EQU	08H
                
 000D =         CR	EQU	13
 000A =         LF	EQU	10
                
 0000 =         CPM	EQU	0
 0005 =         BDOS	EQU	5
 0080 =         CMD	EQU	0080H
                
 0009 =         PRINT	EQU	9
 000C =         GETVER	EQU	12
 0045 =         CFGTBL	EQU	69
                
 0100           	ORG	00100H
                
 0100 C32802    	JMP	START
                
 0103 4E6F646520IDMSG:	DB	'Node ID:  $'
 010E 4761746577GWMSG:	DB	'Gateway:  $'
 0119 5375626E65NTMSG:	DB	'Subnet:   $'
 0124 4D41433A20MCMSG:	DB	'MAC:      $'
 012F 4950204164IPMSG:	DB	'IP Addr:  $'
                
 013A 5573616765USAGE:	DB	'Usage: WIZCFG {G|I|S ipadr}',CR,LF
 0157 2020202020	DB	'       WIZCFG {M macadr}',CR,LF
 0171 2020202020	DB	'       WIZCFG {N cid}',CR,LF
 0188 2020202020	DB	'       WIZCFG {0..7 sid ipadr port}',CR,LF
 01AD 2020202020	DB	'       WIZCFG {V|R}',CR,LF,'$'
 01C3 5365740D0ADONE:	DB	'Set',CR,LF,'$'
 01C9 536F636B65SOCK:	DB	'Socket '
 01D0 4E3A2024  SOKN:	DB	'N: $'
 01D4 2D204E6F74NCFG:	DB	'- Not Configured',CR,LF,'$'
 01E7 43502F4E45NOCPN:	DB	'CP/NET is running. Stop it first',CR,LF,'$'
 020A 4E5652414DNVERR:	DB	'NVRAM block not initialized',CR,LF,'$'
                
                START:
                	SSPD	USRSTK
 0228+ED73      	DB	0EDH,73H
 022A+7708      	DW	USRSTK
 022C 317708    	LXI	SP,STACK
 022F 0E0C      	MVI	C,GETVER
 0231 CD0500    	CALL	BDOS
 0234 7C        	MOV	A,H
 0235 E602      	ANI	02H
 0237 CA4702    	JZ	NOCPNT
 023A F6FF      	ORI	0FFH
 023C 327908    	STA	CPNET
 023F 0E45      	MVI	C,CFGTBL
 0241 CD0500    	CALL	BDOS
 0244 227A08    	SHLD	NETCFG
                NOCPNT:
 0247 3A8000    	LDA	CMD
 024A B7        	ORA	A
 024B CAD504    	JZ	SHOW
                
 024E 218000    	LXI	H,CMD
 0251 46        	MOV	B,M
 0252 23        	INX	H
                PARS0:
 0253 7E        	MOV	A,M
 0254 FE20      	CPI	' '
 0256 C25F02    	JNZ	PARS1
 0259 23        	INX	H
                	DJNZ	PARS0
 025A+10F7      	DB	10H,PARS0-$-1
 025C C3D504    	JMP	SHOW
                
                PARS1:
                	; THESE HAVE NO PARAMS...
 025F FE52      	CPI 	'R'
 0261 CA8203    	JZ	PARS5
 0264 FE56      	CPI 	'V'
 0266 CAE403    	JZ	PARS6
 0269 4F        	MOV	C,A
 026A CDD706    	CALL	SKIPB
 026D DA2C04    	JC	HELP
 0270 79        	MOV	A,C
 0271 FE47      	CPI 	'G'
                	LXIX	GW
 0273+DD21      	DB	0DDH,21H
 0275+7D08      	DW	GW
 0277 110100    	LXI	D,GAR
 027A CA6F03    	JZ	PARS2
 027D FE49      	CPI 	'I'
                	LXIX	IP
 027F+DD21      	DB	0DDH,21H
 0281+8B08      	DW	IP
 0283 110F00    	LXI	D,SIPR
 0286 CA6F03    	JZ	PARS2
 0289 FE53      	CPI 	'S'
                	LXIX	MSK
 028B+DD21      	DB	0DDH,21H
 028D+8108      	DW	MSK
 028F 110500    	LXI	D,SUBR
 0292 CA6F03    	JZ	PARS2
 0295 FE4D      	CPI 	'M'
 0297 CA5A03    	JZ	PARS3
 029A FE4E      	CPI 	'N'
 029C CA4503    	JZ	PARS4
 029F FE30      	CPI	'0'
 02A1 DA2C04    	JC	HELP
 02A4 FE38      	CPI	'7'+1
 02A6 D22C04    	JNC	HELP
                
                ; PARSE NEW SOCKET CONFIG
 02A9 32D001    	STA	SOKN
                	; PARSE <SRVID> <IPADR> <PORT>
 02AC 0E00      	MVI	C,0	; NUL WON'T EVER BE SEEN
 02AE CDFC06    	CALL	PARSHX
 02B1 DA2C04    	JC	HELP
 02B4 3E31      	MVI	A,31H
 02B6 32A108    	STA	NSKPT
 02B9 7A        	MOV	A,D	; SERVER ID
 02BA 32A208    	STA	NSKPT+1
 02BD CDD706    	CALL	SKIPB
 02C0 DA2C04    	JC	HELP
                	LXIX	NSKIP
 02C3+DD21      	DB	0DDH,21H
 02C5+A908      	DW	NSKIP
 02C7 CD2B07    	CALL	PARSADR
 02CA DA2C04    	JC	HELP
 02CD CDD706    	CALL	SKIPB
 02D0 DA2C04    	JC	HELP
 02D3 CD5D07    	CALL	PARSNM
 02D6 DA2C04    	JC	HELP
 02D9 7A        	MOV	A,D
 02DA 32AD08    	STA	NSKDPT
 02DD 7B        	MOV	A,E
 02DE 32AE08    	STA	NSKDPT+1
                ; NOW PREPARE TO UPDATE SOCKET CONFIG
                	; SET SN_MR SEPARATE, TO AVOID WRITING CR AND SR...
 02E1 CDAE04    	CALL	GETSOKN
 02E4 57        	MOV	D,A
 02E5 D5        	PUSH	D
 02E6 CDC504    	CALL	SETTCP	; FORCE TCP MODE
                	; GET CURRENT VALUES, CLEANUP AS NEEDED
 02E9 218F08    	LXI	H,SOKREGS
 02EC 1E00      	MVI	E,SNMR
 02EE 0612      	MVI	B,SOKLEN
 02F0 CD6A04    	CALL	WIZGET
 02F3 219508    	LXI	H,SOKMAC
 02F6 11A308    	LXI	D,NSKMAC
 02F9 010600    	LXI	B,6
                	LDIR
 02FC+EDB0      	DB	0EDH,0B0H
 02FE 3A9308    	LDA	SOKPT
 0301 FE31      	CPI	31H
 0303 C22B03    	JNZ	NTCPNET	; DON'T CARE ABOUT SOCKETS NOT CONFIGURED
 0306 3A7908    	LDA	CPNET
 0309 B7        	ORA	A
 030A CA2B03    	JZ	NTCPNET	; SKIP CFGTBL CLEANUP IF NOT CP/NET
                	; REMOVE ALL REFS TO THIS SERVER...
 030D 3A9408    	LDA	SOKPT+1	; SERVER NODE ID
 0310 4F        	MOV	C,A
 0311 2A7A08    	LHLD	NETCFG
 0314 0612      	MVI	B,18	; 16 DRIVES, CON:, LST:
 0316 23        	INX	H
 0317 23        	INX	H
 0318 7E        CLN0:	MOV	A,M
 0319 B7        	ORA	A
 031A F22703    	JP	NTNET	; DEVICE NOT NETWORKED
 031D 23        	INX	H
 031E 7E        	MOV	A,M
 031F B9        	CMP	C	; SAME SERVER?
 0320 C22803    	JNZ	NTNET1
 0323 AF        	XRA	A
 0324 77        	MOV	M,A
 0325 2B        	DCX	H
 0326 77        	MOV	M,A
 0327 23        NTNET:	INX	H
 0328 23        NTNET1:	INX	H
                	DJNZ	CLN0
 0329+10ED      	DB	10H,CLN0-$-1
                NTCPNET:
 032B 3A9208    	LDA	SOKMR+SNSR
 032E FE00      	CPI	CLOSED
 0330 CA3A03    	JZ	NTOPN
 0333 D1        	POP	D
 0334 D5        	PUSH	D
 0335 3E08      	MVI	A,DISCON
 0337 CD3704    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 033A 21A108    NTOPN:	LXI	H,NEWSOK
 033D D1        	POP	D
 033E 1E04      	MVI	E,SNPORT
 0340 060E      	MVI	B,SOKLEN-SNPORT
 0342 C37C03    	JMP	SETIT
                
                PARS4:
 0345 CDFC06    	CALL	PARSHX
 0348 DA2C04    	JC	HELP
 034B 7A        	MOV	A,D
 034C 327C08    	STA	WIZMAG
 034F 217C08    	LXI	H,WIZMAG
 0352 111D00    	LXI	D,PMAGIC
 0355 0601      	MVI	B,1
 0357 C37C03    	JMP	SETIT
                
                PARS3:
                	LXIX	MAC
 035A+DD21      	DB	0DDH,21H
 035C+8508      	DW	MAC
                	PUSHIX
 035E+DDE5      	DB	0DDH,0E5H
 0360 CDE406    	CALL	PARSMAC
 0363 E1        	POP	H
 0364 DA2C04    	JC	HELP
 0367 110900    	LXI	D,SHAR
 036A 0606      	MVI	B,6
 036C C37C03    	JMP	SETIT
                
                PARS2:
                	PUSHIX
 036F+DDE5      	DB	0DDH,0E5H
 0371 D5        	PUSH	D
 0372 CD2B07    	CALL	PARSADR
 0375 D1        	POP	D
 0376 E1        	POP	H
 0377 DA2C04    	JC	HELP
 037A 0604      	MVI	B,4
                	; GOT IT...
                SETIT:
 037C CD8104    	CALL	WIZSET
                
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
 037F C31F04    	JMP	EXIT
                
                PARS5:	; RESTORE CONFIG FROM NVRAM
 0382 3A7908    	LDA	CPNET
 0385 B7        	ORA	A
 0386 C22704    	JNZ	XOCPNT
 0389 210000    	LXI	H,0
 038C 110002    	LXI	D,512
 038F CDE007    	CALL	NVGET
 0392 CDAA07    	CALL	VCKSUM
 0395 C22204    	JNZ	CSERR
 0398 21B008    	LXI	H,BUF+GAR
 039B 1600      	MVI	D,0
 039D 1E01      	MVI	E,GAR
 039F 0612      	MVI	B,18	; GAR, SUBR, SHAR, SIPR
 03A1 CD8104    	CALL	WIZSET
 03A4 21CC08    	LXI	H,BUF+PMAGIC
 03A7 1600      	MVI	D,0
 03A9 1E1D      	MVI	E,PMAGIC
 03AB 0601      	MVI	B,1
 03AD CD8104    	CALL	WIZSET
                	LXIX	BUF+32
 03B0+DD21      	DB	0DDH,21H
 03B2+CF08      	DW	BUF+32
 03B4 1608      	MVI	D,SOCK0
 03B6 0608      	MVI	B,8
                REST0:
 03B8 C5        	PUSH	B
                	LDX	A,SNPORT
 03B9+DD7E04    	DB	0DDH,A*8+46H,SNPORT
 03BC FE31      	CPI	31H
 03BE C2D503    	JNZ	REST1	; SKIP UNCONFIGURED SOCKETS
 03C1 CD9804    	CALL	CLOSE	; CP/NET NOT ACTIVE - ALREADY CHECKED
 03C4 CDC504    	CALL	SETTCP	; ENSURE MR IS SET TO TCP/IP
 03C7 1E04      	MVI	E,SNPORT
 03C9 0602      	MVI	B,2
 03CB CDB904    	CALL	SETSOK
 03CE 1E0C      	MVI	E,SNDIPR
 03D0 0606      	MVI	B,6	; DIPR AND DPORT
 03D2 CDB904    	CALL	SETSOK
                REST1:
 03D5 012000    	LXI	B,32
                	DADX	B
 03D8+DD09      	DB	0DDH,B*8+09H
 03DA 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 03DC 82        	ADD	D
 03DD 57        	MOV	D,A
 03DE C1        	POP	B
                	DJNZ	REST0
 03DF+10D7      	DB	10H,REST0-$-1
                
 03E1 C31F04    	JMP	EXIT
                	;...
                
                PARS6:	; SAVE CONFIG TO NVRAM
 03E4 21AF08    	LXI	H,BUF
 03E7 36FF      	MVI	M,0FFH	; EEPROM "UNPROGRAMMED"
 03E9 11B008    	LXI	D,BUF+1
 03EC 01FF01    	LXI	B,511
                	LDIR
 03EF+EDB0      	DB	0EDH,0B0H
 03F1 21AF08    	LXI	H,BUF
 03F4 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 03F6 1E00      	MVI	E,0	; OFFSET +0
 03F8 1600      	MVI	D,0	; BSB 0 = COMMON REGISTER BLOCK
 03FA CD6A04    	CALL	WIZGET
 03FD 21CF08    	LXI	H,BUF+32
 0400 1608      	MVI	D,SOCK0	; BSB 08H = SOCKET 0 REGISTER BLOCK
 0402 1E00      	MVI	E,0	; OFFSET +0
 0404 0608      	MVI	B,8	; NUM SOCKETS
 0406 C5        SAVE0:	PUSH	B
 0407 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 0409 CD6A04    	CALL	WIZGET	; HL = NEXT BLOCK
 040C C1        	POP	B
 040D 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 040F 82        	ADD	D
 0410 57        	MOV	D,A
                	DJNZ	SAVE0
 0411+10F3      	DB	10H,SAVE0-$-1
                	; GOT DATA OFF WIZNET CHIP, NOW SAVE TO NVRAM
 0413 CDCE07    	CALL	SCKSUM
 0416 210000    	LXI	H,0	; WIZNET USES 512 BYTES AT 0000 IN NVRAM
 0419 110002    	LXI	D,512
 041C CD0508    	CALL	NVSET
                	;JMP	EXIT
                EXIT:
 041F C30000    	JMP	CPM
                
 0422 110A02    CSERR:	LXI	D,NVERR
                	JR	XTMSG
 0425+1808      	DB	18H,XTMSG-$-1
 0427 11E701    XOCPNT:	LXI	D,NOCPN
                	JR	XTMSG
 042A+1803      	DB	18H,XTMSG-$-1
                HELP:
 042C 113A01    	LXI	D,USAGE
 042F 0E09      XTMSG:	MVI	C,PRINT
 0431 CD0500    	CALL	BDOS
 0434 C31F04    	JMP	EXIT
                
                ; SEND SOCKET COMMAND TO WIZNET CHIP, WAIT FOR DONE.
                ; A = COMMAND, D = SOCKET BSB
                ; DESTROYS A
                WIZCMD:
 0437 F5        	PUSH	PSW
 0438 3E01      	MVI	A,SCS
 043A D341      	OUT	WIZ$CTL
 043C AF        	XRA	A
 043D D340      	OUT	WIZ$DAT
 043F 3E01      	MVI	A,SNCR
 0441 D340      	OUT	WIZ$DAT
 0443 7A        	MOV	A,D
 0444 F604      	ORI	WRITE
 0446 D340      	OUT	WIZ$DAT
 0448 F1        	POP	PSW
 0449 D340      	OUT	WIZ$DAT	; START COMMAND
 044B AF        	XRA	A	;
 044C D341      	OUT	WIZ$CTL
                WC0:
 044E 3E01      	MVI	A,SCS
 0450 D341      	OUT	WIZ$CTL
 0452 AF        	XRA	A
 0453 D340      	OUT	WIZ$DAT
 0455 3E01      	MVI	A,SNCR
 0457 D340      	OUT	WIZ$DAT
 0459 7A        	MOV	A,D
 045A D340      	OUT	WIZ$DAT
 045C DB40      	IN	WIZ$DAT	; PRIME PUMP
 045E DB40      	IN	WIZ$DAT
 0460 F5        	PUSH	PSW
 0461 AF        	XRA	A	;
 0462 D341      	OUT	WIZ$CTL
 0464 F1        	POP	PSW
 0465 B7        	ORA	A
 0466 C24E04    	JNZ	WC0
 0469 C9        	RET
                
                ; E = BSB, D = CTL, HL = DATA, B = LENGTH
                WIZGET:
 046A 3E01      	MVI	A,SCS
 046C D341      	OUT	WIZ$CTL
 046E AF        	XRA	A	; HI ADR ALWAYS 0
 046F D340      	OUT	WIZ$DAT
 0471 7B        	MOV	A,E
 0472 D340      	OUT	WIZ$DAT
 0474 7A        	MOV	A,D
 0475 D340      	OUT	WIZ$DAT
 0477 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0479 0E40      	MVI	C,WIZ$DAT
                	INIR
 047B+EDB2      	DB	0EDH,0B2H
 047D AF        	XRA	A	; NOT SCS
 047E D341      	OUT	WIZ$CTL
 0480 C9        	RET
                
                ; HL = DATA TO SEND, E = OFFSET, D = BSB, B = LENGTH
                ; DESTROYS HL, B, C, A
                WIZSET:
 0481 3E01      	MVI	A,SCS
 0483 D341      	OUT	WIZ$CTL
 0485 AF        	XRA	A	; HI ADR ALWAYS 0
 0486 D340      	OUT	WIZ$DAT
 0488 7B        	MOV	A,E
 0489 D340      	OUT	WIZ$DAT
 048B 7A        	MOV	A,D
 048C F604      	ORI	WRITE
 048E D340      	OUT	WIZ$DAT
 0490 0E40      	MVI	C,WIZ$DAT
                	OUTIR
 0492+EDB3      	DB	0EDH,0B3H
 0494 AF        	XRA	A	; NOT SCS
 0495 D341      	OUT	WIZ$CTL
 0497 C9        	RET
                
                ; CLOSE SOCKET IF ACTIVE (SR <> CLOSED)
                ; D = SOCKET BSB
                ; DESTROYS HL, E, B, C, A
                CLOSE:
 0498 219208    	LXI	H,SOKMR+SNSR
 049B 1E03      	MVI	E,SNSR
 049D 0601      	MVI	B,1
 049F CD6A04    	CALL	WIZGET
 04A2 3A9208    	LDA	SOKMR+SNSR
 04A5 FE00      	CPI	CLOSED
 04A7 C8        	RZ
 04A8 3E08      	MVI	A,DISCON
 04AA CD3704    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 04AD C9        	RET
                
                ; CONVERT 'SOKN' (ASCII DIGIT) TO SOCKET BSB
                GETSOKN:
 04AE 3AD001    	LDA	SOKN
 04B1 D630      	SUI	'0'
 04B3 07        	RLC
 04B4 07        	RLC
 04B5 07        	RLC		; XXX00000
 04B6 F608      	ORI	SOCK0	; XXX01000
 04B8 C9        	RET
                
                ; IX = BASE DATA BUFFER FOR SOCKET, D = SOCKET BSB, E = OFFSET, B = LENGTH
                ; DESTROYS HL, B, C
                SETSOK:
                	PUSHIX
 04B9+DDE5      	DB	0DDH,0E5H
 04BB E1        	POP	H
 04BC D5        	PUSH	D
 04BD 1600      	MVI	D,0
 04BF 19        	DAD	D	; HL POINTS TO DATA IN 'BUF'
 04C0 D1        	POP	D
 04C1 CD8104    	CALL	WIZSET
 04C4 C9        	RET
                
                ; SET SOCKET MR TO TCP.
                ; D = SOCKET BSB (RESULT OF "GETSOKN")
                ; DESTROYS ALL REGISTERS EXCEPT D.
                SETTCP:
 04C5 3E01      	MVI	A,1	; TCP
 04C7 328F08    	STA	SOKMR
 04CA 1E00      	MVI	E,SNMR
 04CC 218F08    	LXI	H,SOKMR
 04CF 0601      	MVI	B,1
 04D1 CD8104    	CALL	WIZSET	; FORCE TCP/IP MODE
 04D4 C9        	RET
                
                SHOW:
 04D5 217D08    	LXI	H,COMREGS
 04D8 110100    	LXI	D,GAR
 04DB 0612      	MVI	B,COMLEN
 04DD CD6A04    	CALL	WIZGET
 04E0 217C08    	LXI	H,WIZMAG
 04E3 111D00    	LXI	D,PMAGIC
 04E6 0601      	MVI	B,1
 04E8 CD6A04    	CALL	WIZGET
                
 04EB 110301    	LXI	D,IDMSG
 04EE 0E09      	MVI	C,PRINT
 04F0 CD0500    	CALL	BDOS
 04F3 3A7C08    	LDA	WIZMAG
 04F6 CDC306    	CALL	HEXOUT
 04F9 3E48      	MVI	A,'H'
 04FB CD3506    	CALL	CHROUT
 04FE CD4E06    	CALL	CRLF
                
 0501 112F01    	LXI	D,IPMSG
 0504 0E09      	MVI	C,PRINT
 0506 CD0500    	CALL	BDOS
 0509 218B08    	LXI	H,IP
 050C CD2306    	CALL	IPOUT
 050F CD4E06    	CALL	CRLF
                
 0512 110E01    	LXI	D,GWMSG
 0515 0E09      	MVI	C,PRINT
 0517 CD0500    	CALL	BDOS
 051A 217D08    	LXI	H,GW
 051D CD2306    	CALL	IPOUT
 0520 CD4E06    	CALL	CRLF
                
 0523 111901    	LXI	D,NTMSG
 0526 0E09      	MVI	C,PRINT
 0528 CD0500    	CALL	BDOS
 052B 218108    	LXI	H,MSK
 052E CD2306    	CALL	IPOUT
 0531 CD4E06    	CALL	CRLF
                
 0534 112401    	LXI	D,MCMSG
 0537 0E09      	MVI	C,PRINT
 0539 CD0500    	CALL	BDOS
 053C 218508    	LXI	H,MAC
 053F CD1106    	CALL	HWOUT
 0542 CD4E06    	CALL	CRLF
                
 0545 218F08    	LXI	H,SOKREGS
 0548 110008    	LXI	D,SOCK0 SHL 8
 054B 0612      	MVI	B,SOKLEN
 054D CD6A04    	CALL	WIZGET
 0550 1E00      	MVI	E,0
 0552 CDC805    	CALL	SHOWSOK
                
 0555 218F08    	LXI	H,SOKREGS
 0558 110028    	LXI	D,SOCK1 SHL 8
 055B 0612      	MVI	B,SOKLEN
 055D CD6A04    	CALL	WIZGET
 0560 1E01      	MVI	E,1
 0562 CDC805    	CALL	SHOWSOK
                
 0565 218F08    	LXI	H,SOKREGS
 0568 110048    	LXI	D,SOCK2 SHL 8
 056B 0612      	MVI	B,SOKLEN
 056D CD6A04    	CALL	WIZGET
 0570 1E02      	MVI	E,2
 0572 CDC805    	CALL	SHOWSOK
                
 0575 218F08    	LXI	H,SOKREGS
 0578 110068    	LXI	D,SOCK3 SHL 8
 057B 0612      	MVI	B,SOKLEN
 057D CD6A04    	CALL	WIZGET
 0580 1E03      	MVI	E,3
 0582 CDC805    	CALL	SHOWSOK
                
 0585 218F08    	LXI	H,SOKREGS
 0588 110088    	LXI	D,SOCK4 SHL 8
 058B 0612      	MVI	B,SOKLEN
 058D CD6A04    	CALL	WIZGET
 0590 1E04      	MVI	E,4
 0592 CDC805    	CALL	SHOWSOK
                
 0595 218F08    	LXI	H,SOKREGS
 0598 1100A8    	LXI	D,SOCK5 SHL 8
 059B 0612      	MVI	B,SOKLEN
 059D CD6A04    	CALL	WIZGET
 05A0 1E05      	MVI	E,5
 05A2 CDC805    	CALL	SHOWSOK
                
 05A5 218F08    	LXI	H,SOKREGS
 05A8 1100C8    	LXI	D,SOCK6 SHL 8
 05AB 0612      	MVI	B,SOKLEN
 05AD CD6A04    	CALL	WIZGET
 05B0 1E06      	MVI	E,6
 05B2 CDC805    	CALL	SHOWSOK
                
 05B5 218F08    	LXI	H,SOKREGS
 05B8 1100E8    	LXI	D,SOCK7 SHL 8
 05BB 0612      	MVI	B,SOKLEN
 05BD CD6A04    	CALL	WIZGET
 05C0 1E07      	MVI	E,7
 05C2 CDC805    	CALL	SHOWSOK
                
 05C5 C31F04    	JMP	EXIT
                
                SHOWSOK:
 05C8 7B        	MOV	A,E
 05C9 C630      	ADI	'0'
 05CB 32D001    	STA	SOKN
 05CE 11C901    	LXI	D,SOCK
 05D1 0E09      	MVI	C,PRINT
 05D3 CD0500    	CALL	BDOS
 05D6 3A9308    	LDA	SOKPT
 05D9 FE31      	CPI	31H
 05DB C20806    	JNZ	NOCFG
 05DE 3A9408    	LDA	SOKPT+1
 05E1 CDC306    	CALL	HEXOUT
 05E4 3E48      	MVI	A,'H'
 05E6 CD3506    	CALL	CHROUT
 05E9 3E20      	MVI	A,' '
 05EB CD3506    	CALL	CHROUT
 05EE 219B08    	LXI	H,SOKIP
 05F1 CD2306    	CALL	IPOUT
 05F4 3E20      	MVI	A,' '
 05F6 CD3506    	CALL	CHROUT
 05F9 3A9F08    	LDA	SOKDPT
 05FC 57        	MOV	D,A
 05FD 3AA008    	LDA	SOKDPT+1
 0600 5F        	MOV	E,A
 0601 CD5906    	CALL	DEC16
 0604 CD4E06    	CALL	CRLF
 0607 C9        	RET
                
 0608 11D401    NOCFG:	LXI	D,NCFG
 060B 0E09      	MVI	C,PRINT
 060D CD0500    	CALL	BDOS
 0610 C9        	RET
                
                HWOUT:
 0611 0606      	MVI	B,6
 0613 0E3A      	MVI	C,':'
 0615 7E        HW0:	MOV	A,M
 0616 CDC306    	CALL	HEXOUT
 0619 05        	DCR	B
 061A C8        	RZ
 061B 79        	MOV	A,C
 061C CD3506    	CALL	CHROUT
 061F 23        	INX	H
 0620 C31506    	JMP	HW0
                
                IPOUT:
 0623 0604      	MVI	B,4
 0625 0E2E      	MVI	C,'.'
 0627 7E        IP0:	MOV	A,M
 0628 CD9506    	CALL	DECOUT
 062B 05        	DCR	B
 062C C8        	RZ
 062D 79        	MOV	A,C
 062E CD3506    	CALL	CHROUT
 0631 23        	INX	H
 0632 C32706    	JMP	IP0
                
                CHROUT:
 0635 E5        	PUSH	H
 0636 D5        	PUSH	D
 0637 C5        	PUSH	B
 0638 5F        	MOV	E,A
 0639 0E02      	MVI	C,002H
 063B CD0500    	CALL	BDOS
 063E C1        	POP	B
 063F D1        	POP	D
 0640 E1        	POP	H
 0641 C9        	RET
                
                GETSTS:
 0642 0E44      	MVI	C,044H
 0644 CD0500    	CALL	BDOS
 0647 C9        	RET
                
                GETCFG:
 0648 0E45      	MVI	C,045H
 064A CD0500    	CALL	BDOS
 064D C9        	RET
                
                CRLF:
 064E 3E0D      	MVI	A,CR
 0650 CD3506    	CALL	CHROUT
 0653 3E0A      	MVI	A,LF
 0655 CD3506    	CALL	CHROUT
 0658 C9        	RET
                
                DEC16:
 0659 EB        	XCHG	; REMAINDER IN HL
 065A 0E00      	MVI	C,0
 065C 111027    	LXI	D,10000
 065F CD7B06    	CALL	DIV16
 0662 11E803    	LXI	D,1000
 0665 CD7B06    	CALL	DIV16
 0668 116400    	LXI	D,100
 066B CD7B06    	CALL	DIV16
 066E 110A00    	LXI	D,10
 0671 CD7B06    	CALL	DIV16
 0674 7D        	MOV	A,L
 0675 C630      	ADI	'0'
 0677 CD3506    	CALL	CHROUT
 067A C9        	RET
                
 067B 0600      DIV16:	MVI	B,0
 067D B7        DV0:	ORA	A
                	DSBC	D
 067E+ED52      	DB	0EDH,D*8+42H
 0680 04        	INR	B
                	JRNC	DV0
 0681+30FA      	DB	30H,DV0-$-1
 0683 19        	DAD	D
 0684 05        	DCR	B
                	JRNZ	DV1
 0685+2005      	DB	20H,DV1-$-1
                	BIT	0,C
 0687+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DV1
 0689+2001      	DB	20H,DV1-$-1
 068B C9        	RET
                DV1:	SETB	0,C
 068C+CBC1      	DB	0CBH,0*8+C+0C0H
 068E 3E30      	MVI	A,'0'
 0690 80        	ADD	B
 0691 CD3506    	CALL	CHROUT
 0694 C9        	RET
                
                ; LEADING ZEROES BLANKED - MUST PRESERVE B
                DECOUT:
 0695 C5        	PUSH	B
 0696 0E00      	MVI	C,0
 0698 1664      	MVI	D,100
 069A CDA906    	CALL	DIVIDE
 069D 160A      	MVI	D,10
 069F CDA906    	CALL	DIVIDE
 06A2 C630      	ADI	'0'
 06A4 CD3506    	CALL	CHROUT
 06A7 C1        	POP	B
 06A8 C9        	RET
                
 06A9 1E00      DIVIDE:	MVI	E,0
 06AB 92        DIV0:	SUB	D
 06AC 1C        	INR	E
                	JRNC	DIV0
 06AD+30FC      	DB	30H,DIV0-$-1
 06AF 82        	ADD	D
 06B0 1D        	DCR	E
                	JRNZ	DIV1
 06B1+2005      	DB	20H,DIV1-$-1
                	BIT	0,C
 06B3+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DIV1
 06B5+2001      	DB	20H,DIV1-$-1
 06B7 C9        	RET
                DIV1:	SETB	0,C
 06B8+CBC1      	DB	0CBH,0*8+C+0C0H
 06BA F5        	PUSH	PSW	; REMAINDER
 06BB 3E30      	MVI	A,'0'
 06BD 83        	ADD	E
 06BE CD3506    	CALL	CHROUT
 06C1 F1        	POP	PSW	; REMAINDER
 06C2 C9        	RET
                
                HEXOUT:
 06C3 F5        	PUSH	PSW
 06C4 0F        	RRC
 06C5 0F        	RRC
 06C6 0F        	RRC
 06C7 0F        	RRC
 06C8 CDCC06    	CALL	HEXDIG
 06CB F1        	POP	PSW
                	;JMP	HEXDIG
                HEXDIG:
 06CC E60F      	ANI	0FH
 06CE C690      	ADI	90H
 06D0 27        	DAA
 06D1 CE40      	ACI	40H
 06D3 27        	DAA
 06D4 C33506    	JMP	CHROUT
                
                SKIPB:
 06D7 23        	INX	H	; SKIP OPTION LETTER
 06D8 05        	DCR	B
 06D9 37        	STC
 06DA C8        	RZ
 06DB 7E        SKIP0:	MOV	A,M
 06DC FE20      	CPI	' '
 06DE C0        	RNZ	; NO CARRY?
 06DF 23        	INX	H
                	DJNZ	SKIP0
 06E0+10F9      	DB	10H,SKIP0-$-1
 06E2 37        	STC
 06E3 C9        	RET
                
                ; IX=DESTINATION
                PARSMAC:
 06E4 0E3A      	MVI	C,':'
                PM00:
 06E6 CDFC06    	CALL	PARSHX
 06E9 D8        	RC
 06EA CAF206    	JZ	PM1	; HIT TERM CHAR
                	; TODO: CHECK FOR 6 BYTES...
                	STX	D,+0
 06ED+DD7200    	DB	0DDH,70H+D,+0
 06F0 B7        	ORA	A	; NC
 06F1 C9        	RET
                PM1:
                	STX	D,+0
 06F2+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 06F5+DD23      	DB	0DDH,23H
 06F7 23        	INX	H
                	DJNZ	PM00
 06F8+10EC      	DB	10H,PM00-$-1
                	; ERROR IF ENDS HERE...
 06FA 37        	STC
 06FB C9        	RET
                
                
                ; C=TERM CHAR
                ; RETURNS CY IF ERROR, Z IF TERM CHAR, NZ END OF TEXT
                PARSHX:
 06FC 1600      	MVI	D,0
 06FE 7E        PM0:	MOV	A,M
 06FF B9        	CMP	C
 0700 C8        	RZ
 0701 FE20      	CPI	' '
 0703 CA2807    	JZ	NZRET
 0706 D630      	SUI	'0'
 0708 D8        	RC
 0709 FE0A      	CPI	'9'-'0'+1
 070B DA1707    	JC	PM3
 070E D611      	SUI	'A'-'0'
 0710 D8        	RC
 0711 FE06      	CPI	'F'-'A'+1
 0713 3F        	CMC
 0714 D8        	RC
 0715 C60A      	ADI	10
                PM3:
 0717 E60F      	ANI	0FH
 0719 5F        	MOV	E,A
 071A 7A        	MOV	A,D
 071B 87        	ADD	A
 071C D8        	RC
 071D 87        	ADD	A
 071E D8        	RC
 071F 87        	ADD	A
 0720 D8        	RC
 0721 87        	ADD	A
 0722 D8        	RC
 0723 83        	ADD	E	; CARRY NOT POSSIBLE
 0724 57        	MOV	D,A
 0725 23        	INX	H
                	DJNZ	PM0
 0726+10D6      	DB	10H,PM0-$-1
                NZRET:
 0728 AF        	XRA	A
 0729 3C        	INR	A	; NZ
 072A C9        	RET
                
                ; IX=DESTINATION
                PARSADR:
 072B 0E2E      	MVI	C,'.'
                PA00:
 072D 1600      	MVI	D,0
 072F 7E        PA0:	MOV	A,M
 0730 B9        	CMP	C
 0731 CA5307    	JZ	PA1
 0734 FE20      	CPI	' '
 0736 CA4E07    	JZ	PA2
 0739 FE30      	CPI	'0'
 073B D8        	RC
 073C FE3A      	CPI	'9'+1
 073E 3F        	CMC
 073F D8        	RC
 0740 E60F      	ANI	0FH
 0742 5F        	MOV	E,A
 0743 7A        	MOV	A,D
 0744 87        	ADD	A	; *2
 0745 87        	ADD	A	; *4
 0746 82        	ADD	D	; *5
 0747 87        	ADD	A	; *10
 0748 83        	ADD	E
 0749 D8        	RC
 074A 57        	MOV	D,A
 074B 23        	INX	H
                	DJNZ	PA0
 074C+10E1      	DB	10H,PA0-$-1
                PA2:
                	; TODO: CHECK FOR 4 BYTES...
                	STX	D,+0
 074E+DD7200    	DB	0DDH,70H+D,+0
 0751 B7        	ORA	A
 0752 C9        	RET
                
                PA1:
                	STX	D,+0
 0753+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 0756+DD23      	DB	0DDH,23H
 0758 23        	INX	H
                	DJNZ	PA00
 0759+10D2      	DB	10H,PA00-$-1
                	; ERROR IF ENDS HERE...
 075B 37        	STC
 075C C9        	RET
                
                ; PARSE A 16-BIT (MAX) DECIMAL NUMBER
                PARSNM:
 075D 110000    	LXI	D,0
 0760 7E        PD0:	MOV	A,M
 0761 FE20      	CPI	' '
 0763 C8        	RZ
 0764 FE30      	CPI	'0'
 0766 D8        	RC
 0767 FE3A      	CPI	'9'+1
 0769 3F        	CMC
 076A D8        	RC
 076B E60F      	ANI	0FH
 076D E5        	PUSH	H
 076E 62        	MOV	H,D
 076F 6B        	MOV	L,E
 0770 29        	DAD	H	; *2
 0771 DA8C07    	JC	PD1
 0774 29        	DAD	H	; *4
 0775 DA8C07    	JC	PD1
 0778 19        	DAD	D	; *5
 0779 DA8C07    	JC	PD1
 077C 29        	DAD	H	; *10
 077D DA8C07    	JC	PD1
 0780 5F        	MOV	E,A
 0781 1600      	MVI	D,0
 0783 19        	DAD	D
 0784 EB        	XCHG
 0785 E1        	POP	H
 0786 D8        	RC
 0787 23        	INX	H
                	DJNZ	PD0
 0788+10D6      	DB	10H,PD0-$-1
 078A B7        	ORA	A	; NC
 078B C9        	RET
                
 078C E1        PD1:	POP	H
 078D C9        	RET	; CY STILL SET
                
                ; IX = BUFFER, BC = LENGTH
                ; RETURN: HL = CKSUM HI, DE = CKSUM LO
                CKSUM32:
 078E 210000    	LXI	H,0
 0791 110000    	LXI	D,0
                CKS0:	LDX	A,+0
 0794+DD7E00    	DB	0DDH,A*8+46H,+0
                	INXIX
 0797+DD23      	DB	0DDH,23H
 0799 83        	ADD	E
 079A 5F        	MOV	E,A
                	JRNC	CKS1
 079B+3007      	DB	30H,CKS1-$-1
 079D 14        	INR	D
                	JRNZ	CKS1
 079E+2004      	DB	20H,CKS1-$-1
 07A0 2C        	INR	L
                	JRNZ	CKS1
 07A1+2001      	DB	20H,CKS1-$-1
 07A3 24        	INR	H
 07A4 0B        CKS1:	DCX	B
 07A5 78        	MOV	A,B
 07A6 B1        	ORA	C
                	JRNZ	CKS0
 07A7+20EB      	DB	20H,CKS0-$-1
 07A9 C9        	RET
                
                ; VALIDATES CHECKSUM IN 'BUF'
                ; RETURN: NZ ON ERROR
                ; A CHECKSUM OF 00 00 00 00 MEANS THE BUFFER WAS ALL 00,
                ; WHICH IS INVALID.
                VCKSUM:
                	LXIX	BUF
 07AA+DD21      	DB	0DDH,21H
 07AC+AF08      	DW	BUF
 07AE 01FC01    	LXI	B,508
 07B1 CD8E07    	CALL	CKSUM32
                	LBCD	BUF+510
 07B4+ED4B      	DB	0EDH,4BH
 07B6+AD0A      	DW	BUF+510
 07B8 78        	MOV	A,B	;
 07B9 B1        	ORA	C	; CHECK FIRST HALF ZERO
                	DSBC	B
 07BA+ED42      	DB	0EDH,B*8+42H
 07BC C0        	RNZ
                	LBCD	BUF+508
 07BD+ED4B      	DB	0EDH,4BH
 07BF+AB0A      	DW	BUF+508
 07C1 B0        	ORA	B	;
 07C2 B1        	ORA	C	; CHECK SECOND HALF ZERO
 07C3 EB        	XCHG
                	DSBC	B	; CY IS CLEAR
 07C4+ED42      	DB	0EDH,B*8+42H
 07C6 C0        	RNZ
 07C7 B7        	ORA	A	; WAS CHECKSUM ALL ZERO?
                	JRZ	VCKSM0
 07C8+2802      	DB	28H,VCKSM0-$-1
 07CA AF        	XRA	A	; ZR
 07CB C9        	RET
 07CC 3C        VCKSM0:	INR	A	; NZ
 07CD C9        	RET
                
                ; SETS CHECKSUM IN 'BUF'
                SCKSUM:
                	LXIX	BUF
 07CE+DD21      	DB	0DDH,21H
 07D0+AF08      	DW	BUF
 07D2 01FC01    	LXI	B,508
 07D5 CD8E07    	CALL	CKSUM32
 07D8 22AD0A    	SHLD	BUF+510
                	SDED	BUF+508
 07DB+ED53      	DB	0EDH,53H
 07DD+AB0A      	DW	BUF+508
 07DF C9        	RET
                
                ; GET A BLOCK OF DATA FROM NVRAM TO 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                NVGET:
 07E0 3E02      	MVI	A,NVSCS
 07E2 D341      	OUT	WIZ$CTL
 07E4 3E03      	MVI	A,NVRD
 07E6 D340      	OUT	WIZ$DAT
 07E8 7C        	MOV	A,H
 07E9 D340      	OUT	WIZ$DAT
 07EB 7D        	MOV	A,L
 07EC D340      	OUT	WIZ$DAT
 07EE DB40      	IN	WIZ$DAT	; PRIME PUMP
 07F0 0E40      	MVI	C,WIZ$DAT
 07F2 7B        	MOV	A,E
 07F3 B7        	ORA	A
 07F4 CAF807    	JZ	NVGET1
 07F7 14        	INR	D	; TODO: HANDLE 64K... AND OVERFLOW OF 'BUF'...
 07F8 21AF08    NVGET1:	LXI	H,BUF
 07FB 43        	MOV	B,E
                NVGET0:	INIR	; B = 0 AFTER
 07FC+EDB2      	DB	0EDH,0B2H
 07FE 15        	DCR	D
                	JRNZ	NVGET0
 07FF+20FB      	DB	20H,NVGET0-$-1
 0801 AF        	XRA	A	; NOT SCS
 0802 D341      	OUT	WIZ$CTL
 0804 C9        	RET
                
                ; PUT BLOCK OF DATA TO NVRAM FROM 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                ; MUST WRITE IN 128-BYTE BLOCKS (PAGES).
                ; HL MUST BE 128-BYTE ALIGNED, DE MUST BE MULTIPLE OF 128
                NVSET:
 0805 E5        	PUSH	H
 0806 21AF08    	LXI	H,BUF	; HL = BUF, TOS = NVADR
 0809 0E41      	MVI	C,WIZ$CTL
                NVSET0:
                	; WAIT FOR WIP=0...
 080B 3E02      	MVI	A,NVSCS
                	OUTP	A
 080D+ED79      	DB	0EDH,A*8+41H
 080F 3E05      	MVI	A,RDSR
 0811 D340      	OUT	WIZ$DAT
 0813 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0815 DB40      	IN	WIZ$DAT	; STATUS REGISTER
                	OUTZ		; NOT SCS
 0817+ED71      	DB	0EDH, 71H
 0819 E601      	ANI	WIP
                	JRNZ	NVSET0
 081B+20EE      	DB	20H,NVSET0-$-1
 081D 3E02      	MVI	A,NVSCS
                	OUTP	A
 081F+ED79      	DB	0EDH,A*8+41H
 0821 3E06      	MVI	A,WREN
 0823 D340      	OUT	WIZ$DAT
                	OUTZ		; NOT SCS
 0825+ED71      	DB	0EDH, 71H
 0827 3E02      	MVI	A,NVSCS
 0829 D341      	OUT	WIZ$CTL
 082B 3E02      	MVI	A,NVWR
 082D D340      	OUT	WIZ$DAT
 082F E3        	XTHL	; GET NVADR
 0830 7C        	MOV	A,H
 0831 D340      	OUT	WIZ$DAT
 0833 7D        	MOV	A,L
 0834 D340      	OUT	WIZ$DAT
 0836 018000    	LXI	B,128
 0839 09        	DAD	B	; UPDATE NVADR
 083A EB        	XCHG
 083B B7        	ORA	A
                	DSBC	B	; UPDATE LENGTH
 083C+ED42      	DB	0EDH,B*8+42H
 083E EB        	XCHG
 083F E3        	XTHL	; GET BUF ADR
 0840 41        	MOV	B,C	; B = 128
 0841 0E40      	MVI	C,WIZ$DAT
                	OUTIR		; HL = NEXT PAGE IN 'buf'
 0843+EDB3      	DB	0EDH,0B3H
 0845 0E41      	MVI	C,WIZ$CTL
                	OUTZ		; NOT SCS
 0847+ED71      	DB	0EDH, 71H
 0849 7B        	MOV	A,E
 084A B2        	ORA	D
                	JRNZ	NVSET0
 084B+20BE      	DB	20H,NVSET0-$-1
 084D E1        	POP	H
 084E C9        	RET
                
 084F           	DS	40
 0877           STACK:	DS	0
 0877 0000      USRSTK:	DW	0
                
 0879 00        CPNET:	DB	0
 087A 0000      NETCFG:	DW	0
                
 087C 00        WIZMAG:	DB	0	; USED AS CLIENT (NODE) ID
                
                COMREGS:
 087D           GW:	DS	4
 0881           MSK:	DS	4
 0885           MAC:	DS	6
 088B           IP:	DS	4
 0012 =         COMLEN	EQU	$-COMREGS
                
                SOKREGS:
 088F           SOKMR:	DS	4	; MR, CR, IR, SR
 0893           SOKPT:	DS	2	; PORT
 0895           SOKMAC:	DS	6	; DHAR
 089B           SOKIP:	DS	4	; DIPR
 089F           SOKDPT:	DS	2	; DPORT
 0012 =         SOKLEN	EQU	$-SOKREGS
                
                NEWSOK:
 08A1           NSKPT:	DS	2	; PORT
 08A3           NSKMAC:	DS	6	; DHAR
 08A9           NSKIP:	DS	4	; DIPR
 08AD           NSKDPT:	DS	2	; DPORT
 0020 =         NSKLEN	EQU	$-SOKREGS
                
 08AF           BUF:	DS	512
                
 0AAF           	END
