                ; A config util for WizNET 550 devices, attached in parallel-SPI interface
                ; Sets config into NVRAM, unless 'w' option prefix to set to WIZ850io directly.
                ;
                ; Commands:
                ;	[w] n <id>		Set node ID
                ;	[w] g <ip>		Set gateway IP addr
                ;	[w] s <ip>		Set sub-network mask
                ;	[w] i <ip>		Set node IP addr
                ;	[w] m <ma>		Set node h/w addr
                ;	[w] 0 <id> <ip> <pt>	Set sock 0
                ;	r			Restore WIZ850io config from NVRAM
                
                	extrn	wizcfg, wizcmd, wizget, wizset, wizclose, setsok, settcp
                	extrn	gkeep,skeep
                	extrn	cksum32, vcksum, scksum, nvget
                
                	public	nvbuf	; for wizcfg routine
                
                	maclib	z80
                
 000D =         CR	equ	13
 000A =         LF	equ	10
                
 0000 =         cpm	equ	0
 0005 =         bdos	equ	5
 0080 =         cmd	equ	0080h
                
 0009 =         print	equ	9
 000C =         getver	equ	12
 0045 =         cfgtbl	equ	69
                
                	cseg
                
 0000 C30300    	jmp	start
                
                	dseg
 0000 4E6F646520idmsg:	db	'Node ID:  $'
 000B 4761746577gwmsg:	db	'Gateway:  $'
 0016 5375626E65ntmsg:	db	'Subnet:   $'
 0021 4D41433A20mcmsg:	db	'MAC:      $'
 002C 4950204164ipmsg:	db	'IP Addr:  $'
                
 0037 57495A4346usage:	db	'WIZCFG version 1.3',CR,LF
 004B 5573616765	db	'Usage: WIZCFG {G|I|S} ipadr',CR,LF
 0068 2020202020	db	'       WIZCFG M macadr',CR,LF
 0080 2020202020	db	'       WIZCFG N cid',CR,LF
 0095 2020202020	db	'       WIZCFG {0..7} sid ipadr port [keep]',CR,LF
 00C1 2020202020	db	'       WIZCFG R',CR,LF
 00D2 2020202020	db	'       WIZCFG L {A:..P:,LST:}',CR,LF
 00F1 2020202020	db	'       WIZCFG T {A:..P:}={A:..P:}[sid]',CR,LF
 0119 2020202020	db	'       WIZCFG T LST:=idx[sid]',CR,LF
 0138 2020202020	db	'       WIZCFG X {A:..P:,LST:}',CR,LF
 0157 5365747320	db	'Sets network config in NVRAM',CR,LF
 0175 5072656669	db	'Prefix cmd with W to set WIZ850io directly',CR,LF
 01A1 5220636D64	db	'R cmd sets WIZ850io from NVRAM',CR,LF
 01C1 24        	db	'$'
 01C2 5365740D0Adone:	db	'Set',CR,LF,'$'
 01C8 536F636B65sock:	db	'Socket '
 01CF 4E3A2024  sokn:	db	'N: $'
 01D3 4E6F20536Fncfg:	db	'No Sockets Configured',CR,LF,'$'
 01EB 4E6F204465ndcfg:	db	'No Devices Configured',CR,LF,'$'
 0203 43502F4E45nocpn:	db	'CP/NET is running! Restoring config anyway...',CR,LF,'$'
 0233 4E5652414Dnverr:	db	'NVRAM block not initialized',CR,LF,'$'
 0251 496E697469newbuf:	db	'Initializing new NVRAM block',CR,LF,'$'
 0270 2257222070nowerr:	db	'"W" prefix not allowed',CR,LF,'$'
                
 0289 4C6F63616Cldrv:	db	'Local '
 028F 5F3A0D0A24l0:	db	'_:',CR,LF,'$'
 0294 4E6574776Fndrv:	db	'Network '
 029C 5F3A203D20n0:	db	'_: = '
 02A1 5F3A5B    n1:	db	'_:['
 02A4 5F5F5D0D0An2:	db	'__]',CR,LF,'$'
                
 02AA 4C6F63616Cllst:	db	'Local LST:',CR,LF,'$'
 02B7 4E6574776Fnlst:	db	'Network LST: = '
 02C6 5F5B      nl1:	db	'_['
 02C8 5F5F5D0D0Anl2:	db	'__]',CR,LF,'$'
                
                	cseg
                start:
                	sspd	usrstk
 0003+ED73      	DB	0EDH,73H
 0005+F602      	DW	USRSTK
 0007 31F602    	lxi	sp,stack
 000A 0E0C      	mvi	c,getver
 000C CD0500    	call	bdos
 000F 7C        	mov	a,h
 0010 E602      	ani	02h
 0012 CA2200    	jz	nocpnt
 0015 F6FF      	ori	0ffh
 0017 32F902    	sta	cpnet
 001A 0E45      	mvi	c,cfgtbl
 001C CD0500    	call	bdos
 001F 22FA02    	shld	netcfg
                nocpnt:
 0022 3A8000    	lda	cmd
 0025 B7        	ora	a
 0026 CA7803    	jz	show
                
 0029 218000    	lxi	h,cmd
 002C 46        	mov	b,m
 002D 23        	inx	h
                pars0:
 002E 7E        	mov	a,m
 002F FE20      	cpi	' '
 0031 C23A00    	jnz	pars1
 0034 23        	inx	h
                	djnz	pars0
 0035+10F7      	DB	10H,PARS0-$-1
 0037 C37803    	jmp	show
                
                pars1:
 003A FE57      	cpi	'W'
 003C C24800    	jnz	notw
 003F 32F802    	sta	direct
 0042 23        	inx	h
                	djnz	pars0
 0043+10E9      	DB	10H,PARS0-$-1
 0045 C37803    	jmp	show
                notw:
                	; All require pre-read of NVRAM, if not direct
 0048 E5        	push	h
 0049 C5        	push	b
 004A 3AF802    	lda	direct
 004D B7        	ora	a
 004E CC4206    	cz	nvgetb	; init buf if needed
 0051 C1        	pop	b
 0052 E1        	pop	h
 0053 7E        	mov	a,m	; restore cmd
                	; These have no params...
 0054 FE52      	cpi 	'R'
 0056 CA8F02    	jz	pars5
                	;
 0059 4F        	mov	c,a
 005A CD4E05    	call	skipb1
 005D DA6203    	jc	help
 0060 79        	mov	a,c
 0061 FE47      	cpi 	'G'
                	lxix	gw
 0063+DD21      	DB	0DDH,21H
 0065+FE02      	DW	GW
 0067 110100    	lxi	d,GAR
 006A CAD901    	jz	pars2
 006D FE49      	cpi 	'I'
                	lxix	ip
 006F+DD21      	DB	0DDH,21H
 0071+0C03      	DW	IP
 0073 110F00    	lxi	d,SIPR
 0076 CAD901    	jz	pars2
 0079 FE53      	cpi 	'S'
                	lxix	msk
 007B+DD21      	DB	0DDH,21H
 007D+0203      	DW	MSK
 007F 110500    	lxi	d,SUBR
 0082 CAD901    	jz	pars2
 0085 FE4D      	cpi 	'M'
 0087 CAC401    	jz	pars3
 008A FE4E      	cpi 	'N'
 008C CAAF01    	jz	pars4
 008F FE4C      	cpi 	'L'
 0091 CAB902    	jz	locdv
 0094 FE58      	cpi 	'X'
 0096 CAB902    	jz	locdv
 0099 FE54      	cpi 	'T'
 009B CADE02    	jz	netwk
 009E FE30      	cpi	'0'
 00A0 DA6203    	jc	help
 00A3 FE38      	cpi	'7'+1
 00A5 D26203    	jnc	help
                
                ; Parse new Socket config
 00A8 32CF01    	sta	sokn
                	; parse <srvid> <ipadr> <port>
 00AB 0E00      	mvi	c,0	; NUL won't ever be seen
 00AD CD7505    	call	parshx
 00B0 DA6203    	jc	help
 00B3 3E31      	mvi	a,31h
 00B5 322303    	sta	nskpt
 00B8 7A        	mov	a,d	; server ID
 00B9 322403    	sta	nskpt+1
 00BC CD5005    	call	skipb
 00BF DA6203    	jc	help
                	lxix	nskip
 00C2+DD21      	DB	0DDH,21H
 00C4+2B03      	DW	NSKIP
 00C6 CDA205    	call	parsadr
 00C9 DA6203    	jc	help
 00CC CD5005    	call	skipb
 00CF DA6203    	jc	help
 00D2 CDD405    	call	parsnm
 00D5 DA6203    	jc	help
 00D8 7A        	mov	a,d
 00D9 322F03    	sta	nskdpt
 00DC 7B        	mov	a,e
 00DD 323003    	sta	nskdpt+1
                	; optional keep-alive timeout
 00E0 AF        	xra	a
 00E1 323103    	sta	nskkp
 00E4 CD5005    	call	skipb
 00E7 DA0001    	jc	nokp
 00EA 78        	mov	a,b
 00EB B7        	ora	a
 00EC C4D405    	cnz	parsnm
 00EF DA6203    	jc	help
 00F2 CD0205    	call	div5
 00F5 7A        	mov	a,d
 00F6 B7        	ora	a
 00F7 CAFC00    	jz	nokp0
 00FA 1EFF      	mvi	e,0ffh	; max keepalive
 00FC 7B        nokp0:	mov	a,e
 00FD 323103    	sta	nskkp
                nokp:
                ; Now prepare to update socket config
 0100 3AF802    	lda	direct
 0103 B7        	ora	a
 0104 CA7101    	jz	nvsok
                	; set Sn_MR separate, to avoid writing CR and SR...
 0107 CD6D03    	call	getsokn
 010A 57        	mov	d,a
 010B D5        	push	d
 010C CD0000    	call	settcp	; force TCP mode
 010F 3A3103    	lda	nskkp
 0112 CD0000    	call	skeep	; set keep-alive
                	; Get current values, cleanup as needed
 0115 211003    	lxi	h,sokregs
 0118 1E00      	mvi	e,SnMR
 011A 0612      	mvi	b,soklen
 011C CD0000    	call	wizget
 011F 211603    	lxi	h,sokmac
 0122 112503    	lxi	d,nskmac
 0125 010600    	lxi	b,6
                	ldir
 0128+EDB0      	DB	0EDH,0B0H
 012A 3A1403    	lda	sokpt
 012D FE31      	cpi	31h
 012F C25701    	jnz	ntcpnet	; don't care about sockets not configured
 0132 3AF902    	lda	cpnet
 0135 B7        	ora	a
 0136 CA5701    	jz	ntcpnet	; skip CFGTBL cleanup if not CP/NET
                	; remove all refs to this server...
 0139 3A1503    	lda	sokpt+1	; server node ID
 013C 4F        	mov	c,a
 013D 2AFA02    	lhld	netcfg
 0140 0612      	mvi	b,18	; 16 drives, CON:, LST:
 0142 23        	inx	h
 0143 23        	inx	h
 0144 7E        cln0:	mov	a,m
 0145 B7        	ora	a
 0146 F25301    	jp	ntnet	; device not networked
 0149 23        	inx	h
 014A 7E        	mov	a,m
 014B B9        	cmp	c	; same server?
 014C C25401    	jnz	ntnet1
 014F AF        	xra	a
 0150 77        	mov	m,a
 0151 2B        	dcx	h
 0152 77        	mov	m,a
 0153 23        ntnet:	inx	h
 0154 23        ntnet1:	inx	h
                	djnz	cln0
 0155+10ED      	DB	10H,CLN0-$-1
                ntcpnet:
 0157 3A1303    	lda	sokmr+SnSR
 015A FE00      	cpi	CLOSED
 015C CA6601    	jz	ntopn
 015F D1        	pop	d
 0160 D5        	push	d
 0161 3E08      	mvi	a,DISCON
 0163 CD0000    	call	wizcmd
                	; don't care about results?
 0166 212303    ntopn:	lxi	h,newsok
 0169 D1        	pop	d
 016A 1E04      	mvi	e,SnPORT
 016C 060E      	mvi	b,soklen-SnPORT
 016E C3FC01    	jmp	setit
                nvsok:
 0171 3ACF01    	lda	sokn
 0174 D630      	sui	'0'	; 00000sss
 0176 0F        	rrc
 0177 0F        	rrc
 0178 0F        	rrc		; sss00000 or sokn * 32
 0179 5F        	mov	e,a
 017A 1600      	mvi	d,0
                	lxix	nvbuf+32	; socket 0 buffer
 017C+DD21      	DB	0DDH,21H
 017E+5203      	DW	NVBUF+32
                	dadx	d
 0180+DD19      	DB	0DDH,D*8+09H
 0182 2A2303    	lhld	nskpt	; big endian data, little endian load...
                	stx	l,SnPORT
 0185+DD7504    	DB	0DDH,70H+L,SNPORT
                	stx	h,SnPORT+1
 0188+DD7405    	DB	0DDH,70H+H,SNPORT+1
 018B 2A2B03    	lhld	nskip	; little endian load...
                	stx	l,SnDIPR
 018E+DD750C    	DB	0DDH,70H+L,SNDIPR
                	stx	h,SnDIPR+1
 0191+DD740D    	DB	0DDH,70H+H,SNDIPR+1
 0194 2A2D03    	lhld	nskip+2	; little endian load...
                	stx	l,SnDIPR+2
 0197+DD750E    	DB	0DDH,70H+L,SNDIPR+2
                	stx	h,SnDIPR+3
 019A+DD740F    	DB	0DDH,70H+H,SNDIPR+3
 019D 2A2F03    	lhld	nskdpt	; big endian data, little endian load...
                	stx	l,SnDPORT
 01A0+DD7510    	DB	0DDH,70H+L,SNDPORT
                	stx	h,SnDPORT+1
 01A3+DD7411    	DB	0DDH,70H+H,SNDPORT+1
 01A6 3A3103    	lda	nskkp
                	stx	a,NvKPALVTR	; force to 00 if not set
 01A9+DD771D    	DB	0DDH,70H+A,NVKPALVTR
 01AC C34A03    	jmp	nvsetit
                
                pars4:
 01AF CD7505    	call	parshx
 01B2 DA6203    	jc	help
 01B5 7A        	mov	a,d
 01B6 32FD02    	sta	wizmag
 01B9 21FD02    	lxi	h,wizmag
 01BC 111D00    	lxi	d,PMAGIC
 01BF 0601      	mvi	b,1
 01C1 C3E601    	jmp	setit0
                
                pars3:
                	lxix	mac
 01C4+DD21      	DB	0DDH,21H
 01C6+0603      	DW	MAC
                	pushix
 01C8+DDE5      	DB	0DDH,0E5H
 01CA CD5D05    	call	parsmac
 01CD E1        	pop	h
 01CE DA6203    	jc	help
 01D1 110900    	lxi	d,SHAR
 01D4 0606      	mvi	b,6
 01D6 C3E601    	jmp	setit0
                
                pars2:
                	pushix
 01D9+DDE5      	DB	0DDH,0E5H
 01DB D5        	push	d
 01DC CDA205    	call	parsadr
 01DF D1        	pop	d
 01E0 E1        	pop	h
 01E1 DA6203    	jc	help
 01E4 0604      	mvi	b,4
                	; got it...
                setit0:
 01E6 3AF802    	lda	direct
 01E9 B7        	ora	a
 01EA C2FC01    	jnz	setit
 01ED E5        	push	h
 01EE 213203    	lxi	h,nvbuf
 01F1 19        	dad	d
 01F2 EB        	xchg
 01F3 E1        	pop	h
 01F4 48        	mov	c,b
 01F5 0600      	mvi	b,0
                	ldir
 01F7+EDB0      	DB	0EDH,0B0H
 01F9 C34A03    	jmp	nvsetit
                setit:
 01FC CD0000    	call	wizset
                
                	;lxi	d,done
                	;mvi	c,print
                	;call	bdos
 01FF C35A03    	jmp	exit
                
                nvshow:	; show config from NVRAM
                	lxix	nvbuf
 0202+DD21      	DB	0DDH,21H
 0204+3203      	DW	NVBUF
 0206 210000    	lxi	h,0
 0209 110002    	lxi	d,512
 020C CD0000    	call	nvget
 020F CD0000    	call	vcksum
 0212 C25D03    	jnz	cserr
 0215 3A4F03    	lda	nvbuf+PMAGIC
 0218 CDC806    	call	shid
 021B 214103    	lxi	h,nvbuf+SIPR
 021E 112C00    	lxi	d,ipmsg
 0221 CDDD06    	call	ship
 0224 213303    	lxi	h,nvbuf+GAR
 0227 110B00    	lxi	d,gwmsg
 022A CDDD06    	call	ship
 022D 213703    	lxi	h,nvbuf+SUBR
 0230 111600    	lxi	d,ntmsg
 0233 CDDD06    	call	ship
 0236 213B03    	lxi	h,nvbuf+SHAR
 0239 CDEA06    	call	shmac
 023C 215203    	lxi	h,nvbuf+32	; socket 0 buffer
 023F 0608      	mvi	b,nsock
                shnvsk0:
 0241 C5        	push	b
 0242 111003    	lxi	d,sokregs
 0245 011200    	lxi	b,soklen
                	ldir
 0248+EDB0      	DB	0EDH,0B0H
 024A 110B00    	lxi	d,NvKPALVTR-soklen
 024D 19        	dad	d
 024E 7E        	mov	a,m
 024F 322203    	sta	sokkp
 0252 110300    	lxi	d,32-NvKPALVTR
 0255 19        	dad	d	; next socket buf
 0256 C1        	pop	b
 0257 C5        	push	b
 0258 E5        	push	h
 0259 3E08      	mvi	a,nsock
 025B 90        	sub	b	; 0..7
 025C 5F        	mov	e,a
 025D CDEB03    	call	showsok
 0260 E1        	pop	h
 0261 C1        	pop	b
                	djnz	shnvsk0
 0262+10DD      	DB	10H,SHNVSK0-$-1
 0264 3AFC02    	lda	count
 0267 B7        	ora	a
 0268 CC3E04    	cz	nocfg
                	; Now show any preset cfgtbl entries
 026B AF        	xra	a
 026C 32FC02    	sta	count
 026F 215204    	lxi	h,nvbuf+288	; cfgtbl template
 0272 0610      	mvi	b,16
                shnvcf0:
 0274 23        	inx	h
 0275 23        	inx	h
 0276 7E        	mov	a,m
 0277 FEFF      	cpi	0ffh
 0279 C4FA06    	cnz	shdrv
                	djnz	shnvcf0
 027C+10F6      	DB	10H,SHNVCF0-$-1
 027E 23        	inx	h	; skip CON:
 027F 23        	inx	h
 0280 23        	inx	h
 0281 23        	inx	h
 0282 CD3807    	call	shlst
 0285 3AFC02    	lda	count
 0288 B7        	ora	a
 0289 CC4704    	cz	nodcfg
 028C C35A03    	jmp	exit
                
                pars5:	; restore config from NVRAM
 028F 3AF802    	lda	direct
 0292 B7        	ora	a
 0293 C2AE02    	jnz	now
 0296 3AF902    	lda	cpnet
 0299 B7        	ora	a
 029A CAA502    	jz	xocpnt
 029D 110302    	lxi	d,nocpn
 02A0 0E09      	mvi	c,print
 02A2 CD0500    	call	bdos
                xocpnt:
 02A5 CD0000    	call	wizcfg
 02A8 DA5D03    	jc	cserr
 02AB C35A03    	jmp	exit
                	;...
                
 02AE 117002    now:	lxi	d,nowerr
 02B1 0E09      	mvi	c,print
 02B3 CD0500    	call	bdos
 02B6 C35A03    	jmp	exit
                
                locdv:	; skipb already called
 02B9 F5        	push	psw	; 'X' or 'L'
 02BA 3AF802    	lda	direct
 02BD B7        	ora	a
 02BE C2AE02    	jnz	now
 02C1 0E00      	mvi	c,0
 02C3 CD0506    	call	parsdv
 02C6 DA6203    	jc	help
 02C9 F1        	pop	psw
 02CA D64C      	sui	'L'	; 0C or 00
                	jrz	locdv0
 02CC+2802      	DB	28H,LOCDV0-$-1
 02CE 3EFF      	mvi	a,0ffh
                locdv0:
                	; E= 0-15, or 17 (LST:)
 02D0 1C        	inr	e
 02D1 1600      	mvi	d,0
 02D3 215204    	lxi	h,nvbuf+288
 02D6 19        	dad	d
 02D7 19        	dad	d
 02D8 77        	mov	m,a
 02D9 23        	inx	h
 02DA 77        	mov	m,a
 02DB C34A03    	jmp	nvsetit
                
                netwk:	; skipb already called
 02DE 3AF802    	lda	direct
 02E1 B7        	ora	a
 02E2 C2AE02    	jnz	now
 02E5 CD0506    	call	parsdv
 02E8 DA6203    	jc	help
 02EB 3E3D      	mvi	a,'='
 02ED CD3706    	call	check1
 02F0 DA6203    	jc	help
                	; E= 0-15, or 17 (LST:)
 02F3 7B        	mov	a,e
 02F4 1C        	inr	e
 02F5 1600      	mvi	d,0
                	lxix	nvbuf+288
 02F7+DD21      	DB	0DDH,21H
 02F9+5204      	DW	NVBUF+288
                	dadx	d
 02FB+DD19      	DB	0DDH,D*8+09H
                	dadx	d
 02FD+DD19      	DB	0DDH,D*8+09H
 02FF FE11      	cpi	17	; LST:
                	jrz	netlst
 0301+2830      	DB	28H,NETLST-$-1
 0303 CD0506    	call	parsdv
 0306 DA6203    	jc	help
 0309 3E5B      	mvi	a,'['
 030B CD3706    	call	check1
 030E F5        	push	psw
 030F 7B        	mov	a,e
 0310 FE10      	cpi	16
 0312 D26203    	jnc	help
                netwk1:
 0315 F680      	ori	080h
                	stx	a,+0
 0317+DD7700    	DB	0DDH,70H+A,+0
 031A F1        	pop	psw
 031B 1600      	mvi	d,0
                	jrc	netwk2
 031D+380E      	DB	38H,NETWK2-$-1
 031F 0E5D      	mvi	c,']'
 0321 CD7505    	call	parshx	; get SID
 0324 DA6203    	jc	help
 0327 7A        	mov	a,d
 0328 FEFF      	cpi	0ffh
 032A CA6203    	jz	help
                netwk2:
                	stx	d,+1
 032D+DD7201    	DB	0DDH,70H+D,+1
 0330 C34A03    	jmp	nvsetit
                netlst:
 0333 0E5B      	mvi	c,'['
 0335 CD7505    	call	parshx	; get LST: num
 0338 DA6203    	jc	help
 033B 7A        	mov	a,d
 033C FE10      	cpi	16
 033E D26203    	jnc	help
 0341 3E5B      	mvi	a,'['
 0343 CD3706    	call	check1
 0346 F5        	push	psw
 0347 7A        	mov	a,d
                	jr	netwk1
 0348+18CB      	DB	18H,NETWK1-$-1
                
                nvsetit:
                	lxix	nvbuf
 034A+DD21      	DB	0DDH,21H
 034C+3203      	DW	NVBUF
 034E CD0000    	call	scksum
 0351 210000    	lxi	h,0	; WIZNET uses 512 bytes at 0000 in NVRAM
 0354 110002    	lxi	d,512
 0357 CD7906    	call	nvset
                	;lxi	d,done
                	;mvi	c,print
                	;call	bdos
                	;jmp	exit
                exit:
 035A C30000    	jmp	cpm
                
                if 0
                trace:
                	push	h
                	push	d
                	push	b
                	mov	a,h
                	call	hexout
                	mov	a,l
                	call	hexout
                	mvi	a,' '
                	call	chrout
                	mov	a,d
                	call	hexout
                	mov	a,e
                	call	hexout
                	mvi	a,' '
                	call	chrout
                	mov	a,b
                	call	hexout
                	mov	a,c
                	call	hexout
                	call	crlf
                	pop	b
                	pop	d
                	pop	h
                	ret
                endif
                
 035D 113302    cserr:	lxi	d,nverr
                	jr	xtmsg
 0360+1803      	DB	18H,XTMSG-$-1
                
                help:
 0362 113700    	lxi	d,usage
 0365 0E09      xtmsg:	mvi	c,print
 0367 CD0500    	call	bdos
 036A C35A03    	jmp	exit
                
                ; Convert 'sokn' (ASCII digit) to socket BSB
                getsokn:
 036D 3ACF01    	lda	sokn
 0370 D630      	sui	'0'
 0372 0F        	rrc
 0373 0F        	rrc
 0374 0F        	rrc		; xxx00000
 0375 F608      	ori	SOCK0	; xxx01000
 0377 C9        	ret
                
                show:
 0378 3AF802    	lda	direct
 037B B7        	ora	a
 037C CA0202    	jz	nvshow
 037F 21FE02    	lxi	h,comregs
 0382 110100    	lxi	d,GAR
 0385 0612      	mvi	b,comlen
 0387 CD0000    	call	wizget
 038A 21FD02    	lxi	h,wizmag
 038D 111D00    	lxi	d,PMAGIC
 0390 0601      	mvi	b,1
 0392 CD0000    	call	wizget
                
 0395 3AFD02    	lda	wizmag
 0398 CDC806    	call	shid
                
 039B 210C03    	lxi	h,ip
 039E 112C00    	lxi	d,ipmsg
 03A1 CDDD06    	call	ship
                
 03A4 21FE02    	lxi	h,gw
 03A7 110B00    	lxi	d,gwmsg
 03AA CDDD06    	call	ship
                
 03AD 210203    	lxi	h,msk
 03B0 111600    	lxi	d,ntmsg
 03B3 CDDD06    	call	ship
                
 03B6 210603    	lxi	h,mac
 03B9 CDEA06    	call	shmac
                
 03BC 110008    	lxi	d,SOCK0 shl 8	; E=0
 03BF 0608      	mvi	b,nsock
 03C1 C5        show0:	push	b
 03C2 D5        	push	d
 03C3 1E00      	mvi	e,0
 03C5 211003    	lxi	h,sokregs
 03C8 0612      	mvi	b,soklen
 03CA CD0000    	call	wizget
 03CD CD0000    	call	gkeep
 03D0 322203    	sta	sokkp
 03D3 D1        	pop	d
 03D4 D5        	push	d
 03D5 CDEB03    	call	showsok
 03D8 D1        	pop	d
 03D9 C1        	pop	b
 03DA 1C        	inr	e
 03DB 3E20      	mvi	a,001$00$000b	; socket BSB incr value
 03DD 82        	add	d
 03DE 57        	mov	d,a
                	djnz	show0
 03DF+10E0      	DB	10H,SHOW0-$-1
 03E1 3AFC02    	lda	count
 03E4 B7        	ora	a
 03E5 CC3E04    	cz	nocfg
                
 03E8 C35A03    	jmp	exit
                
                ; Do not show unconfigured sockets
                showsok:
 03EB 3A1403    	lda	sokpt
 03EE FE31      	cpi	31h
 03F0 C0        	rnz
 03F1 3AFC02    	lda	count
 03F4 3C        	inr	a
 03F5 32FC02    	sta	count
 03F8 7B        	mov	a,e
 03F9 C630      	adi	'0'
 03FB 32CF01    	sta	sokn
 03FE 11C801    	lxi	d,sock
 0401 0E09      	mvi	c,print
 0403 CD0500    	call	bdos
 0406 3A1503    	lda	sokpt+1
 0409 CD2605    	call	hexout
 040C 3E48      	mvi	a,'H'
 040E CD7404    	call	chrout
 0411 3E20      	mvi	a,' '
 0413 CD7404    	call	chrout
 0416 211C03    	lxi	h,sokip
 0419 CD6204    	call	ipout
 041C 3E20      	mvi	a,' '
 041E CD7404    	call	chrout
 0421 3A2003    	lda	sokdpt
 0424 57        	mov	d,a
 0425 3A2103    	lda	sokdpt+1
 0428 5F        	mov	e,a
 0429 CD9804    	call	dec16
 042C 3E20      	mvi	a,' '
 042E CD7404    	call	chrout
 0431 3A2203    	lda	sokkp
 0434 CD1805    	call	mult5
 0437 CD9804    	call	dec16
 043A CD8D04    	call	crlf
 043D C9        	ret
                
 043E 11D301    nocfg:	lxi	d,ncfg
 0441 0E09      	mvi	c,print
 0443 CD0500    	call	bdos
 0446 C9        	ret
                
 0447 11EB01    nodcfg:	lxi	d,ndcfg
 044A 0E09      	mvi	c,print
 044C CD0500    	call	bdos
 044F C9        	ret
                
                hwout:
 0450 0606      	mvi	b,6
 0452 0E3A      	mvi	c,':'
 0454 7E        hw0:	mov	a,m
 0455 CD2605    	call	hexout
 0458 05        	dcr	b
 0459 C8        	rz
 045A 79        	mov	a,c
 045B CD7404    	call	chrout
 045E 23        	inx	h
 045F C35404    	jmp	hw0
                
                ipout:
 0462 0604      	mvi	b,4
 0464 0E2E      	mvi	c,'.'
 0466 7E        ip0:	mov	a,m
 0467 CDD404    	call	decout
 046A 05        	dcr	b
 046B C8        	rz
 046C 79        	mov	a,c
 046D CD7404    	call	chrout
 0470 23        	inx	h
 0471 C36604    	jmp	ip0
                
                chrout:
 0474 E5        	push	h
 0475 D5        	push	d
 0476 C5        	push	b
 0477 5F        	mov	e,a
 0478 0E02      	mvi	c,002h
 047A CD0500    	call	bdos
 047D C1        	pop	b
 047E D1        	pop	d
 047F E1        	pop	h
 0480 C9        	ret
                
                getsts:
 0481 0E44      	mvi	c,044h
 0483 CD0500    	call	bdos
 0486 C9        	ret
                
                getcfg:
 0487 0E45      	mvi	c,045h
 0489 CD0500    	call	bdos
 048C C9        	ret
                
                crlf:
 048D 3E0D      	mvi	a,CR
 048F CD7404    	call	chrout
 0492 3E0A      	mvi	a,LF
 0494 CD7404    	call	chrout
 0497 C9        	ret
                
                dec16:
 0498 EB        	xchg	; remainder in HL
 0499 0E00      	mvi	c,0
 049B 111027    	lxi	d,10000
 049E CDBA04    	call	div16
 04A1 11E803    	lxi	d,1000
 04A4 CDBA04    	call	div16
 04A7 116400    	lxi	d,100
 04AA CDBA04    	call	div16
 04AD 110A00    	lxi	d,10
 04B0 CDBA04    	call	div16
 04B3 7D        	mov	a,l
 04B4 C630      	adi	'0'
 04B6 CD7404    	call	chrout
 04B9 C9        	ret
                
 04BA 0600      div16:	mvi	b,0
 04BC B7        dv0:	ora	a
                	dsbc	d
 04BD+ED52      	DB	0EDH,D*8+42H
 04BF 04        	inr	b
                	jrnc	dv0
 04C0+30FA      	DB	30H,DV0-$-1
 04C2 19        	dad	d
 04C3 05        	dcr	b
                	jrnz	dv1
 04C4+2005      	DB	20H,DV1-$-1
                	bit	0,c
 04C6+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	dv1
 04C8+2001      	DB	20H,DV1-$-1
 04CA C9        	ret
                dv1:	setb	0,c
 04CB+CBC1      	DB	0CBH,0*8+C+0C0H
 04CD 3E30      	mvi	a,'0'
 04CF 80        	add	b
 04D0 CD7404    	call	chrout
 04D3 C9        	ret
                
                ; A=number to print
                ; leading zeroes blanked - must preserve B
                decout:
 04D4 C5        	push	b
 04D5 0E00      	mvi	c,0
 04D7 1664      	mvi	d,100
 04D9 CDE804    	call	divide
 04DC 160A      	mvi	d,10
 04DE CDE804    	call	divide
 04E1 C630      	adi	'0'
 04E3 CD7404    	call	chrout
 04E6 C1        	pop	b
 04E7 C9        	ret
                
 04E8 1E00      divide:	mvi	e,0
 04EA 92        div0:	sub	d
 04EB 1C        	inr	e
                	jrnc	div0
 04EC+30FC      	DB	30H,DIV0-$-1
 04EE 82        	add	d
 04EF 1D        	dcr	e
                	jrnz	div1
 04F0+2005      	DB	20H,DIV1-$-1
                	bit	0,c
 04F2+CB41      	DB	0CBH,0*8+C+40H
                	jrnz	div1
 04F4+2001      	DB	20H,DIV1-$-1
 04F6 C9        	ret
                div1:	setb	0,c
 04F7+CBC1      	DB	0CBH,0*8+C+0C0H
 04F9 F5        	push	psw	; remainder
 04FA 3E30      	mvi	a,'0'
 04FC 83        	add	e
 04FD CD7404    	call	chrout
 0500 F1        	pop	psw	; remainder
 0501 C9        	ret
                
                ; brute-force divide DE by 5
                ; Return: DE=quotient (remainder lost)
 0502 E5        div5:	push	h
 0503 C5        	push	b
 0504 EB        	xchg
 0505 010500    	lxi	b,5
 0508 110000    	lxi	d,0
 050B B7        	ora	a
                div50:	dsbc	b
 050C+ED42      	DB	0EDH,B*8+42H
 050E DA1505    	jc	div51
 0511 13        	inx	d
 0512 C30C05    	jmp	div50
 0515 C1        div51:	pop	b
 0516 E1        	pop	h
 0517 C9        	ret
                
                ; Multiply A by 5, result in DE
 0518 EB        mult5:	xchg	; save HL
 0519 6F        	mov	l,a
 051A 2600      	mvi	h,0
 051C 29        	dad	h	; *2
 051D 29        	dad	h	; *4
 051E 85        	add	l	; *5
 051F 6F        	mov	l,a
 0520 3E00      	mvi	a,0
 0522 8C        	adc	h
 0523 67        	mov	h,a
 0524 EB        	xchg	; result to DE, restore HL
 0525 C9        	ret
                
                hexout:
 0526 F5        	push	psw
 0527 0F        	rrc
 0528 0F        	rrc
 0529 0F        	rrc
 052A 0F        	rrc
 052B CD2F05    	call	hexdig
 052E F1        	pop	psw
                	;jmp	hexdig
                hexdig:
 052F E60F      	ani	0fh
 0531 C690      	adi	90h
 0533 27        	daa
 0534 CE40      	aci	40h
 0536 27        	daa
 0537 C37404    	jmp	chrout
                
 053A F5        hexbuf:	push	psw
 053B 0F        	rrc
 053C 0F        	rrc
 053D 0F        	rrc
 053E 0F        	rrc
 053F CD4305    	call	hexdbf
 0542 F1        	pop	psw
 0543 E60F      hexdbf:	ani	0fh
 0545 C690      	adi	90h
 0547 27        	daa
 0548 CE40      	aci	40h
 054A 27        	daa
 054B 77        	mov	m,a
 054C 23        	inx	h
 054D C9        	ret
                
                skipb1:	; skip character, then skip blanks
 054E 23        	inx	h
 054F 05        	dcr	b
                skipb:	; skip blanks
 0550 78        	mov	a,b
 0551 B7        	ora	a
 0552 37        	stc
 0553 C8        	rz
 0554 7E        skip0:	mov	a,m
 0555 FE20      	cpi	' '
 0557 C0        	rnz	; no carry?
 0558 23        	inx	h
                	djnz	skip0
 0559+10F9      	DB	10H,SKIP0-$-1
 055B 37        	stc
 055C C9        	ret
                
                ; IX=destination
                parsmac:
 055D 0E3A      	mvi	c,':'
                pm00:
 055F CD7505    	call	parshx
 0562 D8        	rc
 0563 CA6B05    	jz	pm1	; hit term char
                	; TODO: check for 6 bytes...
                	stx	d,+0
 0566+DD7200    	DB	0DDH,70H+D,+0
 0569 B7        	ora	a	; NC
 056A C9        	ret
                pm1:
                	stx	d,+0
 056B+DD7200    	DB	0DDH,70H+D,+0
                	inxix
 056E+DD23      	DB	0DDH,23H
 0570 23        	inx	h
                	djnz	pm00
 0571+10EC      	DB	10H,PM00-$-1
                	; error if ends here...
 0573 37        	stc
 0574 C9        	ret
                
                
                ; C=term char
                ; returns CY if error, Z if term char, NZ end of text
                ; returns D=value
                parshx:
 0575 1600      	mvi	d,0
 0577 7E        pm0:	mov	a,m
 0578 B9        	cmp	c
 0579 C8        	rz
 057A FE20      	cpi	' '
                	jrz	nzret
 057C+2821      	DB	28H,NZRET-$-1
 057E D630      	sui	'0'
 0580 D8        	rc
 0581 FE0A      	cpi	'9'-'0'+1
                	jrc	pm3
 0583+3809      	DB	38H,PM3-$-1
 0585 D611      	sui	'A'-'0'
 0587 D8        	rc
 0588 FE06      	cpi	'F'-'A'+1
 058A 3F        	cmc
 058B D8        	rc
 058C C60A      	adi	10
                pm3:
 058E E60F      	ani	0fh
 0590 5F        	mov	e,a
 0591 7A        	mov	a,d
 0592 87        	add	a
 0593 D8        	rc
 0594 87        	add	a
 0595 D8        	rc
 0596 87        	add	a
 0597 D8        	rc
 0598 87        	add	a
 0599 D8        	rc
 059A 83        	add	e	; carry not possible
 059B 57        	mov	d,a
 059C 23        	inx	h
                	djnz	pm0
 059D+10D8      	DB	10H,PM0-$-1
                nzret:
 059F AF        	xra	a
 05A0 3C        	inr	a	; NZ
 05A1 C9        	ret
                
                ; IX=destination
                parsadr:
 05A2 0E2E      	mvi	c,'.'
                pa00:
 05A4 1600      	mvi	d,0
 05A6 7E        pa0:	mov	a,m
 05A7 B9        	cmp	c
 05A8 CACA05    	jz	pa1
 05AB FE20      	cpi	' '
 05AD CAC505    	jz	pa2
 05B0 FE30      	cpi	'0'
 05B2 D8        	rc
 05B3 FE3A      	cpi	'9'+1
 05B5 3F        	cmc
 05B6 D8        	rc
 05B7 E60F      	ani	0fh
 05B9 5F        	mov	e,a
 05BA 7A        	mov	a,d
 05BB 87        	add	a	; *2
 05BC 87        	add	a	; *4
 05BD 82        	add	d	; *5
 05BE 87        	add	a	; *10
 05BF 83        	add	e
 05C0 D8        	rc
 05C1 57        	mov	d,a
 05C2 23        	inx	h
                	djnz	pa0
 05C3+10E1      	DB	10H,PA0-$-1
                pa2:
                	; TODO: check for 4 bytes...
                	stx	d,+0
 05C5+DD7200    	DB	0DDH,70H+D,+0
 05C8 B7        	ora	a
 05C9 C9        	ret
                
                pa1:
                	stx	d,+0
 05CA+DD7200    	DB	0DDH,70H+D,+0
                	inxix
 05CD+DD23      	DB	0DDH,23H
 05CF 23        	inx	h
                	djnz	pa00
 05D0+10D2      	DB	10H,PA00-$-1
                	; error if ends here...
 05D2 37        	stc
 05D3 C9        	ret
                
                ; Parse a 16-bit (max) decimal number
                parsnm:
 05D4 110000    	lxi	d,0
 05D7 7E        pd0:	mov	a,m
 05D8 FE20      	cpi	' '
 05DA C8        	rz
 05DB FE30      	cpi	'0'
 05DD D8        	rc
 05DE FE3A      	cpi	'9'+1
 05E0 3F        	cmc
 05E1 D8        	rc
 05E2 E60F      	ani	0fh
 05E4 E5        	push	h
 05E5 62        	mov	h,d
 05E6 6B        	mov	l,e
 05E7 29        	dad	h	; *2
 05E8 DA0306    	jc	pd1
 05EB 29        	dad	h	; *4
 05EC DA0306    	jc	pd1
 05EF 19        	dad	d	; *5
 05F0 DA0306    	jc	pd1
 05F3 29        	dad	h	; *10
 05F4 DA0306    	jc	pd1
 05F7 5F        	mov	e,a
 05F8 1600      	mvi	d,0
 05FA 19        	dad	d
 05FB EB        	xchg
 05FC E1        	pop	h
 05FD D8        	rc
 05FE 23        	inx	h
                	djnz	pd0
 05FF+10D6      	DB	10H,PD0-$-1
 0601 B7        	ora	a	; NC
 0602 C9        	ret
                
 0603 E1        pd1:	pop	h
 0604 C9        	ret	; CY still set
                
                ; Parse device, A:..P: or LST:
                ; returns E=0..15,17 or CY if error
                parsdv:
 0605 78        	mov	a,b	; chars left
 0606 FE02      	cpi	2
 0608 D8        	rc
 0609 7E        	mov	a,m
 060A D641      	sui	'A'
 060C D8        	rc
 060D 5F        	mov	e,a
 060E 23        	inx	h
 060F 7E        	mov	a,m
 0610 05        	dcr	b
 0611 FE3A      	cpi	':'
                	jrnz	pv1	; LST: or error
 0613+2007      	DB	20H,PV1-$-1
 0615 23        	inx	h
 0616 05        	dcr	b
 0617 7B        	mov	a,e	; must be 0..15
 0618 FE10      	cpi	16
 061A 3F        	cmc
 061B C9        	ret
                pv1:
 061C 7B        	mov	a,e
 061D FE0B      	cpi	'L'-'A'
 061F 37        	stc
 0620 C0        	rnz
 0621 3E53      	mvi	a,'S'
 0623 CD3706    	call	check1
 0626 D8        	rc
 0627 3E54      	mvi	a,'T'
 0629 CD3706    	call	check1
 062C D8        	rc
 062D 3E3A      	mvi	a,':'
 062F CD3706    	call	check1
 0632 D8        	rc
 0633 1E11      	mvi	e,17
 0635 AF        	xra	a
 0636 C9        	ret
                
                ; Tests if A==curr char on cmdlin
                ; CY if fail, next char if true
                check1:
 0637 BE        	cmp	m
 0638 37        	stc
 0639 C0        	rnz
 063A 78        	mov	a,b
 063B B7        	ora	a
 063C 37        	stc
 063D C8        	rz
 063E 23        	inx	h
 063F 05        	dcr	b
 0640 AF        	xra	a
 0641 C9        	ret
                	
                
                ; Get a block of data from NVRAM to 'buf'
                ; Verify checksum, init block if needed.
                nvgetb:
                	lxix	nvbuf
 0642+DD21      	DB	0DDH,21H
 0644+3203      	DW	NVBUF
 0646 210000    	lxi	h,0
 0649 110002    	lxi	d,512
 064C CD0000    	call	nvget
 064F CD0000    	call	vcksum
 0652 C8        	rz	; chksum OK, ready to update/use
 0653 115102    	lxi	d,newbuf
 0656 0E09      	mvi	c,print
 0658 CD0500    	call	bdos
 065B 213203    	lxi	h,nvbuf
 065E 36FF      	mvi	m,0ffh
 0660 54        	mov	d,h
 0661 5D        	mov	e,l
 0662 23        	inx	h
 0663 01FF01    	lxi	b,511
                	ldir
 0666+EDB0      	DB	0EDH,0B0H
 0668 C9        	ret
                
                ; NOTE: this delay varies with CPU clock speed.
                msleep:
 0669 E5        	push	h
 066A F5        mslp0:	push	psw
 066B 214F00    	lxi	h,79	; ~1mS at 2.048MHz (200uS at 10.24MHz)
 066E 2B        mslp1:	dcx	h
 066F 7C        	mov	a,h
 0670 B5        	ora	l
                	jrnz	mslp1
 0671+20FB      	DB	20H,MSLP1-$-1
 0673 F1        	pop	psw
 0674 3D        	dcr	a
                	jrnz	mslp0
 0675+20F3      	DB	20H,MSLP0-$-1
 0677 E1        	pop	h
 0678 C9        	ret
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                ; These defines should be in a common file...
 0040 =         spi	equ	40h
                
 0040 =         spi?dat	equ	spi+0
 0041 =         spi?ctl	equ	spi+1
 0041 =         spi?sts	equ	spi+1
                
 0002 =         NVSCS	equ	10b	; H8xSPI SCS for NVRAM
                
                ; Standard W5500 register offsets
 0001 =         GAR	equ	1	; offset of GAR, etc.
 0005 =         SUBR	equ	5
 0009 =         SHAR	equ	9
 000F =         SIPR	equ	15
 001D =         PMAGIC	equ	29	; used for node ID
                
 0008 =         nsock	equ	8
 0008 =         SOCK0	equ	000$01$000b
 0028 =         SOCK1	equ	001$01$000b
 0048 =         SOCK2	equ	010$01$000b
 0068 =         SOCK3	equ	011$01$000b
 0088 =         SOCK4	equ	100$01$000b
 00A8 =         SOCK5	equ	101$01$000b
 00C8 =         SOCK6	equ	110$01$000b
 00E8 =         SOCK7	equ	111$01$000b
                
 0000 =         SnMR	equ	0
 0001 =         SnCR	equ	1
 0002 =         SnIR	equ	2
 0003 =         SnSR	equ	3
 0004 =         SnPORT	equ	4
 000C =         SnDIPR	equ	12
 0010 =         SnDPORT	equ	16
 0014 =         SnRESV1 equ     20      ; 0x14 reserved
 0017 =         SnRESV2 equ     23      ; 0x17 reserved
 0018 =         SnRESV3 equ     24      ; 0x18 reserved
 0019 =         SnRESV4 equ     25      ; 0x19 reserved
 001A =         SnRESV5 equ     26      ; 0x1a reserved
 001B =         SnRESV6 equ     27      ; 0x1b reserved
 001C =         SnRESV7 equ     28      ; 0x1c reserved
 001D =         SnRESV8 equ     29      ; 0x1d reserved
 001F =         SnTXBUF	equ	31	; TXBUF_SIZE
                
 001D =         NvKPALVTR equ	SnRESV8	; where to stash keepalive in NVRAM
 002F =         SnKPALVTR equ	47	; Keep alive timeout, 5s units
                
                ; Socket SR values
 0000 =         CLOSED	equ	00h
                
                ; Socket CR commands
 0008 =         DISCON	equ	08h
                
                ; Standard NVRAM defines
                
                ; NVRAM/SEEPROM commands
 0003 =         NVRD	equ	00000011b
 0002 =         NVWR	equ	00000010b
 0005 =         RDSR	equ	00000101b
 0006 =         WREN	equ	00000110b
                ; NVRAM/SEEPROM status bits
 0001 =         WIP	equ	00000001b
                
                ; Put block of data to NVRAM from 'buf'
                ; HL = nvram address, DE = length
                ; Must write in 128-byte blocks (pages).
                ; HL must be 128-byte aligned, DE must be multiple of 128
                nvset:
 0679 E5        	push	h
 067A 213203    	lxi	h,nvbuf	; HL = buf, TOS = nvadr
 067D 0E41      	mvi	c,spi?ctl
                nvset0:
                	; wait for WIP=0...
 067F 3E02      	mvi	a,NVSCS
                	outp	a
 0681+ED79      	DB	0EDH,A*8+41H
 0683 3E05      	mvi	a,RDSR
 0685 D340      	out	spi?dat
 0687 DB40      	in	spi?dat	; prime pump
 0689 DB40      	in	spi?dat	; status register
 068B F5        	push	psw
 068C AF        	xra	a
                	outp	a	; not SCS
 068D+ED79      	DB	0EDH,A*8+41H
 068F F1        	pop	psw
 0690 E601      	ani	WIP
                	jrnz	nvset0
 0692+20EB      	DB	20H,NVSET0-$-1
 0694 3E02      	mvi	a,NVSCS
                	outp	a
 0696+ED79      	DB	0EDH,A*8+41H
 0698 3E06      	mvi	a,WREN
 069A D340      	out	spi?dat
 069C AF        	xra	a
                	outp	a	; not SCS
 069D+ED79      	DB	0EDH,A*8+41H
 069F 3E02      	mvi	a,NVSCS
                	outp	a
 06A1+ED79      	DB	0EDH,A*8+41H
 06A3 3E02      	mvi	a,NVWR
 06A5 D340      	out	spi?dat
 06A7 E3        	xthl	; get nvadr
 06A8 7C        	mov	a,h
 06A9 D340      	out	spi?dat
 06AB 7D        	mov	a,l
 06AC D340      	out	spi?dat
 06AE 018000    	lxi	b,128
 06B1 09        	dad	b	; update nvadr
 06B2 EB        	xchg
 06B3 B7        	ora	a
                	dsbc	b	; update length
 06B4+ED42      	DB	0EDH,B*8+42H
 06B6 EB        	xchg
 06B7 E3        	xthl	; get buf adr
 06B8 41        	mov	b,c	; B = 128
 06B9 0E40      	mvi	c,spi?dat
                	outir		; HL = next page in 'buf'
 06BB+EDB3      	DB	0EDH,0B3H
 06BD 0E41      	mvi	c,spi?ctl
 06BF AF        	xra	a
                	outp	a	; not SCS
 06C0+ED79      	DB	0EDH,A*8+41H
                ;	mvi	a,50
                ;	call	msleep	; wait for WIP to go "1"?
 06C2 7B        	mov	a,e
 06C3 B2        	ora	d
                	jrnz	nvset0
 06C4+20B9      	DB	20H,NVSET0-$-1
 06C6 E1        	pop	h
 06C7 C9        	ret
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                
                ; A = PMAGIC
 06C8 F5        shid:	push	psw
 06C9 110000    	lxi	d,idmsg
 06CC 0E09      	mvi	c,print
 06CE CD0500    	call	bdos
 06D1 F1        	pop	psw
 06D2 CD2605    	call	hexout
 06D5 3E48      	mvi	a,'H'
 06D7 CD7404    	call	chrout
 06DA C38D04    	jmp	crlf
                
                ; HL = IP addr, DE = prefix msg
 06DD E5        ship:	push	h
 06DE 0E09      	mvi	c,print
 06E0 CD0500    	call	bdos
 06E3 E1        	pop	h
 06E4 CD6204    	call	ipout
 06E7 C38D04    	jmp	crlf
                
                ; HL = mac addr
 06EA E5        shmac:	push	h
 06EB 112100    	lxi	d,mcmsg
 06EE 0E09      	mvi	c,print
 06F0 CD0500    	call	bdos
 06F3 E1        	pop	h
 06F4 CD5004    	call	hwout
 06F7 C38D04    	jmp	crlf
                
 06FA E5        shdrv:	push	h
 06FB C5        	push	b
 06FC 3AFC02    	lda	count
 06FF 3C        	inr	a
 0700 32FC02    	sta	count
 0703 3E10      	mvi	a,16
 0705 90        	sub	b
 0706 C641      	adi	'A'
 0708 328F02    	sta	l0
 070B 329C02    	sta	n0
 070E 7E        	mov	a,m
 070F E680      	ani	080h
                	jrnz	shdrv1
 0711+200B      	DB	20H,SHDRV1-$-1
 0713 118902    	lxi	d,ldrv
 0716 0E09      	mvi	c,print
 0718 CD0500    	call	bdos
 071B C1        shdrv9:	pop	b
 071C E1        	pop	h
 071D C9        	ret
                shdrv1:
 071E 7E        	mov	a,m
 071F E60F      	ani	0fh
 0721 C641      	adi	'A'
 0723 32A102    	sta	n1
 0726 23        	inx	h
 0727 7E        	mov	a,m
 0728 21A402    	lxi	h,n2
 072B CD3A05    	call	hexbuf
 072E 119402    	lxi	d,ndrv
 0731 0E09      	mvi	c,print
 0733 CD0500    	call	bdos
                	jr	shdrv9
 0736+18E3      	DB	18H,SHDRV9-$-1
                
 0738 7E        shlst:	mov	a,m
 0739 FEFF      	cpi	0ffh
 073B C8        	rz
 073C E680      	ani	080h
 073E 11AA02    	lxi	d,llst
                	jrz	shlst1
 0741+2813      	DB	28H,SHLST1-$-1
 0743 EB        	xchg
 0744 21C602    	lxi	h,nl1
 0747 1A        	ldax	d
 0748 13        	inx	d
 0749 CD4305    	call	hexdbf
 074C 21C802    	lxi	h,nl2
 074F 1A        	ldax	d
 0750 CD3A05    	call	hexbuf
 0753 11B702    	lxi	d,nlst
 0756 0E09      shlst1:	mvi	c,print
 0758 CD0500    	call	bdos
 075B 3AFC02    	lda	count
 075E 3C        	inr	a
 075F 32FC02    	sta	count
 0762 C9        	ret
                
                	dseg
 02CE           	ds	40
 02F6           stack:	ds	0
 02F6 0000      usrstk:	dw	0
                
 02F8 00        direct:	db	0
 02F9 00        cpnet:	db	0
 02FA 0000      netcfg:	dw	0
 02FC 00        count:	db	0
                
 02FD 00        wizmag:	db	0	; used as client (node) ID
                
                comregs:
 02FE           gw:	ds	4
 0302           msk:	ds	4
 0306           mac:	ds	6
 030C           ip:	ds	4
 0012 =         comlen	equ	$-comregs
                
                sokregs:
 0310           sokmr:	ds	4	; MR, CR, IR, SR
 0314           sokpt:	ds	2	; PORT
 0316           sokmac:	ds	6	; DHAR
 031C           sokip:	ds	4	; DIPR
 0320           sokdpt:	ds	2	; DPORT
 0012 =         soklen	equ	$-sokregs
 0322           sokkp:	ds	1
                
                newsok:
 0323           nskpt:	ds	2	; PORT
 0325           nskmac:	ds	6	; DHAR
 032B           nskip:	ds	4	; DIPR
 032F           nskdpt:	ds	2	; DPORT
 0021 =         nsklen	equ	$-sokregs
 0331           nskkp:	ds	1	; KPALVTR
                
 0332           nvbuf:	ds	512
                
 0532           	end
