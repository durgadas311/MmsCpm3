                ; A CONFIG UTIL FOR WIZNET 550 DEVICES, ATTACHED IN PARALLEL-SPI INTERFACE
                ; SETS CONFIG INTO NVRAM, UNLESS 'W' OPTION PREFIX TO SET TO WIZ850IO DIRECTLY.
                ;
                ; COMMANDS:
                ;	[W] N <ID>		SET NODE ID
                ;	[W] G <IP>		SET GATEWAY IP ADDR
                ;	[W] S <IP>		SET SUB-NETWORK MASK
                ;	[W] I <IP>		SET NODE IP ADDR
                ;	[W] M <MA>		SET NODE H/W ADDR
                ;	[W] 0 <ID> <IP> <PT>	SET SOCK 0
                ;	R			RESTORE WIZ850IO CONFIG FROM NVRAM
                
                	MACLIB	Z80
                
 0040 =         WIZ	EQU	40H	; BASE PORT OF H8-WIZX50IO SPI INTERFACE
                
 0040 =         WIZ$DAT	EQU	WIZ+0
 0041 =         WIZ$CTL	EQU	WIZ+1
 0041 =         WIZ$STS	EQU	WIZ+1
                
 0001 =         SCS	EQU	01B	; SCS FOR WIZNET
 0002 =         NVSCS	EQU	10B	; SCS FOR NVRAM
                
                ; NVRAM/SEEPROM COMMANDS
 0003 =         NVRD	EQU	00000011B
 0002 =         NVWR	EQU	00000010B
 0005 =         RDSR	EQU	00000101B
 0006 =         WREN	EQU	00000110B
                ; NVRAM/SEEPROM STATUS BITS
 0001 =         WIP	EQU	00000001B
                
                ; WIZNET CTRL BIT FOR WRITING
 0004 =         WRITE	EQU	00000100B
                
 0001 =         GAR	EQU	1	; OFFSET OF GAR, ETC.
 0005 =         SUBR	EQU	5
 0009 =         SHAR	EQU	9
 000F =         SIPR	EQU	15
 001D =         PMAGIC	EQU	29	; USED FOR NODE ID
                
 0008 =         NSOCK	EQU	8
 0008 =         SOCK0	EQU	000$01$000B
 0028 =         SOCK1	EQU	001$01$000B
 0048 =         SOCK2	EQU	010$01$000B
 0068 =         SOCK3	EQU	011$01$000B
 0088 =         SOCK4	EQU	100$01$000B
 00A8 =         SOCK5	EQU	101$01$000B
 00C8 =         SOCK6	EQU	110$01$000B
 00E8 =         SOCK7	EQU	111$01$000B
                
 0000 =         SNMR	EQU	0
 0001 =         SNCR	EQU	1
 0002 =         SNIR	EQU	2
 0003 =         SNSR	EQU	3
 0004 =         SNPORT	EQU	4
 000C =         SNDIPR	EQU	12
 0010 =         SNDPORT	EQU	16
 001F =         SNTXBUF	EQU	31	; TXBUF_SIZE
                
                ; SOCKET SR VALUES
 0000 =         CLOSED	EQU	00H
                
                ; SOCKET CR COMMANDS
 0008 =         DISCON	EQU	08H
                
 000D =         CR	EQU	13
 000A =         LF	EQU	10
                
 0000 =         CPM	EQU	0
 0005 =         BDOS	EQU	5
 0080 =         CMD	EQU	0080H
                
 0009 =         PRINT	EQU	9
 000C =         GETVER	EQU	12
 0045 =         CFGTBL	EQU	69
                
 0100           	ORG	00100H
                
 0100 C3A902    	JMP	START
                
 0103 4E6F646520IDMSG:	DB	'Node ID:  $'
 010E 4761746577GWMSG:	DB	'Gateway:  $'
 0119 5375626E65NTMSG:	DB	'Subnet:   $'
 0124 4D41433A20MCMSG:	DB	'MAC:      $'
 012F 4950204164IPMSG:	DB	'IP Addr:  $'
                
 013A 5573616765USAGE:	DB	'Usage: WIZCFG {G|I|S} ipadr',CR,LF
 0157 2020202020	DB	'       WIZCFG M macadr',CR,LF
 016F 2020202020	DB	'       WIZCFG N cid',CR,LF
 0184 2020202020	DB	'       WIZCFG {0..7} sid ipadr port',CR,LF
 01A9 2020202020	DB	'       WIZCFG R',CR,LF
 01BA 5365747320	DB	'Sets network config in NVRAM',CR,LF
 01D8 5072656669	DB	'Prefix cmd with W to set WIZ850io directly',CR,LF
 0204 5220636D64	DB	'R cmd sets WIZ850io from NVRAM',CR,LF
 0224 24        	DB	'$'
 0225 5365740D0ADONE:	DB	'Set',CR,LF,'$'
 022B 536F636B65SOCK:	DB	'Socket '
 0232 4E3A2024  SOKN:	DB	'N: $'
 0236 2D204E6F74NCFG:	DB	'- Not Configured',CR,LF,'$'
 0249 43502F4E45NOCPN:	DB	'CP/NET is running. Stop it first',CR,LF,'$'
 026C 4E5652414DNVERR:	DB	'NVRAM block not initialized',CR,LF,'$'
 028A 496E697469NEWBUF:	DB	'Initializing new NVRAM block',CR,LF,'$'
                
                START:
                	SSPD	USRSTK
 02A9+ED73      	DB	0EDH,73H
 02AB+FE09      	DW	USRSTK
 02AD 31FE09    	LXI	SP,STACK
 02B0 0E0C      	MVI	C,GETVER
 02B2 CD0500    	CALL	BDOS
 02B5 7C        	MOV	A,H
 02B6 E602      	ANI	02H
 02B8 CAC802    	JZ	NOCPNT
 02BB F6FF      	ORI	0FFH
 02BD 32010A    	STA	CPNET
 02C0 0E45      	MVI	C,CFGTBL
 02C2 CD0500    	CALL	BDOS
 02C5 22020A    	SHLD	NETCFG
                NOCPNT:
 02C8 3A8000    	LDA	CMD
 02CB B7        	ORA	A
 02CC CA1E06    	JZ	SHOW
                
 02CF 218000    	LXI	H,CMD
 02D2 46        	MOV	B,M
 02D3 23        	INX	H
                PARS0:
 02D4 7E        	MOV	A,M
 02D5 FE20      	CPI	' '
 02D7 C2E002    	JNZ	PARS1
 02DA 23        	INX	H
                	DJNZ	PARS0
 02DB+10F7      	DB	10H,PARS0-$-1
 02DD C31E06    	JMP	SHOW
                
                PARS1:
 02E0 FE57      	CPI	'W'
 02E2 C2EE02    	JNZ	NOTW
 02E5 32000A    	STA	DIRECT
 02E8 23        	INX	H
                	DJNZ	PARS0
 02E9+10E9      	DB	10H,PARS0-$-1
 02EB C31E06    	JMP	SHOW
                NOTW:
                	; ALL REQUIRE PRE-READ OF NVRAM, IF NOT DIRECT
 02EE E5        	PUSH	H
 02EF C5        	PUSH	B
 02F0 3A000A    	LDA	DIRECT
 02F3 B7        	ORA	A
 02F4 CCFD08    	CZ	NVGETB	; INIT BUF IF NEEDED
 02F7 C1        	POP	B
 02F8 E1        	POP	H
 02F9 7E        	MOV	A,M	; RESTORE CMD
                	; THESE HAVE NO PARAMS...
 02FA FE52      	CPI 	'R'
 02FC CACB04    	JZ	PARS5
 02FF FE56      	CPI 	'V'	; UNDOCUMENTED - NOT ALWAYS USEFUL
 0301 CA2D05    	JZ	PARS6
                	;
 0304 4F        	MOV	C,A
 0305 CDF407    	CALL	SKIPB
 0308 DA7505    	JC	HELP
 030B 79        	MOV	A,C
 030C FE47      	CPI 	'G'
                	LXIX	GW
 030E+DD21      	DB	0DDH,21H
 0310+050A      	DW	GW
 0312 110100    	LXI	D,GAR
 0315 CA4904    	JZ	PARS2
 0318 FE49      	CPI 	'I'
                	LXIX	IP
 031A+DD21      	DB	0DDH,21H
 031C+130A      	DW	IP
 031E 110F00    	LXI	D,SIPR
 0321 CA4904    	JZ	PARS2
 0324 FE53      	CPI 	'S'
                	LXIX	MSK
 0326+DD21      	DB	0DDH,21H
 0328+090A      	DW	MSK
 032A 110500    	LXI	D,SUBR
 032D CA4904    	JZ	PARS2
 0330 FE4D      	CPI 	'M'
 0332 CA3404    	JZ	PARS3
 0335 FE4E      	CPI 	'N'
 0337 CA1F04    	JZ	PARS4
 033A FE30      	CPI	'0'
 033C DA7505    	JC	HELP
 033F FE38      	CPI	'7'+1
 0341 D27505    	JNC	HELP
                
                ; PARSE NEW SOCKET CONFIG
 0344 323202    	STA	SOKN
                	; PARSE <SRVID> <IPADR> <PORT>
 0347 0E00      	MVI	C,0	; NUL WON'T EVER BE SEEN
 0349 CD1908    	CALL	PARSHX
 034C DA7505    	JC	HELP
 034F 3E31      	MVI	A,31H
 0351 32290A    	STA	NSKPT
 0354 7A        	MOV	A,D	; SERVER ID
 0355 322A0A    	STA	NSKPT+1
 0358 CDF407    	CALL	SKIPB
 035B DA7505    	JC	HELP
                	LXIX	NSKIP
 035E+DD21      	DB	0DDH,21H
 0360+310A      	DW	NSKIP
 0362 CD4808    	CALL	PARSADR
 0365 DA7505    	JC	HELP
 0368 CDF407    	CALL	SKIPB
 036B DA7505    	JC	HELP
 036E CD7A08    	CALL	PARSNM
 0371 DA7505    	JC	HELP
 0374 7A        	MOV	A,D
 0375 32350A    	STA	NSKDPT
 0378 7B        	MOV	A,E
 0379 32360A    	STA	NSKDPT+1
                ; NOW PREPARE TO UPDATE SOCKET CONFIG
 037C 3A000A    	LDA	DIRECT
 037F B7        	ORA	A
 0380 CAE703    	JZ	NVSOK
                	; SET SN_MR SEPARATE, TO AVOID WRITING CR AND SR...
 0383 CDF705    	CALL	GETSOKN
 0386 57        	MOV	D,A
 0387 D5        	PUSH	D
 0388 CD0E06    	CALL	SETTCP	; FORCE TCP MODE
                	; GET CURRENT VALUES, CLEANUP AS NEEDED
 038B 21170A    	LXI	H,SOKREGS
 038E 1E00      	MVI	E,SNMR
 0390 0612      	MVI	B,SOKLEN
 0392 CDB305    	CALL	WIZGET
 0395 211D0A    	LXI	H,SOKMAC
 0398 112B0A    	LXI	D,NSKMAC
 039B 010600    	LXI	B,6
                	LDIR
 039E+EDB0      	DB	0EDH,0B0H
 03A0 3A1B0A    	LDA	SOKPT
 03A3 FE31      	CPI	31H
 03A5 C2CD03    	JNZ	NTCPNET	; DON'T CARE ABOUT SOCKETS NOT CONFIGURED
 03A8 3A010A    	LDA	CPNET
 03AB B7        	ORA	A
 03AC CACD03    	JZ	NTCPNET	; SKIP CFGTBL CLEANUP IF NOT CP/NET
                	; REMOVE ALL REFS TO THIS SERVER...
 03AF 3A1C0A    	LDA	SOKPT+1	; SERVER NODE ID
 03B2 4F        	MOV	C,A
 03B3 2A020A    	LHLD	NETCFG
 03B6 0612      	MVI	B,18	; 16 DRIVES, CON:, LST:
 03B8 23        	INX	H
 03B9 23        	INX	H
 03BA 7E        CLN0:	MOV	A,M
 03BB B7        	ORA	A
 03BC F2C903    	JP	NTNET	; DEVICE NOT NETWORKED
 03BF 23        	INX	H
 03C0 7E        	MOV	A,M
 03C1 B9        	CMP	C	; SAME SERVER?
 03C2 C2CA03    	JNZ	NTNET1
 03C5 AF        	XRA	A
 03C6 77        	MOV	M,A
 03C7 2B        	DCX	H
 03C8 77        	MOV	M,A
 03C9 23        NTNET:	INX	H
 03CA 23        NTNET1:	INX	H
                	DJNZ	CLN0
 03CB+10ED      	DB	10H,CLN0-$-1
                NTCPNET:
 03CD 3A1A0A    	LDA	SOKMR+SNSR
 03D0 FE00      	CPI	CLOSED
 03D2 CADC03    	JZ	NTOPN
 03D5 D1        	POP	D
 03D6 D5        	PUSH	D
 03D7 3E08      	MVI	A,DISCON
 03D9 CD8005    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 03DC 21290A    NTOPN:	LXI	H,NEWSOK
 03DF D1        	POP	D
 03E0 1E04      	MVI	E,SNPORT
 03E2 060E      	MVI	B,SOKLEN-SNPORT
 03E4 C36C04    	JMP	SETIT
                NVSOK:
 03E7 3A3202    	LDA	SOKN
 03EA D630      	SUI	'0'	; 00000SSS
 03EC 0F        	RRC
 03ED 0F        	RRC
 03EE 0F        	RRC		; SSS00000 OR SOKN * 32
 03EF 5F        	MOV	E,A
 03F0 1600      	MVI	D,0
                	LXIX	BUF+32	; SOCKET 0 BUFFER
 03F2+DD21      	DB	0DDH,21H
 03F4+570A      	DW	BUF+32
                	DADX	D
 03F6+DD19      	DB	0DDH,D*8+09H
 03F8 2A290A    	LHLD	NSKPT	; BIG ENDIAN DATA, LITTLE ENDIAN LOAD...
                	STX	L,SNPORT
 03FB+DD7504    	DB	0DDH,70H+L,SNPORT
                	STX	H,SNPORT+1
 03FE+DD7405    	DB	0DDH,70H+H,SNPORT+1
 0401 2A310A    	LHLD	NSKIP	; LITTLE ENDIAN LOAD...
                	STX	L,SNDIPR
 0404+DD750C    	DB	0DDH,70H+L,SNDIPR
                	STX	H,SNDIPR+1
 0407+DD740D    	DB	0DDH,70H+H,SNDIPR+1
 040A 2A330A    	LHLD	NSKIP+2	; LITTLE ENDIAN LOAD...
                	STX	L,SNDIPR+2
 040D+DD750E    	DB	0DDH,70H+L,SNDIPR+2
                	STX	H,SNDIPR+3
 0410+DD740F    	DB	0DDH,70H+H,SNDIPR+3
 0413 2A350A    	LHLD	NSKDPT	; BIG ENDIAN DATA, LITTLE ENDIAN LOAD...
                	STX	L,SNDPORT
 0416+DD7510    	DB	0DDH,70H+L,SNDPORT
                	STX	H,SNDPORT+1
 0419+DD7411    	DB	0DDH,70H+H,SNDPORT+1
 041C C35C05    	JMP	NVSETIT
                
                PARS4:
 041F CD1908    	CALL	PARSHX
 0422 DA7505    	JC	HELP
 0425 7A        	MOV	A,D
 0426 32040A    	STA	WIZMAG
 0429 21040A    	LXI	H,WIZMAG
 042C 111D00    	LXI	D,PMAGIC
 042F 0601      	MVI	B,1
 0431 C35604    	JMP	SETIT0
                
                PARS3:
                	LXIX	MAC
 0434+DD21      	DB	0DDH,21H
 0436+0D0A      	DW	MAC
                	PUSHIX
 0438+DDE5      	DB	0DDH,0E5H
 043A CD0108    	CALL	PARSMAC
 043D E1        	POP	H
 043E DA7505    	JC	HELP
 0441 110900    	LXI	D,SHAR
 0444 0606      	MVI	B,6
 0446 C35604    	JMP	SETIT0
                
                PARS2:
                	PUSHIX
 0449+DDE5      	DB	0DDH,0E5H
 044B D5        	PUSH	D
 044C CD4808    	CALL	PARSADR
 044F D1        	POP	D
 0450 E1        	POP	H
 0451 DA7505    	JC	HELP
 0454 0604      	MVI	B,4
                	; GOT IT...
                SETIT0:
 0456 3A000A    	LDA	DIRECT
 0459 B7        	ORA	A
 045A C26C04    	JNZ	SETIT
 045D E5        	PUSH	H
 045E 21370A    	LXI	H,BUF
 0461 19        	DAD	D
 0462 EB        	XCHG
 0463 E1        	POP	H
 0464 48        	MOV	C,B
 0465 0600      	MVI	B,0
                	LDIR
 0467+EDB0      	DB	0EDH,0B0H
 0469 C35C05    	JMP	NVSETIT
                SETIT:
 046C CDCA05    	CALL	WIZSET
                
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
 046F C36805    	JMP	EXIT
                
                NVSHOW:	; SHOW CONFIG FROM NVRAM
 0472 210000    	LXI	H,0
 0475 110002    	LXI	D,512
 0478 CD2009    	CALL	NVGET
 047B CDC708    	CALL	VCKSUM
 047E C26B05    	JNZ	CSERR
 0481 3A540A    	LDA	BUF+PMAGIC
 0484 CDA409    	CALL	SHID
 0487 21460A    	LXI	H,BUF+SIPR
 048A 112F01    	LXI	D,IPMSG
 048D CDB909    	CALL	SHIP
 0490 21380A    	LXI	H,BUF+GAR
 0493 110E01    	LXI	D,GWMSG
 0496 CDB909    	CALL	SHIP
 0499 213C0A    	LXI	H,BUF+SUBR
 049C 111901    	LXI	D,NTMSG
 049F CDB909    	CALL	SHIP
 04A2 21400A    	LXI	H,BUF+SHAR
 04A5 CDC609    	CALL	SHMAC
 04A8 21570A    	LXI	H,BUF+32	; SOCKET 0 BUFFER
 04AB 0608      	MVI	B,NSOCK
                SHNVSK0:
 04AD C5        	PUSH	B
 04AE 11170A    	LXI	D,SOKREGS
 04B1 011200    	LXI	B,SOKLEN
                	LDIR
 04B4+EDB0      	DB	0EDH,0B0H
 04B6 110E00    	LXI	D,32-SOKLEN
 04B9 19        	DAD	D	; NEXT SOCKET BUF
 04BA C1        	POP	B
 04BB C5        	PUSH	B
 04BC E5        	PUSH	H
 04BD 3E08      	MVI	A,NSOCK
 04BF 90        	SUB	B	; 0..7
 04C0 5F        	MOV	E,A
 04C1 CDE506    	CALL	SHOWSOK
 04C4 E1        	POP	H
 04C5 C1        	POP	B
                	DJNZ	SHNVSK0
 04C6+10E5      	DB	10H,SHNVSK0-$-1
 04C8 C36805    	JMP	EXIT
                
                PARS5:	; RESTORE CONFIG FROM NVRAM
 04CB 3A010A    	LDA	CPNET
 04CE B7        	ORA	A
 04CF C27005    	JNZ	XOCPNT
 04D2 210000    	LXI	H,0
 04D5 110002    	LXI	D,512
 04D8 CD2009    	CALL	NVGET
 04DB CDC708    	CALL	VCKSUM
 04DE C26B05    	JNZ	CSERR
 04E1 21380A    	LXI	H,BUF+GAR
 04E4 1600      	MVI	D,0
 04E6 1E01      	MVI	E,GAR
 04E8 0612      	MVI	B,18	; GAR, SUBR, SHAR, SIPR
 04EA CDCA05    	CALL	WIZSET
 04ED 21540A    	LXI	H,BUF+PMAGIC
 04F0 1600      	MVI	D,0
 04F2 1E1D      	MVI	E,PMAGIC
 04F4 0601      	MVI	B,1
 04F6 CDCA05    	CALL	WIZSET
                	LXIX	BUF+32
 04F9+DD21      	DB	0DDH,21H
 04FB+570A      	DW	BUF+32
 04FD 1608      	MVI	D,SOCK0
 04FF 0608      	MVI	B,8
                REST0:
 0501 C5        	PUSH	B
                	LDX	A,SNPORT
 0502+DD7E04    	DB	0DDH,A*8+46H,SNPORT
 0505 FE31      	CPI	31H
 0507 C21E05    	JNZ	REST1	; SKIP UNCONFIGURED SOCKETS
 050A CDE105    	CALL	CLOSE	; CP/NET NOT ACTIVE - ALREADY CHECKED
 050D CD0E06    	CALL	SETTCP	; ENSURE MR IS SET TO TCP/IP
 0510 1E04      	MVI	E,SNPORT
 0512 0602      	MVI	B,2
 0514 CD0206    	CALL	SETSOK
 0517 1E0C      	MVI	E,SNDIPR
 0519 0606      	MVI	B,6	; DIPR AND DPORT
 051B CD0206    	CALL	SETSOK
                REST1:
 051E 012000    	LXI	B,32
                	DADX	B
 0521+DD09      	DB	0DDH,B*8+09H
 0523 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 0525 82        	ADD	D
 0526 57        	MOV	D,A
 0527 C1        	POP	B
                	DJNZ	REST0
 0528+10D7      	DB	10H,REST0-$-1
                
 052A C36805    	JMP	EXIT
                	;...
                
                PARS6:	; SAVE CONFIG TO NVRAM
 052D 21370A    	LXI	H,BUF
 0530 36FF      	MVI	M,0FFH	; EEPROM "UNPROGRAMMED"
 0532 11380A    	LXI	D,BUF+1
 0535 01FF01    	LXI	B,511
                	LDIR
 0538+EDB0      	DB	0EDH,0B0H
 053A 21370A    	LXI	H,BUF
 053D 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 053F 1E00      	MVI	E,0	; OFFSET +0
 0541 1600      	MVI	D,0	; BSB 0 = COMMON REGISTER BLOCK
 0543 CDB305    	CALL	WIZGET
 0546 21570A    	LXI	H,BUF+32
 0549 1608      	MVI	D,SOCK0	; BSB 08H = SOCKET 0 REGISTER BLOCK
 054B 1E00      	MVI	E,0	; OFFSET +0
 054D 0608      	MVI	B,8	; NUM SOCKETS
 054F C5        SAVE0:	PUSH	B
 0550 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 0552 CDB305    	CALL	WIZGET	; HL = NEXT BLOCK
 0555 C1        	POP	B
 0556 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 0558 82        	ADD	D
 0559 57        	MOV	D,A
                	DJNZ	SAVE0
 055A+10F3      	DB	10H,SAVE0-$-1
                	; GOT DATA OFF WIZNET CHIP, NOW SAVE TO NVRAM
                NVSETIT:
 055C CDEB08    	CALL	SCKSUM
 055F 210000    	LXI	H,0	; WIZNET USES 512 BYTES AT 0000 IN NVRAM
 0562 110002    	LXI	D,512
 0565 CD5509    	CALL	NVSET
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
                	;JMP	EXIT
                EXIT:
 0568 C30000    	JMP	CPM
                
 056B 116C02    CSERR:	LXI	D,NVERR
                	JR	XTMSG
 056E+1808      	DB	18H,XTMSG-$-1
 0570 114902    XOCPNT:	LXI	D,NOCPN
                	JR	XTMSG
 0573+1803      	DB	18H,XTMSG-$-1
                HELP:
 0575 113A01    	LXI	D,USAGE
 0578 0E09      XTMSG:	MVI	C,PRINT
 057A CD0500    	CALL	BDOS
 057D C36805    	JMP	EXIT
                
                ; SEND SOCKET COMMAND TO WIZNET CHIP, WAIT FOR DONE.
                ; A = COMMAND, D = SOCKET BSB
                ; DESTROYS A
                WIZCMD:
 0580 F5        	PUSH	PSW
 0581 3E01      	MVI	A,SCS
 0583 D341      	OUT	WIZ$CTL
 0585 AF        	XRA	A
 0586 D340      	OUT	WIZ$DAT
 0588 3E01      	MVI	A,SNCR
 058A D340      	OUT	WIZ$DAT
 058C 7A        	MOV	A,D
 058D F604      	ORI	WRITE
 058F D340      	OUT	WIZ$DAT
 0591 F1        	POP	PSW
 0592 D340      	OUT	WIZ$DAT	; START COMMAND
 0594 AF        	XRA	A	;
 0595 D341      	OUT	WIZ$CTL
                WC0:
 0597 3E01      	MVI	A,SCS
 0599 D341      	OUT	WIZ$CTL
 059B AF        	XRA	A
 059C D340      	OUT	WIZ$DAT
 059E 3E01      	MVI	A,SNCR
 05A0 D340      	OUT	WIZ$DAT
 05A2 7A        	MOV	A,D
 05A3 D340      	OUT	WIZ$DAT
 05A5 DB40      	IN	WIZ$DAT	; PRIME PUMP
 05A7 DB40      	IN	WIZ$DAT
 05A9 F5        	PUSH	PSW
 05AA AF        	XRA	A	;
 05AB D341      	OUT	WIZ$CTL
 05AD F1        	POP	PSW
 05AE B7        	ORA	A
 05AF C29705    	JNZ	WC0
 05B2 C9        	RET
                
                ; E = BSB, D = CTL, HL = DATA, B = LENGTH
                WIZGET:
 05B3 3E01      	MVI	A,SCS
 05B5 D341      	OUT	WIZ$CTL
 05B7 AF        	XRA	A	; HI ADR ALWAYS 0
 05B8 D340      	OUT	WIZ$DAT
 05BA 7B        	MOV	A,E
 05BB D340      	OUT	WIZ$DAT
 05BD 7A        	MOV	A,D
 05BE D340      	OUT	WIZ$DAT
 05C0 DB40      	IN	WIZ$DAT	; PRIME PUMP
 05C2 0E40      	MVI	C,WIZ$DAT
                	INIR
 05C4+EDB2      	DB	0EDH,0B2H
 05C6 AF        	XRA	A	; NOT SCS
 05C7 D341      	OUT	WIZ$CTL
 05C9 C9        	RET
                
                ; HL = DATA TO SEND, E = OFFSET, D = BSB, B = LENGTH
                ; DESTROYS HL, B, C, A
                WIZSET:
 05CA 3E01      	MVI	A,SCS
 05CC D341      	OUT	WIZ$CTL
 05CE AF        	XRA	A	; HI ADR ALWAYS 0
 05CF D340      	OUT	WIZ$DAT
 05D1 7B        	MOV	A,E
 05D2 D340      	OUT	WIZ$DAT
 05D4 7A        	MOV	A,D
 05D5 F604      	ORI	WRITE
 05D7 D340      	OUT	WIZ$DAT
 05D9 0E40      	MVI	C,WIZ$DAT
                	OUTIR
 05DB+EDB3      	DB	0EDH,0B3H
 05DD AF        	XRA	A	; NOT SCS
 05DE D341      	OUT	WIZ$CTL
 05E0 C9        	RET
                
                ; CLOSE SOCKET IF ACTIVE (SR <> CLOSED)
                ; D = SOCKET BSB
                ; DESTROYS HL, E, B, C, A
                CLOSE:
 05E1 211A0A    	LXI	H,SOKMR+SNSR
 05E4 1E03      	MVI	E,SNSR
 05E6 0601      	MVI	B,1
 05E8 CDB305    	CALL	WIZGET
 05EB 3A1A0A    	LDA	SOKMR+SNSR
 05EE FE00      	CPI	CLOSED
 05F0 C8        	RZ
 05F1 3E08      	MVI	A,DISCON
 05F3 CD8005    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 05F6 C9        	RET
                
                ; CONVERT 'SOKN' (ASCII DIGIT) TO SOCKET BSB
                GETSOKN:
 05F7 3A3202    	LDA	SOKN
 05FA D630      	SUI	'0'
 05FC 0F        	RRC
 05FD 0F        	RRC
 05FE 0F        	RRC		; XXX00000
 05FF F608      	ORI	SOCK0	; XXX01000
 0601 C9        	RET
                
                ; IX = BASE DATA BUFFER FOR SOCKET, D = SOCKET BSB, E = OFFSET, B = LENGTH
                ; DESTROYS HL, B, C
                SETSOK:
                	PUSHIX
 0602+DDE5      	DB	0DDH,0E5H
 0604 E1        	POP	H
 0605 D5        	PUSH	D
 0606 1600      	MVI	D,0
 0608 19        	DAD	D	; HL POINTS TO DATA IN 'BUF'
 0609 D1        	POP	D
 060A CDCA05    	CALL	WIZSET
 060D C9        	RET
                
                ; SET SOCKET MR TO TCP.
                ; D = SOCKET BSB (RESULT OF "GETSOKN")
                ; DESTROYS ALL REGISTERS EXCEPT D.
                SETTCP:
 060E 3E01      	MVI	A,1	; TCP
 0610 32170A    	STA	SOKMR
 0613 1E00      	MVI	E,SNMR
 0615 21170A    	LXI	H,SOKMR
 0618 0601      	MVI	B,1
 061A CDCA05    	CALL	WIZSET	; FORCE TCP/IP MODE
 061D C9        	RET
                
                SHOW:
 061E 3A000A    	LDA	DIRECT
 0621 B7        	ORA	A
 0622 CA7204    	JZ	NVSHOW
 0625 21050A    	LXI	H,COMREGS
 0628 110100    	LXI	D,GAR
 062B 0612      	MVI	B,COMLEN
 062D CDB305    	CALL	WIZGET
 0630 21040A    	LXI	H,WIZMAG
 0633 111D00    	LXI	D,PMAGIC
 0636 0601      	MVI	B,1
 0638 CDB305    	CALL	WIZGET
                
 063B 3A040A    	LDA	WIZMAG
 063E CDA409    	CALL	SHID
                
 0641 21130A    	LXI	H,IP
 0644 112F01    	LXI	D,IPMSG
 0647 CDB909    	CALL	SHIP
                
 064A 21050A    	LXI	H,GW
 064D 110E01    	LXI	D,GWMSG
 0650 CDB909    	CALL	SHIP
                
 0653 21090A    	LXI	H,MSK
 0656 111901    	LXI	D,NTMSG
 0659 CDB909    	CALL	SHIP
                
 065C 210D0A    	LXI	H,MAC
 065F CDC609    	CALL	SHMAC
                
 0662 21170A    	LXI	H,SOKREGS
 0665 110008    	LXI	D,SOCK0 SHL 8
 0668 0612      	MVI	B,SOKLEN
 066A CDB305    	CALL	WIZGET
 066D 1E00      	MVI	E,0
 066F CDE506    	CALL	SHOWSOK
                
 0672 21170A    	LXI	H,SOKREGS
 0675 110028    	LXI	D,SOCK1 SHL 8
 0678 0612      	MVI	B,SOKLEN
 067A CDB305    	CALL	WIZGET
 067D 1E01      	MVI	E,1
 067F CDE506    	CALL	SHOWSOK
                
 0682 21170A    	LXI	H,SOKREGS
 0685 110048    	LXI	D,SOCK2 SHL 8
 0688 0612      	MVI	B,SOKLEN
 068A CDB305    	CALL	WIZGET
 068D 1E02      	MVI	E,2
 068F CDE506    	CALL	SHOWSOK
                
 0692 21170A    	LXI	H,SOKREGS
 0695 110068    	LXI	D,SOCK3 SHL 8
 0698 0612      	MVI	B,SOKLEN
 069A CDB305    	CALL	WIZGET
 069D 1E03      	MVI	E,3
 069F CDE506    	CALL	SHOWSOK
                
 06A2 21170A    	LXI	H,SOKREGS
 06A5 110088    	LXI	D,SOCK4 SHL 8
 06A8 0612      	MVI	B,SOKLEN
 06AA CDB305    	CALL	WIZGET
 06AD 1E04      	MVI	E,4
 06AF CDE506    	CALL	SHOWSOK
                
 06B2 21170A    	LXI	H,SOKREGS
 06B5 1100A8    	LXI	D,SOCK5 SHL 8
 06B8 0612      	MVI	B,SOKLEN
 06BA CDB305    	CALL	WIZGET
 06BD 1E05      	MVI	E,5
 06BF CDE506    	CALL	SHOWSOK
                
 06C2 21170A    	LXI	H,SOKREGS
 06C5 1100C8    	LXI	D,SOCK6 SHL 8
 06C8 0612      	MVI	B,SOKLEN
 06CA CDB305    	CALL	WIZGET
 06CD 1E06      	MVI	E,6
 06CF CDE506    	CALL	SHOWSOK
                
 06D2 21170A    	LXI	H,SOKREGS
 06D5 1100E8    	LXI	D,SOCK7 SHL 8
 06D8 0612      	MVI	B,SOKLEN
 06DA CDB305    	CALL	WIZGET
 06DD 1E07      	MVI	E,7
 06DF CDE506    	CALL	SHOWSOK
                
 06E2 C36805    	JMP	EXIT
                
                SHOWSOK:
 06E5 7B        	MOV	A,E
 06E6 C630      	ADI	'0'
 06E8 323202    	STA	SOKN
 06EB 112B02    	LXI	D,SOCK
 06EE 0E09      	MVI	C,PRINT
 06F0 CD0500    	CALL	BDOS
 06F3 3A1B0A    	LDA	SOKPT
 06F6 FE31      	CPI	31H
 06F8 C22507    	JNZ	NOCFG
 06FB 3A1C0A    	LDA	SOKPT+1
 06FE CDE007    	CALL	HEXOUT
 0701 3E48      	MVI	A,'H'
 0703 CD5207    	CALL	CHROUT
 0706 3E20      	MVI	A,' '
 0708 CD5207    	CALL	CHROUT
 070B 21230A    	LXI	H,SOKIP
 070E CD4007    	CALL	IPOUT
 0711 3E20      	MVI	A,' '
 0713 CD5207    	CALL	CHROUT
 0716 3A270A    	LDA	SOKDPT
 0719 57        	MOV	D,A
 071A 3A280A    	LDA	SOKDPT+1
 071D 5F        	MOV	E,A
 071E CD7607    	CALL	DEC16
 0721 CD6B07    	CALL	CRLF
 0724 C9        	RET
                
 0725 113602    NOCFG:	LXI	D,NCFG
 0728 0E09      	MVI	C,PRINT
 072A CD0500    	CALL	BDOS
 072D C9        	RET
                
                HWOUT:
 072E 0606      	MVI	B,6
 0730 0E3A      	MVI	C,':'
 0732 7E        HW0:	MOV	A,M
 0733 CDE007    	CALL	HEXOUT
 0736 05        	DCR	B
 0737 C8        	RZ
 0738 79        	MOV	A,C
 0739 CD5207    	CALL	CHROUT
 073C 23        	INX	H
 073D C33207    	JMP	HW0
                
                IPOUT:
 0740 0604      	MVI	B,4
 0742 0E2E      	MVI	C,'.'
 0744 7E        IP0:	MOV	A,M
 0745 CDB207    	CALL	DECOUT
 0748 05        	DCR	B
 0749 C8        	RZ
 074A 79        	MOV	A,C
 074B CD5207    	CALL	CHROUT
 074E 23        	INX	H
 074F C34407    	JMP	IP0
                
                CHROUT:
 0752 E5        	PUSH	H
 0753 D5        	PUSH	D
 0754 C5        	PUSH	B
 0755 5F        	MOV	E,A
 0756 0E02      	MVI	C,002H
 0758 CD0500    	CALL	BDOS
 075B C1        	POP	B
 075C D1        	POP	D
 075D E1        	POP	H
 075E C9        	RET
                
                GETSTS:
 075F 0E44      	MVI	C,044H
 0761 CD0500    	CALL	BDOS
 0764 C9        	RET
                
                GETCFG:
 0765 0E45      	MVI	C,045H
 0767 CD0500    	CALL	BDOS
 076A C9        	RET
                
                CRLF:
 076B 3E0D      	MVI	A,CR
 076D CD5207    	CALL	CHROUT
 0770 3E0A      	MVI	A,LF
 0772 CD5207    	CALL	CHROUT
 0775 C9        	RET
                
                DEC16:
 0776 EB        	XCHG	; REMAINDER IN HL
 0777 0E00      	MVI	C,0
 0779 111027    	LXI	D,10000
 077C CD9807    	CALL	DIV16
 077F 11E803    	LXI	D,1000
 0782 CD9807    	CALL	DIV16
 0785 116400    	LXI	D,100
 0788 CD9807    	CALL	DIV16
 078B 110A00    	LXI	D,10
 078E CD9807    	CALL	DIV16
 0791 7D        	MOV	A,L
 0792 C630      	ADI	'0'
 0794 CD5207    	CALL	CHROUT
 0797 C9        	RET
                
 0798 0600      DIV16:	MVI	B,0
 079A B7        DV0:	ORA	A
                	DSBC	D
 079B+ED52      	DB	0EDH,D*8+42H
 079D 04        	INR	B
                	JRNC	DV0
 079E+30FA      	DB	30H,DV0-$-1
 07A0 19        	DAD	D
 07A1 05        	DCR	B
                	JRNZ	DV1
 07A2+2005      	DB	20H,DV1-$-1
                	BIT	0,C
 07A4+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DV1
 07A6+2001      	DB	20H,DV1-$-1
 07A8 C9        	RET
                DV1:	SETB	0,C
 07A9+CBC1      	DB	0CBH,0*8+C+0C0H
 07AB 3E30      	MVI	A,'0'
 07AD 80        	ADD	B
 07AE CD5207    	CALL	CHROUT
 07B1 C9        	RET
                
                ; LEADING ZEROES BLANKED - MUST PRESERVE B
                DECOUT:
 07B2 C5        	PUSH	B
 07B3 0E00      	MVI	C,0
 07B5 1664      	MVI	D,100
 07B7 CDC607    	CALL	DIVIDE
 07BA 160A      	MVI	D,10
 07BC CDC607    	CALL	DIVIDE
 07BF C630      	ADI	'0'
 07C1 CD5207    	CALL	CHROUT
 07C4 C1        	POP	B
 07C5 C9        	RET
                
 07C6 1E00      DIVIDE:	MVI	E,0
 07C8 92        DIV0:	SUB	D
 07C9 1C        	INR	E
                	JRNC	DIV0
 07CA+30FC      	DB	30H,DIV0-$-1
 07CC 82        	ADD	D
 07CD 1D        	DCR	E
                	JRNZ	DIV1
 07CE+2005      	DB	20H,DIV1-$-1
                	BIT	0,C
 07D0+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DIV1
 07D2+2001      	DB	20H,DIV1-$-1
 07D4 C9        	RET
                DIV1:	SETB	0,C
 07D5+CBC1      	DB	0CBH,0*8+C+0C0H
 07D7 F5        	PUSH	PSW	; REMAINDER
 07D8 3E30      	MVI	A,'0'
 07DA 83        	ADD	E
 07DB CD5207    	CALL	CHROUT
 07DE F1        	POP	PSW	; REMAINDER
 07DF C9        	RET
                
                HEXOUT:
 07E0 F5        	PUSH	PSW
 07E1 0F        	RRC
 07E2 0F        	RRC
 07E3 0F        	RRC
 07E4 0F        	RRC
 07E5 CDE907    	CALL	HEXDIG
 07E8 F1        	POP	PSW
                	;JMP	HEXDIG
                HEXDIG:
 07E9 E60F      	ANI	0FH
 07EB C690      	ADI	90H
 07ED 27        	DAA
 07EE CE40      	ACI	40H
 07F0 27        	DAA
 07F1 C35207    	JMP	CHROUT
                
                SKIPB:
 07F4 23        	INX	H	; SKIP OPTION LETTER
 07F5 05        	DCR	B
 07F6 37        	STC
 07F7 C8        	RZ
 07F8 7E        SKIP0:	MOV	A,M
 07F9 FE20      	CPI	' '
 07FB C0        	RNZ	; NO CARRY?
 07FC 23        	INX	H
                	DJNZ	SKIP0
 07FD+10F9      	DB	10H,SKIP0-$-1
 07FF 37        	STC
 0800 C9        	RET
                
                ; IX=DESTINATION
                PARSMAC:
 0801 0E3A      	MVI	C,':'
                PM00:
 0803 CD1908    	CALL	PARSHX
 0806 D8        	RC
 0807 CA0F08    	JZ	PM1	; HIT TERM CHAR
                	; TODO: CHECK FOR 6 BYTES...
                	STX	D,+0
 080A+DD7200    	DB	0DDH,70H+D,+0
 080D B7        	ORA	A	; NC
 080E C9        	RET
                PM1:
                	STX	D,+0
 080F+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 0812+DD23      	DB	0DDH,23H
 0814 23        	INX	H
                	DJNZ	PM00
 0815+10EC      	DB	10H,PM00-$-1
                	; ERROR IF ENDS HERE...
 0817 37        	STC
 0818 C9        	RET
                
                
                ; C=TERM CHAR
                ; RETURNS CY IF ERROR, Z IF TERM CHAR, NZ END OF TEXT
                PARSHX:
 0819 1600      	MVI	D,0
 081B 7E        PM0:	MOV	A,M
 081C B9        	CMP	C
 081D C8        	RZ
 081E FE20      	CPI	' '
 0820 CA4508    	JZ	NZRET
 0823 D630      	SUI	'0'
 0825 D8        	RC
 0826 FE0A      	CPI	'9'-'0'+1
 0828 DA3408    	JC	PM3
 082B D611      	SUI	'A'-'0'
 082D D8        	RC
 082E FE06      	CPI	'F'-'A'+1
 0830 3F        	CMC
 0831 D8        	RC
 0832 C60A      	ADI	10
                PM3:
 0834 E60F      	ANI	0FH
 0836 5F        	MOV	E,A
 0837 7A        	MOV	A,D
 0838 87        	ADD	A
 0839 D8        	RC
 083A 87        	ADD	A
 083B D8        	RC
 083C 87        	ADD	A
 083D D8        	RC
 083E 87        	ADD	A
 083F D8        	RC
 0840 83        	ADD	E	; CARRY NOT POSSIBLE
 0841 57        	MOV	D,A
 0842 23        	INX	H
                	DJNZ	PM0
 0843+10D6      	DB	10H,PM0-$-1
                NZRET:
 0845 AF        	XRA	A
 0846 3C        	INR	A	; NZ
 0847 C9        	RET
                
                ; IX=DESTINATION
                PARSADR:
 0848 0E2E      	MVI	C,'.'
                PA00:
 084A 1600      	MVI	D,0
 084C 7E        PA0:	MOV	A,M
 084D B9        	CMP	C
 084E CA7008    	JZ	PA1
 0851 FE20      	CPI	' '
 0853 CA6B08    	JZ	PA2
 0856 FE30      	CPI	'0'
 0858 D8        	RC
 0859 FE3A      	CPI	'9'+1
 085B 3F        	CMC
 085C D8        	RC
 085D E60F      	ANI	0FH
 085F 5F        	MOV	E,A
 0860 7A        	MOV	A,D
 0861 87        	ADD	A	; *2
 0862 87        	ADD	A	; *4
 0863 82        	ADD	D	; *5
 0864 87        	ADD	A	; *10
 0865 83        	ADD	E
 0866 D8        	RC
 0867 57        	MOV	D,A
 0868 23        	INX	H
                	DJNZ	PA0
 0869+10E1      	DB	10H,PA0-$-1
                PA2:
                	; TODO: CHECK FOR 4 BYTES...
                	STX	D,+0
 086B+DD7200    	DB	0DDH,70H+D,+0
 086E B7        	ORA	A
 086F C9        	RET
                
                PA1:
                	STX	D,+0
 0870+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 0873+DD23      	DB	0DDH,23H
 0875 23        	INX	H
                	DJNZ	PA00
 0876+10D2      	DB	10H,PA00-$-1
                	; ERROR IF ENDS HERE...
 0878 37        	STC
 0879 C9        	RET
                
                ; PARSE A 16-BIT (MAX) DECIMAL NUMBER
                PARSNM:
 087A 110000    	LXI	D,0
 087D 7E        PD0:	MOV	A,M
 087E FE20      	CPI	' '
 0880 C8        	RZ
 0881 FE30      	CPI	'0'
 0883 D8        	RC
 0884 FE3A      	CPI	'9'+1
 0886 3F        	CMC
 0887 D8        	RC
 0888 E60F      	ANI	0FH
 088A E5        	PUSH	H
 088B 62        	MOV	H,D
 088C 6B        	MOV	L,E
 088D 29        	DAD	H	; *2
 088E DAA908    	JC	PD1
 0891 29        	DAD	H	; *4
 0892 DAA908    	JC	PD1
 0895 19        	DAD	D	; *5
 0896 DAA908    	JC	PD1
 0899 29        	DAD	H	; *10
 089A DAA908    	JC	PD1
 089D 5F        	MOV	E,A
 089E 1600      	MVI	D,0
 08A0 19        	DAD	D
 08A1 EB        	XCHG
 08A2 E1        	POP	H
 08A3 D8        	RC
 08A4 23        	INX	H
                	DJNZ	PD0
 08A5+10D6      	DB	10H,PD0-$-1
 08A7 B7        	ORA	A	; NC
 08A8 C9        	RET
                
 08A9 E1        PD1:	POP	H
 08AA C9        	RET	; CY STILL SET
                
                ; IX = BUFFER, BC = LENGTH
                ; RETURN: HL = CKSUM HI, DE = CKSUM LO
                CKSUM32:
 08AB 210000    	LXI	H,0
 08AE 110000    	LXI	D,0
                CKS0:	LDX	A,+0
 08B1+DD7E00    	DB	0DDH,A*8+46H,+0
                	INXIX
 08B4+DD23      	DB	0DDH,23H
 08B6 83        	ADD	E
 08B7 5F        	MOV	E,A
                	JRNC	CKS1
 08B8+3007      	DB	30H,CKS1-$-1
 08BA 14        	INR	D
                	JRNZ	CKS1
 08BB+2004      	DB	20H,CKS1-$-1
 08BD 2C        	INR	L
                	JRNZ	CKS1
 08BE+2001      	DB	20H,CKS1-$-1
 08C0 24        	INR	H
 08C1 0B        CKS1:	DCX	B
 08C2 78        	MOV	A,B
 08C3 B1        	ORA	C
                	JRNZ	CKS0
 08C4+20EB      	DB	20H,CKS0-$-1
 08C6 C9        	RET
                
                ; VALIDATES CHECKSUM IN 'BUF'
                ; RETURN: NZ ON ERROR
                ; A CHECKSUM OF 00 00 00 00 MEANS THE BUFFER WAS ALL 00,
                ; WHICH IS INVALID.
                VCKSUM:
                	LXIX	BUF
 08C7+DD21      	DB	0DDH,21H
 08C9+370A      	DW	BUF
 08CB 01FC01    	LXI	B,508
 08CE CDAB08    	CALL	CKSUM32
                	LBCD	BUF+510
 08D1+ED4B      	DB	0EDH,4BH
 08D3+350C      	DW	BUF+510
 08D5 78        	MOV	A,B	;
 08D6 B1        	ORA	C	; CHECK FIRST HALF ZERO
                	DSBC	B
 08D7+ED42      	DB	0EDH,B*8+42H
 08D9 C0        	RNZ
                	LBCD	BUF+508
 08DA+ED4B      	DB	0EDH,4BH
 08DC+330C      	DW	BUF+508
 08DE B0        	ORA	B	;
 08DF B1        	ORA	C	; CHECK SECOND HALF ZERO
 08E0 EB        	XCHG
                	DSBC	B	; CY IS CLEAR
 08E1+ED42      	DB	0EDH,B*8+42H
 08E3 C0        	RNZ
 08E4 B7        	ORA	A	; WAS CHECKSUM ALL ZERO?
                	JRZ	VCKSM0
 08E5+2802      	DB	28H,VCKSM0-$-1
 08E7 AF        	XRA	A	; ZR
 08E8 C9        	RET
 08E9 3C        VCKSM0:	INR	A	; NZ
 08EA C9        	RET
                
                ; SETS CHECKSUM IN 'BUF'
                SCKSUM:
                	LXIX	BUF
 08EB+DD21      	DB	0DDH,21H
 08ED+370A      	DW	BUF
 08EF 01FC01    	LXI	B,508
 08F2 CDAB08    	CALL	CKSUM32
 08F5 22350C    	SHLD	BUF+510
                	SDED	BUF+508
 08F8+ED53      	DB	0EDH,53H
 08FA+330C      	DW	BUF+508
 08FC C9        	RET
                
                ; GET A BLOCK OF DATA FROM NVRAM TO 'BUF'
                ; VERIFY CHECKSUM, INIT BLOCK IF NEEDED.
                NVGETB:
 08FD 210000    	LXI	H,0
 0900 110002    	LXI	D,512
 0903 CD2009    	CALL	NVGET
 0906 CDC708    	CALL	VCKSUM
 0909 C8        	RZ	; CHKSUM OK, READY TO UPDATE/USE
 090A 118A02    	LXI	D,NEWBUF
 090D 0E09      	MVI	C,PRINT
 090F CD0500    	CALL	BDOS
 0912 21370A    	LXI	H,BUF
 0915 36FF      	MVI	M,0FFH
 0917 54        	MOV	D,H
 0918 5D        	MOV	E,L
 0919 23        	INX	H
 091A 01FF01    	LXI	B,511
                	LDIR
 091D+EDB0      	DB	0EDH,0B0H
 091F C9        	RET
                
                ; HL = NVRAM ADDRESS, DE = LENGTH
                NVGET:
 0920 3E02      	MVI	A,NVSCS
 0922 D341      	OUT	WIZ$CTL
 0924 3E03      	MVI	A,NVRD
 0926 D340      	OUT	WIZ$DAT
 0928 7C        	MOV	A,H
 0929 D340      	OUT	WIZ$DAT
 092B 7D        	MOV	A,L
 092C D340      	OUT	WIZ$DAT
 092E DB40      	IN	WIZ$DAT	; PRIME PUMP
 0930 0E40      	MVI	C,WIZ$DAT
 0932 7B        	MOV	A,E
 0933 B7        	ORA	A
 0934 CA3809    	JZ	NVGET1
 0937 14        	INR	D	; TODO: HANDLE 64K... AND OVERFLOW OF 'BUF'...
 0938 21370A    NVGET1:	LXI	H,BUF
 093B 43        	MOV	B,E
                NVGET0:	INIR	; B = 0 AFTER
 093C+EDB2      	DB	0EDH,0B2H
 093E 15        	DCR	D
                	JRNZ	NVGET0
 093F+20FB      	DB	20H,NVGET0-$-1
 0941 AF        	XRA	A	; NOT SCS
 0942 D341      	OUT	WIZ$CTL
 0944 C9        	RET
                
                ; NOTE: THIS DELAY VARIES WITH CPU CLOCK SPEED.
                MSLEEP:
 0945 E5        	PUSH	H
 0946 F5        MSLP0:	PUSH	PSW
 0947 214F00    	LXI	H,79	; ~1MS AT 2.048MHZ (200US AT 10.24MHZ)
 094A 2B        MSLP1:	DCX	H
 094B 7C        	MOV	A,H
 094C B5        	ORA	L
                	JRNZ	MSLP1
 094D+20FB      	DB	20H,MSLP1-$-1
 094F F1        	POP	PSW
 0950 3D        	DCR	A
                	JRNZ	MSLP0
 0951+20F3      	DB	20H,MSLP0-$-1
 0953 E1        	POP	H
 0954 C9        	RET
                
                ; PUT BLOCK OF DATA TO NVRAM FROM 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                ; MUST WRITE IN 128-BYTE BLOCKS (PAGES).
                ; HL MUST BE 128-BYTE ALIGNED, DE MUST BE MULTIPLE OF 128
                NVSET:
 0955 E5        	PUSH	H
 0956 21370A    	LXI	H,BUF	; HL = BUF, TOS = NVADR
 0959 0E41      	MVI	C,WIZ$CTL
                NVSET0:
                	; WAIT FOR WIP=0...
 095B 3E02      	MVI	A,NVSCS
                	OUTP	A
 095D+ED79      	DB	0EDH,A*8+41H
 095F 3E05      	MVI	A,RDSR
 0961 D340      	OUT	WIZ$DAT
 0963 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0965 DB40      	IN	WIZ$DAT	; STATUS REGISTER
 0967 F5        	PUSH	PSW
 0968 AF        	XRA	A
                	OUTP	A	; NOT SCS
 0969+ED79      	DB	0EDH,A*8+41H
 096B F1        	POP	PSW
 096C E601      	ANI	WIP
                	JRNZ	NVSET0
 096E+20EB      	DB	20H,NVSET0-$-1
 0970 3E02      	MVI	A,NVSCS
                	OUTP	A
 0972+ED79      	DB	0EDH,A*8+41H
 0974 3E06      	MVI	A,WREN
 0976 D340      	OUT	WIZ$DAT
 0978 AF        	XRA	A
                	OUTP	A	; NOT SCS
 0979+ED79      	DB	0EDH,A*8+41H
 097B 3E02      	MVI	A,NVSCS
                	OUTP	A
 097D+ED79      	DB	0EDH,A*8+41H
 097F 3E02      	MVI	A,NVWR
 0981 D340      	OUT	WIZ$DAT
 0983 E3        	XTHL	; GET NVADR
 0984 7C        	MOV	A,H
 0985 D340      	OUT	WIZ$DAT
 0987 7D        	MOV	A,L
 0988 D340      	OUT	WIZ$DAT
 098A 018000    	LXI	B,128
 098D 09        	DAD	B	; UPDATE NVADR
 098E EB        	XCHG
 098F B7        	ORA	A
                	DSBC	B	; UPDATE LENGTH
 0990+ED42      	DB	0EDH,B*8+42H
 0992 EB        	XCHG
 0993 E3        	XTHL	; GET BUF ADR
 0994 41        	MOV	B,C	; B = 128
 0995 0E40      	MVI	C,WIZ$DAT
                	OUTIR		; HL = NEXT PAGE IN 'buf'
 0997+EDB3      	DB	0EDH,0B3H
 0999 0E41      	MVI	C,WIZ$CTL
 099B AF        	XRA	A
                	OUTP	A	; NOT SCS
 099C+ED79      	DB	0EDH,A*8+41H
                ;	MVI	A,50
                ;	CALL	MSLEEP	; WAIT FOR WIP TO GO "1"?
 099E 7B        	MOV	A,E
 099F B2        	ORA	D
                	JRNZ	NVSET0
 09A0+20B9      	DB	20H,NVSET0-$-1
 09A2 E1        	POP	H
 09A3 C9        	RET
                
                ; A = PMAGIC
 09A4 F5        SHID:	PUSH	PSW
 09A5 110301    	LXI	D,IDMSG
 09A8 0E09      	MVI	C,PRINT
 09AA CD0500    	CALL	BDOS
 09AD F1        	POP	PSW
 09AE CDE007    	CALL	HEXOUT
 09B1 3E48      	MVI	A,'H'
 09B3 CD5207    	CALL	CHROUT
 09B6 C36B07    	JMP	CRLF
                
                ; HL = IP ADDR, DE = PREFIX MSG
 09B9 E5        SHIP:	PUSH	H
 09BA 0E09      	MVI	C,PRINT
 09BC CD0500    	CALL	BDOS
 09BF E1        	POP	H
 09C0 CD4007    	CALL	IPOUT
 09C3 C36B07    	JMP	CRLF
                
                ; HL = MAC ADDR
 09C6 E5        SHMAC:	PUSH	H
 09C7 112401    	LXI	D,MCMSG
 09CA 0E09      	MVI	C,PRINT
 09CC CD0500    	CALL	BDOS
 09CF E1        	POP	H
 09D0 CD2E07    	CALL	HWOUT
 09D3 C36B07    	JMP	CRLF
                
 09D6           	DS	40
 09FE           STACK:	DS	0
 09FE 0000      USRSTK:	DW	0
                
 0A00 00        DIRECT:	DB	0
 0A01 00        CPNET:	DB	0
 0A02 0000      NETCFG:	DW	0
                
 0A04 00        WIZMAG:	DB	0	; USED AS CLIENT (NODE) ID
                
                COMREGS:
 0A05           GW:	DS	4
 0A09           MSK:	DS	4
 0A0D           MAC:	DS	6
 0A13           IP:	DS	4
 0012 =         COMLEN	EQU	$-COMREGS
                
                SOKREGS:
 0A17           SOKMR:	DS	4	; MR, CR, IR, SR
 0A1B           SOKPT:	DS	2	; PORT
 0A1D           SOKMAC:	DS	6	; DHAR
 0A23           SOKIP:	DS	4	; DIPR
 0A27           SOKDPT:	DS	2	; DPORT
 0012 =         SOKLEN	EQU	$-SOKREGS
                
                NEWSOK:
 0A29           NSKPT:	DS	2	; PORT
 0A2B           NSKMAC:	DS	6	; DHAR
 0A31           NSKIP:	DS	4	; DIPR
 0A35           NSKDPT:	DS	2	; DPORT
 0020 =         NSKLEN	EQU	$-SOKREGS
                
 0A37           BUF:	DS	512
                
 0C37           	END
