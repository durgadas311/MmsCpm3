                ; A CONFIG UTIL FOR WIZNET 550 DEVICES, ATTACHED IN PARALLEL-SPI INTERFACE
                ;
                ; COMMANDS:
                ;	N <ID>			SET NODE ID
                ;	G <IP>			SET GATEWAY IP ADDR
                ;	S <IP>			SET SUB-NETWORK MASK
                ;	I <IP>			SET NODE IP ADDR
                ;	M <MA>			SET NODE H/W ADDR
                ;	0 <ID> <IP> <PT>	SET SOCK 0
                ;	V			SAVE WIZNET CONFIG TO NVRAM
                ;	R			RESTORE WIZNET CONFIG FROM NVRAM
                
                	MACLIB	Z80
                
 0040 =         WIZ	EQU	40H	; BASE PORT OF H8-WIZX50IO SPI INTERFACE
                
 0040 =         WIZ$DAT	EQU	WIZ+0
 0041 =         WIZ$CTL	EQU	WIZ+1
 0041 =         WIZ$STS	EQU	WIZ+1
                
 0001 =         SCS	EQU	01B	; SCS FOR WIZNET
 0002 =         NVSCS	EQU	10B	; SCS FOR NVRAM
                
                ; NVRAM/SEEPROM COMMANDS
 0003 =         NVRD	EQU	00000011B
 0002 =         NVWR	EQU	00000010B
 0005 =         RDSR	EQU	00000101B
 0006 =         WREN	EQU	00000110B
                ; NVRAM/SEEPROM STATUS BITS
 0001 =         WIP	EQU	00000001B
                
                ; WIZNET CTRL BIT FOR WRITING
 0004 =         WRITE	EQU	00000100B
                
 0001 =         GAR	EQU	1	; OFFSET OF GAR, ETC.
 0005 =         SUBR	EQU	5
 0009 =         SHAR	EQU	9
 000F =         SIPR	EQU	15
 001D =         PMAGIC	EQU	29	; USED FOR NODE ID
                
 0008 =         SOCK0	EQU	000$01$000B
 0028 =         SOCK1	EQU	001$01$000B
 0048 =         SOCK2	EQU	010$01$000B
 0068 =         SOCK3	EQU	011$01$000B
 0088 =         SOCK4	EQU	100$01$000B
 00A8 =         SOCK5	EQU	101$01$000B
 00C8 =         SOCK6	EQU	110$01$000B
 00E8 =         SOCK7	EQU	111$01$000B
                
 0000 =         SNMR	EQU	0
 0001 =         SNCR	EQU	1
 0002 =         SNIR	EQU	2
 0003 =         SNSR	EQU	3
 0004 =         SNPORT	EQU	4
 000C =         SNDIPR	EQU	12
 0010 =         SNDPORT	EQU	16
 001F =         SNTXBUF	EQU	31	; TXBUF_SIZE
                
                ; SOCKET SR VALUES
 0000 =         CLOSED	EQU	00H
                
                ; SOCKET CR COMMANDS
 0008 =         DISCON	EQU	08H
                
 000D =         CR	EQU	13
 000A =         LF	EQU	10
                
 0000 =         CPM	EQU	0
 0005 =         BDOS	EQU	5
 0080 =         CMD	EQU	0080H
                
 0009 =         PRINT	EQU	9
 000C =         GETVER	EQU	12
 0045 =         CFGTBL	EQU	69
                
 0100           	ORG	00100H
                
 0100 C32802    	JMP	START
                
 0103 4E6F646520IDMSG:	DB	'Node ID:  $'
 010E 4761746577GWMSG:	DB	'Gateway:  $'
 0119 5375626E65NTMSG:	DB	'Subnet:   $'
 0124 4D41433A20MCMSG:	DB	'MAC:      $'
 012F 4950204164IPMSG:	DB	'IP Addr:  $'
                
 013A 5573616765USAGE:	DB	'Usage: WIZCFG {G|I|S ipadr}',CR,LF
 0157 2020202020	DB	'       WIZCFG {M macadr}',CR,LF
 0171 2020202020	DB	'       WIZCFG {N cid}',CR,LF
 0188 2020202020	DB	'       WIZCFG {0..7 sid ipadr port}',CR,LF
 01AD 2020202020	DB	'       WIZCFG {V|R}',CR,LF,'$'
 01C3 5365740D0ADONE:	DB	'Set',CR,LF,'$'
 01C9 536F636B65SOCK:	DB	'Socket '
 01D0 4E3A2024  SOKN:	DB	'N: $'
 01D4 2D204E6F74NCFG:	DB	'- Not Configured',CR,LF,'$'
 01E7 43502F4E45NOCPN:	DB	'CP/NET is running. Stop it first',CR,LF,'$'
 020A 4E5652414DNVERR:	DB	'NVRAM block not initialized',CR,LF,'$'
                
                START:
                	SSPD	USRSTK
 0228+ED73      	DB	0EDH,73H
 022A+6A08      	DW	USRSTK
 022C 316A08    	LXI	SP,STACK
 022F 0E0C      	MVI	C,GETVER
 0231 CD0500    	CALL	BDOS
 0234 7C        	MOV	A,H
 0235 E602      	ANI	02H
 0237 CA4702    	JZ	NOCPNT
 023A F6FF      	ORI	0FFH
 023C 326C08    	STA	CPNET
 023F 0E45      	MVI	C,CFGTBL
 0241 CD0500    	CALL	BDOS
 0244 226D08    	SHLD	NETCFG
                NOCPNT:
 0247 3A8000    	LDA	CMD
 024A B7        	ORA	A
 024B CAD204    	JZ	SHOW
                
 024E 218000    	LXI	H,CMD
 0251 46        	MOV	B,M
 0252 23        	INX	H
                PARS0:
 0253 7E        	MOV	A,M
 0254 FE20      	CPI	' '
 0256 C25F02    	JNZ	PARS1
 0259 23        	INX	H
                	DJNZ	PARS0
 025A+10F7      	DB	10H,PARS0-$-1
 025C C3D204    	JMP	SHOW
                
                PARS1:
                	; THESE HAVE NO PARAMS...
 025F FE52      	CPI 	'R'
 0261 CA8203    	JZ	PARS5
 0264 FE56      	CPI 	'V'
 0266 CAE103    	JZ	PARS6
 0269 4F        	MOV	C,A
 026A CDD406    	CALL	SKIPB
 026D DA2904    	JC	HELP
 0270 79        	MOV	A,C
 0271 FE47      	CPI 	'G'
                	LXIX	GW
 0273+DD21      	DB	0DDH,21H
 0275+7008      	DW	GW
 0277 110100    	LXI	D,GAR
 027A CA6F03    	JZ	PARS2
 027D FE49      	CPI 	'I'
                	LXIX	IP
 027F+DD21      	DB	0DDH,21H
 0281+7E08      	DW	IP
 0283 110F00    	LXI	D,SIPR
 0286 CA6F03    	JZ	PARS2
 0289 FE53      	CPI 	'S'
                	LXIX	MSK
 028B+DD21      	DB	0DDH,21H
 028D+7408      	DW	MSK
 028F 110500    	LXI	D,SUBR
 0292 CA6F03    	JZ	PARS2
 0295 FE4D      	CPI 	'M'
 0297 CA5A03    	JZ	PARS3
 029A FE4E      	CPI 	'N'
 029C CA4503    	JZ	PARS4
 029F FE30      	CPI	'0'
 02A1 DA2904    	JC	HELP
 02A4 FE38      	CPI	'7'+1
 02A6 D22904    	JNC	HELP
                
                ; PARSE NEW SOCKET CONFIG
 02A9 32D001    	STA	SOKN
                	; PARSE <SRVID> <IPADR> <PORT>
 02AC 0E00      	MVI	C,0	; NUL WON'T EVER BE SEEN
 02AE CDF906    	CALL	PARSHX
 02B1 DA2904    	JC	HELP
 02B4 3E31      	MVI	A,31H
 02B6 329408    	STA	NSKPT
 02B9 7A        	MOV	A,D	; SERVER ID
 02BA 329508    	STA	NSKPT+1
 02BD CDD406    	CALL	SKIPB
 02C0 DA2904    	JC	HELP
                	LXIX	NSKIP
 02C3+DD21      	DB	0DDH,21H
 02C5+9C08      	DW	NSKIP
 02C7 CD2807    	CALL	PARSADR
 02CA DA2904    	JC	HELP
 02CD CDD406    	CALL	SKIPB
 02D0 DA2904    	JC	HELP
 02D3 CD5A07    	CALL	PARSNM
 02D6 DA2904    	JC	HELP
 02D9 7A        	MOV	A,D
 02DA 32A008    	STA	NSKDPT
 02DD 7B        	MOV	A,E
 02DE 32A108    	STA	NSKDPT+1
                ; NOW PREPARE TO UPDATE SOCKET CONFIG
                	; SET SN_MR SEPARATE, TO AVOID WRITING CR AND SR...
 02E1 CDAB04    	CALL	GETSOKN
 02E4 57        	MOV	D,A
 02E5 D5        	PUSH	D
 02E6 CDC204    	CALL	SETTCP	; FORCE TCP MODE
                	; GET CURRENT VALUES, CLEANUP AS NEEDED
 02E9 218208    	LXI	H,SOKREGS
 02EC 1E00      	MVI	E,SNMR
 02EE 0612      	MVI	B,SOKLEN
 02F0 CD6704    	CALL	WIZGET
 02F3 218808    	LXI	H,SOKMAC
 02F6 119608    	LXI	D,NSKMAC
 02F9 010600    	LXI	B,6
                	LDIR
 02FC+EDB0      	DB	0EDH,0B0H
 02FE 3A8608    	LDA	SOKPT
 0301 FE31      	CPI	31H
 0303 C22B03    	JNZ	NTCPNET	; DON'T CARE ABOUT SOCKETS NOT CONFIGURED
 0306 3A6C08    	LDA	CPNET
 0309 B7        	ORA	A
 030A CA2B03    	JZ	NTCPNET	; SKIP CFGTBL CLEANUP IF NOT CP/NET
                	; REMOVE ALL REFS TO THIS SERVER...
 030D 3A8708    	LDA	SOKPT+1	; SERVER NODE ID
 0310 4F        	MOV	C,A
 0311 2A6D08    	LHLD	NETCFG
 0314 0612      	MVI	B,18	; 16 DRIVES, CON:, LST:
 0316 23        	INX	H
 0317 23        	INX	H
 0318 7E        CLN0:	MOV	A,M
 0319 B7        	ORA	A
 031A F22703    	JP	NTNET	; DEVICE NOT NETWORKED
 031D 23        	INX	H
 031E 7E        	MOV	A,M
 031F B9        	CMP	C	; SAME SERVER?
 0320 C22803    	JNZ	NTNET1
 0323 AF        	XRA	A
 0324 77        	MOV	M,A
 0325 2B        	DCX	H
 0326 77        	MOV	M,A
 0327 23        NTNET:	INX	H
 0328 23        NTNET1:	INX	H
                	DJNZ	CLN0
 0329+10ED      	DB	10H,CLN0-$-1
                NTCPNET:
 032B 3A8508    	LDA	SOKMR+SNSR
 032E FE00      	CPI	CLOSED
 0330 CA3A03    	JZ	NTOPN
 0333 D1        	POP	D
 0334 D5        	PUSH	D
 0335 3E08      	MVI	A,DISCON
 0337 CD3404    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 033A 219408    NTOPN:	LXI	H,NEWSOK
 033D D1        	POP	D
 033E 1E04      	MVI	E,SNPORT
 0340 060E      	MVI	B,SOKLEN-SNPORT
 0342 C37C03    	JMP	SETIT
                
                PARS4:
 0345 CDF906    	CALL	PARSHX
 0348 DA2904    	JC	HELP
 034B 7A        	MOV	A,D
 034C 326F08    	STA	WIZMAG
 034F 216F08    	LXI	H,WIZMAG
 0352 111D00    	LXI	D,PMAGIC
 0355 0601      	MVI	B,1
 0357 C37C03    	JMP	SETIT
                
                PARS3:
                	LXIX	MAC
 035A+DD21      	DB	0DDH,21H
 035C+7808      	DW	MAC
                	PUSHIX
 035E+DDE5      	DB	0DDH,0E5H
 0360 CDE106    	CALL	PARSMAC
 0363 E1        	POP	H
 0364 DA2904    	JC	HELP
 0367 110900    	LXI	D,SHAR
 036A 0606      	MVI	B,6
 036C C37C03    	JMP	SETIT
                
                PARS2:
                	PUSHIX
 036F+DDE5      	DB	0DDH,0E5H
 0371 D5        	PUSH	D
 0372 CD2807    	CALL	PARSADR
 0375 D1        	POP	D
 0376 E1        	POP	H
 0377 DA2904    	JC	HELP
 037A 0604      	MVI	B,4
                	; GOT IT...
                SETIT:
 037C CD7E04    	CALL	WIZSET
                
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
 037F C31C04    	JMP	EXIT
                
                PARS5:	; RESTORE CONFIG FROM NVRAM
 0382 3A6C08    	LDA	CPNET
 0385 B7        	ORA	A
 0386 C22404    	JNZ	XOCPNT
 0389 210000    	LXI	H,0
 038C 110002    	LXI	D,512
 038F CDD307    	CALL	NVGET
 0392 CDA707    	CALL	VCKSUM
 0395 C21F04    	JNZ	CSERR
 0398 21A308    	LXI	H,BUF+GAR
 039B 1600      	MVI	D,0
 039D 1E01      	MVI	E,GAR
 039F 0612      	MVI	B,18	; GAR, SUBR, SHAR, SIPR
 03A1 CD7E04    	CALL	WIZSET
 03A4 21BF08    	LXI	H,BUF+PMAGIC
 03A7 1600      	MVI	D,0
 03A9 1E1D      	MVI	E,PMAGIC
 03AB 0601      	MVI	B,1
 03AD CD7E04    	CALL	WIZSET
                	LXIX	BUF+32
 03B0+DD21      	DB	0DDH,21H
 03B2+C208      	DW	BUF+32
 03B4 1608      	MVI	D,SOCK0
 03B6 0608      	MVI	B,8
                REST0:
 03B8 C5        	PUSH	B
                	LDX	A,SNPORT
 03B9+DD7E04    	DB	0DDH,A*8+46H,SNPORT
 03BC FE31      	CPI	31H
 03BE C2D203    	JNZ	REST1	; SKIP UNCONFIGURED SOCKETS
 03C1 CD9504    	CALL	CLOSE	; CP/NET NOT ACTIVE - ALREADY CHECKED
 03C4 1E04      	MVI	E,SNPORT
 03C6 0602      	MVI	B,2
 03C8 CDB604    	CALL	SETSOK
 03CB 1E0C      	MVI	E,SNDIPR
 03CD 0606      	MVI	B,6	; DIPR AND DPORT
 03CF CDB604    	CALL	SETSOK
                REST1:
 03D2 012000    	LXI	B,32
                	DADX	B
 03D5+DD09      	DB	0DDH,B*8+09H
 03D7 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 03D9 82        	ADD	D
 03DA 57        	MOV	D,A
 03DB C1        	POP	B
                	DJNZ	REST0
 03DC+10DA      	DB	10H,REST0-$-1
                
 03DE C31C04    	JMP	EXIT
                	;...
                
                PARS6:	; SAVE CONFIG TO NVRAM
 03E1 21A208    	LXI	H,BUF
 03E4 36FF      	MVI	M,0FFH	; EEPROM "UNPROGRAMMED"
 03E6 11A308    	LXI	D,BUF+1
 03E9 01FF01    	LXI	B,511
                	LDIR
 03EC+EDB0      	DB	0EDH,0B0H
 03EE 21A208    	LXI	H,BUF
 03F1 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 03F3 1E00      	MVI	E,0	; OFFSET +0
 03F5 1600      	MVI	D,0	; BSB 0 = COMMON REGISTER BLOCK
 03F7 CD6704    	CALL	WIZGET
 03FA 21C208    	LXI	H,BUF+32
 03FD 1608      	MVI	D,SOCK0	; BSB 08H = SOCKET 0 REGISTER BLOCK
 03FF 1E00      	MVI	E,0	; OFFSET +0
 0401 0608      	MVI	B,8	; NUM SOCKETS
 0403 C5        SAVE0:	PUSH	B
 0404 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 0406 CD6704    	CALL	WIZGET	; HL = NEXT BLOCK
 0409 C1        	POP	B
 040A 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 040C 82        	ADD	D
 040D 57        	MOV	D,A
                	DJNZ	SAVE0
 040E+10F3      	DB	10H,SAVE0-$-1
                	; GOT DATA OFF WIZNET CHIP, NOW SAVE TO NVRAM
 0410 CDC107    	CALL	SCKSUM
 0413 210000    	LXI	H,0	; WIZNET USES 512 BYTES AT 0000 IN NVRAM
 0416 110002    	LXI	D,512
 0419 CDF807    	CALL	NVSET
                	;JMP	EXIT
                EXIT:
 041C C30000    	JMP	CPM
                
 041F 110A02    CSERR:	LXI	D,NVERR
                	JR	XTMSG
 0422+1808      	DB	18H,XTMSG-$-1
 0424 11E701    XOCPNT:	LXI	D,NOCPN
                	JR	XTMSG
 0427+1803      	DB	18H,XTMSG-$-1
                HELP:
 0429 113A01    	LXI	D,USAGE
 042C 0E09      XTMSG:	MVI	C,PRINT
 042E CD0500    	CALL	BDOS
 0431 C31C04    	JMP	EXIT
                
                ; SEND SOCKET COMMAND TO WIZNET CHIP, WAIT FOR DONE.
                ; A = COMMAND, D = SOCKET BSB
                ; DESTROYS A
                WIZCMD:
 0434 F5        	PUSH	PSW
 0435 3E01      	MVI	A,SCS
 0437 D341      	OUT	WIZ$CTL
 0439 AF        	XRA	A
 043A D340      	OUT	WIZ$DAT
 043C 3E01      	MVI	A,SNCR
 043E D340      	OUT	WIZ$DAT
 0440 7A        	MOV	A,D
 0441 F604      	ORI	WRITE
 0443 D340      	OUT	WIZ$DAT
 0445 F1        	POP	PSW
 0446 D340      	OUT	WIZ$DAT	; START COMMAND
 0448 AF        	XRA	A	;
 0449 D341      	OUT	WIZ$CTL
                WC0:
 044B 3E01      	MVI	A,SCS
 044D D341      	OUT	WIZ$CTL
 044F AF        	XRA	A
 0450 D340      	OUT	WIZ$DAT
 0452 3E01      	MVI	A,SNCR
 0454 D340      	OUT	WIZ$DAT
 0456 7A        	MOV	A,D
 0457 D340      	OUT	WIZ$DAT
 0459 DB40      	IN	WIZ$DAT	; PRIME PUMP
 045B DB40      	IN	WIZ$DAT
 045D F5        	PUSH	PSW
 045E AF        	XRA	A	;
 045F D341      	OUT	WIZ$CTL
 0461 F1        	POP	PSW
 0462 B7        	ORA	A
 0463 C24B04    	JNZ	WC0
 0466 C9        	RET
                
                ; E = BSB, D = CTL, HL = DATA, B = LENGTH
                WIZGET:
 0467 3E01      	MVI	A,SCS
 0469 D341      	OUT	WIZ$CTL
 046B AF        	XRA	A	; HI ADR ALWAYS 0
 046C D340      	OUT	WIZ$DAT
 046E 7B        	MOV	A,E
 046F D340      	OUT	WIZ$DAT
 0471 7A        	MOV	A,D
 0472 D340      	OUT	WIZ$DAT
 0474 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0476 0E40      	MVI	C,WIZ$DAT
                	INIR
 0478+EDB2      	DB	0EDH,0B2H
 047A AF        	XRA	A	; NOT SCS
 047B D341      	OUT	WIZ$CTL
 047D C9        	RET
                
                ; HL = DATA TO SEND, E = OFFSET, D = BSB, B = LENGTH
                ; DESTROYS HL, B, C, A
                WIZSET:
 047E 3E01      	MVI	A,SCS
 0480 D341      	OUT	WIZ$CTL
 0482 AF        	XRA	A	; HI ADR ALWAYS 0
 0483 D340      	OUT	WIZ$DAT
 0485 7B        	MOV	A,E
 0486 D340      	OUT	WIZ$DAT
 0488 7A        	MOV	A,D
 0489 F604      	ORI	WRITE
 048B D340      	OUT	WIZ$DAT
 048D 0E40      	MVI	C,WIZ$DAT
                	OUTIR
 048F+EDB3      	DB	0EDH,0B3H
 0491 AF        	XRA	A	; NOT SCS
 0492 D341      	OUT	WIZ$CTL
 0494 C9        	RET
                
                ; CLOSE SOCKET IF ACTIVE (SR <> CLOSED)
                ; D = SOCKET BSB
                ; DESTROYS HL, E, B, C, A
                CLOSE:
 0495 218508    	LXI	H,SOKMR+SNSR
 0498 1E03      	MVI	E,SNSR
 049A 0601      	MVI	B,1
 049C CD6704    	CALL	WIZGET
 049F 3A8508    	LDA	SOKMR+SNSR
 04A2 FE00      	CPI	CLOSED
 04A4 C8        	RZ
 04A5 3E08      	MVI	A,DISCON
 04A7 CD3404    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 04AA C9        	RET
                
                ; CONVERT 'SOKN' (ASCII DIGIT) TO SOCKET BSB
                GETSOKN:
 04AB 3AD001    	LDA	SOKN
 04AE D630      	SUI	'0'
 04B0 07        	RLC
 04B1 07        	RLC
 04B2 07        	RLC		; XXX00000
 04B3 F608      	ORI	SOCK0	; XXX01000
 04B5 C9        	RET
                
                ; IX = BASE DATA BUFFER FOR SOCKET, D = SOCKET BSB, E = OFFSET, B = LENGTH
                ; DESTROYS HL, B, C
                SETSOK:
                	PUSHIX
 04B6+DDE5      	DB	0DDH,0E5H
 04B8 E1        	POP	H
 04B9 D5        	PUSH	D
 04BA 1600      	MVI	D,0
 04BC 19        	DAD	D	; HL POINTS TO DATA IN 'BUF'
 04BD D1        	POP	D
 04BE CD7E04    	CALL	WIZSET
 04C1 C9        	RET
                
                ; SET SOCKET MR TO TCP.
                ; D = SOCKET BSB (RESULT OF "GETSOKN")
                ; DESTROYS ALL REGISTERS EXCEPT D.
                SETTCP:
 04C2 3E01      	MVI	A,1	; TCP
 04C4 328208    	STA	SOKMR
 04C7 1E00      	MVI	E,SNMR
 04C9 218208    	LXI	H,SOKMR
 04CC 0601      	MVI	B,1
 04CE CD7E04    	CALL	WIZSET	; FORCE TCP/IP MODE
 04D1 C9        	RET
                
                SHOW:
 04D2 217008    	LXI	H,COMREGS
 04D5 110100    	LXI	D,GAR
 04D8 0612      	MVI	B,COMLEN
 04DA CD6704    	CALL	WIZGET
 04DD 216F08    	LXI	H,WIZMAG
 04E0 111D00    	LXI	D,PMAGIC
 04E3 0601      	MVI	B,1
 04E5 CD6704    	CALL	WIZGET
                
 04E8 110301    	LXI	D,IDMSG
 04EB 0E09      	MVI	C,PRINT
 04ED CD0500    	CALL	BDOS
 04F0 3A6F08    	LDA	WIZMAG
 04F3 CDC006    	CALL	HEXOUT
 04F6 3E48      	MVI	A,'H'
 04F8 CD3206    	CALL	CHROUT
 04FB CD4B06    	CALL	CRLF
                
 04FE 112F01    	LXI	D,IPMSG
 0501 0E09      	MVI	C,PRINT
 0503 CD0500    	CALL	BDOS
 0506 217E08    	LXI	H,IP
 0509 CD2006    	CALL	IPOUT
 050C CD4B06    	CALL	CRLF
                
 050F 110E01    	LXI	D,GWMSG
 0512 0E09      	MVI	C,PRINT
 0514 CD0500    	CALL	BDOS
 0517 217008    	LXI	H,GW
 051A CD2006    	CALL	IPOUT
 051D CD4B06    	CALL	CRLF
                
 0520 111901    	LXI	D,NTMSG
 0523 0E09      	MVI	C,PRINT
 0525 CD0500    	CALL	BDOS
 0528 217408    	LXI	H,MSK
 052B CD2006    	CALL	IPOUT
 052E CD4B06    	CALL	CRLF
                
 0531 112401    	LXI	D,MCMSG
 0534 0E09      	MVI	C,PRINT
 0536 CD0500    	CALL	BDOS
 0539 217808    	LXI	H,MAC
 053C CD0E06    	CALL	HWOUT
 053F CD4B06    	CALL	CRLF
                
 0542 218208    	LXI	H,SOKREGS
 0545 110008    	LXI	D,SOCK0 SHL 8
 0548 0612      	MVI	B,SOKLEN
 054A CD6704    	CALL	WIZGET
 054D 1E00      	MVI	E,0
 054F CDC505    	CALL	SHOWSOK
                
 0552 218208    	LXI	H,SOKREGS
 0555 110028    	LXI	D,SOCK1 SHL 8
 0558 0612      	MVI	B,SOKLEN
 055A CD6704    	CALL	WIZGET
 055D 1E01      	MVI	E,1
 055F CDC505    	CALL	SHOWSOK
                
 0562 218208    	LXI	H,SOKREGS
 0565 110048    	LXI	D,SOCK2 SHL 8
 0568 0612      	MVI	B,SOKLEN
 056A CD6704    	CALL	WIZGET
 056D 1E02      	MVI	E,2
 056F CDC505    	CALL	SHOWSOK
                
 0572 218208    	LXI	H,SOKREGS
 0575 110068    	LXI	D,SOCK3 SHL 8
 0578 0612      	MVI	B,SOKLEN
 057A CD6704    	CALL	WIZGET
 057D 1E03      	MVI	E,3
 057F CDC505    	CALL	SHOWSOK
                
 0582 218208    	LXI	H,SOKREGS
 0585 110088    	LXI	D,SOCK4 SHL 8
 0588 0612      	MVI	B,SOKLEN
 058A CD6704    	CALL	WIZGET
 058D 1E04      	MVI	E,4
 058F CDC505    	CALL	SHOWSOK
                
 0592 218208    	LXI	H,SOKREGS
 0595 1100A8    	LXI	D,SOCK5 SHL 8
 0598 0612      	MVI	B,SOKLEN
 059A CD6704    	CALL	WIZGET
 059D 1E05      	MVI	E,5
 059F CDC505    	CALL	SHOWSOK
                
 05A2 218208    	LXI	H,SOKREGS
 05A5 1100C8    	LXI	D,SOCK6 SHL 8
 05A8 0612      	MVI	B,SOKLEN
 05AA CD6704    	CALL	WIZGET
 05AD 1E06      	MVI	E,6
 05AF CDC505    	CALL	SHOWSOK
                
 05B2 218208    	LXI	H,SOKREGS
 05B5 1100E8    	LXI	D,SOCK7 SHL 8
 05B8 0612      	MVI	B,SOKLEN
 05BA CD6704    	CALL	WIZGET
 05BD 1E07      	MVI	E,7
 05BF CDC505    	CALL	SHOWSOK
                
 05C2 C31C04    	JMP	EXIT
                
                SHOWSOK:
 05C5 7B        	MOV	A,E
 05C6 C630      	ADI	'0'
 05C8 32D001    	STA	SOKN
 05CB 11C901    	LXI	D,SOCK
 05CE 0E09      	MVI	C,PRINT
 05D0 CD0500    	CALL	BDOS
 05D3 3A8608    	LDA	SOKPT
 05D6 FE31      	CPI	31H
 05D8 C20506    	JNZ	NOCFG
 05DB 3A8708    	LDA	SOKPT+1
 05DE CDC006    	CALL	HEXOUT
 05E1 3E48      	MVI	A,'H'
 05E3 CD3206    	CALL	CHROUT
 05E6 3E20      	MVI	A,' '
 05E8 CD3206    	CALL	CHROUT
 05EB 218E08    	LXI	H,SOKIP
 05EE CD2006    	CALL	IPOUT
 05F1 3E20      	MVI	A,' '
 05F3 CD3206    	CALL	CHROUT
 05F6 3A9208    	LDA	SOKDPT
 05F9 57        	MOV	D,A
 05FA 3A9308    	LDA	SOKDPT+1
 05FD 5F        	MOV	E,A
 05FE CD5606    	CALL	DEC16
 0601 CD4B06    	CALL	CRLF
 0604 C9        	RET
                
 0605 11D401    NOCFG:	LXI	D,NCFG
 0608 0E09      	MVI	C,PRINT
 060A CD0500    	CALL	BDOS
 060D C9        	RET
                
                HWOUT:
 060E 0606      	MVI	B,6
 0610 0E3A      	MVI	C,':'
 0612 7E        HW0:	MOV	A,M
 0613 CDC006    	CALL	HEXOUT
 0616 05        	DCR	B
 0617 C8        	RZ
 0618 79        	MOV	A,C
 0619 CD3206    	CALL	CHROUT
 061C 23        	INX	H
 061D C31206    	JMP	HW0
                
                IPOUT:
 0620 0604      	MVI	B,4
 0622 0E2E      	MVI	C,'.'
 0624 7E        IP0:	MOV	A,M
 0625 CD9206    	CALL	DECOUT
 0628 05        	DCR	B
 0629 C8        	RZ
 062A 79        	MOV	A,C
 062B CD3206    	CALL	CHROUT
 062E 23        	INX	H
 062F C32406    	JMP	IP0
                
                CHROUT:
 0632 E5        	PUSH	H
 0633 D5        	PUSH	D
 0634 C5        	PUSH	B
 0635 5F        	MOV	E,A
 0636 0E02      	MVI	C,002H
 0638 CD0500    	CALL	BDOS
 063B C1        	POP	B
 063C D1        	POP	D
 063D E1        	POP	H
 063E C9        	RET
                
                GETSTS:
 063F 0E44      	MVI	C,044H
 0641 CD0500    	CALL	BDOS
 0644 C9        	RET
                
                GETCFG:
 0645 0E45      	MVI	C,045H
 0647 CD0500    	CALL	BDOS
 064A C9        	RET
                
                CRLF:
 064B 3E0D      	MVI	A,CR
 064D CD3206    	CALL	CHROUT
 0650 3E0A      	MVI	A,LF
 0652 CD3206    	CALL	CHROUT
 0655 C9        	RET
                
                DEC16:
 0656 EB        	XCHG	; REMAINDER IN HL
 0657 0E00      	MVI	C,0
 0659 111027    	LXI	D,10000
 065C CD7806    	CALL	DIV16
 065F 11E803    	LXI	D,1000
 0662 CD7806    	CALL	DIV16
 0665 116400    	LXI	D,100
 0668 CD7806    	CALL	DIV16
 066B 110A00    	LXI	D,10
 066E CD7806    	CALL	DIV16
 0671 7D        	MOV	A,L
 0672 C630      	ADI	'0'
 0674 CD3206    	CALL	CHROUT
 0677 C9        	RET
                
 0678 0600      DIV16:	MVI	B,0
 067A B7        DV0:	ORA	A
                	DSBC	D
 067B+ED52      	DB	0EDH,D*8+42H
 067D 04        	INR	B
                	JRNC	DV0
 067E+30FA      	DB	30H,DV0-$-1
 0680 19        	DAD	D
 0681 05        	DCR	B
                	JRNZ	DV1
 0682+2005      	DB	20H,DV1-$-1
                	BIT	0,C
 0684+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DV1
 0686+2001      	DB	20H,DV1-$-1
 0688 C9        	RET
                DV1:	SETB	0,C
 0689+CBC1      	DB	0CBH,0*8+C+0C0H
 068B 3E30      	MVI	A,'0'
 068D 80        	ADD	B
 068E CD3206    	CALL	CHROUT
 0691 C9        	RET
                
                ; LEADING ZEROES BLANKED - MUST PRESERVE B
                DECOUT:
 0692 C5        	PUSH	B
 0693 0E00      	MVI	C,0
 0695 1664      	MVI	D,100
 0697 CDA606    	CALL	DIVIDE
 069A 160A      	MVI	D,10
 069C CDA606    	CALL	DIVIDE
 069F C630      	ADI	'0'
 06A1 CD3206    	CALL	CHROUT
 06A4 C1        	POP	B
 06A5 C9        	RET
                
 06A6 1E00      DIVIDE:	MVI	E,0
 06A8 92        DIV0:	SUB	D
 06A9 1C        	INR	E
                	JRNC	DIV0
 06AA+30FC      	DB	30H,DIV0-$-1
 06AC 82        	ADD	D
 06AD 1D        	DCR	E
                	JRNZ	DIV1
 06AE+2005      	DB	20H,DIV1-$-1
                	BIT	0,C
 06B0+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DIV1
 06B2+2001      	DB	20H,DIV1-$-1
 06B4 C9        	RET
                DIV1:	SETB	0,C
 06B5+CBC1      	DB	0CBH,0*8+C+0C0H
 06B7 F5        	PUSH	PSW	; REMAINDER
 06B8 3E30      	MVI	A,'0'
 06BA 83        	ADD	E
 06BB CD3206    	CALL	CHROUT
 06BE F1        	POP	PSW	; REMAINDER
 06BF C9        	RET
                
                HEXOUT:
 06C0 F5        	PUSH	PSW
 06C1 0F        	RRC
 06C2 0F        	RRC
 06C3 0F        	RRC
 06C4 0F        	RRC
 06C5 CDC906    	CALL	HEXDIG
 06C8 F1        	POP	PSW
                	;JMP	HEXDIG
                HEXDIG:
 06C9 E60F      	ANI	0FH
 06CB C690      	ADI	90H
 06CD 27        	DAA
 06CE CE40      	ACI	40H
 06D0 27        	DAA
 06D1 C33206    	JMP	CHROUT
                
                SKIPB:
 06D4 23        	INX	H	; SKIP OPTION LETTER
 06D5 05        	DCR	B
 06D6 37        	STC
 06D7 C8        	RZ
 06D8 7E        SKIP0:	MOV	A,M
 06D9 FE20      	CPI	' '
 06DB C0        	RNZ	; NO CARRY?
 06DC 23        	INX	H
                	DJNZ	SKIP0
 06DD+10F9      	DB	10H,SKIP0-$-1
 06DF 37        	STC
 06E0 C9        	RET
                
                ; IX=DESTINATION
                PARSMAC:
 06E1 0E3A      	MVI	C,':'
                PM00:
 06E3 CDF906    	CALL	PARSHX
 06E6 D8        	RC
 06E7 CAEF06    	JZ	PM1	; HIT TERM CHAR
                	; TODO: CHECK FOR 6 BYTES...
                	STX	D,+0
 06EA+DD7200    	DB	0DDH,70H+D,+0
 06ED B7        	ORA	A	; NC
 06EE C9        	RET
                PM1:
                	STX	D,+0
 06EF+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 06F2+DD23      	DB	0DDH,23H
 06F4 23        	INX	H
                	DJNZ	PM00
 06F5+10EC      	DB	10H,PM00-$-1
                	; ERROR IF ENDS HERE...
 06F7 37        	STC
 06F8 C9        	RET
                
                
                ; C=TERM CHAR
                ; RETURNS CY IF ERROR, Z IF TERM CHAR, NZ END OF TEXT
                PARSHX:
 06F9 1600      	MVI	D,0
 06FB 7E        PM0:	MOV	A,M
 06FC B9        	CMP	C
 06FD C8        	RZ
 06FE FE20      	CPI	' '
 0700 CA2507    	JZ	NZRET
 0703 D630      	SUI	'0'
 0705 D8        	RC
 0706 FE0A      	CPI	'9'-'0'+1
 0708 DA1407    	JC	PM3
 070B D611      	SUI	'A'-'0'
 070D D8        	RC
 070E FE06      	CPI	'F'-'A'+1
 0710 3F        	CMC
 0711 D8        	RC
 0712 C60A      	ADI	10
                PM3:
 0714 E60F      	ANI	0FH
 0716 5F        	MOV	E,A
 0717 7A        	MOV	A,D
 0718 87        	ADD	A
 0719 D8        	RC
 071A 87        	ADD	A
 071B D8        	RC
 071C 87        	ADD	A
 071D D8        	RC
 071E 87        	ADD	A
 071F D8        	RC
 0720 83        	ADD	E	; CARRY NOT POSSIBLE
 0721 57        	MOV	D,A
 0722 23        	INX	H
                	DJNZ	PM0
 0723+10D6      	DB	10H,PM0-$-1
                NZRET:
 0725 AF        	XRA	A
 0726 3C        	INR	A	; NZ
 0727 C9        	RET
                
                ; IX=DESTINATION
                PARSADR:
 0728 0E2E      	MVI	C,'.'
                PA00:
 072A 1600      	MVI	D,0
 072C 7E        PA0:	MOV	A,M
 072D B9        	CMP	C
 072E CA5007    	JZ	PA1
 0731 FE20      	CPI	' '
 0733 CA4B07    	JZ	PA2
 0736 FE30      	CPI	'0'
 0738 D8        	RC
 0739 FE3A      	CPI	'9'+1
 073B 3F        	CMC
 073C D8        	RC
 073D E60F      	ANI	0FH
 073F 5F        	MOV	E,A
 0740 7A        	MOV	A,D
 0741 87        	ADD	A	; *2
 0742 87        	ADD	A	; *4
 0743 82        	ADD	D	; *5
 0744 87        	ADD	A	; *10
 0745 83        	ADD	E
 0746 D8        	RC
 0747 57        	MOV	D,A
 0748 23        	INX	H
                	DJNZ	PA0
 0749+10E1      	DB	10H,PA0-$-1
                PA2:
                	; TODO: CHECK FOR 4 BYTES...
                	STX	D,+0
 074B+DD7200    	DB	0DDH,70H+D,+0
 074E B7        	ORA	A
 074F C9        	RET
                
                PA1:
                	STX	D,+0
 0750+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 0753+DD23      	DB	0DDH,23H
 0755 23        	INX	H
                	DJNZ	PA00
 0756+10D2      	DB	10H,PA00-$-1
                	; ERROR IF ENDS HERE...
 0758 37        	STC
 0759 C9        	RET
                
                ; PARSE A 16-BIT (MAX) DECIMAL NUMBER
                PARSNM:
 075A 110000    	LXI	D,0
 075D 7E        PD0:	MOV	A,M
 075E FE20      	CPI	' '
 0760 C8        	RZ
 0761 FE30      	CPI	'0'
 0763 D8        	RC
 0764 FE3A      	CPI	'9'+1
 0766 3F        	CMC
 0767 D8        	RC
 0768 E60F      	ANI	0FH
 076A E5        	PUSH	H
 076B 62        	MOV	H,D
 076C 6B        	MOV	L,E
 076D 29        	DAD	H	; *2
 076E DA8907    	JC	PD1
 0771 29        	DAD	H	; *4
 0772 DA8907    	JC	PD1
 0775 19        	DAD	D	; *5
 0776 DA8907    	JC	PD1
 0779 29        	DAD	H	; *10
 077A DA8907    	JC	PD1
 077D 5F        	MOV	E,A
 077E 1600      	MVI	D,0
 0780 19        	DAD	D
 0781 EB        	XCHG
 0782 E1        	POP	H
 0783 D8        	RC
 0784 23        	INX	H
                	DJNZ	PD0
 0785+10D6      	DB	10H,PD0-$-1
 0787 B7        	ORA	A	; NC
 0788 C9        	RET
                
 0789 E1        PD1:	POP	H
 078A C9        	RET	; CY STILL SET
                
                ; IX = BUFFER, BC = LENGTH
                ; RETURN: HL = CKSUM HI, DE = CKSUM LO
                CKSUM32:
 078B 210000    	LXI	H,0
 078E 110000    	LXI	D,0
                CKS0:	LDX	A,+0
 0791+DD7E00    	DB	0DDH,A*8+46H,+0
                	INXIX
 0794+DD23      	DB	0DDH,23H
 0796 83        	ADD	E
 0797 5F        	MOV	E,A
                	JRNC	CKS1
 0798+3007      	DB	30H,CKS1-$-1
 079A 14        	INR	D
                	JRNZ	CKS1
 079B+2004      	DB	20H,CKS1-$-1
 079D 2C        	INR	L
                	JRNZ	CKS1
 079E+2001      	DB	20H,CKS1-$-1
 07A0 24        	INR	H
 07A1 0B        CKS1:	DCX	B
 07A2 78        	MOV	A,B
 07A3 B1        	ORA	C
                	JRNZ	CKS0
 07A4+20EB      	DB	20H,CKS0-$-1
 07A6 C9        	RET
                
                ; VALIDATES CHECKSUM IN 'BUF'
                ; RETURN: NZ ON ERROR
                VCKSUM:
                	LXIX	BUF
 07A7+DD21      	DB	0DDH,21H
 07A9+A208      	DW	BUF
 07AB 01FC01    	LXI	B,508
 07AE CD8B07    	CALL	CKSUM32
                	LBCD	BUF+510
 07B1+ED4B      	DB	0EDH,4BH
 07B3+A00A      	DW	BUF+510
 07B5 B7        	ORA	A
                	DSBC	B
 07B6+ED42      	DB	0EDH,B*8+42H
 07B8 C0        	RNZ
                	LBCD	BUF+508
 07B9+ED4B      	DB	0EDH,4BH
 07BB+9E0A      	DW	BUF+508
 07BD EB        	XCHG
                	DSBC	B	; CY IS CLEAR
 07BE+ED42      	DB	0EDH,B*8+42H
 07C0 C9        	RET
                
                ; SETS CHECKSUM IN 'BUF'
                SCKSUM:
                	LXIX	BUF
 07C1+DD21      	DB	0DDH,21H
 07C3+A208      	DW	BUF
 07C5 01FC01    	LXI	B,508
 07C8 CD8B07    	CALL	CKSUM32
 07CB 22A00A    	SHLD	BUF+510
                	SDED	BUF+508
 07CE+ED53      	DB	0EDH,53H
 07D0+9E0A      	DW	BUF+508
 07D2 C9        	RET
                
                ; GET A BLOCK OF DATA FROM NVRAM TO 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                NVGET:
 07D3 3E02      	MVI	A,NVSCS
 07D5 D341      	OUT	WIZ$CTL
 07D7 3E03      	MVI	A,NVRD
 07D9 D340      	OUT	WIZ$DAT
 07DB 7C        	MOV	A,H
 07DC D340      	OUT	WIZ$DAT
 07DE 7D        	MOV	A,L
 07DF D340      	OUT	WIZ$DAT
 07E1 DB40      	IN	WIZ$DAT	; PRIME PUMP
 07E3 0E40      	MVI	C,WIZ$DAT
 07E5 7B        	MOV	A,E
 07E6 B7        	ORA	A
 07E7 CAEB07    	JZ	NVGET1
 07EA 14        	INR	D	; TODO: HANDLE 64K... AND OVERFLOW OF 'BUF'...
 07EB 21A208    NVGET1:	LXI	H,BUF
 07EE 43        	MOV	B,E
                NVGET0:	INIR	; B = 0 AFTER
 07EF+EDB2      	DB	0EDH,0B2H
 07F1 15        	DCR	D
                	JRNZ	NVGET0
 07F2+20FB      	DB	20H,NVGET0-$-1
 07F4 AF        	XRA	A	; NOT SCS
 07F5 D341      	OUT	WIZ$CTL
 07F7 C9        	RET
                
                ; PUT BLOCK OF DATA TO NVRAM FROM 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                ; MUST WRITE IN 128-BYTE BLOCKS (PAGES).
                ; HL MUST BE 128-BYTE ALIGNED, DE MUST BE MULTIPLE OF 128
                NVSET:
 07F8 E5        	PUSH	H
 07F9 21A208    	LXI	H,BUF	; HL = BUF, TOS = NVADR
 07FC 0E41      	MVI	C,WIZ$CTL
                NVSET0:
                	; WAIT FOR WIP=0...
 07FE 3E02      	MVI	A,NVSCS
                	OUTP	A
 0800+ED79      	DB	0EDH,A*8+41H
 0802 3E05      	MVI	A,RDSR
 0804 D340      	OUT	WIZ$DAT
 0806 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0808 DB40      	IN	WIZ$DAT	; STATUS REGISTER
                	OUTZ		; NOT SCS
 080A+ED71      	DB	0EDH, 71H
 080C E601      	ANI	WIP
                	JRNZ	NVSET0
 080E+20EE      	DB	20H,NVSET0-$-1
 0810 3E02      	MVI	A,NVSCS
                	OUTP	A
 0812+ED79      	DB	0EDH,A*8+41H
 0814 3E06      	MVI	A,WREN
 0816 D340      	OUT	WIZ$DAT
                	OUTZ		; NOT SCS
 0818+ED71      	DB	0EDH, 71H
 081A 3E02      	MVI	A,NVSCS
 081C D341      	OUT	WIZ$CTL
 081E 3E02      	MVI	A,NVWR
 0820 D340      	OUT	WIZ$DAT
 0822 E3        	XTHL	; GET NVADR
 0823 7C        	MOV	A,H
 0824 D340      	OUT	WIZ$DAT
 0826 7D        	MOV	A,L
 0827 D340      	OUT	WIZ$DAT
 0829 018000    	LXI	B,128
 082C 09        	DAD	B	; UPDATE NVADR
 082D EB        	XCHG
 082E B7        	ORA	A
                	DSBC	B	; UPDATE LENGTH
 082F+ED42      	DB	0EDH,B*8+42H
 0831 EB        	XCHG
 0832 E3        	XTHL	; GET BUF ADR
 0833 41        	MOV	B,C	; B = 128
 0834 0E40      	MVI	C,WIZ$DAT
                	OUTIR		; HL = NEXT PAGE IN 'buf'
 0836+EDB3      	DB	0EDH,0B3H
 0838 0E41      	MVI	C,WIZ$CTL
                	OUTZ		; NOT SCS
 083A+ED71      	DB	0EDH, 71H
 083C 7B        	MOV	A,E
 083D B2        	ORA	D
                	JRNZ	NVSET0
 083E+20BE      	DB	20H,NVSET0-$-1
 0840 E1        	POP	H
 0841 C9        	RET
                
 0842           	DS	40
 086A           STACK:	DS	0
 086A 0000      USRSTK:	DW	0
                
 086C 00        CPNET:	DB	0
 086D 0000      NETCFG:	DW	0
                
 086F 00        WIZMAG:	DB	0	; USED AS CLIENT (NODE) ID
                
                COMREGS:
 0870           GW:	DS	4
 0874           MSK:	DS	4
 0878           MAC:	DS	6
 087E           IP:	DS	4
 0012 =         COMLEN	EQU	$-COMREGS
                
                SOKREGS:
 0882           SOKMR:	DS	4	; MR, CR, IR, SR
 0886           SOKPT:	DS	2	; PORT
 0888           SOKMAC:	DS	6	; DHAR
 088E           SOKIP:	DS	4	; DIPR
 0892           SOKDPT:	DS	2	; DPORT
 0012 =         SOKLEN	EQU	$-SOKREGS
                
                NEWSOK:
 0894           NSKPT:	DS	2	; PORT
 0896           NSKMAC:	DS	6	; DHAR
 089C           NSKIP:	DS	4	; DIPR
 08A0           NSKDPT:	DS	2	; DPORT
 0020 =         NSKLEN	EQU	$-SOKREGS
                
 08A2           BUF:	DS	512
                
 0AA2           	END
