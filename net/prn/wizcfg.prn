                ; A CONFIG UTIL FOR WIZNET 550 DEVICES, ATTACHED IN PARALLEL-SPI INTERFACE
                ; SETS CONFIG INTO NVRAM, UNLESS 'W' OPTION PREFIX TO SET TO WIZ850IO DIRECTLY.
                ;
                ; COMMANDS:
                ;	[W] N <ID>		SET NODE ID
                ;	[W] G <IP>		SET GATEWAY IP ADDR
                ;	[W] S <IP>		SET SUB-NETWORK MASK
                ;	[W] I <IP>		SET NODE IP ADDR
                ;	[W] M <MA>		SET NODE H/W ADDR
                ;	[W] 0 <ID> <IP> <PT>	SET SOCK 0
                ;	R			RESTORE WIZ850IO CONFIG FROM NVRAM
                
                	MACLIB	Z80
                
 0040 =         WIZ	EQU	40H	; BASE PORT OF H8-WIZX50IO SPI INTERFACE
                
 0040 =         WIZ$DAT	EQU	WIZ+0
 0041 =         WIZ$CTL	EQU	WIZ+1
 0041 =         WIZ$STS	EQU	WIZ+1
                
 0001 =         SCS	EQU	01B	; SCS FOR WIZNET
 0002 =         NVSCS	EQU	10B	; SCS FOR NVRAM
                
                ; NVRAM/SEEPROM COMMANDS
 0003 =         NVRD	EQU	00000011B
 0002 =         NVWR	EQU	00000010B
 0005 =         RDSR	EQU	00000101B
 0006 =         WREN	EQU	00000110B
                ; NVRAM/SEEPROM STATUS BITS
 0001 =         WIP	EQU	00000001B
                
                ; WIZNET CTRL BIT FOR WRITING
 0004 =         WRITE	EQU	00000100B
                
 0001 =         GAR	EQU	1	; OFFSET OF GAR, ETC.
 0005 =         SUBR	EQU	5
 0009 =         SHAR	EQU	9
 000F =         SIPR	EQU	15
 001D =         PMAGIC	EQU	29	; USED FOR NODE ID
                
 0008 =         NSOCK	EQU	8
 0008 =         SOCK0	EQU	000$01$000B
 0028 =         SOCK1	EQU	001$01$000B
 0048 =         SOCK2	EQU	010$01$000B
 0068 =         SOCK3	EQU	011$01$000B
 0088 =         SOCK4	EQU	100$01$000B
 00A8 =         SOCK5	EQU	101$01$000B
 00C8 =         SOCK6	EQU	110$01$000B
 00E8 =         SOCK7	EQU	111$01$000B
                
 0000 =         SNMR	EQU	0
 0001 =         SNCR	EQU	1
 0002 =         SNIR	EQU	2
 0003 =         SNSR	EQU	3
 0004 =         SNPORT	EQU	4
 000C =         SNDIPR	EQU	12
 0010 =         SNDPORT	EQU	16
 001F =         SNTXBUF	EQU	31	; TXBUF_SIZE
                
                ; SOCKET SR VALUES
 0000 =         CLOSED	EQU	00H
                
                ; SOCKET CR COMMANDS
 0008 =         DISCON	EQU	08H
                
 000D =         CR	EQU	13
 000A =         LF	EQU	10
                
 0000 =         CPM	EQU	0
 0005 =         BDOS	EQU	5
 0080 =         CMD	EQU	0080H
                
 0009 =         PRINT	EQU	9
 000C =         GETVER	EQU	12
 0045 =         CFGTBL	EQU	69
                
 0100           	ORG	00100H
                
 0100 C3A902    	JMP	START
                
 0103 4E6F646520IDMSG:	DB	'Node ID:  $'
 010E 4761746577GWMSG:	DB	'Gateway:  $'
 0119 5375626E65NTMSG:	DB	'Subnet:   $'
 0124 4D41433A20MCMSG:	DB	'MAC:      $'
 012F 4950204164IPMSG:	DB	'IP Addr:  $'
                
 013A 5573616765USAGE:	DB	'Usage: WIZCFG {G|I|S} ipadr',CR,LF
 0157 2020202020	DB	'       WIZCFG M macadr',CR,LF
 016F 2020202020	DB	'       WIZCFG N cid',CR,LF
 0184 2020202020	DB	'       WIZCFG {0..7} sid ipadr port',CR,LF
 01A9 2020202020	DB	'       WIZCFG R',CR,LF
 01BA 5365747320	DB	'Sets network config in NVRAM',CR,LF
 01D8 5072656669	DB	'Prefix cmd with W to set WIZ850io directly',CR,LF
 0204 5220636D64	DB	'R cmd sets WIZ850io from NVRAM',CR,LF
 0224 24        	DB	'$'
 0225 5365740D0ADONE:	DB	'Set',CR,LF,'$'
 022B 536F636B65SOCK:	DB	'Socket '
 0232 4E3A2024  SOKN:	DB	'N: $'
 0236 2D204E6F74NCFG:	DB	'- Not Configured',CR,LF,'$'
 0249 43502F4E45NOCPN:	DB	'CP/NET is running. Stop it first',CR,LF,'$'
 026C 4E5652414DNVERR:	DB	'NVRAM block not initialized',CR,LF,'$'
 028A 496E697469NEWBUF:	DB	'Initializing new NVRAM block',CR,LF,'$'
                
                START:
                	SSPD	USRSTK
 02A9+ED73      	DB	0EDH,73H
 02AB+FB09      	DW	USRSTK
 02AD 31FB09    	LXI	SP,STACK
 02B0 0E0C      	MVI	C,GETVER
 02B2 CD0500    	CALL	BDOS
 02B5 7C        	MOV	A,H
 02B6 E602      	ANI	02H
 02B8 CAC802    	JZ	NOCPNT
 02BB F6FF      	ORI	0FFH
 02BD 32FE09    	STA	CPNET
 02C0 0E45      	MVI	C,CFGTBL
 02C2 CD0500    	CALL	BDOS
 02C5 22FF09    	SHLD	NETCFG
                NOCPNT:
 02C8 3A8000    	LDA	CMD
 02CB B7        	ORA	A
 02CC CA1B06    	JZ	SHOW
                
 02CF 218000    	LXI	H,CMD
 02D2 46        	MOV	B,M
 02D3 23        	INX	H
                PARS0:
 02D4 7E        	MOV	A,M
 02D5 FE20      	CPI	' '
 02D7 C2E002    	JNZ	PARS1
 02DA 23        	INX	H
                	DJNZ	PARS0
 02DB+10F7      	DB	10H,PARS0-$-1
 02DD C31B06    	JMP	SHOW
                
                PARS1:
 02E0 FE57      	CPI	'W'
 02E2 C2EE02    	JNZ	NOTW
 02E5 32FD09    	STA	DIRECT
 02E8 23        	INX	H
                	DJNZ	PARS0
 02E9+10E9      	DB	10H,PARS0-$-1
 02EB C31B06    	JMP	SHOW
                NOTW:
                	; ALL REQUIRE PRE-READ OF NVRAM, IF NOT DIRECT
 02EE E5        	PUSH	H
 02EF C5        	PUSH	B
 02F0 3AFD09    	LDA	DIRECT
 02F3 B7        	ORA	A
 02F4 CCFA08    	CZ	NVGETB	; INIT BUF IF NEEDED
 02F7 C1        	POP	B
 02F8 E1        	POP	H
 02F9 7E        	MOV	A,M	; RESTORE CMD
                	; THESE HAVE NO PARAMS...
 02FA FE52      	CPI 	'R'
 02FC CAC804    	JZ	PARS5
 02FF FE56      	CPI 	'V'	; UNDOCUMENTED - NOT ALWAYS USEFUL
 0301 CA2A05    	JZ	PARS6
                	;
 0304 4F        	MOV	C,A
 0305 CDF107    	CALL	SKIPB
 0308 DA7205    	JC	HELP
 030B 79        	MOV	A,C
 030C FE47      	CPI 	'G'
                	LXIX	GW
 030E+DD21      	DB	0DDH,21H
 0310+020A      	DW	GW
 0312 110100    	LXI	D,GAR
 0315 CA4904    	JZ	PARS2
 0318 FE49      	CPI 	'I'
                	LXIX	IP
 031A+DD21      	DB	0DDH,21H
 031C+100A      	DW	IP
 031E 110F00    	LXI	D,SIPR
 0321 CA4904    	JZ	PARS2
 0324 FE53      	CPI 	'S'
                	LXIX	MSK
 0326+DD21      	DB	0DDH,21H
 0328+060A      	DW	MSK
 032A 110500    	LXI	D,SUBR
 032D CA4904    	JZ	PARS2
 0330 FE4D      	CPI 	'M'
 0332 CA3404    	JZ	PARS3
 0335 FE4E      	CPI 	'N'
 0337 CA1F04    	JZ	PARS4
 033A FE30      	CPI	'0'
 033C DA7205    	JC	HELP
 033F FE38      	CPI	'7'+1
 0341 D27205    	JNC	HELP
                
                ; PARSE NEW SOCKET CONFIG
 0344 323202    	STA	SOKN
                	; PARSE <SRVID> <IPADR> <PORT>
 0347 0E00      	MVI	C,0	; NUL WON'T EVER BE SEEN
 0349 CD1608    	CALL	PARSHX
 034C DA7205    	JC	HELP
 034F 3E31      	MVI	A,31H
 0351 32260A    	STA	NSKPT
 0354 7A        	MOV	A,D	; SERVER ID
 0355 32270A    	STA	NSKPT+1
 0358 CDF107    	CALL	SKIPB
 035B DA7205    	JC	HELP
                	LXIX	NSKIP
 035E+DD21      	DB	0DDH,21H
 0360+2E0A      	DW	NSKIP
 0362 CD4508    	CALL	PARSADR
 0365 DA7205    	JC	HELP
 0368 CDF107    	CALL	SKIPB
 036B DA7205    	JC	HELP
 036E CD7708    	CALL	PARSNM
 0371 DA7205    	JC	HELP
 0374 7A        	MOV	A,D
 0375 32320A    	STA	NSKDPT
 0378 7B        	MOV	A,E
 0379 32330A    	STA	NSKDPT+1
                ; NOW PREPARE TO UPDATE SOCKET CONFIG
 037C 3AFD09    	LDA	DIRECT
 037F B7        	ORA	A
 0380 CAE703    	JZ	NVSOK
                	; SET SN_MR SEPARATE, TO AVOID WRITING CR AND SR...
 0383 CDF405    	CALL	GETSOKN
 0386 57        	MOV	D,A
 0387 D5        	PUSH	D
 0388 CD0B06    	CALL	SETTCP	; FORCE TCP MODE
                	; GET CURRENT VALUES, CLEANUP AS NEEDED
 038B 21140A    	LXI	H,SOKREGS
 038E 1E00      	MVI	E,SNMR
 0390 0612      	MVI	B,SOKLEN
 0392 CDB005    	CALL	WIZGET
 0395 211A0A    	LXI	H,SOKMAC
 0398 11280A    	LXI	D,NSKMAC
 039B 010600    	LXI	B,6
                	LDIR
 039E+EDB0      	DB	0EDH,0B0H
 03A0 3A180A    	LDA	SOKPT
 03A3 FE31      	CPI	31H
 03A5 C2CD03    	JNZ	NTCPNET	; DON'T CARE ABOUT SOCKETS NOT CONFIGURED
 03A8 3AFE09    	LDA	CPNET
 03AB B7        	ORA	A
 03AC CACD03    	JZ	NTCPNET	; SKIP CFGTBL CLEANUP IF NOT CP/NET
                	; REMOVE ALL REFS TO THIS SERVER...
 03AF 3A190A    	LDA	SOKPT+1	; SERVER NODE ID
 03B2 4F        	MOV	C,A
 03B3 2AFF09    	LHLD	NETCFG
 03B6 0612      	MVI	B,18	; 16 DRIVES, CON:, LST:
 03B8 23        	INX	H
 03B9 23        	INX	H
 03BA 7E        CLN0:	MOV	A,M
 03BB B7        	ORA	A
 03BC F2C903    	JP	NTNET	; DEVICE NOT NETWORKED
 03BF 23        	INX	H
 03C0 7E        	MOV	A,M
 03C1 B9        	CMP	C	; SAME SERVER?
 03C2 C2CA03    	JNZ	NTNET1
 03C5 AF        	XRA	A
 03C6 77        	MOV	M,A
 03C7 2B        	DCX	H
 03C8 77        	MOV	M,A
 03C9 23        NTNET:	INX	H
 03CA 23        NTNET1:	INX	H
                	DJNZ	CLN0
 03CB+10ED      	DB	10H,CLN0-$-1
                NTCPNET:
 03CD 3A170A    	LDA	SOKMR+SNSR
 03D0 FE00      	CPI	CLOSED
 03D2 CADC03    	JZ	NTOPN
 03D5 D1        	POP	D
 03D6 D5        	PUSH	D
 03D7 3E08      	MVI	A,DISCON
 03D9 CD7D05    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 03DC 21260A    NTOPN:	LXI	H,NEWSOK
 03DF D1        	POP	D
 03E0 1E04      	MVI	E,SNPORT
 03E2 060E      	MVI	B,SOKLEN-SNPORT
 03E4 C36C04    	JMP	SETIT
                NVSOK:
 03E7 3A3202    	LDA	SOKN
 03EA D630      	SUI	'0'	; 00000SSS
 03EC 0F        	RRC
 03ED 0F        	RRC
 03EE 0F        	RRC		; SSS00000 OR SOKN * 32
 03EF 5F        	MOV	E,A
 03F0 1600      	MVI	D,0
                	LXIX	BUF+32	; SOCKET 0 BUFFER
 03F2+DD21      	DB	0DDH,21H
 03F4+540A      	DW	BUF+32
                	DADX	D
 03F6+DD19      	DB	0DDH,D*8+09H
 03F8 2A260A    	LHLD	NSKPT	; BIG ENDIAN DATA, LITTLE ENDIAN LOAD...
                	STX	L,SNPORT
 03FB+DD7504    	DB	0DDH,70H+L,SNPORT
                	STX	H,SNPORT+1
 03FE+DD7405    	DB	0DDH,70H+H,SNPORT+1
 0401 2A2E0A    	LHLD	NSKIP	; LITTLE ENDIAN LOAD...
                	STX	L,SNDIPR
 0404+DD750C    	DB	0DDH,70H+L,SNDIPR
                	STX	H,SNDIPR+1
 0407+DD740D    	DB	0DDH,70H+H,SNDIPR+1
 040A 2A300A    	LHLD	NSKIP+2	; LITTLE ENDIAN LOAD...
                	STX	L,SNDIPR+2
 040D+DD750E    	DB	0DDH,70H+L,SNDIPR+2
                	STX	H,SNDIPR+3
 0410+DD740F    	DB	0DDH,70H+H,SNDIPR+3
 0413 2A320A    	LHLD	NSKDPT	; BIG ENDIAN DATA, LITTLE ENDIAN LOAD...
                	STX	L,SNDPORT
 0416+DD7510    	DB	0DDH,70H+L,SNDPORT
                	STX	H,SNDPORT+1
 0419+DD7411    	DB	0DDH,70H+H,SNDPORT+1
 041C C35905    	JMP	NVSETIT
                
                PARS4:
 041F CD1608    	CALL	PARSHX
 0422 DA7205    	JC	HELP
 0425 7A        	MOV	A,D
 0426 32010A    	STA	WIZMAG
 0429 21010A    	LXI	H,WIZMAG
 042C 111D00    	LXI	D,PMAGIC
 042F 0601      	MVI	B,1
 0431 C35604    	JMP	SETIT0
                
                PARS3:
                	LXIX	MAC
 0434+DD21      	DB	0DDH,21H
 0436+0A0A      	DW	MAC
                	PUSHIX
 0438+DDE5      	DB	0DDH,0E5H
 043A CDFE07    	CALL	PARSMAC
 043D E1        	POP	H
 043E DA7205    	JC	HELP
 0441 110900    	LXI	D,SHAR
 0444 0606      	MVI	B,6
 0446 C35604    	JMP	SETIT0
                
                PARS2:
                	PUSHIX
 0449+DDE5      	DB	0DDH,0E5H
 044B D5        	PUSH	D
 044C CD4508    	CALL	PARSADR
 044F D1        	POP	D
 0450 E1        	POP	H
 0451 DA7205    	JC	HELP
 0454 0604      	MVI	B,4
                	; GOT IT...
                SETIT0:
 0456 3AFD09    	LDA	DIRECT
 0459 B7        	ORA	A
 045A C26C04    	JNZ	SETIT
 045D E5        	PUSH	H
 045E 21340A    	LXI	H,BUF
 0461 19        	DAD	D
 0462 EB        	XCHG
 0463 E1        	POP	H
 0464 48        	MOV	C,B
 0465 0600      	MVI	B,0
                	LDIR
 0467+EDB0      	DB	0EDH,0B0H
 0469 C35905    	JMP	NVSETIT
                SETIT:
 046C CDC705    	CALL	WIZSET
                
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
 046F C36505    	JMP	EXIT
                
                NVSHOW:	; SHOW CONFIG FROM NVRAM
 0472 210000    	LXI	H,0
 0475 110002    	LXI	D,512
 0478 CD1D09    	CALL	NVGET
 047B CDC408    	CALL	VCKSUM
 047E C26805    	JNZ	CSERR
 0481 3A510A    	LDA	BUF+PMAGIC
 0484 CDA109    	CALL	SHID
 0487 21430A    	LXI	H,BUF+SIPR
 048A 112F01    	LXI	D,IPMSG
 048D CDB609    	CALL	SHIP
 0490 21350A    	LXI	H,BUF+GAR
 0493 110E01    	LXI	D,GWMSG
 0496 CDB609    	CALL	SHIP
 0499 21390A    	LXI	H,BUF+SUBR
 049C 111901    	LXI	D,NTMSG
 049F CDB609    	CALL	SHIP
 04A2 213D0A    	LXI	H,BUF+SHAR
 04A5 CDC309    	CALL	SHMAC
 04A8 21540A    	LXI	H,BUF+32	; SOCKET 0 BUFFER
 04AB 0608      	MVI	B,NSOCK
                SHNVSK0:
 04AD C5        	PUSH	B
 04AE 11140A    	LXI	D,SOKREGS
 04B1 011200    	LXI	B,SOKLEN
                	LDIR
 04B4+EDB0      	DB	0EDH,0B0H
 04B6 110E00    	LXI	D,32-SOKLEN
 04B9 19        	DAD	D	; NEXT SOCKET BUF
 04BA C1        	POP	B
 04BB C5        	PUSH	B
 04BC E5        	PUSH	H
 04BD 3E08      	MVI	A,NSOCK
 04BF 90        	SUB	B	; 0..7
 04C0 5F        	MOV	E,A
 04C1 CDE206    	CALL	SHOWSOK
 04C4 E1        	POP	H
 04C5 C1        	POP	B
                	DJNZ	SHNVSK0
 04C6+10E5      	DB	10H,SHNVSK0-$-1
                
                PARS5:	; RESTORE CONFIG FROM NVRAM
 04C8 3AFE09    	LDA	CPNET
 04CB B7        	ORA	A
 04CC C26D05    	JNZ	XOCPNT
 04CF 210000    	LXI	H,0
 04D2 110002    	LXI	D,512
 04D5 CD1D09    	CALL	NVGET
 04D8 CDC408    	CALL	VCKSUM
 04DB C26805    	JNZ	CSERR
 04DE 21350A    	LXI	H,BUF+GAR
 04E1 1600      	MVI	D,0
 04E3 1E01      	MVI	E,GAR
 04E5 0612      	MVI	B,18	; GAR, SUBR, SHAR, SIPR
 04E7 CDC705    	CALL	WIZSET
 04EA 21510A    	LXI	H,BUF+PMAGIC
 04ED 1600      	MVI	D,0
 04EF 1E1D      	MVI	E,PMAGIC
 04F1 0601      	MVI	B,1
 04F3 CDC705    	CALL	WIZSET
                	LXIX	BUF+32
 04F6+DD21      	DB	0DDH,21H
 04F8+540A      	DW	BUF+32
 04FA 1608      	MVI	D,SOCK0
 04FC 0608      	MVI	B,8
                REST0:
 04FE C5        	PUSH	B
                	LDX	A,SNPORT
 04FF+DD7E04    	DB	0DDH,A*8+46H,SNPORT
 0502 FE31      	CPI	31H
 0504 C21B05    	JNZ	REST1	; SKIP UNCONFIGURED SOCKETS
 0507 CDDE05    	CALL	CLOSE	; CP/NET NOT ACTIVE - ALREADY CHECKED
 050A CD0B06    	CALL	SETTCP	; ENSURE MR IS SET TO TCP/IP
 050D 1E04      	MVI	E,SNPORT
 050F 0602      	MVI	B,2
 0511 CDFF05    	CALL	SETSOK
 0514 1E0C      	MVI	E,SNDIPR
 0516 0606      	MVI	B,6	; DIPR AND DPORT
 0518 CDFF05    	CALL	SETSOK
                REST1:
 051B 012000    	LXI	B,32
                	DADX	B
 051E+DD09      	DB	0DDH,B*8+09H
 0520 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 0522 82        	ADD	D
 0523 57        	MOV	D,A
 0524 C1        	POP	B
                	DJNZ	REST0
 0525+10D7      	DB	10H,REST0-$-1
                
 0527 C36505    	JMP	EXIT
                	;...
                
                PARS6:	; SAVE CONFIG TO NVRAM
 052A 21340A    	LXI	H,BUF
 052D 36FF      	MVI	M,0FFH	; EEPROM "UNPROGRAMMED"
 052F 11350A    	LXI	D,BUF+1
 0532 01FF01    	LXI	B,511
                	LDIR
 0535+EDB0      	DB	0EDH,0B0H
 0537 21340A    	LXI	H,BUF
 053A 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 053C 1E00      	MVI	E,0	; OFFSET +0
 053E 1600      	MVI	D,0	; BSB 0 = COMMON REGISTER BLOCK
 0540 CDB005    	CALL	WIZGET
 0543 21540A    	LXI	H,BUF+32
 0546 1608      	MVI	D,SOCK0	; BSB 08H = SOCKET 0 REGISTER BLOCK
 0548 1E00      	MVI	E,0	; OFFSET +0
 054A 0608      	MVI	B,8	; NUM SOCKETS
 054C C5        SAVE0:	PUSH	B
 054D 0620      	MVI	B,32	; SAVE ALL BETWEEN, RESTORE SKIPS
 054F CDB005    	CALL	WIZGET	; HL = NEXT BLOCK
 0552 C1        	POP	B
 0553 3E20      	MVI	A,001$00$000B	; SOCKET BSB INCR VALUE
 0555 82        	ADD	D
 0556 57        	MOV	D,A
                	DJNZ	SAVE0
 0557+10F3      	DB	10H,SAVE0-$-1
                	; GOT DATA OFF WIZNET CHIP, NOW SAVE TO NVRAM
                NVSETIT:
 0559 CDE808    	CALL	SCKSUM
 055C 210000    	LXI	H,0	; WIZNET USES 512 BYTES AT 0000 IN NVRAM
 055F 110002    	LXI	D,512
 0562 CD5209    	CALL	NVSET
                	;LXI	D,DONE
                	;MVI	C,PRINT
                	;CALL	BDOS
                	;JMP	EXIT
                EXIT:
 0565 C30000    	JMP	CPM
                
 0568 116C02    CSERR:	LXI	D,NVERR
                	JR	XTMSG
 056B+1808      	DB	18H,XTMSG-$-1
 056D 114902    XOCPNT:	LXI	D,NOCPN
                	JR	XTMSG
 0570+1803      	DB	18H,XTMSG-$-1
                HELP:
 0572 113A01    	LXI	D,USAGE
 0575 0E09      XTMSG:	MVI	C,PRINT
 0577 CD0500    	CALL	BDOS
 057A C36505    	JMP	EXIT
                
                ; SEND SOCKET COMMAND TO WIZNET CHIP, WAIT FOR DONE.
                ; A = COMMAND, D = SOCKET BSB
                ; DESTROYS A
                WIZCMD:
 057D F5        	PUSH	PSW
 057E 3E01      	MVI	A,SCS
 0580 D341      	OUT	WIZ$CTL
 0582 AF        	XRA	A
 0583 D340      	OUT	WIZ$DAT
 0585 3E01      	MVI	A,SNCR
 0587 D340      	OUT	WIZ$DAT
 0589 7A        	MOV	A,D
 058A F604      	ORI	WRITE
 058C D340      	OUT	WIZ$DAT
 058E F1        	POP	PSW
 058F D340      	OUT	WIZ$DAT	; START COMMAND
 0591 AF        	XRA	A	;
 0592 D341      	OUT	WIZ$CTL
                WC0:
 0594 3E01      	MVI	A,SCS
 0596 D341      	OUT	WIZ$CTL
 0598 AF        	XRA	A
 0599 D340      	OUT	WIZ$DAT
 059B 3E01      	MVI	A,SNCR
 059D D340      	OUT	WIZ$DAT
 059F 7A        	MOV	A,D
 05A0 D340      	OUT	WIZ$DAT
 05A2 DB40      	IN	WIZ$DAT	; PRIME PUMP
 05A4 DB40      	IN	WIZ$DAT
 05A6 F5        	PUSH	PSW
 05A7 AF        	XRA	A	;
 05A8 D341      	OUT	WIZ$CTL
 05AA F1        	POP	PSW
 05AB B7        	ORA	A
 05AC C29405    	JNZ	WC0
 05AF C9        	RET
                
                ; E = BSB, D = CTL, HL = DATA, B = LENGTH
                WIZGET:
 05B0 3E01      	MVI	A,SCS
 05B2 D341      	OUT	WIZ$CTL
 05B4 AF        	XRA	A	; HI ADR ALWAYS 0
 05B5 D340      	OUT	WIZ$DAT
 05B7 7B        	MOV	A,E
 05B8 D340      	OUT	WIZ$DAT
 05BA 7A        	MOV	A,D
 05BB D340      	OUT	WIZ$DAT
 05BD DB40      	IN	WIZ$DAT	; PRIME PUMP
 05BF 0E40      	MVI	C,WIZ$DAT
                	INIR
 05C1+EDB2      	DB	0EDH,0B2H
 05C3 AF        	XRA	A	; NOT SCS
 05C4 D341      	OUT	WIZ$CTL
 05C6 C9        	RET
                
                ; HL = DATA TO SEND, E = OFFSET, D = BSB, B = LENGTH
                ; DESTROYS HL, B, C, A
                WIZSET:
 05C7 3E01      	MVI	A,SCS
 05C9 D341      	OUT	WIZ$CTL
 05CB AF        	XRA	A	; HI ADR ALWAYS 0
 05CC D340      	OUT	WIZ$DAT
 05CE 7B        	MOV	A,E
 05CF D340      	OUT	WIZ$DAT
 05D1 7A        	MOV	A,D
 05D2 F604      	ORI	WRITE
 05D4 D340      	OUT	WIZ$DAT
 05D6 0E40      	MVI	C,WIZ$DAT
                	OUTIR
 05D8+EDB3      	DB	0EDH,0B3H
 05DA AF        	XRA	A	; NOT SCS
 05DB D341      	OUT	WIZ$CTL
 05DD C9        	RET
                
                ; CLOSE SOCKET IF ACTIVE (SR <> CLOSED)
                ; D = SOCKET BSB
                ; DESTROYS HL, E, B, C, A
                CLOSE:
 05DE 21170A    	LXI	H,SOKMR+SNSR
 05E1 1E03      	MVI	E,SNSR
 05E3 0601      	MVI	B,1
 05E5 CDB005    	CALL	WIZGET
 05E8 3A170A    	LDA	SOKMR+SNSR
 05EB FE00      	CPI	CLOSED
 05ED C8        	RZ
 05EE 3E08      	MVI	A,DISCON
 05F0 CD7D05    	CALL	WIZCMD
                	; DON'T CARE ABOUT RESULTS?
 05F3 C9        	RET
                
                ; CONVERT 'SOKN' (ASCII DIGIT) TO SOCKET BSB
                GETSOKN:
 05F4 3A3202    	LDA	SOKN
 05F7 D630      	SUI	'0'
 05F9 0F        	RRC
 05FA 0F        	RRC
 05FB 0F        	RRC		; XXX00000
 05FC F608      	ORI	SOCK0	; XXX01000
 05FE C9        	RET
                
                ; IX = BASE DATA BUFFER FOR SOCKET, D = SOCKET BSB, E = OFFSET, B = LENGTH
                ; DESTROYS HL, B, C
                SETSOK:
                	PUSHIX
 05FF+DDE5      	DB	0DDH,0E5H
 0601 E1        	POP	H
 0602 D5        	PUSH	D
 0603 1600      	MVI	D,0
 0605 19        	DAD	D	; HL POINTS TO DATA IN 'BUF'
 0606 D1        	POP	D
 0607 CDC705    	CALL	WIZSET
 060A C9        	RET
                
                ; SET SOCKET MR TO TCP.
                ; D = SOCKET BSB (RESULT OF "GETSOKN")
                ; DESTROYS ALL REGISTERS EXCEPT D.
                SETTCP:
 060B 3E01      	MVI	A,1	; TCP
 060D 32140A    	STA	SOKMR
 0610 1E00      	MVI	E,SNMR
 0612 21140A    	LXI	H,SOKMR
 0615 0601      	MVI	B,1
 0617 CDC705    	CALL	WIZSET	; FORCE TCP/IP MODE
 061A C9        	RET
                
                SHOW:
 061B 3AFD09    	LDA	DIRECT
 061E B7        	ORA	A
 061F CA7204    	JZ	NVSHOW
 0622 21020A    	LXI	H,COMREGS
 0625 110100    	LXI	D,GAR
 0628 0612      	MVI	B,COMLEN
 062A CDB005    	CALL	WIZGET
 062D 21010A    	LXI	H,WIZMAG
 0630 111D00    	LXI	D,PMAGIC
 0633 0601      	MVI	B,1
 0635 CDB005    	CALL	WIZGET
                
 0638 3A010A    	LDA	WIZMAG
 063B CDA109    	CALL	SHID
                
 063E 21100A    	LXI	H,IP
 0641 112F01    	LXI	D,IPMSG
 0644 CDB609    	CALL	SHIP
                
 0647 21020A    	LXI	H,GW
 064A 110E01    	LXI	D,GWMSG
 064D CDB609    	CALL	SHIP
                
 0650 21060A    	LXI	H,MSK
 0653 111901    	LXI	D,NTMSG
 0656 CDB609    	CALL	SHIP
                
 0659 210A0A    	LXI	H,MAC
 065C CDC309    	CALL	SHMAC
                
 065F 21140A    	LXI	H,SOKREGS
 0662 110008    	LXI	D,SOCK0 SHL 8
 0665 0612      	MVI	B,SOKLEN
 0667 CDB005    	CALL	WIZGET
 066A 1E00      	MVI	E,0
 066C CDE206    	CALL	SHOWSOK
                
 066F 21140A    	LXI	H,SOKREGS
 0672 110028    	LXI	D,SOCK1 SHL 8
 0675 0612      	MVI	B,SOKLEN
 0677 CDB005    	CALL	WIZGET
 067A 1E01      	MVI	E,1
 067C CDE206    	CALL	SHOWSOK
                
 067F 21140A    	LXI	H,SOKREGS
 0682 110048    	LXI	D,SOCK2 SHL 8
 0685 0612      	MVI	B,SOKLEN
 0687 CDB005    	CALL	WIZGET
 068A 1E02      	MVI	E,2
 068C CDE206    	CALL	SHOWSOK
                
 068F 21140A    	LXI	H,SOKREGS
 0692 110068    	LXI	D,SOCK3 SHL 8
 0695 0612      	MVI	B,SOKLEN
 0697 CDB005    	CALL	WIZGET
 069A 1E03      	MVI	E,3
 069C CDE206    	CALL	SHOWSOK
                
 069F 21140A    	LXI	H,SOKREGS
 06A2 110088    	LXI	D,SOCK4 SHL 8
 06A5 0612      	MVI	B,SOKLEN
 06A7 CDB005    	CALL	WIZGET
 06AA 1E04      	MVI	E,4
 06AC CDE206    	CALL	SHOWSOK
                
 06AF 21140A    	LXI	H,SOKREGS
 06B2 1100A8    	LXI	D,SOCK5 SHL 8
 06B5 0612      	MVI	B,SOKLEN
 06B7 CDB005    	CALL	WIZGET
 06BA 1E05      	MVI	E,5
 06BC CDE206    	CALL	SHOWSOK
                
 06BF 21140A    	LXI	H,SOKREGS
 06C2 1100C8    	LXI	D,SOCK6 SHL 8
 06C5 0612      	MVI	B,SOKLEN
 06C7 CDB005    	CALL	WIZGET
 06CA 1E06      	MVI	E,6
 06CC CDE206    	CALL	SHOWSOK
                
 06CF 21140A    	LXI	H,SOKREGS
 06D2 1100E8    	LXI	D,SOCK7 SHL 8
 06D5 0612      	MVI	B,SOKLEN
 06D7 CDB005    	CALL	WIZGET
 06DA 1E07      	MVI	E,7
 06DC CDE206    	CALL	SHOWSOK
                
 06DF C36505    	JMP	EXIT
                
                SHOWSOK:
 06E2 7B        	MOV	A,E
 06E3 C630      	ADI	'0'
 06E5 323202    	STA	SOKN
 06E8 112B02    	LXI	D,SOCK
 06EB 0E09      	MVI	C,PRINT
 06ED CD0500    	CALL	BDOS
 06F0 3A180A    	LDA	SOKPT
 06F3 FE31      	CPI	31H
 06F5 C22207    	JNZ	NOCFG
 06F8 3A190A    	LDA	SOKPT+1
 06FB CDDD07    	CALL	HEXOUT
 06FE 3E48      	MVI	A,'H'
 0700 CD4F07    	CALL	CHROUT
 0703 3E20      	MVI	A,' '
 0705 CD4F07    	CALL	CHROUT
 0708 21200A    	LXI	H,SOKIP
 070B CD3D07    	CALL	IPOUT
 070E 3E20      	MVI	A,' '
 0710 CD4F07    	CALL	CHROUT
 0713 3A240A    	LDA	SOKDPT
 0716 57        	MOV	D,A
 0717 3A250A    	LDA	SOKDPT+1
 071A 5F        	MOV	E,A
 071B CD7307    	CALL	DEC16
 071E CD6807    	CALL	CRLF
 0721 C9        	RET
                
 0722 113602    NOCFG:	LXI	D,NCFG
 0725 0E09      	MVI	C,PRINT
 0727 CD0500    	CALL	BDOS
 072A C9        	RET
                
                HWOUT:
 072B 0606      	MVI	B,6
 072D 0E3A      	MVI	C,':'
 072F 7E        HW0:	MOV	A,M
 0730 CDDD07    	CALL	HEXOUT
 0733 05        	DCR	B
 0734 C8        	RZ
 0735 79        	MOV	A,C
 0736 CD4F07    	CALL	CHROUT
 0739 23        	INX	H
 073A C32F07    	JMP	HW0
                
                IPOUT:
 073D 0604      	MVI	B,4
 073F 0E2E      	MVI	C,'.'
 0741 7E        IP0:	MOV	A,M
 0742 CDAF07    	CALL	DECOUT
 0745 05        	DCR	B
 0746 C8        	RZ
 0747 79        	MOV	A,C
 0748 CD4F07    	CALL	CHROUT
 074B 23        	INX	H
 074C C34107    	JMP	IP0
                
                CHROUT:
 074F E5        	PUSH	H
 0750 D5        	PUSH	D
 0751 C5        	PUSH	B
 0752 5F        	MOV	E,A
 0753 0E02      	MVI	C,002H
 0755 CD0500    	CALL	BDOS
 0758 C1        	POP	B
 0759 D1        	POP	D
 075A E1        	POP	H
 075B C9        	RET
                
                GETSTS:
 075C 0E44      	MVI	C,044H
 075E CD0500    	CALL	BDOS
 0761 C9        	RET
                
                GETCFG:
 0762 0E45      	MVI	C,045H
 0764 CD0500    	CALL	BDOS
 0767 C9        	RET
                
                CRLF:
 0768 3E0D      	MVI	A,CR
 076A CD4F07    	CALL	CHROUT
 076D 3E0A      	MVI	A,LF
 076F CD4F07    	CALL	CHROUT
 0772 C9        	RET
                
                DEC16:
 0773 EB        	XCHG	; REMAINDER IN HL
 0774 0E00      	MVI	C,0
 0776 111027    	LXI	D,10000
 0779 CD9507    	CALL	DIV16
 077C 11E803    	LXI	D,1000
 077F CD9507    	CALL	DIV16
 0782 116400    	LXI	D,100
 0785 CD9507    	CALL	DIV16
 0788 110A00    	LXI	D,10
 078B CD9507    	CALL	DIV16
 078E 7D        	MOV	A,L
 078F C630      	ADI	'0'
 0791 CD4F07    	CALL	CHROUT
 0794 C9        	RET
                
 0795 0600      DIV16:	MVI	B,0
 0797 B7        DV0:	ORA	A
                	DSBC	D
 0798+ED52      	DB	0EDH,D*8+42H
 079A 04        	INR	B
                	JRNC	DV0
 079B+30FA      	DB	30H,DV0-$-1
 079D 19        	DAD	D
 079E 05        	DCR	B
                	JRNZ	DV1
 079F+2005      	DB	20H,DV1-$-1
                	BIT	0,C
 07A1+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DV1
 07A3+2001      	DB	20H,DV1-$-1
 07A5 C9        	RET
                DV1:	SETB	0,C
 07A6+CBC1      	DB	0CBH,0*8+C+0C0H
 07A8 3E30      	MVI	A,'0'
 07AA 80        	ADD	B
 07AB CD4F07    	CALL	CHROUT
 07AE C9        	RET
                
                ; LEADING ZEROES BLANKED - MUST PRESERVE B
                DECOUT:
 07AF C5        	PUSH	B
 07B0 0E00      	MVI	C,0
 07B2 1664      	MVI	D,100
 07B4 CDC307    	CALL	DIVIDE
 07B7 160A      	MVI	D,10
 07B9 CDC307    	CALL	DIVIDE
 07BC C630      	ADI	'0'
 07BE CD4F07    	CALL	CHROUT
 07C1 C1        	POP	B
 07C2 C9        	RET
                
 07C3 1E00      DIVIDE:	MVI	E,0
 07C5 92        DIV0:	SUB	D
 07C6 1C        	INR	E
                	JRNC	DIV0
 07C7+30FC      	DB	30H,DIV0-$-1
 07C9 82        	ADD	D
 07CA 1D        	DCR	E
                	JRNZ	DIV1
 07CB+2005      	DB	20H,DIV1-$-1
                	BIT	0,C
 07CD+CB41      	DB	0CBH,0*8+C+40H
                	JRNZ	DIV1
 07CF+2001      	DB	20H,DIV1-$-1
 07D1 C9        	RET
                DIV1:	SETB	0,C
 07D2+CBC1      	DB	0CBH,0*8+C+0C0H
 07D4 F5        	PUSH	PSW	; REMAINDER
 07D5 3E30      	MVI	A,'0'
 07D7 83        	ADD	E
 07D8 CD4F07    	CALL	CHROUT
 07DB F1        	POP	PSW	; REMAINDER
 07DC C9        	RET
                
                HEXOUT:
 07DD F5        	PUSH	PSW
 07DE 0F        	RRC
 07DF 0F        	RRC
 07E0 0F        	RRC
 07E1 0F        	RRC
 07E2 CDE607    	CALL	HEXDIG
 07E5 F1        	POP	PSW
                	;JMP	HEXDIG
                HEXDIG:
 07E6 E60F      	ANI	0FH
 07E8 C690      	ADI	90H
 07EA 27        	DAA
 07EB CE40      	ACI	40H
 07ED 27        	DAA
 07EE C34F07    	JMP	CHROUT
                
                SKIPB:
 07F1 23        	INX	H	; SKIP OPTION LETTER
 07F2 05        	DCR	B
 07F3 37        	STC
 07F4 C8        	RZ
 07F5 7E        SKIP0:	MOV	A,M
 07F6 FE20      	CPI	' '
 07F8 C0        	RNZ	; NO CARRY?
 07F9 23        	INX	H
                	DJNZ	SKIP0
 07FA+10F9      	DB	10H,SKIP0-$-1
 07FC 37        	STC
 07FD C9        	RET
                
                ; IX=DESTINATION
                PARSMAC:
 07FE 0E3A      	MVI	C,':'
                PM00:
 0800 CD1608    	CALL	PARSHX
 0803 D8        	RC
 0804 CA0C08    	JZ	PM1	; HIT TERM CHAR
                	; TODO: CHECK FOR 6 BYTES...
                	STX	D,+0
 0807+DD7200    	DB	0DDH,70H+D,+0
 080A B7        	ORA	A	; NC
 080B C9        	RET
                PM1:
                	STX	D,+0
 080C+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 080F+DD23      	DB	0DDH,23H
 0811 23        	INX	H
                	DJNZ	PM00
 0812+10EC      	DB	10H,PM00-$-1
                	; ERROR IF ENDS HERE...
 0814 37        	STC
 0815 C9        	RET
                
                
                ; C=TERM CHAR
                ; RETURNS CY IF ERROR, Z IF TERM CHAR, NZ END OF TEXT
                PARSHX:
 0816 1600      	MVI	D,0
 0818 7E        PM0:	MOV	A,M
 0819 B9        	CMP	C
 081A C8        	RZ
 081B FE20      	CPI	' '
 081D CA4208    	JZ	NZRET
 0820 D630      	SUI	'0'
 0822 D8        	RC
 0823 FE0A      	CPI	'9'-'0'+1
 0825 DA3108    	JC	PM3
 0828 D611      	SUI	'A'-'0'
 082A D8        	RC
 082B FE06      	CPI	'F'-'A'+1
 082D 3F        	CMC
 082E D8        	RC
 082F C60A      	ADI	10
                PM3:
 0831 E60F      	ANI	0FH
 0833 5F        	MOV	E,A
 0834 7A        	MOV	A,D
 0835 87        	ADD	A
 0836 D8        	RC
 0837 87        	ADD	A
 0838 D8        	RC
 0839 87        	ADD	A
 083A D8        	RC
 083B 87        	ADD	A
 083C D8        	RC
 083D 83        	ADD	E	; CARRY NOT POSSIBLE
 083E 57        	MOV	D,A
 083F 23        	INX	H
                	DJNZ	PM0
 0840+10D6      	DB	10H,PM0-$-1
                NZRET:
 0842 AF        	XRA	A
 0843 3C        	INR	A	; NZ
 0844 C9        	RET
                
                ; IX=DESTINATION
                PARSADR:
 0845 0E2E      	MVI	C,'.'
                PA00:
 0847 1600      	MVI	D,0
 0849 7E        PA0:	MOV	A,M
 084A B9        	CMP	C
 084B CA6D08    	JZ	PA1
 084E FE20      	CPI	' '
 0850 CA6808    	JZ	PA2
 0853 FE30      	CPI	'0'
 0855 D8        	RC
 0856 FE3A      	CPI	'9'+1
 0858 3F        	CMC
 0859 D8        	RC
 085A E60F      	ANI	0FH
 085C 5F        	MOV	E,A
 085D 7A        	MOV	A,D
 085E 87        	ADD	A	; *2
 085F 87        	ADD	A	; *4
 0860 82        	ADD	D	; *5
 0861 87        	ADD	A	; *10
 0862 83        	ADD	E
 0863 D8        	RC
 0864 57        	MOV	D,A
 0865 23        	INX	H
                	DJNZ	PA0
 0866+10E1      	DB	10H,PA0-$-1
                PA2:
                	; TODO: CHECK FOR 4 BYTES...
                	STX	D,+0
 0868+DD7200    	DB	0DDH,70H+D,+0
 086B B7        	ORA	A
 086C C9        	RET
                
                PA1:
                	STX	D,+0
 086D+DD7200    	DB	0DDH,70H+D,+0
                	INXIX
 0870+DD23      	DB	0DDH,23H
 0872 23        	INX	H
                	DJNZ	PA00
 0873+10D2      	DB	10H,PA00-$-1
                	; ERROR IF ENDS HERE...
 0875 37        	STC
 0876 C9        	RET
                
                ; PARSE A 16-BIT (MAX) DECIMAL NUMBER
                PARSNM:
 0877 110000    	LXI	D,0
 087A 7E        PD0:	MOV	A,M
 087B FE20      	CPI	' '
 087D C8        	RZ
 087E FE30      	CPI	'0'
 0880 D8        	RC
 0881 FE3A      	CPI	'9'+1
 0883 3F        	CMC
 0884 D8        	RC
 0885 E60F      	ANI	0FH
 0887 E5        	PUSH	H
 0888 62        	MOV	H,D
 0889 6B        	MOV	L,E
 088A 29        	DAD	H	; *2
 088B DAA608    	JC	PD1
 088E 29        	DAD	H	; *4
 088F DAA608    	JC	PD1
 0892 19        	DAD	D	; *5
 0893 DAA608    	JC	PD1
 0896 29        	DAD	H	; *10
 0897 DAA608    	JC	PD1
 089A 5F        	MOV	E,A
 089B 1600      	MVI	D,0
 089D 19        	DAD	D
 089E EB        	XCHG
 089F E1        	POP	H
 08A0 D8        	RC
 08A1 23        	INX	H
                	DJNZ	PD0
 08A2+10D6      	DB	10H,PD0-$-1
 08A4 B7        	ORA	A	; NC
 08A5 C9        	RET
                
 08A6 E1        PD1:	POP	H
 08A7 C9        	RET	; CY STILL SET
                
                ; IX = BUFFER, BC = LENGTH
                ; RETURN: HL = CKSUM HI, DE = CKSUM LO
                CKSUM32:
 08A8 210000    	LXI	H,0
 08AB 110000    	LXI	D,0
                CKS0:	LDX	A,+0
 08AE+DD7E00    	DB	0DDH,A*8+46H,+0
                	INXIX
 08B1+DD23      	DB	0DDH,23H
 08B3 83        	ADD	E
 08B4 5F        	MOV	E,A
                	JRNC	CKS1
 08B5+3007      	DB	30H,CKS1-$-1
 08B7 14        	INR	D
                	JRNZ	CKS1
 08B8+2004      	DB	20H,CKS1-$-1
 08BA 2C        	INR	L
                	JRNZ	CKS1
 08BB+2001      	DB	20H,CKS1-$-1
 08BD 24        	INR	H
 08BE 0B        CKS1:	DCX	B
 08BF 78        	MOV	A,B
 08C0 B1        	ORA	C
                	JRNZ	CKS0
 08C1+20EB      	DB	20H,CKS0-$-1
 08C3 C9        	RET
                
                ; VALIDATES CHECKSUM IN 'BUF'
                ; RETURN: NZ ON ERROR
                ; A CHECKSUM OF 00 00 00 00 MEANS THE BUFFER WAS ALL 00,
                ; WHICH IS INVALID.
                VCKSUM:
                	LXIX	BUF
 08C4+DD21      	DB	0DDH,21H
 08C6+340A      	DW	BUF
 08C8 01FC01    	LXI	B,508
 08CB CDA808    	CALL	CKSUM32
                	LBCD	BUF+510
 08CE+ED4B      	DB	0EDH,4BH
 08D0+320C      	DW	BUF+510
 08D2 78        	MOV	A,B	;
 08D3 B1        	ORA	C	; CHECK FIRST HALF ZERO
                	DSBC	B
 08D4+ED42      	DB	0EDH,B*8+42H
 08D6 C0        	RNZ
                	LBCD	BUF+508
 08D7+ED4B      	DB	0EDH,4BH
 08D9+300C      	DW	BUF+508
 08DB B0        	ORA	B	;
 08DC B1        	ORA	C	; CHECK SECOND HALF ZERO
 08DD EB        	XCHG
                	DSBC	B	; CY IS CLEAR
 08DE+ED42      	DB	0EDH,B*8+42H
 08E0 C0        	RNZ
 08E1 B7        	ORA	A	; WAS CHECKSUM ALL ZERO?
                	JRZ	VCKSM0
 08E2+2802      	DB	28H,VCKSM0-$-1
 08E4 AF        	XRA	A	; ZR
 08E5 C9        	RET
 08E6 3C        VCKSM0:	INR	A	; NZ
 08E7 C9        	RET
                
                ; SETS CHECKSUM IN 'BUF'
                SCKSUM:
                	LXIX	BUF
 08E8+DD21      	DB	0DDH,21H
 08EA+340A      	DW	BUF
 08EC 01FC01    	LXI	B,508
 08EF CDA808    	CALL	CKSUM32
 08F2 22320C    	SHLD	BUF+510
                	SDED	BUF+508
 08F5+ED53      	DB	0EDH,53H
 08F7+300C      	DW	BUF+508
 08F9 C9        	RET
                
                ; GET A BLOCK OF DATA FROM NVRAM TO 'BUF'
                ; VERIFY CHECKSUM, INIT BLOCK IF NEEDED.
                NVGETB:
 08FA 210000    	LXI	H,0
 08FD 110002    	LXI	D,512
 0900 CD1D09    	CALL	NVGET
 0903 CDC408    	CALL	VCKSUM
 0906 C8        	RZ	; CHKSUM OK, READY TO UPDATE/USE
 0907 118A02    	LXI	D,NEWBUF
 090A 0E09      	MVI	C,PRINT
 090C CD0500    	CALL	BDOS
 090F 21340A    	LXI	H,BUF
 0912 36FF      	MVI	M,0FFH
 0914 54        	MOV	D,H
 0915 5D        	MOV	E,L
 0916 23        	INX	H
 0917 01FF01    	LXI	B,511
                	LDIR
 091A+EDB0      	DB	0EDH,0B0H
 091C C9        	RET
                
                ; HL = NVRAM ADDRESS, DE = LENGTH
                NVGET:
 091D 3E02      	MVI	A,NVSCS
 091F D341      	OUT	WIZ$CTL
 0921 3E03      	MVI	A,NVRD
 0923 D340      	OUT	WIZ$DAT
 0925 7C        	MOV	A,H
 0926 D340      	OUT	WIZ$DAT
 0928 7D        	MOV	A,L
 0929 D340      	OUT	WIZ$DAT
 092B DB40      	IN	WIZ$DAT	; PRIME PUMP
 092D 0E40      	MVI	C,WIZ$DAT
 092F 7B        	MOV	A,E
 0930 B7        	ORA	A
 0931 CA3509    	JZ	NVGET1
 0934 14        	INR	D	; TODO: HANDLE 64K... AND OVERFLOW OF 'BUF'...
 0935 21340A    NVGET1:	LXI	H,BUF
 0938 43        	MOV	B,E
                NVGET0:	INIR	; B = 0 AFTER
 0939+EDB2      	DB	0EDH,0B2H
 093B 15        	DCR	D
                	JRNZ	NVGET0
 093C+20FB      	DB	20H,NVGET0-$-1
 093E AF        	XRA	A	; NOT SCS
 093F D341      	OUT	WIZ$CTL
 0941 C9        	RET
                
                ; NOTE: THIS DELAY VARIES WITH CPU CLOCK SPEED.
                MSLEEP:
 0942 E5        	PUSH	H
 0943 F5        MSLP0:	PUSH	PSW
 0944 214F00    	LXI	H,79	; ~1MS AT 2.048MHZ (200US AT 10.24MHZ)
 0947 2B        MSLP1:	DCX	H
 0948 7C        	MOV	A,H
 0949 B5        	ORA	L
                	JRNZ	MSLP1
 094A+20FB      	DB	20H,MSLP1-$-1
 094C F1        	POP	PSW
 094D 3D        	DCR	A
                	JRNZ	MSLP0
 094E+20F3      	DB	20H,MSLP0-$-1
 0950 E1        	POP	H
 0951 C9        	RET
                
                ; PUT BLOCK OF DATA TO NVRAM FROM 'BUF'
                ; HL = NVRAM ADDRESS, DE = LENGTH
                ; MUST WRITE IN 128-BYTE BLOCKS (PAGES).
                ; HL MUST BE 128-BYTE ALIGNED, DE MUST BE MULTIPLE OF 128
                NVSET:
 0952 E5        	PUSH	H
 0953 21340A    	LXI	H,BUF	; HL = BUF, TOS = NVADR
 0956 0E41      	MVI	C,WIZ$CTL
                NVSET0:
                	; WAIT FOR WIP=0...
 0958 3E02      	MVI	A,NVSCS
                	OUTP	A
 095A+ED79      	DB	0EDH,A*8+41H
 095C 3E05      	MVI	A,RDSR
 095E D340      	OUT	WIZ$DAT
 0960 DB40      	IN	WIZ$DAT	; PRIME PUMP
 0962 DB40      	IN	WIZ$DAT	; STATUS REGISTER
 0964 F5        	PUSH	PSW
 0965 AF        	XRA	A
                	OUTP	A	; NOT SCS
 0966+ED79      	DB	0EDH,A*8+41H
 0968 F1        	POP	PSW
 0969 E601      	ANI	WIP
                	JRNZ	NVSET0
 096B+20EB      	DB	20H,NVSET0-$-1
 096D 3E02      	MVI	A,NVSCS
                	OUTP	A
 096F+ED79      	DB	0EDH,A*8+41H
 0971 3E06      	MVI	A,WREN
 0973 D340      	OUT	WIZ$DAT
 0975 AF        	XRA	A
                	OUTP	A	; NOT SCS
 0976+ED79      	DB	0EDH,A*8+41H
 0978 3E02      	MVI	A,NVSCS
                	OUTP	A
 097A+ED79      	DB	0EDH,A*8+41H
 097C 3E02      	MVI	A,NVWR
 097E D340      	OUT	WIZ$DAT
 0980 E3        	XTHL	; GET NVADR
 0981 7C        	MOV	A,H
 0982 D340      	OUT	WIZ$DAT
 0984 7D        	MOV	A,L
 0985 D340      	OUT	WIZ$DAT
 0987 018000    	LXI	B,128
 098A 09        	DAD	B	; UPDATE NVADR
 098B EB        	XCHG
 098C B7        	ORA	A
                	DSBC	B	; UPDATE LENGTH
 098D+ED42      	DB	0EDH,B*8+42H
 098F EB        	XCHG
 0990 E3        	XTHL	; GET BUF ADR
 0991 41        	MOV	B,C	; B = 128
 0992 0E40      	MVI	C,WIZ$DAT
                	OUTIR		; HL = NEXT PAGE IN 'buf'
 0994+EDB3      	DB	0EDH,0B3H
 0996 0E41      	MVI	C,WIZ$CTL
 0998 AF        	XRA	A
                	OUTP	A	; NOT SCS
 0999+ED79      	DB	0EDH,A*8+41H
                ;	MVI	A,50
                ;	CALL	MSLEEP	; WAIT FOR WIP TO GO "1"?
 099B 7B        	MOV	A,E
 099C B2        	ORA	D
                	JRNZ	NVSET0
 099D+20B9      	DB	20H,NVSET0-$-1
 099F E1        	POP	H
 09A0 C9        	RET
                
                ; A = PMAGIC
 09A1 F5        SHID:	PUSH	PSW
 09A2 110301    	LXI	D,IDMSG
 09A5 0E09      	MVI	C,PRINT
 09A7 CD0500    	CALL	BDOS
 09AA F1        	POP	PSW
 09AB CDDD07    	CALL	HEXOUT
 09AE 3E48      	MVI	A,'H'
 09B0 CD4F07    	CALL	CHROUT
 09B3 C36807    	JMP	CRLF
                
                ; HL = IP ADDR, DE = PREFIX MSG
 09B6 E5        SHIP:	PUSH	H
 09B7 0E09      	MVI	C,PRINT
 09B9 CD0500    	CALL	BDOS
 09BC E1        	POP	H
 09BD CD3D07    	CALL	IPOUT
 09C0 C36807    	JMP	CRLF
                
                ; HL = MAC ADDR
 09C3 E5        SHMAC:	PUSH	H
 09C4 112401    	LXI	D,MCMSG
 09C7 0E09      	MVI	C,PRINT
 09C9 CD0500    	CALL	BDOS
 09CC E1        	POP	H
 09CD CD2B07    	CALL	HWOUT
 09D0 C36807    	JMP	CRLF
                
 09D3           	DS	40
 09FB           STACK:	DS	0
 09FB 0000      USRSTK:	DW	0
                
 09FD 00        DIRECT:	DB	0
 09FE 00        CPNET:	DB	0
 09FF 0000      NETCFG:	DW	0
                
 0A01 00        WIZMAG:	DB	0	; USED AS CLIENT (NODE) ID
                
                COMREGS:
 0A02           GW:	DS	4
 0A06           MSK:	DS	4
 0A0A           MAC:	DS	6
 0A10           IP:	DS	4
 0012 =         COMLEN	EQU	$-COMREGS
                
                SOKREGS:
 0A14           SOKMR:	DS	4	; MR, CR, IR, SR
 0A18           SOKPT:	DS	2	; PORT
 0A1A           SOKMAC:	DS	6	; DHAR
 0A20           SOKIP:	DS	4	; DIPR
 0A24           SOKDPT:	DS	2	; DPORT
 0012 =         SOKLEN	EQU	$-SOKREGS
                
                NEWSOK:
 0A26           NSKPT:	DS	2	; PORT
 0A28           NSKMAC:	DS	6	; DHAR
 0A2E           NSKIP:	DS	4	; DIPR
 0A32           NSKDPT:	DS	2	; DPORT
 0020 =         NSKLEN	EQU	$-SOKREGS
                
 0A34           BUF:	DS	512
                
 0C34           	END
