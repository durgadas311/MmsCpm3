 6230 =         VERS EQU '0b' ; NOVEMBER 1, 1982  13:45  DRM  "RELOC.ASM"
                
                	MACLIB	Z80
                
                ;*****************************************************
                ;**** RELOCATOR FOR OSZ89, OS422, AND CCP422	 *****
                ;**** (EQUIVILENT TO A COLD BOOT FOR THE 77422)  *****
                ;****  COPYRIGHT (C) 1982 MAGNOLIA MICROSYSTEMS  *****
                ;*****************************************************
                
 0000 =         FALSE	EQU	0
 FFFF =         TRUE	EQU	NOT FALSE
                
 0000 =         CPM	EQU	0	;WARMBOOT ENTRY FOR USERS
 0005 =         BDOS	EQU	5	;BDOS ENTRY FOR USERS
 0028 =         RST5	EQU	(5)*8
 005C =         FCB	EQU	5CH
 0080 =         DMA	EQU	80H
 0100 =         TPA	EQU	0100H
                
 0009 =         MSGOUT	EQU	9
 000C =         RETVER	EQU	12
                
                ;********************************************************
                ;*  I/O PORT BASE ADDRESSES
                ;********************************************************
                ;M422	 EQU	 078H	 ;77422 BOARD
 00F2 =         PORT	EQU	0F2H	;GPIO
                
                ;********************************************************
                ;*   77422 BOARD PORTS
                ;********************************************************
                ;DAT422  EQU	 M422	 ;INPUT/OUTPUT
                ;INTOFF  EQU	 M422+1  ;OUTPUT ONLY
                ;NMI	 EQU	 M422+2  ;OUTPUT ONLY
                ;LAST	 EQU	 M422+3  ;OUTPUT ONLY
                ;STA422  EQU	 M422+1  ;INPUT ONLY
                
 0007 =         BEL	EQU	7
 000A =         LF	EQU	10
 000D =         CR	EQU	13
                
 0100           	ORG	TPA
 0100 C38201    BEGIN:	JMP	START
                
 0103 0D0A52454CSIGNON: DB	CR,LF,'RELOC v2.29'
 0110 3062      	DW	VERS
 0112 24        	DB	'$'
                
 0113           	DS	64
 0153           STACK:	DS	0
                
 0153 0D0A075357SWERR:	DB	CR,LF,BEL,'SW501 is set wrong!$'
 016A 0D0A07456EVERERR: DB	CR,LF,BEL,'Environmental error!$'
                
 0182 315301    START:	LXI	SP,STACK
 0185 110301    	LXI	D,SIGNON
 0188 0E09      	MVI	C,MSGOUT
 018A CD0500    	CALL	BDOS
 018D 0E0C      	MVI	C,RETVER
 018F CD0500    	CALL	BDOS
 0192 FE22      	CPI	22H
 0194 116A01    	LXI	D,VERERR
 0197 C2DE01    	JNZ	ERRXIT
 019A 7C        	MOV	A,H
 019B B7        	ORA	A
 019C C2DE01    	JNZ	ERRXIT
 019F 2A0600    	LHLD	BDOS+1
 01A2 7D        	MOV	A,L
 01A3 B7        	ORA	A
 01A4 CADE01    	JZ	ERRXIT
 01A7 E5        	PUSH	H
 01A8 23        	INX	H
 01A9 7E        	MOV	A,M	;GET ENTRY ROUTINE ADDRESS LO-BYTE
 01AA FE11      	CPI	11H	;IF DRI'S BDOS IS RUNNING, IT WILL BE "11"
 01AC C2DE01    	JNZ	ERRXIT
 01AF E1        	POP	H
 01B0 2E00      	MVI	L,0
 01B2 2B        	DCX	H	;POINT TO LAST BYTE OF CCP (SYSTEM DRIVE DESIGNATOR)
 01B3 7E        	MOV	A,M
 01B4 FE11      	CPI	16+1
 01B6 D2DE01    	JNC	ERRXIT
 01B9 322503    	STA	SYSDRV	;SAVE CURRENT SYSTEM-DRIVE DESIGNATOR
 01BC 3EC3      	MVI	A,(JMP)
 01BE 322800    	STA	RST5
 01C1 211B03    	LXI	H,INT5
 01C4 222900    	SHLD	RST5+1
 01C7 DBF2      	IN	PORT
 01C9 0E7C      	MVI	C,07CH
 01CB E603      	ANI	11B
 01CD FE03      	CPI	11B
                	JRZ	RE0
 01CF+2815      	DB	28H,RE0-$-1
 01D1 0E78      	MVI	C,078H
 01D3 DBF2      	IN	PORT
 01D5 E60C      	ANI	1100B
 01D7 FE0C      	CPI	1100B
                	JRZ	RE0
 01D9+280B      	DB	28H,RE0-$-1
 01DB 115301    	LXI	D,SWERR
 01DE 0E09      ERRXIT: MVI	C,MSGOUT
 01E0 CD0500    	CALL	BDOS
 01E3 C30000    	JMP	CPM
 01E6 79        RE0:	MOV	A,C
 01E7 322403    	STA	PORTA
 01EA 0C        	INR	C
 01EB 0C        	INR	C
                	OUTP	A	;CAUSE NMI (SOFT RESET) IN 77422
 01EC+ED79      	DB	0EDH,A*8+41H
 01EE 0C        	INR	C
                	OUTP	A	;CAUSE PENDING INT IN 77422
 01EF+ED79      	DB	0EDH,A*8+41H
 01F1 0D        	DCR	C
 01F2 0D        	DCR	C
                RE1:	INP	A	;WAIT FOR INT TO BE ACKNOWLEDGED
 01F3+ED78      	DB	0EDH,A*8+40H
 01F5 E601      	ANI	0001B
 01F7 C2F301    	JNZ	RE1
 01FA CD7D02    	CALL	CLEAR422	;RUN-OUT ALL CHARACTERS WAITING TO BE TAKEN.
                	LXIX	MODULES ;(IX) = SPR MODULE ADDRESS (FIRST MODULE IS OS422)
 01FD+DD21      	DB	0DDH,21H
 01FF+0004      	DW	MODULES
 0201 CD9302    	CALL	GETLEN	;(BC) = LENGTH OF MODULE
                			;(IX) = ADDRESS OF MODULE (CODE)
                	SBCD	RBC
 0204+ED43      	DB	0EDH,43H
 0206+2903      	DW	RBC
 0208 210000    	LXI	H,0	;"TOP OF MEMORY" IN A 64K SYSTEM (77422'S SYSTEM)
 020B B7        	ORA	A
                	DSBC	B	;(HL) = EXECUTION ADDRESS OF OS422
 020C+ED42      	DB	0EDH,B*8+42H
 020E 222D03    	SHLD	RHL
 0211 EB        	XCHG		;(DE) =  ''
 0212 CD9C02    	CALL	RELOCATE	;RELOCATE MODULE.
                			;(IX) = NEXT SPR MODULE
 0215 3E60      	MVI	A,060H	;FUNCTION CODE FOR "EXECUTE MODULE"
 0217 322803    	STA	FUNC
 021A 212803    	LXI	H,FUNC
 021D 010700    	LXI	B,7
 0220 CDEE02    	CALL	PUT422	;SEND COMMAND
                	PUSHIY
 0223+FDE5      	DB	0FDH,0E5H
 0225 E1        	POP	H	;(HL) = CURRENT ADDRESS OF OS422
                	LBCD	RBC	;(BC) = LENGTH OF OS422
 0226+ED4B      	DB	0EDH,4BH
 0228+2903      	DW	RBC
 022A CDEE02    	CALL	PUT422	;SEND MODULE
                ; DONE WITH OS422, NOW DO CCP422
 022D CD9302    	CALL	GETLEN	;GET LENGTH OF CCP422
 0230 EB        	XCHG		;(HL) = EXECUTION ADDRESS OF OS422
 0231 B7        	ORA	A
                	DSBC	B	;(HL) = EXECUTION ADDRESS OF CCP422
 0232+ED42      	DB	0EDH,B*8+42H
 0234 EB        	XCHG
 0235 CD9C02    	CALL	RELOCATE	;RELOCATE CCP422
 0238 2A0600    	LHLD	BDOS+1
 023B 2E00      	MVI	L,0
 023D B7        	ORA	A
                	DSBC	B	;FIND ADDRESS TO STORE CCP422
 023E+ED42      	DB	0EDH,B*8+42H
 0240 E5        	PUSH	H	;SAVE CCP422 STORAGE ADDRESS
 0241 D5        	PUSH	D	;SAVE CCP422 EXECUTION ADDRESS
 0242 C5        	PUSH	B	;SAVE CCP422 SIZE
 0243 EB        	XCHG		;(DE) = CCP422 STORAGE ADDRESS
                	PUSHIY
 0244+FDE5      	DB	0FDH,0E5H
 0246 E1        	POP	H	;(HL) = CCP422 CURRENT ADDRESS
                	LDIR		;(BC) = CCP422 SIZE - PUT CCP422 INTO STORAGE
 0247+EDB0      	DB	0EDH,0B0H
 0249 1B        	DCX	D	;POINT TO LAST BYTE OF CCP (SYSTEM DRIVE DESIGNATOR)
 024A 3A2503    	LDA	SYSDRV
 024D 12        	STAX	D	;PUT SYSTEM DRIVE DESIGNATOR IN CCP422
                ; DONE WITH CCP422, DO OSZ89
 024E CD9302    	CALL	GETLEN	;(BC) = LENGTH OF OSZ89, (IX) = START OF OSZ89
 0251 E1        	POP	H
                	STX	L,+0	;
 0252+DD7500    	DB	0DDH,70H+L,+0
                	STX	H,+1	;SAVE CCP422 SIZE IN OSZ89+0,1
 0255+DD7401    	DB	0DDH,70H+H,+1
 0258 E1        	POP	H
                	STX	L,+2	;
 0259+DD7502    	DB	0DDH,70H+L,+2
                	STX	H,+3	;SAVE CCP422 EXEC ADDR IN OSZ89+2,3
 025C+DD7403    	DB	0DDH,70H+H,+3
 025F E1        	POP	H	;RESTORE CCP422 STORAGE ADDRESS
 0260 B7        	ORA	A
                	DSBC	B	;(HL) = OSZ89 EXECUTION ADDRESS
 0261+ED42      	DB	0EDH,B*8+42H
 0263 EB        	XCHG		;(DE) =  ''
 0264 CD9C02    	CALL	RELOCATE	;RELOCATE OSZ89
                	LDY	L,+4	;(IY) = ADDRESS OF MODULE
 0267+FD6E04    	DB	0FDH,L*8+46H,+4
                	LDY	H,+5	;(HL) = "CSTART" ADDRESS FROM OSZ89+4,5
 026A+FD6605    	DB	0FDH,H*8+46H,+5
 026D 222603    	SHLD	CSTART	;SAVE PROPERLY RELOCATED START-UP ADDRESS
                	PUSHIY
 0270+FDE5      	DB	0FDH,0E5H
 0272 E1        	POP	H	;(HL) = OSZ89 CURRENT ADDRESS
                	LDIR		;(BC) = OSZ89 LENGTH - PUT OSZ89 IN EXECUTABLE LOCATION
 0273+EDB0      	DB	0EDH,0B0H
                ;
 0275 3A2403    	LDA	PORTA	;GIVE SYSTEM PORT ADDRESS OF 77422 BOARD
 0278 4F        	MOV	C,A
 0279 2A2603    	LHLD	CSTART	;
 027C E9        	PCHL		;STARTUP CP/M-422
                
                
                *********************************************************************
                
                CLEAR422:		;THIS MUST BE A SUBROUTINE (CALL-RET).
 027D 219002    	LXI	H,JUNK	 ;IN CASE AN EOP INTERUPT OCCURS, REGISTER MUST BE
 0280 3A2403    	LDA	PORTA
 0283 4F        	MOV	C,A	 ;VALIDLY INITIALIZED
                CL0:	INP	A	;CLEAR 9517 IN CASE IT HAS AN EXTRANIOUS CHARACTER.
 0284+ED78      	DB	0EDH,A*8+40H
 0286 0C        	INR	C
                	INP	A	;IF THE DMA IS SETUP, WE MUST CLEAN IT OUT.
 0287+ED78      	DB	0EDH,A*8+40H
 0289 0D        	DCR	C
 028A E608      	ANI	1000B
 028C C28402    	JNZ	CL0
 028F C9        	RET
                
 0290 000000    JUNK:	DB	0,0,0	;SHOULD ONLY REQUIRE 1 BYTE, BUT TO BE SURE...
                
                GETLEN: 		;GET MODULE LENGTH (BYTES)
                			;(IX) = SPR MODULE ADDRESS
                	LDX	C,+1
 0293+DD4E01    	DB	0DDH,C*8+46H,+1
                	LDX	B,+2	;(BC) = MODULE LENGTH (BYTES)
 0296+DD4602    	DB	0DDH,B*8+46H,+2
 0299 DD        	DB 0DDH ;
 029A 24        	INR H	;;;;;;;;;INR IXH      ;MODULE STARTS AT +100H
 029B C9        	RET		;(IX) = ADDRESS OF MODULE
                
                RELOCATE:		;(IX) = ADDRESS OF MODULE
                			;(DE) = DESTINATION ADDRESS (RELOCATION BASE)
                			;(BC) = MODULE SIZE (BYTES)
                	PUSHIX		;SAVE ADDRESS OF MODULE FOR RETURN FROM ROUTINE
 029C+DDE5      	DB	0DDH,0E5H
                	PUSHIX
 029E+DDE5      	DB	0DDH,0E5H
                	POPIY		;(IY) = ADDRESS OF MODULE
 02A0+FDE1      	DB	0FDH,0E1H
                	DADX	B	;(IX) = ADDRESS OF BIT MAP
 02A2+DD09      	DB	0DDH,B*8+09H
 02A4 C5        	PUSH	B	;SAVE MODULE SIZE FOR RETRUN FROM ROUTINE
                	DCXIX
 02A5+DD2B      	DB	0DDH,2BH
                	LDX	A,+0	;"PRIME" A' REGISTER
 02A7+DD7E00    	DB	0DDH,A*8+46H,+0
                	EXAF
 02AA+08        	DB	08H
 02AB 79        RELOC:	MOV	A,C
 02AC B0        	ORA	B	;CHECK IF THERE ARE NO MORE BYTE TO RELOCATE
 02AD CAD402    	JZ	DONE
 02B0 79        	MOV	A,C	;
 02B1 0B        	DCX	B	;COUNT ONE BYTE
 02B2 E607      	ANI	00000111B	;CHECK IF ON 8TH BYTE
 02B4 C2C102    	JNZ	NOSTEP	;IF AT 8TH BYTE, STEP TO NEXT BITMAP BYTE
                	EXAF		;THIS SEQUENCE MAINTAINS INTEGRITY OF BITMAP
 02B7+08        	DB	08H
                	STX	A,+0
 02B8+DD7700    	DB	0DDH,70H+A,+0
                	INXIX		;WHILE SELECTING NEXT ELEMENT
 02BB+DD23      	DB	0DDH,23H
                	LDX	A,+0
 02BD+DD7E00    	DB	0DDH,A*8+46H,+0
                	EXAF
 02C0+08        	DB	08H
                NOSTEP: RALX	+0	;TEST CURRENT BIT IN MAP
 02C1+DDCB0016  	DB	0DDH, 0CBH, +0, 16H
 02C5 D2CF02    	JNC	NOREL	;DON'T RELOCATE IF ZERO
                	LDY	A,+0	;GET HI-BYTE OF ADDRESS TO RELOCATE
 02C8+FD7E00    	DB	0FDH,A*8+46H,+0
 02CB 82        	ADD	D	;PAGE-RELOCATE ADDRESS
                	STY	A,+0	;STORE BACK IN MODULE
 02CC+FD7700    	DB	0FDH,70H+A,+0
                NOREL:	INXIY
 02CF+FD23      	DB	0FDH,23H
 02D1 C3AB02    	JMP	RELOC	;CONTINUE UNTILL FINISHED...
                DONE:	EXAF
 02D4+08        	DB	08H
                	STX	A,+0	;RESTORE LAST ELEMENT OF BITMAP
 02D5+DD7700    	DB	0DDH,70H+A,+0
                	INXIX		;(IX) = LAST BYTE OF BIT MAP +1
 02D8+DD23      	DB	0DDH,23H
 02DA DD        	DB 0DDH ;
 02DB 7D        	MOV A,L ;;;;;;;;;MOV A,IXL
 02DC C67F      	ADI	01111111B
 02DE F5        	PUSH	PSW	;SAVE CARRY
 02DF E680      	ANI	10000000B	;ROUND UP TO NEXT 128-BYTE BOUNDARY
 02E1 DD        	DB 0DDH ;
 02E2 6F        	MOV L,A ;;;;;;;;;MOV IXL,A
 02E3 F1        	POP	PSW	;RESTORE CARRY
 02E4 3E00      	MVI	A,0
 02E6 DD        	DB 0DDH ;
 02E7 8C        	ADC H	;;;;;;;;;ADC IXH
 02E8 DD        	DB 0DDH ;
 02E9 67        	MOV H,A ;;;;;;;;;MOV IXH,A
                			;(IX) = START OF NEXT SPR MODULE
                			;(DE) = RELOCATION BASE (UNCHANGED SINCE ENTRY)
 02EA C1        	POP	B	;(BC) = LENGTH OF MODULE
                	POPIY		;(IY) = ADDRESS OF MODULE
 02EB+FDE1      	DB	0FDH,0E1H
 02ED C9        	RET
                
                ; BYTE COUNT (BC) MUST BE GREATER THAN 1.
 02EE 79        PUT422: MOV	A,C	;MUST HANDLE BLOCKS LARGER THAN 256 BYTES
 02EF B7        	ORA	A	;(Z80 OUTIR/INIR CANNOT)
 02F0 58        	MOV	E,B
 02F1 CAF502    	JZ	PU3
 02F4 1C        	INR	E
 02F5 41        PU3:	MOV	B,C
 02F6 3A2403    	LDA	PORTA
 02F9 4F        	MOV	C,A
 02FA 0C        	INR	C
                PU0:	INP	A
 02FB+ED78      	DB	0EDH,A*8+40H
 02FD E604      	ANI	0100B	;CHECK CHANNEL 2 FOR IDLE
 02FF CAFB02    	JZ	PU0
 0302 0D        	DCR	C
 0303 7E        	MOV	A,M	;SEND FIRST BYTE
 0304 23        	INX	H
                	OUTP	A
 0305+ED79      	DB	0EDH,A*8+41H
 0307 0C        	INR	C
                PU1:	INP	A
 0308+ED78      	DB	0EDH,A*8+40H
 030A E604      	ANI	0100B
 030C CA0803    	JZ	PU1
 030F 0D        	DCR	C
 0310 05        	DCR	B
 0311 CA1603    	JZ	PU4
                PU2:	OUTIR
 0314+EDB3      	DB	0EDH,0B3H
 0316 1D        PU4:	DCR	E
 0317 C21403    	JNZ	PU2
 031A C9        	RET
                
 031B 0C        INT5:	INR	C
                	OUTP	A	;THIS ROUTINE WILL USUALLY TERMINATE "GET422".
 031C+ED79      	DB	0EDH,A*8+41H
 031E 0D        	DCR	C
                	INI		;GET LAST BYTE OF TRANSFER.
 031F+EDA2      	DB	0EDH,0A2H
 0321 C1        	POP	B	;DISCARD INTERUPT RETURN ADDRESS.
 0322 FB        	EI
 0323 C9        	RET		;AND RETURN TO CALLER.
                
 0324 00        PORTA:	DB	0
 0325 00        SYSDRV: DB	0
 0326 0000      CSTART: DW	0
                
 0328 00        FUNC:	DB	0	;FUNCTION CODE "E1"
 0329 0000      RBC:	DW	0	;MODULE SIZE (BYTES)
 032B 0000      RDE:	DW	0	;
 032D 0000      RHL:	DW	0	;MODULE LOAD/EXECUTION ADDRESS
                
 032F           	DS	0	;PRINTS ADDRESS ON LISTING (ONLY FUNCTION)
                
 002F #         @@ SET (($-BEGIN) AND 0FFH)
                 IF @@ NE 0
                 REPT 100H-@@
                 DB 0
                 ENDM
 032F+00         DB 0
 0330+00         DB 0
 0331+00         DB 0
 0332+00         DB 0
 0333+00         DB 0
 0334+00         DB 0
 0335+00         DB 0
 0336+00         DB 0
 0337+00         DB 0
 0338+00         DB 0
 0339+00         DB 0
 033A+00         DB 0
 033B+00         DB 0
 033C+00         DB 0
 033D+00         DB 0
 033E+00         DB 0
 033F+00         DB 0
 0340+00         DB 0
 0341+00         DB 0
 0342+00         DB 0
 0343+00         DB 0
 0344+00         DB 0
 0345+00         DB 0
 0346+00         DB 0
 0347+00         DB 0
 0348+00         DB 0
 0349+00         DB 0
 034A+00         DB 0
 034B+00         DB 0
 034C+00         DB 0
 034D+00         DB 0
 034E+00         DB 0
 034F+00         DB 0
 0350+00         DB 0
 0351+00         DB 0
 0352+00         DB 0
 0353+00         DB 0
 0354+00         DB 0
 0355+00         DB 0
 0356+00         DB 0
 0357+00         DB 0
 0358+00         DB 0
 0359+00         DB 0
 035A+00         DB 0
 035B+00         DB 0
 035C+00         DB 0
 035D+00         DB 0
 035E+00         DB 0
 035F+00         DB 0
 0360+00         DB 0
 0361+00         DB 0
 0362+00         DB 0
 0363+00         DB 0
 0364+00         DB 0
 0365+00         DB 0
 0366+00         DB 0
 0367+00         DB 0
 0368+00         DB 0
 0369+00         DB 0
 036A+00         DB 0
 036B+00         DB 0
 036C+00         DB 0
 036D+00         DB 0
 036E+00         DB 0
 036F+00         DB 0
 0370+00         DB 0
 0371+00         DB 0
 0372+00         DB 0
 0373+00         DB 0
 0374+00         DB 0
 0375+00         DB 0
 0376+00         DB 0
 0377+00         DB 0
 0378+00         DB 0
 0379+00         DB 0
 037A+00         DB 0
 037B+00         DB 0
 037C+00         DB 0
 037D+00         DB 0
 037E+00         DB 0
 037F+00         DB 0
 0380+00         DB 0
 0381+00         DB 0
 0382+00         DB 0
 0383+00         DB 0
 0384+00         DB 0
 0385+00         DB 0
 0386+00         DB 0
 0387+00         DB 0
 0388+00         DB 0
 0389+00         DB 0
 038A+00         DB 0
 038B+00         DB 0
 038C+00         DB 0
 038D+00         DB 0
 038E+00         DB 0
 038F+00         DB 0
 0390+00         DB 0
 0391+00         DB 0
 0392+00         DB 0
 0393+00         DB 0
 0394+00         DB 0
 0395+00         DB 0
 0396+00         DB 0
 0397+00         DB 0
 0398+00         DB 0
 0399+00         DB 0
 039A+00         DB 0
 039B+00         DB 0
 039C+00         DB 0
 039D+00         DB 0
 039E+00         DB 0
 039F+00         DB 0
 03A0+00         DB 0
 03A1+00         DB 0
 03A2+00         DB 0
 03A3+00         DB 0
 03A4+00         DB 0
 03A5+00         DB 0
 03A6+00         DB 0
 03A7+00         DB 0
 03A8+00         DB 0
 03A9+00         DB 0
 03AA+00         DB 0
 03AB+00         DB 0
 03AC+00         DB 0
 03AD+00         DB 0
 03AE+00         DB 0
 03AF+00         DB 0
 03B0+00         DB 0
 03B1+00         DB 0
 03B2+00         DB 0
 03B3+00         DB 0
 03B4+00         DB 0
 03B5+00         DB 0
 03B6+00         DB 0
 03B7+00         DB 0
 03B8+00         DB 0
 03B9+00         DB 0
 03BA+00         DB 0
 03BB+00         DB 0
 03BC+00         DB 0
 03BD+00         DB 0
 03BE+00         DB 0
 03BF+00         DB 0
 03C0+00         DB 0
 03C1+00         DB 0
 03C2+00         DB 0
 03C3+00         DB 0
 03C4+00         DB 0
 03C5+00         DB 0
 03C6+00         DB 0
 03C7+00         DB 0
 03C8+00         DB 0
 03C9+00         DB 0
 03CA+00         DB 0
 03CB+00         DB 0
 03CC+00         DB 0
 03CD+00         DB 0
 03CE+00         DB 0
 03CF+00         DB 0
 03D0+00         DB 0
 03D1+00         DB 0
 03D2+00         DB 0
 03D3+00         DB 0
 03D4+00         DB 0
 03D5+00         DB 0
 03D6+00         DB 0
 03D7+00         DB 0
 03D8+00         DB 0
 03D9+00         DB 0
 03DA+00         DB 0
 03DB+00         DB 0
 03DC+00         DB 0
 03DD+00         DB 0
 03DE+00         DB 0
 03DF+00         DB 0
 03E0+00         DB 0
 03E1+00         DB 0
 03E2+00         DB 0
 03E3+00         DB 0
 03E4+00         DB 0
 03E5+00         DB 0
 03E6+00         DB 0
 03E7+00         DB 0
 03E8+00         DB 0
 03E9+00         DB 0
 03EA+00         DB 0
 03EB+00         DB 0
 03EC+00         DB 0
 03ED+00         DB 0
 03EE+00         DB 0
 03EF+00         DB 0
 03F0+00         DB 0
 03F1+00         DB 0
 03F2+00         DB 0
 03F3+00         DB 0
 03F4+00         DB 0
 03F5+00         DB 0
 03F6+00         DB 0
 03F7+00         DB 0
 03F8+00         DB 0
 03F9+00         DB 0
 03FA+00         DB 0
 03FB+00         DB 0
 03FC+00         DB 0
 03FD+00         DB 0
 03FE+00         DB 0
 03FF+00         DB 0
                 ENDIF
                
 0400           MODULES: END
