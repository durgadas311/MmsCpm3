 2031 =         vers equ '1 ' ; Sep 28, 2017  17:06   drm "RTC72421.ASM"
                ;****************************************************************
                ; RTC (Time) BIOS module for CP/M 3 (CP/M plus),		*
                ; Copyright (c) 2017 Douglas Miller <durgadas311@gmail.com>	*
                ;****************************************************************
                	maclib Z80
                
 FFFF =         true	equ -1
 0000 =         false	equ not true
                
 000D =         cr	equ 13
 000A =         lf	equ 10
 0007 =         bell	equ 7
                
 1F63 =         epoch2k	equ	8035	; CP/M date for Jan 1 2000.
 00A0 =         rtc	equ	0a0h	; standard port address
                
                	extrn @cbnk
                	extrn ?bnksl
                	extrn sysdat
                
                	public ?time,?itime,@rtcstr
                
                	dseg	; common memory, available no matter which bank
                
 0000 3732343231@rtcstr: db	'72421 ',0,'RTC Driver ',0,'v3.00'
 0018 3120      	dw	vers
 001A 24        	db	'$'
                
                ; C=0 GET TIME (BDOS is about to read SCB), else SET TIME (BDOS just updated SCB)
                ; Typically, only C1=0 (SET) is used, to update the RTC chip.
                ; Cold Boot will call ?itime to force read of RTC chip.
                ; Must preserve HL, DE. Must be called with intrs enabled.
                ; Cannot depend on Bank 0 on entry...
                ?time:
 001B 79        	mov	a,c
 001C B7        	ora	a
 001D C8        	rz	; we keep time ourselves, not in RTC
                	; setting new time...
 001E 3A0000    	lda	@cbnk
 0021 322F00    	sta	savbnk
 0024 F3        	di
 0025 AF        	xra	a
 0026 CD0000    	call	?bnksl
                	sspd	savsp
 0029+ED73      	DB	0EDH,73H
 002B+2D00      	DW	SAVSP
 002D 312D00    	lxi	sp,stack
 0030 FB        	ei	; TODO: bother with this?
 0031 CD3200    	call	settm
 0034 F3        	di
 0035 3A2F00    	lda	savbnk
 0038 CD0000    	call	?bnksl
                	lspd	savsp
 003B+ED7B      	DB	0EDH,07BH
 003D+2D00      	DW	SAVSP
 003F FB        	ei
 0040 C9        	ret	;
                
                	cseg	; this part can be banked
                
 0000 0000000000regs:	db	0,0,0,0,0,0,0,0,0,0,0,0,0
                
 000D           	ds	32
 002D           stack:	ds	0
 002D 0000      savsp:	dw	0
 002F 00        savbnk:	db	0
 0030 0000      todptr:	dw	0
                
                ; This also must initialize the entire chip
 0032 E5        settm:	push	h
 0033 D5        	push	d
 0034 C5        	push	b
                	pushiy
 0035+FDE5      	DB	0FDH,0E5H
                	liyd	todptr
 0037+FD2A      	DB	0FDH,2AH
 0039+3000      	DW	TODPTR
 003B 210000    	lxi	h,regs
                	ldy	a,+4	; seconds
 003E+FD7E04    	DB	0FDH,A*8+46H,+4
 0041 CD5501    	call	stbcd
                	ldy	a,+3	; minutes
 0044+FD7E03    	DB	0FDH,A*8+46H,+3
 0047 CD5501    	call	stbcd
                	ldy	a,+2	; hours
 004A+FD7E02    	DB	0FDH,A*8+46H,+2
 004D CD5501    	call	stbcd
 0050 E5        	push	h
                	ldy	e,+0	; date
 0051+FD5E00    	DB	0FDH,E*8+46H,+0
                	ldy	d,+1
 0054+FD5601    	DB	0FDH,D*8+46H,+1
 0057 CD8B01    	call	dt2mdy
                	; A=dom, E=month, D=year(BCD)
 005A E1        	pop	h
 005B CD4001    	call	stbin
 005E 7B        	mov	a,e
 005F CD4001    	call	stbin
 0062 7A        	mov	a,d
 0063 CD5501    	call	stbcd
 0066 E5        	push	h
                	ldy	l,+0	; date
 0067+FD6E00    	DB	0FDH,L*8+46H,+0
                	ldy	h,+1
 006A+FD6601    	DB	0FDH,H*8+46H,+1
 006D CD6401    	call	weekdy
 0070 E1        	pop	h
 0071 77        	mov	m,a
 0072 AF        	xra	a
 0073 D3AD      	out	rtc+13
 0075 D3AE      	out	rtc+14
 0077 3E04      	mvi	a,0100b	; 24-hour format
 0079 D3AF      	out	rtc+15
 007B CD1301    	call	hold
 007E 210000    	lxi	h,regs
 0081 0E9F      	mvi	c,rtc-1
 0083 060D      	mvi	b,13
 0085 0C        settm0:	inr	c
                	outi
 0086+EDA3      	DB	0EDH,0A3H
                	jrnz	settm0
 0088+20FB      	DB	20H,SETTM0-$-1
 008A CD2401    	call	unhold
                	popiy
 008D+FDE1      	DB	0FDH,0E1H
 008F C1        	pop	b
 0090 D1        	pop	d
 0091 E1        	pop	h
 0092 C9        	ret
                
                ?itime:	; initialize RTC and get time
 0093 2A0000    	lhld	sysdat
 0096 2EFC      	mvi	l,0fch
 0098 5E        	mov	e,m	;XDOS int.dat.page, also TOD
 0099 23        	inx	h
 009A 56        	mov	d,m
 009B EB        	xchg
 009C 223000    	shld	todptr
 009F E5        	push	h
                	popiy
 00A0+FDE1      	DB	0FDH,0E1H
 00A2 DBAF      	in	rtc+15
 00A4 F604      	ori	00000100b ; 24-hour format
 00A6 D3AF      	out	rtc+15
                	; more to init?
 00A8 CD1301    	call	hold
 00AB 210000    	lxi	h,regs
 00AE 0E9F      	mvi	c,rtc-1
 00B0 060C      	mvi	b,12
 00B2 0C        gettm0:	inr	c
                	inp	a
 00B3+ED78      	DB	0EDH,A*8+40H
 00B5 E60F      	ani	0fh
 00B7 77        	mov	m,a
 00B8 23        	inx	h
                	djnz	gettm0
 00B9+10F7      	DB	10H,GETTM0-$-1
 00BB CD2401    	call	unhold
 00BE 210000    	lxi	h,regs
 00C1 CD3601    	call	gtbcd
                	sty	a,+4	; set seconds
 00C4+FD7704    	DB	0FDH,70H+A,+4
 00C7 CD3601    	call	gtbcd
                	sty	a,+3	; set minutes
 00CA+FD7703    	DB	0FDH,70H+A,+3
 00CD CD3601    	call	gtbcd
                	sty	a,+2	; set hours
 00D0+FD7702    	DB	0FDH,70H+A,+2
 00D3 CD2B01    	call	gtbin	; day of month
 00D6 5F        	mov	e,a
 00D7 CD2B01    	call	gtbin	; month (1-12)
 00DA 3D        	dcr	a	; 0-11
 00DB 87        	add	a	; * 2 for table lookup
 00DC 57        	mov	d,a
                	; assume RTC is never set for 20th cetnury...
                	; i.e. year is always 20xx.
 00DD CD2B01    	call	gtbin	; year (century)
 00E0 47        	mov	b,a
 00E1 4F        	mov	c,a
 00E2 0D        	dcr	c	; could be -1
                	srar	c	;
 00E3+CB29      	DB	0CBH, 28H+C
                	srar	c	;
 00E5+CB29      	DB	0CBH, 28H+C
 00E7 0C        	inr	c	; C=number of leap years before
 00E8 E603      	ani	00000011b	; check leap year
 00EA 21D901    	lxi	h,month0
                	jrnz	gettm2
 00ED+2003      	DB	20H,GETTM2-$-1
 00EF 21F101    	lxi	h,month1
                gettm2:	
 00F2 D5        	push	d	; save day of month
 00F3 5A        	mov	e,d
 00F4 1600      	mvi	d,0
 00F6 19        	dad	d
 00F7 7E        	mov	a,m
 00F8 23        	inx	h
 00F9 66        	mov	h,m
 00FA 6F        	mov	l,a	; number of days before this month
 00FB E5        	push	h	; save current month offset
 00FC 21631F    	lxi	h,epoch2k
 00FF 116D01    	lxi	d,365
 0102 19        gettm1:	dad	d
                	djnz	gettm1
 0103+10FD      	DB	10H,GETTM1-$-1
 0105 09        	dad	b	; add leap years (B=0 now)
 0106 C1        	pop	b	; current month offset
 0107 09        	dad	b
 0108 C1        	pop	b	; day of month
 0109 0600      	mvi	b,0	;
 010B 09        	dad	b
                	sty	l,+0	; set date...
 010C+FD7500    	DB	0FDH,70H+L,+0
                	sty	h,+1	;
 010F+FD7401    	DB	0FDH,70H+H,+1
 0112 C9        	ret
                
 0113 DBAD      hold:	in	rtc+13
 0115 F601      	ori	0001b	; HOLD
 0117 D3AD      	out	rtc+13
 0119 DBAD      	in	rtc+13
 011B E602      	ani	0010b	; BUSY
 011D C8        	rz
 011E E60E      	ani	00001110b
 0120 D3AD      	out	rtc+13
                	; TODO: pause?
                	jr	hold
 0122+18EF      	DB	18H,HOLD-$-1
                
 0124 DBAD      unhold:	in	rtc+13
 0126 E6FE      	ani	11111110b
 0128 D3AD      	out	rtc+13
 012A C9        	ret
                
                ; Get (BCD digit) value from regs[] in binary
 012B 46        gtbin:	mov	b,m	; assume no masking required
 012C 23        	inx	h
 012D 7E        	mov	a,m	; MSD
 012E 23        	inx	h
 012F 87        	add	a	; X * 2
 0130 4F        	mov	c,a
 0131 87        	add	a
 0132 87        	add	a	; X * 8
 0133 81        	add	c	; (X * 8 + X * 2) = X * 10
 0134 80        	add	b	; + LSD
 0135 C9        	ret
                
                ; Get (BCD digit) value from regs[] in BCD
 0136 46        gtbcd:	mov	b,m	; assume no masking required
 0137 23        	inx	h
 0138 7E        	mov	a,m
 0139 23        	inx	h
 013A 87        	add	a
 013B 87        	add	a
 013C 87        	add	a
 013D 87        	add	a
 013E 80        	add	b
 013F C9        	ret
                
                ; store binary value into (BCD) digit registers
 0140 D664      stbin:	sui	100
                	jrnc	stbin
 0142+30FC      	DB	30H,STBIN-$-1
 0144 C664      	adi	100
 0146 0E00      	mvi	c,0
 0148 D60A      stbin0:	sui	10
 014A 0C        	inr	c
                	jrnc	stbin0
 014B+30FB      	DB	30H,STBIN0-$-1
 014D C60A      	adi	10
 014F 0D        	dcr	c
 0150 77        	mov	m,a
 0151 23        	inx	h
 0152 71        	mov	m,c
 0153 23        	inx	h
 0154 C9        	ret
                
                ; store BCD value into (BCD) digit registers
 0155 47        stbcd:	mov	b,a
 0156 E60F      	ani	0fh
 0158 77        	mov	m,a
 0159 23        	inx	h
 015A 78        	mov	a,b
 015B 0F        	rrc
 015C 0F        	rrc
 015D 0F        	rrc
 015E 0F        	rrc
 015F E60F      	ani	0fh
 0161 77        	mov	m,a
 0162 23        	inx	h
 0163 C9        	ret
                
                ; HL=CP/M date value (days since epoch)
                ; From DATE.PLM: week$day = (word$value + base$day - 1) mod 7;
                ;                base$day  lit '0',
 0164 2B        weekdy:	dcx	h	; 1/1/78 is "0" (Sun), -1 for offset
 0165 11581B    	lxi	d,7000
 0168 B7        	ora	a
                wd0:	dsbc	d
 0169+ED52      	DB	0EDH,D*8+42H
                	jrnc	wd0
 016B+30FC      	DB	30H,WD0-$-1
 016D 19        	dad	d
 016E 11BC02    	lxi	d,700
 0171 B7        	ora	a
                wd1:	dsbc	d
 0172+ED52      	DB	0EDH,D*8+42H
                	jrnc	wd1
 0174+30FC      	DB	30H,WD1-$-1
 0176 19        	dad	d
 0177 114600    	lxi	d,70
 017A B7        	ora	a
                wd2:	dsbc	d
 017B+ED52      	DB	0EDH,D*8+42H
                	jrnc	wd2
 017D+30FC      	DB	30H,WD2-$-1
 017F 19        	dad	d
 0180 110700    	lxi	d,7
 0183 B7        	ora	a
                wd3:	dsbc	d
 0184+ED52      	DB	0EDH,D*8+42H
                	jrnc	wd3
 0186+30FC      	DB	30H,WD3-$-1
 0188 19        	dad	d
 0189 7D        	mov	a,l
 018A C9        	ret
                
                ; DE=CP/M date value (days since epoch)
 018B 0E4E      dt2mdy:	mvi	c,78	; Epoch year, binary
 018D 0678      	mvi	b,078h	; Epoch year, BCD
 018F 7B        	mov	a,e
 0190 B2        	ora	d
                	jrnz	d2mdy0
 0191+2001      	DB	20H,D2MDY0-$-1
 0193 13        	inx	d
 0194 216D01    d2mdy0:	lxi	h,365
 0197 79        	mov	a,c
 0198 E603      	ani	03h	; Not strictly true, but works until year 2100...
                	jrnz	d2mdy1
 019A+2001      	DB	20H,D2MDY1-$-1
 019C 23        	inx	h
 019D E5        d2mdy1:	push	h
 019E B7        	ora	a
                	dsbc	d
 019F+ED52      	DB	0EDH,D*8+42H
 01A1 E1        	pop	h
                	jrnc	d2mdy2	; done computing year...
 01A2+300D      	DB	30H,D2MDY2-$-1
 01A4 EB        	xchg
 01A5 B7        	ora	a
                	dsbc	d
 01A6+ED52      	DB	0EDH,D*8+42H
 01A8 EB        	xchg
 01A9 0C        	inr	c	; does not wrap at 100
 01AA 78        	mov	a,b
 01AB C601      	adi	1
 01AD 27        	daa
 01AE 47        	mov	b,a
                	jr	d2mdy0
 01AF+18E3      	DB	18H,D2MDY0-$-1
 01B1 C5        d2mdy2:	push	b	; DE = days within year 'C'
 01B2 21F101    	lxi	h,month0+24
 01B5 79        	mov	a,c
 01B6 E603      	ani	03h
                	jrnz	d2mdy3
 01B8+2003      	DB	20H,D2MDY3-$-1
 01BA 210902    	lxi	h,month1+24
 01BD 060C      d2mdy3:	mvi	b,12
 01BF 2B        d2mdy4:	dcx	h
 01C0 2B        	dcx	h
 01C1 05        	dcr	b
 01C2 FAD301    	jm	d2mdy5
 01C5 E5        	push	h
 01C6 D5        	push	d
 01C7 7E        	mov	a,m
 01C8 23        	inx	h
 01C9 66        	mov	h,m
 01CA 6F        	mov	l,a
                	; DE = days in year, HL = ytd[month]
 01CB B7        	ora	a
                	dsbc	d
 01CC+ED52      	DB	0EDH,D*8+42H
 01CE 7D        	mov	a,l	; potential remainder (neg)
 01CF D1        	pop	d
 01D0 E1        	pop	h
                	jrnc	d2mdy4
 01D1+30EC      	DB	30H,D2MDY4-$-1
                d2mdy5:	neg	; B = month, 0-11; A = -dom
 01D3+ED44      	DB	0EDH,44H
 01D5 D1        	pop	d	; D=year (BCD)
 01D6 04        	inr	b	; month (1-12)
 01D7 58        	mov	e,b	; E=month
 01D8 C9        	ret		; A=dom
                
                ;               J   F   M   A   M   J   J   A   S   O   N   D
 01D9 00001F003Bmonth0: dw       0, 31, 59, 90,120,151,181,212,243,273,304,334
 01F1 00001F003Cmonth1: dw       0, 31, 60, 91,121,152,182,213,244,274,305,335
                
 0209           	end
