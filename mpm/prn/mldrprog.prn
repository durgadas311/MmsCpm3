                ; MPMLDR program code
                ; Linked with ldrbdos,ldrbios,ldrXXX (disk driver XXX).
                ; Re-written from mpmldr.plm using CP/M3 ldrprog.asm
                ; and uses Z80 instructions.
                
                	maclib	z80
                
                	public	loader
                	extrn	bdos
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0009 =         TAB	equ	9
 0008 =         BS	equ	8
 0007 =         BEL	equ	7
 007F =         DEL	equ	127
                
 0002 =         conout	equ	2
 0009 =         print	equ	9
 000D =         reset	equ	13
 000F =         open	equ	15
 0014 =         read	equ	20
 001A =         setdma	equ	26
                
                	cseg
 0100           	org	0100h	; shouldn't be here, but for backward compat
                loader:
 0100 C32E01    	jmp	start
                
 0103 434F505952	db	'COPYRIGHT (C) 1981, DIGITAL RESEARCH '
 0128 3635343332	db	'654321'	; space for s/n
                
                start:
                	; usage: MPMLDR [$B] [sys-file]
                	; TODO: implement debug break?
                	; TODO: implement alternate MPM.SYS filename?
 012E 0E0D      	mvi	c,reset
 0130 CD0000    	call	bdos
 0133 11B405    	lxi	d,signon
 0136 0E09      	mvi	c,print
 0138 CD0000    	call	bdos
 013B 0E0F      	mvi	c,open
 013D 119005    	lxi	d,mpmsys
 0140 CD0000    	call	bdos
 0143 FEFF      	cpi	0ffh
 0145 11F505    	lxi	d,fnfmsg
 0148 CA4902    	jz	die
 014B 118706    	lxi	d,sysbuf
 014E CD3602    	call	st$dma
 0151 CD3C02    	call	rd$file	; load first of system data
 0154 110707    	lxi	d,sysbuf+128
 0157 CD3602    	call	st$dma
 015A CD3C02    	call	rd$file	; load rest of system data
                
 015D 3A8706    	lda	sysbuf+0	; mem$top
 0160 67        	mov	h,a
 0161 2E00      	mvi	l,0
 0163 22A404    	shld	sysdat
 0166 22A604    	shld	cur$top
 0169 113906    	lxi	d,msg1
 016C 0E09      	mvi	c,print
 016E CD0000    	call	bdos
 0171 3A8806    	lda	sysbuf+1	; nmb$cns
 0174 CD7A02    	call	printnib
 0177 115306    	lxi	d,msg2
 017A 0E09      	mvi	c,print
 017C CD0000    	call	bdos
 017F 3A8906    	lda	sysbuf+2	; brkpt$RST
 0182 CD7A02    	call	printnib
 0185 116D06    	lxi	d,msg3
 0188 0E09      	mvi	c,print
 018A CD0000    	call	bdos
 018D 21D004    	lxi	h,syst$dat
                	lded	cur$top
 0190+ED5B      	DB	0EDH,5BH
 0192+A604      	DW	CUR$TOP
 0194 010001    	lxi	b,256
 0197 CDBB02    	call	printitems
 019A 3A8806    	lda	sysbuf+1	; nmb$cns
 019D 3D        	dcr	a
 019E B7        	ora	a
 019F 1F        	rar
 01A0 B7        	ora	a
 01A1 1F        	rar
 01A2 3C        	inr	a
 01A3 67        	mov	h,a
 01A4 2E00      	mvi	l,0
 01A6 22A804    	shld	prev$top
 01A9 EB        	xchg
 01AA 2AA604    	lhld	cur$top
 01AD B7        	ora	a
                	dsbc	d
 01AE+ED52      	DB	0EDH,D*8+42H
 01B0 22A604    	shld	cur$top
 01B3 EB        	xchg
 01B4 21DB04    	lxi	h,tmpd$dat
                	lbcd	prev$top
 01B7+ED4B      	DB	0EDH,4BH
 01B9+A804      	DW	PREV$TOP
 01BB CDBB02    	call	printitems
 01BE 3A8A06    	lda	sysbuf+3	; sys$call$stks
 01C1 B7        	ora	a
                	jrz	mldr0
 01C2+2825      	DB	28H,MLDR0-$-1
 01C4 3A9606    	lda	sysbuf+15	; nmb$mem$seg
 01C7 D602      	sui	2
 01C9 E6FC      	ani	11111100b
 01CB 0F        	rrc
 01CC 0F        	rrc
 01CD 3C        	inr	a
 01CE 67        	mov	h,a
 01CF 2E00      	mvi	l,0
 01D1 22A804    	shld	prev$top
 01D4 EB        	xchg
 01D5 2AA604    	lhld	cur$top
 01D8 B7        	ora	a
                	dsbc	d
 01D9+ED52      	DB	0EDH,D*8+42H
 01DB 22A604    	shld	cur$top	; cur$top = cur$top - (prev$top := (shr(nmb$mem$seg-2,2)+1)*256);
 01DE EB        	xchg
 01DF 21E604    	lxi	h,usrs$stk
                	lbcd	prev$top
 01E2+ED4B      	DB	0EDH,4BH
 01E4+A804      	DW	PREV$TOP
 01E6 CDBB02    	call	printitems
                mldr0:
                	; load from sysdat downward...
 01E9 2AA404    	lhld	sysdat
 01EC 22A604    	shld	cur$top
 01EF 210100    	lxi	h,2-1
                loop:
 01F2 23        	inx	h
 01F3 22AA04    	shld	cur$record
                	lded	sysbuf+120	; nmb$records
 01F6+ED5B      	DB	0EDH,5BH
 01F8+FF06      	DW	SYSBUF+120
 01FA B7        	ora	a
                	dsbc	d
 01FB+ED52      	DB	0EDH,D*8+42H
 01FD CA1702    	jz	break
 0200 2AA604    	lhld	cur$top
 0203 1180FF    	lxi	d,-128
 0206 19        	dad	d
 0207 22A604    	shld	cur$top
 020A EB        	xchg
 020B CD3602    	call	st$dma
 020E CD3C02    	call	rd$file
 0211 2AAA04    	lhld	cur$record
 0214 C3F201    	jmp	loop
                break:
                	; done loading system...
 0217 3A9206    	lda	sysbuf+11	; xdos$base
 021A 67        	mov	h,a
 021B 2E00      	mvi	l,0
 021D 22AC04    	shld	entry$point
                
 0220 CDCB02    	call	display$OS
 0223 CDB503    	call	display$mem$map
 0226 218706    	lxi	h,sysbuf
                	lded	sysdat
 0229+ED5B      	DB	0EDH,5BH
 022B+A404      	DW	SYSDAT
 022D 010001    	lxi	b,256
                	ldir
 0230+EDB0      	DB	0EDH,0B0H
                	; exec MP/M... TODO: setup a minimal stack?
 0232 2AAC04    	lhld	entry$point
 0235 E9        	pchl
                
                st$dma:
 0236 0E1A      	mvi	c,setdma
 0238 CD0000    	call	bdos
 023B C9        	ret
                
                rd$file:
 023C 0E14      	mvi	c,read
 023E 119005    	lxi	d,mpmsys
 0241 CD0000    	call	bdos
 0244 B7        	ora	a
 0245 111806    	lxi	d,rdemsg
 0248 C8        	rz	
                	; fall-through to die()
                die:
 0249 0E09      	mvi	c,print
 024B CD0000    	call	bdos
 024E F3        	di
 024F 76        	hlt
                
                ; Print A in decimal
                printdecimal:
 0250 1664      	mvi	d,100
 0252 CD5F02    	call	divide
 0255 160A      	mvi	d,10
 0257 CD5F02    	call	divide
 025A C630      	adi	'0'
 025C C38202    	jmp	chrout
                
                ; (8-bit) Divide A by D, prints quotient digit
                ; Returns A=remainder
 025F 1E00      divide:	mvi	e,0
 0261 92        div0:	sub	d
 0262 1C        	inr	e
                	jrnc	div0
 0263+30FC      	DB	30H,DIV0-$-1
 0265 82        	add	d
 0266 1D        	dcr	e
 0267 F5        	push	psw	; remainder
 0268 3E30      	mvi	a,'0'
 026A 83        	add	e
 026B CD8202    	call	chrout
 026E F1        	pop	psw	; remainder
 026F C9        	ret
                
 0270 3E0D      crlf:	mvi	a,CR
 0272 CD8202    	call	chrout
 0275 3E0A      	mvi	a,LF
 0277 C38202    	jmp	chrout
                
                ; Display 0..15 from A as HEX digit
                printnib:
 027A E60F      	ani	0fh
 027C C690      	adi	90h
 027E 27        	daa
 027F CE40      	aci	40h
 0281 27        	daa
 0282 5F        chrout:	mov	e,a
 0283 0E02      	mvi	c,conout
 0285 C30000    	jmp	bdos
                
                ; Display byte from A in HEX
                printhex:
 0288 F5        	push	psw
 0289 0F        	rrc
 028A 0F        	rrc
 028B 0F        	rrc
 028C 0F        	rrc
 028D CD7A02    	call	printnib
 0290 F1        	pop	psw
 0291 C37A02    	jmp	printnib
                
                ; Display 16-bit value HL in HEX, blank prefix and 'H' suffix
                printaddr:
 0294 E5        	push	h
 0295 3E20      	mvi	a,' '
 0297 CD8202    	call	chrout
 029A 3E20      	mvi	a,' '
 029C CD8202    	call	chrout
 029F E1        	pop	h
 02A0 E5        	push	h
 02A1 7C        	mov	a,h
 02A2 CD8802    	call	printhex
 02A5 E1        	pop	h
 02A6 7D        	mov	a,l
 02A7 C38802    	jmp	printhex
                
                ; Print string HL, for B chars.
                printstring:
 02AA E5        	push	h
 02AB C5        	push	b
 02AC 7E        	mov	a,m
 02AD CD8202    	call	chrout
 02B0 C1        	pop	b
 02B1 E1        	pop	h
 02B2 23        	inx	h
                	djnz	printstring
 02B3+10F5      	DB	10H,PRINTSTRING-$-1
 02B5 C9        	ret
                
                ; Print filename field HL (11 chars)
                printname:
 02B6 060B      	mvi	b,11
 02B8 C3AA02    	jmp	printstring
                
                ; HL=name (11-chars)
                ; DE=base addr
                ; BC=length/size
                printitems:
 02BB C5        	push	b
 02BC D5        	push	d
 02BD CDB602    	call	printname
 02C0 E1        	pop	h
 02C1 CD9402    	call	printaddr
 02C4 E1        	pop	h
 02C5 CD9402    	call	printaddr
 02C8 C37002    	jmp	crlf
                
                display$OS:
 02CB 21F104    	lxi	h,xios$tbl
 02CE 3A8E06    	lda	sysbuf+7	; xios$jmp$tbl$base
 02D1 57        	mov	d,a
 02D2 1E00      	mvi	e,0
 02D4 010001    	lxi	b,100h
 02D7 CDBB02    	call	printitems
                	
 02DA 21FC04    	lxi	h,resbdos
 02DD 3A8F06    	lda	sysbuf+8	; resbdos$base
 02E0 57        	mov	d,a
 02E1 1E00      	mvi	e,0
 02E3 3A8E06    	lda	sysbuf+7	; xios$jmp$tbl$base
 02E6 92        	sub	d
 02E7 47        	mov	b,a
 02E8 4B        	mov	c,e	; 0
 02E9 CDBB02    	call	printitems
                
 02EC 210705    	lxi	h,xdos$spr
 02EF 3A9206    	lda	sysbuf+11	; xdos$base
 02F2 57        	mov	d,a
 02F3 1E00      	mvi	e,0
 02F5 3A8F06    	lda	sysbuf+8	; resbdos$base
 02F8 92        	sub	d
 02F9 47        	mov	b,a
 02FA 4B        	mov	c,e	; 0
 02FB CDBB02    	call	printitems
                
 02FE 3A0407    	lda	sysbuf+125	; nmb$rsps
 0301 B7        	ora	a
 0302 CA0F03    	jz	no$rsps
 0305 2A8507    	lhld	sysbuf+254	; rspl
 0308 3A9206    	lda	sysbuf+11	; xdos$base
                	; HL=sysdat.rspl = first RSP in linked list
 030B B7        	ora	a
 030C CD0504    	call	printrsps
                no$rsps:
 030F 211205    	lxi	h,bnkxios
 0312 3A9406    	lda	sysbuf+13	; bnkxios$base
 0315 57        	mov	d,a
 0316 1E00      	mvi	e,0
 0318 3A9306    	lda	sysbuf+12	; rsp$base
 031B 92        	sub	d
 031C 47        	mov	b,a
 031D 4B        	mov	c,e	; 0
 031E CDBB02    	call	printitems
                
 0321 211D05    	lxi	h,bnkbdos
 0324 3A9506    	lda	sysbuf+14	; bnkbdos$base
 0327 57        	mov	d,a
 0328 1E00      	mvi	e,0
 032A 3A9406    	lda	sysbuf+13	; bnkxios$base
 032D 92        	sub	d
 032E 47        	mov	b,a
 032F 4B        	mov	c,e	; 0
 0330 CDBB02    	call	printitems
                
 0333 212805    	lxi	h,bnkxdos
 0336 3A7907    	lda	sysbuf+242	; bnkxdos$base
 0339 57        	mov	d,a
 033A 1E00      	mvi	e,0
 033C 3A9506    	lda	sysbuf+14	; bnkbdos$base
 033F 92        	sub	d
 0340 47        	mov	b,a
 0341 4B        	mov	c,e	; 0
 0342 CDBB02    	call	printitems
                
 0345 213305    	lxi	h,tmp$spr
 0348 3A7E07    	lda	sysbuf+247	; tmp$base
 034B 57        	mov	d,a
 034C 1E00      	mvi	e,0
 034E 3A7907    	lda	sysbuf+242	; bnkxdos$base
 0351 92        	sub	d
 0352 47        	mov	b,a
 0353 4B        	mov	c,e	; 0
 0354 CDBB02    	call	printitems
 0357 3A7F07    	lda	sysbuf+248	; nmb$brsps
 035A B7        	ora	a
 035B CA6D03    	jz	no$brss
 035E 2A8107    	lhld	sysbuf+250	; brspl
 0361 3A7E07    	lda	sysbuf+247	; tmp$base
                	; HL=sysdat.rspl = first RSP in linked list
 0364 37        	stc
 0365 CD0504    	call	printrsps
 0368 3A8007    	lda	sysbuf+249	; brsp$base
                	jr	so$brss
 036B+1803      	DB	18H,SO$BRSS-$-1
                no$brss:
 036D 3A7E07    	lda	sysbuf+247	; tmp$base
                so$brss:
 0370 32CE04    	sta	base
 0373 2A4407    	lhld	sysbuf+189	; total$list$items
 0376 5D        	mov	e,l
 0377 54        	mov	d,h
 0378 29        	dad	h	; *2
 0379 29        	dad	h	; *4
 037A 19        	dad	d	; *5
 037B 29        	dad	h	; *10
 037C 11FF00    	lxi	d,255
 037F 19        	dad	d	; round up
 0380 94        	sub	h	; base - high (total$list$items*10 + 255)
 0381 32CF04    	sta	cntr
 0384 213E05    	lxi	h,lcksts$dat
 0387 57        	mov	d,a
 0388 1E00      	mvi	e,0
 038A 3ACE04    	lda	base
 038D 92        	sub	d
 038E 47        	mov	b,a
 038F 4B        	mov	c,e	; 0
 0390 CDBB02    	call	printitems
 0393 3A8806    	lda	sysbuf+1	; nmb$cns
 0396 B7        	ora	a
 0397 CAB403    	jz	no$cns
 039A 4F        	mov	c,a
 039B 3ACF04    	lda	cntr
 039E 32CE04    	sta	base
 03A1 91        	sub	c
 03A2 32CF04    	sta	cntr
 03A5 214905    	lxi	h,console$dat
 03A8 57        	mov	d,a
 03A9 1E00      	mvi	e,0
 03AB 3ACE04    	lda	base
 03AE 92        	sub	d
 03AF 47        	mov	b,a
 03B0 4B        	mov	c,e	; 0
 03B1 CDBB02    	call	printitems
                no$cns:
 03B4 C9        	ret
                
                display$mem$map:
 03B5 115405    	lxi	d,dashes
 03B8 0E09      	mvi	c,print
 03BA CD0000    	call	bdos
 03BD 117005    	lxi	d,sysmsg
 03C0 3A9606    	lda	sysbuf+15	; nmb$mem$seg
 03C3 47        	mov	b,a
 03C4 219706    	lxi	h,sysbuf+16	; mem$seg$tbl
                dmm0:
 03C7 C5        	push	b
 03C8 E5        	push	h
 03C9 0E09      	mvi	c,print
 03CB CD0000    	call	bdos
 03CE E1        	pop	h
 03CF 56        	mov	d,m	; mem$seg$tbl(nrec).base
 03D0 23        	inx	h
 03D1 1E00      	mvi	e,0
 03D3 E5        	push	h
 03D4 EB        	xchg
 03D5 CD9402    	call	printaddr
 03D8 E1        	pop	h
 03D9 56        	mov	d,m	; mem$seg$tbl(nrec).size
 03DA 23        	inx	h
 03DB 1E00      	mvi	e,0
 03DD E5        	push	h
 03DE EB        	xchg
 03DF CD9402    	call	printaddr
 03E2 3A8B06    	lda	sysbuf+4	; bank$switched
 03E5 B7        	ora	a
 03E6 CAF803    	jz	dmm1
 03E9 118805    	lxi	d,bnkmsg
 03EC 0E09      	mvi	c,print
 03EE CD0000    	call	bdos
 03F1 E1        	pop	h
 03F2 E5        	push	h
 03F3 23        	inx	h
 03F4 7E        	mov	a,m	; mem$seg$tbl(nrec).bank
 03F5 CD5002    	call	printdecimal
                dmm1:
 03F8 CD7002    	call	crlf
 03FB E1        	pop	h
 03FC C1        	pop	b
 03FD 117C05    	lxi	d,usrmsg
 0400 23        	inx	h
 0401 23        	inx	h
                	djnz	dmm0
 0402+10C3      	DB	10H,DMM0-$-1
 0404 C9        	ret
                
                ; Print RSP/BRS linked list
                ; HL=first RSP in linked list, A=end page (next item page)
                ; CY=BRS
                printrsps:
 0405 47        	mov	b,a
 0406 17        	ral	; get CY
 0407 E601      	ani	1
 0409 328D04    	sta	context
 040C EB        	xchg
 040D 21AE04    	lxi	h,rspsadr	; array...
 0410 0E00      	mvi	c,0
                rsps0:
 0412 73        	mov	m,e
 0413 23        	inx	h
 0414 72        	mov	m,d
 0415 23        	inx	h
 0416 7B        	mov	a,e
 0417 B2        	ora	d
 0418 CA2D04    	jz	rsps1
 041B 0C        	inr	c
 041C EB        	xchg
 041D 3A8D04    	lda	context
 0420 B7        	ora	a
                	jrz	rsps3
 0421+2802      	DB	28H,RSPS3-$-1
 0423 23        	inx	h
 0424 23        	inx	h
                rsps3:
 0425 7E        	mov	a,m
 0426 23        	inx	h
 0427 66        	mov	h,m
 0428 6F        	mov	l,a
 0429 EB        	xchg
 042A C31204    	jmp	rsps0
                ; Got all, terminate list and print them backward
                rsps1:
 042D 2B        	dcx	h
 042E 70        	mov	m,b
 042F 2B        	dcx	h
 0430 E5        	push	h
                	popix
 0431+DDE1      	DB	0DDH,0E1H
                rsps2:
 0433 0D        	dcr	c
 0434 F8        	rm
                	pushix
 0435+DDE5      	DB	0DDH,0E5H
 0437 C5        	push	b
                	ldx	l,+0
 0438+DD6E00    	DB	0DDH,L*8+46H,+0
                	ldx	h,+1
 043B+DD6601    	DB	0DDH,H*8+46H,+1
                	ldx	e,-2
 043E+DD5EFE    	DB	0DDH,E*8+46H,-2
                	ldx	d,-1
 0441+DD56FF    	DB	0DDH,D*8+46H,-1
 0444 B7        	ora	a
                	dsbc	d	; rspsadr(cntr+1)-rspsadr(cntr)
 0445+ED52      	DB	0EDH,D*8+42H
 0447 4D        	mov	c,l
 0448 44        	mov	b,h
                	ldx	l,-2
 0449+DD6EFE    	DB	0DDH,L*8+46H,-2
                	ldx	h,-1
 044C+DD66FF    	DB	0DDH,H*8+46H,-1
 044F 3A8D04    	lda	context
 0452 B7        	ora	a
 0453 110800    	lxi	d,6+2	; if BRS, +4
                	jrz	rsps4
 0456+2803      	DB	28H,RSPS4-$-1
 0458 110400    	lxi	d,4
                rsps4:
 045B 19        	dad	d	; point to RSP name
 045C CD7204    	call	mvname	; returns HL=name-buffer
                	ldx	e,-2
 045F+DD5EFE    	DB	0DDH,E*8+46H,-2
                	ldx	d,-1	; rspsadr(cntr)
 0462+DD56FF    	DB	0DDH,D*8+46H,-1
 0465 CDBB02    	call	printitems
 0468 C1        	pop	b
                	popix
 0469+DDE1      	DB	0DDH,0E1H
                	dcxix
 046B+DD2B      	DB	0DDH,2BH
                	dcxix
 046D+DD2B      	DB	0DDH,2BH
 046F C33304    	jmp	rsps2
                
                ; move 8-chars (7-bit) from HL to (context)
                mvname:
 0472 C5        	push	b
 0473 0608      	mvi	b,8
 0475 3A8D04    	lda	context
 0478 B7        	ora	a
 0479 118E04    	lxi	d,xxxx$rsp
                	jrz	mvn1
 047C+2803      	DB	28H,MVN1-$-1
 047E 119904    	lxi	d,xxxx$brs
 0481 D5        mvn1:	push	d
                mvn0:
 0482 7E        	mov	a,m
 0483 E67F      	ani	01111111b
 0485 12        	stax	d
 0486 23        	inx	h
 0487 13        	inx	d
                	djnz	mvn0
 0488+10F8      	DB	10H,MVN0-$-1
 048A E1        	pop	h	; string in HL
 048B C1        	pop	b
 048C C9        	ret
                
 048D 00        context: db	0
 048E 2020202020xxxx$rsp:	db	'        RSP'
 0499 2020202020xxxx$brs:	db	'        BRS'
                
 04A4 0000      sysdat:		dw	0
 04A6 0000      cur$top:	dw	0
 04A8 0000      prev$top:	dw	0
 04AA 0000      cur$record:	dw	0
 04AC 0000      entry$point:	dw	0
 04AE 0000000000rspsadr:	dw	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 04CE 00        base:	db	0
 04CF 00        cntr:	db	0
                
 04D0 5359535445syst$dat:	db	'SYSTEM  DAT'
 04DB 544D504420tmpd$dat:	db	'TMPD    DAT'
 04E6 5553455253usrs$stk:	db	'USERSYS STK'
 04F1 58494F534Axios$tbl:	db	'XIOSJMP TBL'
 04FC 5245534244resbdos:	db	'RESBDOS SPR'
 0507 58444F5320xdos$spr:	db	'XDOS    SPR'
 0512 424E4B5849bnkxios:	db	'BNKXIOS SPR'
 051D 424E4B4244bnkbdos:	db	'BNKBDOS SPR'
 0528 424E4B5844bnkxdos:	db	'BNKXDOS SPR'
 0533 544D502020tmp$spr:	db	'TMP     SPR'
 053E 4C434B4C53lcksts$dat:	db	'LCKLSTS DAT'
 0549 434F4E534Fconsole$dat:	db	'CONSOLE DAT'
 0554 2D2D2D2D2Ddashes:		db	'-------------------------',CR,LF,'$'
 0570 4D502F4D20sysmsg:		db	'MP/M II Sys','$'
 057C 4D656D7365usrmsg:		db	'Memseg  Usr','$'
 0588 202042616Ebnkmsg:		db	'  Bank ','$'
                
                mpmsys:
 0590 004D504D20	db	0,'MPM     SYS',0,0,0,0
 05A0 0000000000	db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 05B0 00000000  	db	0,0,0,0
                
                signon:
 05B4 0D0A4D502F	db	CR,LF,'MP/M II V2.0 Loader   '
 05CC 0D0A436F70	db	CR,LF,'Copyright (C) 1981, Digital Research',CR,LF,'$'
                fnfmsg:
 05F5 0D0A657272	db	CR,LF,'error: File not found: MPM.SYS'
 0615 0D0A24    	db	CR,LF,'$'
                
                rdemsg:
 0618 0D0A657272	db	CR,LF,'error: Read failure: MPM.SYS'
 0636 0D0A24    	db	CR,LF,'$'
                
 0639 0D0A4E6D62msg1:	db	CR,LF,'Nmb of consoles     =  $'
 0653 0D0A427265msg2:	db	CR,LF,'Breakpoint RST #    =  $'
 066D 0D0A4D656Dmsg3:	db	CR,LF,'Memory Segment Table:',CR,LF,'$'
                
 0687           sysbuf:	ds	256
                
 0787           	end
