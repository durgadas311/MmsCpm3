                ; MPMLDR program code
                ; Linked with ldrbdos,ldrbios,ldrXXX (disk driver XXX).
                ; Re-written from mpmldr.plm using CP/M3 ldrprog.asm
                ; and uses Z80 instructions.
                
                	maclib	z80
                
                	public	loader
                	extrn	bdos
                
 000D =         CR	equ	13
 000A =         LF	equ	10
 0009 =         TAB	equ	9
 0008 =         BS	equ	8
 0007 =         BEL	equ	7
 007F =         DEL	equ	127
                
 0002 =         conout	equ	2
 0009 =         print	equ	9
 000D =         reset	equ	13
 000F =         open	equ	15
 0014 =         read	equ	20
 001A =         setdma	equ	26
                
                	cseg
 0100           	org	0100h	; shouldn't be here, but for backward compat
                loader:
 0100 C32E01    	jmp	start
                
 0103 434F505952	db	'COPYRIGHT (C) 1981, DIGITAL RESEARCH '
 0128 3635343332	db	'654321'	; space for s/n
                
                start:
                	; usage: MPMLDR [$B] [sys-file]
                	; TODO: implement debug break?
                	; TODO: implement alternate MPM.SYS filename?
 012E 0E0D      	mvi	c,reset
 0130 CD0000    	call	bdos
 0133 11B505    	lxi	d,signon
 0136 0E09      	mvi	c,print
 0138 CD0000    	call	bdos
 013B 0E0F      	mvi	c,open
 013D 119105    	lxi	d,mpmsys
 0140 CD0000    	call	bdos
 0143 FEFF      	cpi	0ffh
 0145 11F605    	lxi	d,fnfmsg
 0148 CA4A02    	jz	die
 014B 118806    	lxi	d,sysbuf
 014E CD3702    	call	st$dma
 0151 CD3D02    	call	rd$file	; load first of system data
 0154 110807    	lxi	d,sysbuf+128
 0157 CD3702    	call	st$dma
 015A CD3D02    	call	rd$file	; load rest of system data
                
 015D 3A8806    	lda	sysbuf+0	; mem$top
 0160 67        	mov	h,a
 0161 2E00      	mvi	l,0
 0163 22A504    	shld	sysdat
 0166 22A704    	shld	cur$top
 0169 113A06    	lxi	d,msg1
 016C 0E09      	mvi	c,print
 016E CD0000    	call	bdos
 0171 3A8906    	lda	sysbuf+1	; nmb$cns
 0174 CD7B02    	call	printnib
 0177 115406    	lxi	d,msg2
 017A 0E09      	mvi	c,print
 017C CD0000    	call	bdos
 017F 3A8A06    	lda	sysbuf+2	; brkpt$RST
 0182 CD7B02    	call	printnib
 0185 116E06    	lxi	d,msg3
 0188 0E09      	mvi	c,print
 018A CD0000    	call	bdos
 018D 21D104    	lxi	h,syst$dat
                	lded	cur$top
 0190+ED5B      	DB	0EDH,5BH
 0192+A704      	DW	CUR$TOP
 0194 010001    	lxi	b,256
 0197 CDBC02    	call	printitems
 019A 3A8906    	lda	sysbuf+1	; nmb$cns
 019D 3D        	dcr	a
 019E B7        	ora	a
 019F 1F        	rar
 01A0 B7        	ora	a
 01A1 1F        	rar
 01A2 3C        	inr	a
 01A3 67        	mov	h,a
 01A4 2E00      	mvi	l,0
 01A6 22A904    	shld	prev$top
 01A9 EB        	xchg
 01AA 2AA704    	lhld	cur$top
 01AD B7        	ora	a
                	dsbc	d
 01AE+ED52      	DB	0EDH,D*8+42H
 01B0 22A704    	shld	cur$top
 01B3 EB        	xchg
 01B4 21DC04    	lxi	h,tmpd$dat
                	lbcd	prev$top
 01B7+ED4B      	DB	0EDH,4BH
 01B9+A904      	DW	PREV$TOP
 01BB CDBC02    	call	printitems
 01BE 3A8B06    	lda	sysbuf+3	; sys$call$stks
 01C1 B7        	ora	a
                	jrz	mldr0
 01C2+2825      	DB	28H,MLDR0-$-1
 01C4 3A9706    	lda	sysbuf+15	; nmb$mem$seg
 01C7 D602      	sui	2
 01C9 E6FC      	ani	11111100b
 01CB 0F        	rrc
 01CC 0F        	rrc
 01CD 3C        	inr	a
 01CE 67        	mov	h,a
 01CF 2E00      	mvi	l,0
 01D1 22A904    	shld	prev$top
 01D4 EB        	xchg
 01D5 2AA704    	lhld	cur$top
 01D8 B7        	ora	a
                	dsbc	d
 01D9+ED52      	DB	0EDH,D*8+42H
 01DB 22A704    	shld	cur$top	; cur$top = cur$top - (prev$top := (shr(nmb$mem$seg-2,2)+1)*256);
 01DE EB        	xchg
 01DF 21E704    	lxi	h,usrs$stk
                	lbcd	prev$top
 01E2+ED4B      	DB	0EDH,4BH
 01E4+A904      	DW	PREV$TOP
 01E6 CDBC02    	call	printitems
                mldr0:
                	; load from sysdat downward...
 01E9 2AA504    	lhld	sysdat
 01EC 22A704    	shld	cur$top
 01EF 210100    	lxi	h,2-1
                loop:
 01F2 23        	inx	h
 01F3 22AB04    	shld	cur$record
                	lded	sysbuf+120	; nmb$records
 01F6+ED5B      	DB	0EDH,5BH
 01F8+0007      	DW	SYSBUF+120
 01FA B7        	ora	a
                	dsbc	d
 01FB+ED52      	DB	0EDH,D*8+42H
 01FD CA1702    	jz	break
 0200 2AA704    	lhld	cur$top
 0203 1180FF    	lxi	d,-128
 0206 19        	dad	d
 0207 22A704    	shld	cur$top
 020A EB        	xchg
 020B CD3702    	call	st$dma
 020E CD3D02    	call	rd$file
 0211 2AAB04    	lhld	cur$record
 0214 C3F201    	jmp	loop
                break:
                	; done loading system...
 0217 3A9306    	lda	sysbuf+11	; xdos$base
 021A 67        	mov	h,a
 021B 2E00      	mvi	l,0
 021D 22AD04    	shld	entry$point
                
 0220 CDCC02    	call	display$OS
 0223 CDB603    	call	display$mem$map
 0226 218806    	lxi	h,sysbuf
                	lded	sysdat
 0229+ED5B      	DB	0EDH,5BH
 022B+A504      	DW	SYSDAT
 022D 010001    	lxi	b,256
                	ldir
 0230+EDB0      	DB	0EDH,0B0H
                	; exec MP/M... TODO: setup a minimal stack?
 0232 F3        	di	; give them a fighting chance
 0233 2AAD04    	lhld	entry$point
 0236 E9        	pchl
                
                st$dma:
 0237 0E1A      	mvi	c,setdma
 0239 CD0000    	call	bdos
 023C C9        	ret
                
                rd$file:
 023D 0E14      	mvi	c,read
 023F 119105    	lxi	d,mpmsys
 0242 CD0000    	call	bdos
 0245 B7        	ora	a
 0246 111906    	lxi	d,rdemsg
 0249 C8        	rz	
                	; fall-through to die()
                die:
 024A 0E09      	mvi	c,print
 024C CD0000    	call	bdos
 024F F3        	di
 0250 76        	hlt
                
                ; Print A in decimal
                printdecimal:
 0251 1664      	mvi	d,100
 0253 CD6002    	call	divide
 0256 160A      	mvi	d,10
 0258 CD6002    	call	divide
 025B C630      	adi	'0'
 025D C38302    	jmp	chrout
                
                ; (8-bit) Divide A by D, prints quotient digit
                ; Returns A=remainder
 0260 1E00      divide:	mvi	e,0
 0262 92        div0:	sub	d
 0263 1C        	inr	e
                	jrnc	div0
 0264+30FC      	DB	30H,DIV0-$-1
 0266 82        	add	d
 0267 1D        	dcr	e
 0268 F5        	push	psw	; remainder
 0269 3E30      	mvi	a,'0'
 026B 83        	add	e
 026C CD8302    	call	chrout
 026F F1        	pop	psw	; remainder
 0270 C9        	ret
                
 0271 3E0D      crlf:	mvi	a,CR
 0273 CD8302    	call	chrout
 0276 3E0A      	mvi	a,LF
 0278 C38302    	jmp	chrout
                
                ; Display 0..15 from A as HEX digit
                printnib:
 027B E60F      	ani	0fh
 027D C690      	adi	90h
 027F 27        	daa
 0280 CE40      	aci	40h
 0282 27        	daa
 0283 5F        chrout:	mov	e,a
 0284 0E02      	mvi	c,conout
 0286 C30000    	jmp	bdos
                
                ; Display byte from A in HEX
                printhex:
 0289 F5        	push	psw
 028A 0F        	rrc
 028B 0F        	rrc
 028C 0F        	rrc
 028D 0F        	rrc
 028E CD7B02    	call	printnib
 0291 F1        	pop	psw
 0292 C37B02    	jmp	printnib
                
                ; Display 16-bit value HL in HEX, blank prefix and 'H' suffix
                printaddr:
 0295 E5        	push	h
 0296 3E20      	mvi	a,' '
 0298 CD8302    	call	chrout
 029B 3E20      	mvi	a,' '
 029D CD8302    	call	chrout
 02A0 E1        	pop	h
 02A1 E5        	push	h
 02A2 7C        	mov	a,h
 02A3 CD8902    	call	printhex
 02A6 E1        	pop	h
 02A7 7D        	mov	a,l
 02A8 C38902    	jmp	printhex
                
                ; Print string HL, for B chars.
                printstring:
 02AB E5        	push	h
 02AC C5        	push	b
 02AD 7E        	mov	a,m
 02AE CD8302    	call	chrout
 02B1 C1        	pop	b
 02B2 E1        	pop	h
 02B3 23        	inx	h
                	djnz	printstring
 02B4+10F5      	DB	10H,PRINTSTRING-$-1
 02B6 C9        	ret
                
                ; Print filename field HL (11 chars)
                printname:
 02B7 060B      	mvi	b,11
 02B9 C3AB02    	jmp	printstring
                
                ; HL=name (11-chars)
                ; DE=base addr
                ; BC=length/size
                printitems:
 02BC C5        	push	b
 02BD D5        	push	d
 02BE CDB702    	call	printname
 02C1 E1        	pop	h
 02C2 CD9502    	call	printaddr
 02C5 E1        	pop	h
 02C6 CD9502    	call	printaddr
 02C9 C37102    	jmp	crlf
                
                display$OS:
 02CC 21F204    	lxi	h,xios$tbl
 02CF 3A8F06    	lda	sysbuf+7	; xios$jmp$tbl$base
 02D2 57        	mov	d,a
 02D3 1E00      	mvi	e,0
 02D5 010001    	lxi	b,100h
 02D8 CDBC02    	call	printitems
                	
 02DB 21FD04    	lxi	h,resbdos
 02DE 3A9006    	lda	sysbuf+8	; resbdos$base
 02E1 57        	mov	d,a
 02E2 1E00      	mvi	e,0
 02E4 3A8F06    	lda	sysbuf+7	; xios$jmp$tbl$base
 02E7 92        	sub	d
 02E8 47        	mov	b,a
 02E9 4B        	mov	c,e	; 0
 02EA CDBC02    	call	printitems
                
 02ED 210805    	lxi	h,xdos$spr
 02F0 3A9306    	lda	sysbuf+11	; xdos$base
 02F3 57        	mov	d,a
 02F4 1E00      	mvi	e,0
 02F6 3A9006    	lda	sysbuf+8	; resbdos$base
 02F9 92        	sub	d
 02FA 47        	mov	b,a
 02FB 4B        	mov	c,e	; 0
 02FC CDBC02    	call	printitems
                
 02FF 3A0507    	lda	sysbuf+125	; nmb$rsps
 0302 B7        	ora	a
 0303 CA1003    	jz	no$rsps
 0306 2A8607    	lhld	sysbuf+254	; rspl
 0309 3A9306    	lda	sysbuf+11	; xdos$base
                	; HL=sysdat.rspl = first RSP in linked list
 030C B7        	ora	a
 030D CD0604    	call	printrsps
                no$rsps:
 0310 211305    	lxi	h,bnkxios
 0313 3A9506    	lda	sysbuf+13	; bnkxios$base
 0316 57        	mov	d,a
 0317 1E00      	mvi	e,0
 0319 3A9406    	lda	sysbuf+12	; rsp$base
 031C 92        	sub	d
 031D 47        	mov	b,a
 031E 4B        	mov	c,e	; 0
 031F CDBC02    	call	printitems
                
 0322 211E05    	lxi	h,bnkbdos
 0325 3A9606    	lda	sysbuf+14	; bnkbdos$base
 0328 57        	mov	d,a
 0329 1E00      	mvi	e,0
 032B 3A9506    	lda	sysbuf+13	; bnkxios$base
 032E 92        	sub	d
 032F 47        	mov	b,a
 0330 4B        	mov	c,e	; 0
 0331 CDBC02    	call	printitems
                
 0334 212905    	lxi	h,bnkxdos
 0337 3A7A07    	lda	sysbuf+242	; bnkxdos$base
 033A 57        	mov	d,a
 033B 1E00      	mvi	e,0
 033D 3A9606    	lda	sysbuf+14	; bnkbdos$base
 0340 92        	sub	d
 0341 47        	mov	b,a
 0342 4B        	mov	c,e	; 0
 0343 CDBC02    	call	printitems
                
 0346 213405    	lxi	h,tmp$spr
 0349 3A7F07    	lda	sysbuf+247	; tmp$base
 034C 57        	mov	d,a
 034D 1E00      	mvi	e,0
 034F 3A7A07    	lda	sysbuf+242	; bnkxdos$base
 0352 92        	sub	d
 0353 47        	mov	b,a
 0354 4B        	mov	c,e	; 0
 0355 CDBC02    	call	printitems
 0358 3A8007    	lda	sysbuf+248	; nmb$brsps
 035B B7        	ora	a
 035C CA6E03    	jz	no$brss
 035F 2A8207    	lhld	sysbuf+250	; brspl
 0362 3A7F07    	lda	sysbuf+247	; tmp$base
                	; HL=sysdat.rspl = first RSP in linked list
 0365 37        	stc
 0366 CD0604    	call	printrsps
 0369 3A8107    	lda	sysbuf+249	; brsp$base
                	jr	so$brss
 036C+1803      	DB	18H,SO$BRSS-$-1
                no$brss:
 036E 3A7F07    	lda	sysbuf+247	; tmp$base
                so$brss:
 0371 32CF04    	sta	base
 0374 2A4507    	lhld	sysbuf+189	; total$list$items
 0377 5D        	mov	e,l
 0378 54        	mov	d,h
 0379 29        	dad	h	; *2
 037A 29        	dad	h	; *4
 037B 19        	dad	d	; *5
 037C 29        	dad	h	; *10
 037D 11FF00    	lxi	d,255
 0380 19        	dad	d	; round up
 0381 94        	sub	h	; base - high (total$list$items*10 + 255)
 0382 32D004    	sta	cntr
 0385 213F05    	lxi	h,lcksts$dat
 0388 57        	mov	d,a
 0389 1E00      	mvi	e,0
 038B 3ACF04    	lda	base
 038E 92        	sub	d
 038F 47        	mov	b,a
 0390 4B        	mov	c,e	; 0
 0391 CDBC02    	call	printitems
 0394 3A8906    	lda	sysbuf+1	; nmb$cns
 0397 B7        	ora	a
 0398 CAB503    	jz	no$cns
 039B 4F        	mov	c,a
 039C 3AD004    	lda	cntr
 039F 32CF04    	sta	base
 03A2 91        	sub	c
 03A3 32D004    	sta	cntr
 03A6 214A05    	lxi	h,console$dat
 03A9 57        	mov	d,a
 03AA 1E00      	mvi	e,0
 03AC 3ACF04    	lda	base
 03AF 92        	sub	d
 03B0 47        	mov	b,a
 03B1 4B        	mov	c,e	; 0
 03B2 CDBC02    	call	printitems
                no$cns:
 03B5 C9        	ret
                
                display$mem$map:
 03B6 115505    	lxi	d,dashes
 03B9 0E09      	mvi	c,print
 03BB CD0000    	call	bdos
 03BE 117105    	lxi	d,sysmsg
 03C1 3A9706    	lda	sysbuf+15	; nmb$mem$seg
 03C4 47        	mov	b,a
 03C5 219806    	lxi	h,sysbuf+16	; mem$seg$tbl
                dmm0:
 03C8 C5        	push	b
 03C9 E5        	push	h
 03CA 0E09      	mvi	c,print
 03CC CD0000    	call	bdos
 03CF E1        	pop	h
 03D0 56        	mov	d,m	; mem$seg$tbl(nrec).base
 03D1 23        	inx	h
 03D2 1E00      	mvi	e,0
 03D4 E5        	push	h
 03D5 EB        	xchg
 03D6 CD9502    	call	printaddr
 03D9 E1        	pop	h
 03DA 56        	mov	d,m	; mem$seg$tbl(nrec).size
 03DB 23        	inx	h
 03DC 1E00      	mvi	e,0
 03DE E5        	push	h
 03DF EB        	xchg
 03E0 CD9502    	call	printaddr
 03E3 3A8C06    	lda	sysbuf+4	; bank$switched
 03E6 B7        	ora	a
 03E7 CAF903    	jz	dmm1
 03EA 118905    	lxi	d,bnkmsg
 03ED 0E09      	mvi	c,print
 03EF CD0000    	call	bdos
 03F2 E1        	pop	h
 03F3 E5        	push	h
 03F4 23        	inx	h
 03F5 7E        	mov	a,m	; mem$seg$tbl(nrec).bank
 03F6 CD5102    	call	printdecimal
                dmm1:
 03F9 CD7102    	call	crlf
 03FC E1        	pop	h
 03FD C1        	pop	b
 03FE 117D05    	lxi	d,usrmsg
 0401 23        	inx	h
 0402 23        	inx	h
                	djnz	dmm0
 0403+10C3      	DB	10H,DMM0-$-1
 0405 C9        	ret
                
                ; Print RSP/BRS linked list
                ; HL=first RSP in linked list, A=end page (next item page)
                ; CY=BRS
                printrsps:
 0406 47        	mov	b,a
 0407 17        	ral	; get CY
 0408 E601      	ani	1
 040A 328E04    	sta	context
 040D EB        	xchg
 040E 21AF04    	lxi	h,rspsadr	; array...
 0411 0E00      	mvi	c,0
                rsps0:
 0413 73        	mov	m,e
 0414 23        	inx	h
 0415 72        	mov	m,d
 0416 23        	inx	h
 0417 7B        	mov	a,e
 0418 B2        	ora	d
 0419 CA2E04    	jz	rsps1
 041C 0C        	inr	c
 041D EB        	xchg
 041E 3A8E04    	lda	context
 0421 B7        	ora	a
                	jrz	rsps3
 0422+2802      	DB	28H,RSPS3-$-1
 0424 23        	inx	h
 0425 23        	inx	h
                rsps3:
 0426 7E        	mov	a,m
 0427 23        	inx	h
 0428 66        	mov	h,m
 0429 6F        	mov	l,a
 042A EB        	xchg
 042B C31304    	jmp	rsps0
                ; Got all, terminate list and print them backward
                rsps1:
 042E 2B        	dcx	h
 042F 70        	mov	m,b
 0430 2B        	dcx	h
 0431 E5        	push	h
                	popix
 0432+DDE1      	DB	0DDH,0E1H
                rsps2:
 0434 0D        	dcr	c
 0435 F8        	rm
                	pushix
 0436+DDE5      	DB	0DDH,0E5H
 0438 C5        	push	b
                	ldx	l,+0
 0439+DD6E00    	DB	0DDH,L*8+46H,+0
                	ldx	h,+1
 043C+DD6601    	DB	0DDH,H*8+46H,+1
                	ldx	e,-2
 043F+DD5EFE    	DB	0DDH,E*8+46H,-2
                	ldx	d,-1
 0442+DD56FF    	DB	0DDH,D*8+46H,-1
 0445 B7        	ora	a
                	dsbc	d	; rspsadr(cntr+1)-rspsadr(cntr)
 0446+ED52      	DB	0EDH,D*8+42H
 0448 4D        	mov	c,l
 0449 44        	mov	b,h
                	ldx	l,-2
 044A+DD6EFE    	DB	0DDH,L*8+46H,-2
                	ldx	h,-1
 044D+DD66FF    	DB	0DDH,H*8+46H,-1
 0450 3A8E04    	lda	context
 0453 B7        	ora	a
 0454 110800    	lxi	d,6+2	; if BRS, +4
                	jrz	rsps4
 0457+2803      	DB	28H,RSPS4-$-1
 0459 110400    	lxi	d,4
                rsps4:
 045C 19        	dad	d	; point to RSP name
 045D CD7304    	call	mvname	; returns HL=name-buffer
                	ldx	e,-2
 0460+DD5EFE    	DB	0DDH,E*8+46H,-2
                	ldx	d,-1	; rspsadr(cntr)
 0463+DD56FF    	DB	0DDH,D*8+46H,-1
 0466 CDBC02    	call	printitems
 0469 C1        	pop	b
                	popix
 046A+DDE1      	DB	0DDH,0E1H
                	dcxix
 046C+DD2B      	DB	0DDH,2BH
                	dcxix
 046E+DD2B      	DB	0DDH,2BH
 0470 C33404    	jmp	rsps2
                
                ; move 8-chars (7-bit) from HL to (context)
                mvname:
 0473 C5        	push	b
 0474 0608      	mvi	b,8
 0476 3A8E04    	lda	context
 0479 B7        	ora	a
 047A 118F04    	lxi	d,xxxx$rsp
                	jrz	mvn1
 047D+2803      	DB	28H,MVN1-$-1
 047F 119A04    	lxi	d,xxxx$brs
 0482 D5        mvn1:	push	d
                mvn0:
 0483 7E        	mov	a,m
 0484 E67F      	ani	01111111b
 0486 12        	stax	d
 0487 23        	inx	h
 0488 13        	inx	d
                	djnz	mvn0
 0489+10F8      	DB	10H,MVN0-$-1
 048B E1        	pop	h	; string in HL
 048C C1        	pop	b
 048D C9        	ret
                
 048E 00        context: db	0
 048F 2020202020xxxx$rsp:	db	'        RSP'
 049A 2020202020xxxx$brs:	db	'        BRS'
                
 04A5 0000      sysdat:		dw	0
 04A7 0000      cur$top:	dw	0
 04A9 0000      prev$top:	dw	0
 04AB 0000      cur$record:	dw	0
 04AD 0000      entry$point:	dw	0
 04AF 0000000000rspsadr:	dw	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 04CF 00        base:	db	0
 04D0 00        cntr:	db	0
                
 04D1 5359535445syst$dat:	db	'SYSTEM  DAT'
 04DC 544D504420tmpd$dat:	db	'TMPD    DAT'
 04E7 5553455253usrs$stk:	db	'USERSYS STK'
 04F2 58494F534Axios$tbl:	db	'XIOSJMP TBL'
 04FD 5245534244resbdos:	db	'RESBDOS SPR'
 0508 58444F5320xdos$spr:	db	'XDOS    SPR'
 0513 424E4B5849bnkxios:	db	'BNKXIOS SPR'
 051E 424E4B4244bnkbdos:	db	'BNKBDOS SPR'
 0529 424E4B5844bnkxdos:	db	'BNKXDOS SPR'
 0534 544D502020tmp$spr:	db	'TMP     SPR'
 053F 4C434B4C53lcksts$dat:	db	'LCKLSTS DAT'
 054A 434F4E534Fconsole$dat:	db	'CONSOLE DAT'
 0555 2D2D2D2D2Ddashes:		db	'-------------------------',CR,LF,'$'
 0571 4D502F4D20sysmsg:		db	'MP/M II Sys','$'
 057D 4D656D7365usrmsg:		db	'Memseg  Usr','$'
 0589 202042616Ebnkmsg:		db	'  Bank ','$'
                
                mpmsys:
 0591 004D504D20	db	0,'MPM     SYS',0,0,0,0
 05A1 0000000000	db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 05B1 00000000  	db	0,0,0,0
                
                signon:
 05B5 0D0A4D502F	db	CR,LF,'MP/M II V2.0 Loader   '
 05CD 0D0A436F70	db	CR,LF,'Copyright (C) 1981, Digital Research',CR,LF,'$'
                fnfmsg:
 05F6 0D0A657272	db	CR,LF,'error: File not found: MPM.SYS'
 0616 0D0A24    	db	CR,LF,'$'
                
                rdemsg:
 0619 0D0A657272	db	CR,LF,'error: Read failure: MPM.SYS'
 0637 0D0A24    	db	CR,LF,'$'
                
 063A 0D0A4E6D62msg1:	db	CR,LF,'Nmb of consoles     =  $'
 0654 0D0A427265msg2:	db	CR,LF,'Breakpoint RST #    =  $'
 066E 0D0A4D656Dmsg3:	db	CR,LF,'Memory Segment Table:',CR,LF,'$'
                
 0688           sysbuf:	ds	256
                
 0788           	end
